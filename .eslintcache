[{"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\index.js":"1","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\App.js":"2","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\reportWebVitals.js":"3","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\index.js":"4","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\index.js":"5","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\UX.js":"6","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\History.js":"7","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\PrototypeLoader.js":"8","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\index.js":"9","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\STRAPI.js":"10","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\SideBar.js":"11","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\GeoLocationActions.js":"12","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\STRAPI.js":"13","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\UX.js":"14","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\SCANSTATE.js":"15","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleUX.js":"16","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SCAN.js":"17","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\SimplePie.js":"18","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\BarChart.js":"19","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\ClusterAnalysis.js":"20","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Assets\\logo.js":"21","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleMarkerBasedScan.js":"22","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleScanProcess.js":"23","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\authUser.js":"24","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Landing\\index.js":"25","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\AuthLogin\\index.js":"26","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\PrimaryFeature.js":"27","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Layout\\SelectRegionLayout.js":"28","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Layout\\ScanResultsLayout.js":"29","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Layout\\ScanResults.js":"30","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Layout\\Header.js":"31","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Layout\\MapFilterControls.js":"32","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\controls.js":"33","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\map.js":"34","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\buttons\\ScanStateBtn.js":"35","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectMaxWorkOrders.js":"36","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectMinWorkOrders.js":"37","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectMinSitesPerScan.js":"38","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectGridSpacing.js":"39","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectRaduis.js":"40","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Results\\Results.js":"41","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\ScanBox.js":"42","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\AddNewRegion.js":"43","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Results\\ClusterResults.js":"44","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\buttons\\DeleteClusterBtn.js":"45","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\clusterMap\\clustermap.js":"46","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\LocationMarkers.js":"47","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectStateRegion.js":"48","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\PerimeterBox.js":"49","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectStateState.js":"50","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectStateCountry.js":"51","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Results\\MoreInfo.js":"52","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\buttons\\BacktoMapBtn.js":"53","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\clusterMap\\ClusterBoundary.js":"54","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\clusterMap\\ClusterScanRadius.js":"55","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\clusterMap\\ScannedRegionalBoundary.js":"56","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\clusterMap\\ClusterMarkers.js":"57","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Results\\MoreInfoComponents\\ListTradeTypes.js":"58","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Results\\MoreInfoComponents\\ListSites.js":"59","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\index.js":"60","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\About\\about.js":"61","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Contact\\contact.js":"62","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\index.js":"63","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\unAuth\\UnAuth.js":"64","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\AUTH.js":"65","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\AUTH.js":"66","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\AuthDashboard.js":"67","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\PublicLayout.js":"68","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\Public\\Navigation.js":"69","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\input.js":"70","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\LoginForm.js":"71","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Landing.js":"72","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Loading\\Loading.js":"73","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\DataDump.js":"74","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan.js":"75","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Map.js":"76","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\ResidualLocationMarkers.js":"77","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkerBasedResults.js":"78","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\LocationMarkers.js":"79","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkersCenterpoints.js":"80","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ColorKey.js":"81","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ClusterResults.js":"82","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\HistoryRerfresh.js":"83","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ViewSingleResultBtn.js":"84","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateSingleScanBtn.js":"85","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateNewScan\\SelectandReview.js":"86","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateNewScan\\ScanSelectItems.js":"87","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateNewScan\\ScanReviewSelectedItems.js":"88","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoAddItemsSingleScan.js":"89","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoScanType.js":"90","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\SetSelectedBtn.js":"91","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\CreateScanoptions.js":"92","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateNewModel.js":"93","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompare.js":"94","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel.js":"95","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ViewModels.js":"96","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CompareModels.js":"97","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMPARE.js":"98","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleCompare.js":"99","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMPARE.js":"100","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ConfirmCompareBtn.js":"101","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SelectModels.js":"102","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareModels.js":"103","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetCompareModels.js":"104","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableHeader.js":"105","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableClusters.js":"106","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalWorkOrders.js":"107","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalLocations.js":"108","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsInScope.js":"109","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsUnaccomidated.js":"110","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalWorkOrdersCoveredInCluster.js":"111","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableWorkorders.js":"112","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableClusters.js":"113","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableLocations.js":"114","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableResourceAllocation.js":"115","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalResourceAllocation.js":"116","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableResourceAllocationPerResourceTotal.js":"117","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableClusterBreakDown.js":"118","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableWorkOrderByClient.js":"119","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableTradeTypes.js":"120","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTradeTypeBreakdown.js":"121","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableSitesByTier.js":"122","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult.js":"123","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\ResultHeader.js":"124","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\ResultMap.js":"125","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\ResultClusterResults.js":"126","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\MapColorKey.js":"127","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\SingleModelMap.js":"128","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ScanStateBtn.js":"129","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\MarkersCenterpoints.js":"130","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\LocationMarkers.js":"131","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\ResidualLocationMarkers.js":"132","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\MarkerBasedResults.js":"133","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\ClusterResults.js":"134","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\ClusterMiniMap.js":"135","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Footer.js":"136","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Polygons.js":"137","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\HeaderLocations.js":"138","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\HeaderTotalWorkOrder.js":"139","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\HeaderClusterbyClientName.js":"140","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\ClusterByCategory.js":"141","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\ByTradeRatio.js":"142","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\HeaderResourceAllocationRatios.js":"143","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\HeaderTitle.js":"144","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\UICompnents\\index.js":"145"},{"size":1205,"mtime":1611879183232,"results":"146","hashOfConfig":"147"},{"size":517,"mtime":1610596234694,"results":"148","hashOfConfig":"147"},{"size":362,"mtime":499162500000,"results":"149","hashOfConfig":"147"},{"size":344,"mtime":1608627476978,"results":"150","hashOfConfig":"147"},{"size":339,"mtime":1611013880263,"results":"151","hashOfConfig":"147"},{"size":2039,"mtime":1609296641569,"results":"152","hashOfConfig":"147"},{"size":87,"mtime":1608627826907,"results":"153","hashOfConfig":"147"},{"size":8102,"mtime":1611874354935,"results":"154","hashOfConfig":"147"},{"size":1719,"mtime":1611014340913,"results":"155","hashOfConfig":"147"},{"size":3018,"mtime":1611208185346,"results":"156","hashOfConfig":"147"},{"size":2257,"mtime":1611879099636,"results":"157","hashOfConfig":"147"},{"size":12395,"mtime":1609822379196,"results":"158","hashOfConfig":"147"},{"size":1995,"mtime":1610967499605,"results":"159","hashOfConfig":"147"},{"size":698,"mtime":1609215777391,"results":"160","hashOfConfig":"147"},{"size":5027,"mtime":1611048016438,"results":"161","hashOfConfig":"147"},{"size":6252,"mtime":1611637611759,"results":"162","hashOfConfig":"147"},{"size":702,"mtime":1609226083528,"results":"163","hashOfConfig":"147"},{"size":1610,"mtime":1609678200319,"results":"164","hashOfConfig":"147"},{"size":959,"mtime":1609677692743,"results":"165","hashOfConfig":"147"},{"size":11507,"mtime":1611058588950,"results":"166","hashOfConfig":"147"},{"size":257,"mtime":1609657333309,"results":"167","hashOfConfig":"147"},{"size":11435,"mtime":1609916596721,"results":"168","hashOfConfig":"147"},{"size":2316,"mtime":1611874345430,"results":"169","hashOfConfig":"147"},{"size":6898,"mtime":1611874730684,"results":"170","hashOfConfig":"147"},{"size":405,"mtime":1610502856130,"results":"171","hashOfConfig":"147"},{"size":953,"mtime":1611186328703,"results":"172","hashOfConfig":"147"},{"size":776,"mtime":1610446904650,"results":"173","hashOfConfig":"147"},{"size":427,"mtime":1609218167015,"results":"174","hashOfConfig":"147"},{"size":631,"mtime":1609675155513,"results":"175","hashOfConfig":"147"},{"size":255,"mtime":1609312415883,"results":"176","hashOfConfig":"147"},{"size":2851,"mtime":1610446475297,"results":"177","hashOfConfig":"147"},{"size":1090,"mtime":1609394380269,"results":"178","hashOfConfig":"147"},{"size":715,"mtime":1610446636482,"results":"179","hashOfConfig":"147"},{"size":5498,"mtime":1610446694369,"results":"180","hashOfConfig":"147"},{"size":1116,"mtime":1610446415282,"results":"181","hashOfConfig":"147"},{"size":2281,"mtime":1610446481690,"results":"182","hashOfConfig":"147"},{"size":2284,"mtime":1610446479866,"results":"183","hashOfConfig":"147"},{"size":2241,"mtime":1610446480746,"results":"184","hashOfConfig":"147"},{"size":2262,"mtime":1610447184737,"results":"185","hashOfConfig":"147"},{"size":2310,"mtime":1610446479226,"results":"186","hashOfConfig":"147"},{"size":1119,"mtime":1610446735362,"results":"187","hashOfConfig":"147"},{"size":4649,"mtime":1610446721023,"results":"188","hashOfConfig":"147"},{"size":3139,"mtime":1610446474630,"results":"189","hashOfConfig":"147"},{"size":1929,"mtime":1610446471874,"results":"190","hashOfConfig":"147"},{"size":889,"mtime":1610446252170,"results":"191","hashOfConfig":"147"},{"size":1193,"mtime":1610446555227,"results":"192","hashOfConfig":"147"},{"size":4232,"mtime":1610446690793,"results":"193","hashOfConfig":"147"},{"size":2987,"mtime":1610446477122,"results":"194","hashOfConfig":"147"},{"size":899,"mtime":1610446670794,"results":"195","hashOfConfig":"147"},{"size":2425,"mtime":1610446476482,"results":"196","hashOfConfig":"147"},{"size":2475,"mtime":1610446478066,"results":"197","hashOfConfig":"147"},{"size":2459,"mtime":1610446559802,"results":"198","hashOfConfig":"147"},{"size":646,"mtime":1609679215014,"results":"199","hashOfConfig":"147"},{"size":653,"mtime":1609377328531,"results":"200","hashOfConfig":"147"},{"size":1199,"mtime":1610446520465,"results":"201","hashOfConfig":"147"},{"size":475,"mtime":1610446528025,"results":"202","hashOfConfig":"147"},{"size":3337,"mtime":1609721569914,"results":"203","hashOfConfig":"147"},{"size":856,"mtime":1610446558682,"results":"204","hashOfConfig":"147"},{"size":821,"mtime":1609641116942,"results":"205","hashOfConfig":"147"},{"size":4843,"mtime":1611879008911,"results":"206","hashOfConfig":"147"},{"size":149,"mtime":1610502909105,"results":"207","hashOfConfig":"147"},{"size":155,"mtime":1610502916347,"results":"208","hashOfConfig":"147"},{"size":1743,"mtime":1611184340847,"results":"209","hashOfConfig":"147"},{"size":160,"mtime":1610448527461,"results":"210","hashOfConfig":"147"},{"size":1396,"mtime":1610779434340,"results":"211","hashOfConfig":"147"},{"size":654,"mtime":1610861163069,"results":"212","hashOfConfig":"147"},{"size":2620,"mtime":1611117840237,"results":"213","hashOfConfig":"147"},{"size":1983,"mtime":1611184403823,"results":"214","hashOfConfig":"147"},{"size":1028,"mtime":1610585645670,"results":"215","hashOfConfig":"147"},{"size":882,"mtime":1610504872791,"results":"216","hashOfConfig":"147"},{"size":2529,"mtime":1611185474593,"results":"217","hashOfConfig":"147"},{"size":1438,"mtime":1611874750577,"results":"218","hashOfConfig":"147"},{"size":1275,"mtime":1611106628471,"results":"219","hashOfConfig":"147"},{"size":63543,"mtime":1611621351696,"results":"220","hashOfConfig":"147"},{"size":1303,"mtime":1610663593262,"results":"221","hashOfConfig":"147"},{"size":1608,"mtime":1610663621777,"results":"222","hashOfConfig":"147"},{"size":3188,"mtime":1610663963605,"results":"223","hashOfConfig":"147"},{"size":2038,"mtime":1610664023283,"results":"224","hashOfConfig":"147"},{"size":3497,"mtime":1610663939346,"results":"225","hashOfConfig":"147"},{"size":2253,"mtime":1610663954934,"results":"226","hashOfConfig":"147"},{"size":1573,"mtime":1610663989010,"results":"227","hashOfConfig":"147"},{"size":1608,"mtime":1610663984928,"results":"228","hashOfConfig":"147"},{"size":651,"mtime":1610779172499,"results":"229","hashOfConfig":"147"},{"size":2732,"mtime":1611789432552,"results":"230","hashOfConfig":"147"},{"size":777,"mtime":1611794762218,"results":"231","hashOfConfig":"147"},{"size":1273,"mtime":1611794875946,"results":"232","hashOfConfig":"147"},{"size":4103,"mtime":1611109198265,"results":"233","hashOfConfig":"147"},{"size":3269,"mtime":1611796965819,"results":"234","hashOfConfig":"147"},{"size":635,"mtime":1611109339326,"results":"235","hashOfConfig":"147"},{"size":622,"mtime":1611109062952,"results":"236","hashOfConfig":"147"},{"size":614,"mtime":1611108998169,"results":"237","hashOfConfig":"147"},{"size":4288,"mtime":1611797928005,"results":"238","hashOfConfig":"147"},{"size":620,"mtime":1610854957862,"results":"239","hashOfConfig":"147"},{"size":1730,"mtime":1611014080762,"results":"240","hashOfConfig":"147"},{"size":1342,"mtime":1611794795929,"results":"241","hashOfConfig":"147"},{"size":5480,"mtime":1611877773871,"results":"242","hashOfConfig":"147"},{"size":871,"mtime":1611017418398,"results":"243","hashOfConfig":"147"},{"size":1186,"mtime":1611016416902,"results":"244","hashOfConfig":"147"},{"size":2005,"mtime":1611017245122,"results":"245","hashOfConfig":"147"},{"size":684,"mtime":1611014353088,"results":"246","hashOfConfig":"147"},{"size":624,"mtime":1611113548106,"results":"247","hashOfConfig":"147"},{"size":2462,"mtime":1611140490390,"results":"248","hashOfConfig":"147"},{"size":1249,"mtime":1611028396368,"results":"249","hashOfConfig":"147"},{"size":629,"mtime":1611113968624,"results":"250","hashOfConfig":"147"},{"size":740,"mtime":1611020502188,"results":"251","hashOfConfig":"147"},{"size":882,"mtime":1611031854382,"results":"252","hashOfConfig":"147"},{"size":772,"mtime":1611027272579,"results":"253","hashOfConfig":"147"},{"size":774,"mtime":1611021657715,"results":"254","hashOfConfig":"147"},{"size":1284,"mtime":1611022823365,"results":"255","hashOfConfig":"147"},{"size":1331,"mtime":1611022844198,"results":"256","hashOfConfig":"147"},{"size":1223,"mtime":1611022741477,"results":"257","hashOfConfig":"147"},{"size":731,"mtime":1611028018431,"results":"258","hashOfConfig":"147"},{"size":516,"mtime":1611022938741,"results":"259","hashOfConfig":"147"},{"size":909,"mtime":1611029567080,"results":"260","hashOfConfig":"147"},{"size":687,"mtime":1611022041993,"results":"261","hashOfConfig":"147"},{"size":795,"mtime":1611021862380,"results":"262","hashOfConfig":"147"},{"size":838,"mtime":1611029554588,"results":"263","hashOfConfig":"147"},{"size":2623,"mtime":1611027904153,"results":"264","hashOfConfig":"147"},{"size":2428,"mtime":1611028984717,"results":"265","hashOfConfig":"147"},{"size":490,"mtime":1611028627460,"results":"266","hashOfConfig":"147"},{"size":1520,"mtime":1611029007233,"results":"267","hashOfConfig":"147"},{"size":2473,"mtime":1611030304473,"results":"268","hashOfConfig":"147"},{"size":458,"mtime":1611662544896,"results":"269","hashOfConfig":"147"},{"size":960,"mtime":1611662506857,"results":"270","hashOfConfig":"147"},{"size":473,"mtime":1611621406592,"results":"271","hashOfConfig":"147"},{"size":979,"mtime":1611058086881,"results":"272","hashOfConfig":"147"},{"size":1554,"mtime":1611051901759,"results":"273","hashOfConfig":"147"},{"size":1191,"mtime":1611621749808,"results":"274","hashOfConfig":"147"},{"size":1101,"mtime":1611033406310,"results":"275","hashOfConfig":"147"},{"size":2264,"mtime":1611621059175,"results":"276","hashOfConfig":"147"},{"size":4733,"mtime":1611622960327,"results":"277","hashOfConfig":"147"},{"size":3240,"mtime":1611624900278,"results":"278","hashOfConfig":"147"},{"size":4457,"mtime":1611034023908,"results":"279","hashOfConfig":"147"},{"size":3537,"mtime":1611624915988,"results":"280","hashOfConfig":"147"},{"size":3232,"mtime":1611625180320,"results":"281","hashOfConfig":"147"},{"size":177,"mtime":1611106241190,"results":"282","hashOfConfig":"147"},{"size":1841,"mtime":1611628258642,"results":"283","hashOfConfig":"147"},{"size":1439,"mtime":1611655493869,"results":"284","hashOfConfig":"147"},{"size":1472,"mtime":1611662583377,"results":"285","hashOfConfig":"147"},{"size":1434,"mtime":1611659980329,"results":"286","hashOfConfig":"147"},{"size":1166,"mtime":1611655246356,"results":"287","hashOfConfig":"147"},{"size":1330,"mtime":1611662558080,"results":"288","hashOfConfig":"147"},{"size":1609,"mtime":1611816235126,"results":"289","hashOfConfig":"147"},{"size":678,"mtime":1611662606852,"results":"290","hashOfConfig":"147"},{"size":181,"mtime":1611879024523,"results":"291","hashOfConfig":"147"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"i3jrvt",{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"296"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"296"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"331"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"296"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"296"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"296"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"296"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"331"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"331"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"331"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"331"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"331"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"331"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"331"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"331"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"331"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"331"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"331"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"331"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"331"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"331"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"331"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"331"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"331"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"331"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"331"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"331"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"331"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"331"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"296"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"296"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"296"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"296"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"296"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"472","messages":"473","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"296"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"296"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"296"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"296"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"296"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"296"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"296"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"296"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"296"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"296"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"296"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"296"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"296"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"296"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"296"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"296"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"296"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"296"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"296"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"296"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"296"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"296"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"296"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"296"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"296"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"296"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"296"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"296"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"296"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"296"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"296"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"296"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"296"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"619","messages":"620","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"296"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"296"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"296"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"296"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"296"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"296"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"641","usedDeprecatedRules":"296"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644","usedDeprecatedRules":"296"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"296"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"296"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"296"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"296"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"296"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"296"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\index.js",["665"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\App.js",[],["666","667"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\reportWebVitals.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\UX.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\History.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\PrototypeLoader.js",["668"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\STRAPI.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\SideBar.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\GeoLocationActions.js",["669","670","671","672","673","674","675","676"],"import { Circle } from '@react-google-maps/api';\r\nimport store from \"../store/index\"\r\nimport {ClusterAnalysis} from \"./ClusterAnalysis\";\r\n\r\n\r\n\r\n/*\r\n    This class should deal with Geolocation Processes ONLY\r\n    all result filtering to be handled in phase two\r\n\r\n*/\r\n\r\n\r\n// find the distance in KM from 1 point to another\r\nexport function distancetoPoint(lat1, lon1, lat2, lon2, unit) {\r\n    if ((lat1 == lat2) && (lon1 == lon2)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var radlat1 = Math.PI * lat1/180;\r\n        var radlat2 = Math.PI * lat2/180;\r\n        var theta = lon1-lon2;\r\n        var radtheta = Math.PI * theta/180;\r\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n        if (dist > 1) {\r\n            dist = 1;\r\n        }\r\n        dist = Math.acos(dist);\r\n        dist = dist * 180/Math.PI;\r\n        dist = dist * 60 * 1.1515;\r\n        if (unit==\"K\") { dist = dist * 1.609344 }\r\n        if (unit==\"N\") { dist = dist * 0.8684 }\r\n        return dist;\r\n    }\r\n}\r\n\r\n// use to find the scan box area.\r\n// this function return the corosponding lnglat to a given point\r\n\r\n\r\nexport  function llFromDistance(latitude, longitude, distance, bearing) {\r\n    // taken from: https://stackoverflow.com/a/46410871/13549 \r\n    // distance in KM, bearing in degrees\r\n  \r\n    const R = 6378.1; // Radius of the Earth\r\n    const brng = bearing * Math.PI / 180; // Convert bearing to radian\r\n    let lat = latitude * Math.PI / 180; // Current coords to radians\r\n    let lon = longitude * Math.PI / 180;\r\n  \r\n    // Do the math magic\r\n    lat = Math.asin(Math.sin(lat) * Math.cos(distance / R) + Math.cos(lat) * Math.sin(distance / R) * Math.cos(brng));\r\n    lon += Math.atan2(Math.sin(brng) * Math.sin(distance / R) * Math.cos(lat), Math.cos(distance / R) - Math.sin(lat) * Math.sin(lat));\r\n  \r\n    // Coords back to degrees and return\r\n    return [(lat * 180 / Math.PI), (lon * 180 / Math.PI)];\r\n  \r\n  }\r\n\r\n\r\n  export const TestBoundaries = (site, Area)=>{\r\n    let found=false;\r\n    if(site.lat <=  Area.north && site.lat >= Area.south && site.long >= Area.west && site.long <= Area.east ){found=true}\r\n    return found\r\n}\r\n\r\n\r\n\r\n\r\n\r\n \r\n// Main Scan Class\r\nexport function PreformScan(){\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /* Variables */\r\n    /* *************************************************************************************************************** */        \r\n    \r\n    //this.Area=.5\r\n    //this.ScanDistanceArea=this.Area;\r\n    //this.SearchRadius = .5\r\n    //this.minSites=2\r\n    //this.WorkOrderVariants = [500,1500];\r\n    this.FilterVariables=null\r\n\r\n\r\n    this.Boundaries=null;\r\n    this.setGridpoints=null;\r\n    this.setGridPointer=null;\r\n\r\n    this.TestAgainstSites=null;\r\n    this.ScanResults=[];\r\n    this.setScanResults=null\r\n    this.sleepFor=10;\r\n    this.NESW={ north: null, south: null, east: null,  west: null }\r\n    \r\n    \r\n    this.PointOptions={\r\n        strokeColor: '#FF0000',\r\n        strokeOpacity: 0.5,\r\n        strokeWeight: 1,\r\n        fillColor: '#FF0000',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 10,\r\n        zIndex: 1\r\n      }\r\n         \r\n     this.GridPointerOptions = {\r\n        strokeColor: '#00ff00',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 1,\r\n        fillColor: '#00ff00',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 100,\r\n        zIndex: 10\r\n      }\r\n\r\n      this.GridResultOptions={\r\n        strokeColor: '#00ff00',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 1,\r\n        fillColor: '#00ff00',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 1000,\r\n        zIndex: 10\r\n      }\r\n\r\n      this.recOptions={\r\n        strokeColor: '#6094ff',\r\n        strokeOpacity: 0.9,\r\n        strokeWeight: 1,\r\n        fillColor: '#6094ff',\r\n        fillOpacity: 0.15,\r\n      }\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /*  AUX Functions*/\r\n    /* *************************************************************************************************************** */        \r\n\r\n    this.sleep = ()=>{  return new Promise(resolve => setTimeout(resolve, this.sleepFor)) }\r\n    \r\n    this.BreakBoundaries=(Boundaries)=>{\r\n        this.NESW = {  north: Boundaries[1], south: Boundaries[0], east: Boundaries[3], west: Boundaries[2] }\r\n    }\r\n\r\n    this.arePointsNear = (checkPoint, centerPoint, km) => {\r\n                var ky = 40000 / 360;\r\n                var kx = Math.cos(Math.PI * centerPoint.lat / 180.0) * ky;\r\n                var dx = Math.abs(centerPoint.lng - checkPoint.lng) * kx;\r\n                var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\r\n                return Math.sqrt(dx * dx + dy * dy) <= km;\r\n            }\r\n\r\n    this.RemoveDuplicates =()=>{\r\n\r\n    }\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /* Process */\r\n    /* *************************************************************************************************************** */        \r\n\r\n    this.Scan=()=>{\r\n            console.log(\"START SCAN \")\r\n            console.log(\"Scan Filters\", this.FilterVariables)\r\n            \r\n            this.BreakBoundaries(this.Boundaries)\r\n            //console.log(this.NESW)\r\n            \r\n            \r\n            //console.log(this.FilterVariables.Area, this.FilterVariables);\r\n            let Xiterations = distancetoPoint(this.NESW.north,this.NESW.west, this.NESW.north, this.NESW.east,'K')/this.FilterVariables.GridSpacing;\r\n            let Yiterations = distancetoPoint(this.NESW.north,this.NESW.west, this.NESW.south, this.NESW.west,'K')/this.FilterVariables.GridSpacing;\r\n\r\n            //console.log( Xiterations, Yiterations);\r\n            //let ScanBoxStartingPosition = llFromDistance(this.NESW.north, this.NESW.west, Math.sqrt(2)*this.Area, 135)\r\n            \r\n            //let LargestSurfaceArea = Math.max(Math.ceil(Xiterations), Math.ceil(Yiterations))\r\n\r\n            this.setGridPointer(<Circle options={this.GridPointerOptions}  center={{ lat: this.NESW.north, lng: this.NESW.west }} />)\r\n            this.FindScanPoints(Math.ceil(Xiterations), Math.ceil(Yiterations))\r\n            \r\n        }\r\n\r\n\r\n\r\n    this.FindScanPoints = (Xiterations, Yiterations)=>{\r\n\r\n        //console.log(Xiterations, Yiterations);\r\n\r\n        let LargestSurfaceArea = Math.max(Xiterations, Yiterations)\r\n        let i=0;\r\n        let Points = []\r\n        let ReturnedLngLat;\r\n\r\n      \r\n        while( i < LargestSurfaceArea){\r\n           \r\n            ReturnedLngLat = llFromDistance(this.NESW.north, this.NESW.west, (Math.sqrt(2)*(i*this.FilterVariables.GridSpacing)), 135)\r\n            //console.log(ReturnedLngLat[0],ReturnedLngLat[1])\r\n            Points.push([ReturnedLngLat[0],ReturnedLngLat[1]]) \r\n            \r\n            i++\r\n        }\r\n\r\n        //console.log(Points);\r\n        this.MapScanPoints(Points, Xiterations, Yiterations)\r\n    }\r\n\r\n\r\n\r\n    this.MapScanPoints=(Points, Xiterations, Yiterations)=>{\r\n\r\n        let MapGrid=[]\r\n        let createCircles=[];\r\n\r\n\r\n        let ii=0;\r\n\r\n        while(ii < Yiterations){\r\n            let Row=0, Col=0, iii=0\r\n            while(iii < Xiterations){\r\n                Row=ii;\r\n                Col=iii\r\n                    //console.log([Row,Col])\r\n                    MapGrid.push([Points[Row][0], Points[Col][1]])\r\n                    createCircles.push(<Circle key={ii+iii} options={this.PointOptions}  center={{ lat: Points[Row][0], lng: Points[Col][1] }} />)\r\n                    iii++\r\n            }\r\n            ii++\r\n        }\r\n        //console.log(MapGrid);\r\n        this.setGridpoints(createCircles)\r\n        this.RunScanTest (MapGrid)\r\n    }\r\n\r\n\r\n    this.RunScanTest = async(MapGrid)=>{\r\n        \r\n        // Variables\r\n        this.setScanResults(null)\r\n        let i=0\r\n        // run loop to scan through Grid points\r\n        while(i<MapGrid.length){\r\n            // Hold scan point for FE show only\r\n            await this.sleep()\r\n            // find\r\n          //  let ScanBoxNewPosition = llFromDistance(MapGrid[i][0], MapGrid[i][1], Math.sqrt(2)*this.Area, 135)\r\n          //  south: ScanBoxNewPosition[0],east: ScanBoxNewPosition[1],\r\n            this.setGridPointer(<Circle options={this.GridPointerOptions}  center={{ lat: MapGrid[i][0], lng: MapGrid[i][1] }} />)\r\n            \r\n            // Create Circle Center point to scan in next function hand off.\r\n            let ScanBoundary = { north: MapGrid[i][0],  west: MapGrid[i][1] }\r\n            \r\n            this.scanTestDiameter(ScanBoundary)\r\n            \r\n            i++\r\n        }\r\n\r\n        this.setGridPointer(<Circle visible={false} options={this.GridPointerOptions}   />)\r\n        this.StoreResults()\r\n        ClusterAnalysis(this.ScanResults)\r\n        \r\n    }\r\n\r\n\r\n\r\n    this.scanTestDiameter = (ScanBoundary)=>{\r\n\r\n        // This function checks to see if a site is within the Radius of the center point in the scan\r\n        // it should check each site lng/lst. if true then store in array this.ScanResults;\r\n       \r\n        // Outer Global Variables\r\n        let CollectSites=[];\r\n        let long=[],lat=[],GroupedBoxBoundaryLimits=[];\r\n       // Variables\r\n       let WorkOrderCount = 0;\r\n\r\n        // Loop known sites in this area for matches\r\n        this.TestAgainstSites.map((site,i)=>{\r\n            \r\n            \r\n            if(this.arePointsNear({ lat: site.lat, lng: site.long}, { lat: ScanBoundary.north, lng: ScanBoundary.west }, this.FilterVariables.SearchRadius)){\r\n\r\n                //console.log(site)\r\n\r\n                // Push Values into Arrays\r\n                long.push(site.long);\r\n                lat.push(site.lat)\r\n                CollectSites.push(site);\r\n                \r\n                //console.log(site)\r\n                //if(site.count[0] !== null) WorkOrderCount = WorkOrderCount + site.count[0].WorkOrders;\r\n               \r\n              \r\n            } // close if true\r\n           \r\n          })  // close Map\r\n\r\n            // Limit Boundaries to outer most\r\n            GroupedBoxBoundaryLimits.push([Math.max(...long), Math.min(...long), Math.max(...lat), Math.min(...lat)])\r\n            // if work orders !0 ship it off for processing\r\n            /*\r\n            if( WorkOrderCount >= this.FilterVariables.MinWorkOrder \r\n                && WorkOrderCount <= this.FilterVariables.MaxOrderOrders \r\n                && CollectSites.length>=this.FilterVariables.minSites)\r\n                { }\r\n            */\r\n                this.ProcessGridBoundary(CollectSites, GroupedBoxBoundaryLimits, ScanBoundary)\r\n        }\r\n\r\n \r\n\r\n    this.ProcessGridBoundary=(Sites, GroupedBoxBoundaryLimits, ScanBoundary)=>{\r\n     \r\n        // Variables\r\n        let tmp = [];\r\n        let remove=[];\r\n        let removeDuplicateBoundaryLimits;\r\n        \r\n        // remove any dupliactes from arrays\r\n        removeDuplicateBoundaryLimits = GroupedBoxBoundaryLimits.filter(function (v, i) {\r\n            if (tmp.indexOf(v.toString()) < 0) \r\n                { \r\n                    tmp.push(v.toString());\r\n                    return v;\r\n                }else{\r\n                    remove.push(i)\r\n                }\r\n        });\r\n\r\n        remove.map((id,i)=>{ Sites.splice(id, 1);})\r\n\r\n        // only add items with a site count\r\n        if(Sites.length>0){\r\n            this.ScanResults.push({\r\n                Sites:Sites,\r\n                SiteCount:Sites.length,\r\n                Boundary:ScanBoundary,\r\n                //WorkOrderCount:WorkOrderCount,\r\n                GroupedBoxBoundaryLimits:removeDuplicateBoundaryLimits[0]\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    this.StoreResults = ()=>{\r\n\r\n\r\n        //console.log(\"Scan End Num\", this.ScanResults.length)\r\n        // Store Results\r\n        store.dispatch({ type:'SCANSTATE', payload:false}); \r\n        \r\n        \r\n        //store.dispatch({ type:'STORERESULTS', payload:this.ScanResults});        \r\n \r\n    }\r\n\r\n} ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\STRAPI.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\UX.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\SCANSTATE.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleUX.js",["677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698"],"// Private Functions\r\nimport store from \"../store/index\"\r\n//import axios from 'axios';\r\nimport {distancetoPoint} from \"./GeoLocationActions\"\r\nimport { findIndex} from 'lodash'; \r\n\r\n\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport function AreaFilter(type, value){\r\n    //console.log('AreaFilter', value)\r\n    store.dispatch({ type:type, payload:value});\r\n}\r\n\r\nexport function ScanState(value){\r\n    console.log('ScanState', value)\r\n    store.dispatch({ type:'SCANSTATE', payload:value});\r\n}\r\n\r\nexport function SelectedRegion(SelectedRegion){\r\n\r\n    console.log(SelectedRegion)\r\n    store.dispatch({ type:'STORESELECTEDAREA', payload:SelectedRegion});\r\n\r\n}\r\n\r\nexport function RemoveClusterItem(Haystack, Needle){ \r\n\r\n    console.log(\"Delete Cluster\");\r\n    console.log(Haystack, Needle);\r\n    let index = findIndex( Haystack, function(o) { return o.Boundary === Needle; })\r\n    console.log(index);\r\n\r\n    Haystack.splice(index, 1)\r\n    console.log(Haystack);\r\n    store.dispatch({ type:'STORERESULTS', payload:Haystack}); \r\n}\r\n\r\n \r\nexport function CreateMapParameters(DATA){\r\n\r\n            // USe this function to create ALL of the possible Map Data and Meta points.\r\n            // Try to limit the use on the UX.SelectedArea around the APP\r\n            // Instead focus on using UX.MapParameters\r\n\r\n            let centerLatArray = [];\r\n            let centerLngArray = [];\r\n            let Storesites=[]\r\n\r\n            //console.log(DATA)\r\n            DATA.map((Region, i)=>{\r\n                //console.log(\"Region\", Region)\r\n                Region.sites.map((marker,i)=>{\r\n                    Storesites.push(marker)\r\n                    if(!isNaN(parseFloat(marker.lat))){\r\n                        centerLatArray.push(parseFloat(marker.lat))\r\n                        centerLngArray.push(parseFloat(marker.long))\r\n                    }\r\n                })\r\n                //return false\r\n            })\r\n\r\n\r\n            let centerLat = ((Math.min(...centerLatArray) + Math.max(...centerLatArray))/2)\r\n            let centerLng = ((Math.min(...centerLngArray) + Math.max(...centerLngArray))/2)\r\n            let LatLngBoundaries = [Math.min(...centerLatArray),Math.max(...centerLatArray),Math.min(...centerLngArray),Math.max(...centerLngArray)]\r\n            \r\n            let distance = distancetoPoint(LatLngBoundaries[0],LatLngBoundaries[2], LatLngBoundaries[1],LatLngBoundaries[3],'K')\r\n           \r\n           // console.log('distance', (distance*1000), setZoomLevel((distance*1000).toFixed(0)));\r\n           \r\n            let zoom = setZoomLevel((distance*1000).toFixed(0))\r\n            let SetMap = true\r\n            //console.log('Storesites', Storesites)\r\n            \r\n            let MapParameters = {\r\n                LatLngBoundaries:LatLngBoundaries,\r\n                BoundaryCenterPoint:[centerLat, centerLng],\r\n                zoom:zoom,\r\n                SetMap:SetMap,\r\n                markers:Storesites\r\n            }\r\n\r\n            //console.log(\"MapParameters\", MapParameters)\r\n            store.dispatch({ type:'STOREMAPPARAMETERS', payload:MapParameters});\r\n}\r\n\r\n\r\n\r\nfunction setZoomLevel(meters) { \r\n    console.log(`Zoom level set meters: ${meters}`); \r\n\r\n    switch (meters) {\r\n        case (meters < 1128):\r\n            return 15;\r\n          break;\r\n        case ((meters > 1128) && (meters < 2256)):\r\n            return 14;\r\n          break;\r\n        case ((meters > 2256) && (meters < 4513)):\r\n            return 13;\r\n          break;\r\n        case ((meters > 4513) && (meters < 9027)):\r\n            return 12;\r\n          break; \r\n        case ((meters > 9027) && (meters < 18055)) :\r\n            return 11;\r\n          break;\r\n        case ((meters > 18055) && (meters < 36111)) :\r\n            return 10;\r\n          break; \r\n        case ((meters > 36111) && (meters < 72223)) :\r\n            return 9;\r\n          break;      \r\n        case ((meters > 72223) && (meters < 144447)) :\r\n            return 8;\r\n          break;   \r\n        case ((meters > 144447) && (meters < 288895)) :\r\n            return 7;\r\n          break;    \r\n        case ((meters > 288895) && (meters < 577790)) :\r\n            return 6;\r\n          break;  \r\n          case ((meters > 577790) && (meters < 1155581)) :\r\n            return 5;\r\n          break;     \r\n          default:\r\n            return 4;\r\n      }\r\n\r\n\r\n    //return zoomfactor;\r\n}\r\n\r\nexport function NumberReducer (labelValue) {\r\n\r\n    // Nine Zeroes for Billions\r\n    return Math.abs(Number(labelValue)) >= 1.0e+9\r\n\r\n    ? Math.abs(Number(labelValue)) / 1.0e+9 + \"B\"\r\n    // Six Zeroes for Millions \r\n    : Math.abs(Number(labelValue)) >= 1.0e+6\r\n\r\n    ? Math.abs(Number(labelValue)) / 1.0e+6 + \"M\"\r\n    // Three Zeroes for Thousands\r\n    : Math.abs(Number(labelValue)) >= 1.0e+3\r\n\r\n    ? Math.abs(Number(labelValue)) / 1.0e+3 + \"K\"\r\n\r\n    : Math.abs(Number(labelValue));\r\n\r\n}\r\n\r\n\r\nexport function HandleFilterChange(TYPE, VALUE){\r\n    console.log(TYPE, VALUE)\r\n    store.dispatch({ type:TYPE, payload:VALUE});\r\n}\r\n\r\nexport function RegionColor(region){\r\n  switch (region) {\r\n      case 'SameBuilding':\r\n            return '#B2007C' \r\n            break;\r\n      case 'CBD':\r\n              return '#DC000B'\r\n        break;\r\n      case 'InnerCity':\r\n              return '#04419B'\r\n          break;\r\n      case 'Metro':\r\n              return '#11B700'\r\n          break;\r\n      case 'OuterMetro':\r\n              return '#330193'\r\n          break;\r\n        case 'Regional':\r\n          return '#FF7400'\r\n          break;\r\n        case 'Remote':\r\n          return '#3D1324'\r\n          break; \r\n      case 'ExtremeRemote':\r\n            return '#111D2F'\r\n          break;   \r\n     \r\n  }\r\n}\r\n\r\nexport const GroupArrayByOccurances =(arr) =>{\r\n  var a = [],b = [],prev;\r\n  arr.sort();\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (arr[i] !== prev) {\r\n      a.push(arr[i]);\r\n      b.push(1);\r\n    } else {\r\n      b[b.length - 1]++;\r\n    }\r\n    prev = arr[i];\r\n  }\r\n  return [a, b];\r\n}\r\n\r\nexport const HandleTZDate = (DATE)=>{\r\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\" }\r\n  return new Date(DATE).toLocaleDateString(undefined, options)\r\n\r\n // let NewDate = DATE.split('T');\r\n\r\n // return NewDate[0]\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SCAN.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\SimplePie.js",[],["699","700"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\BarChart.js",["701"],"import React  from 'react';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n} from 'recharts';\r\n\r\n/*\r\nexample\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n];\r\n*/\r\n\r\nconst SimpleBarChart = (props)=>{\r\n\r\n    const {Data} = props\r\n    return (\r\n      <div style={{ width: '100%', height: 400 }}>\r\n      <ResponsiveContainer>\r\n          <BarChart\r\n            width={600}\r\n            height={400}\r\n            data={Data}\r\n            margin={{\r\n              top: 5, right: 30, left: 20, bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"value\" fill=\"#ffbf00\" />\r\n          \r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default SimpleBarChart;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\ClusterAnalysis.js",["702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724"],"import store from \"../store/index\"\r\n//import axios from 'axios';\r\nimport {find, findIndex} from 'lodash'; \r\n\r\n\r\n/* **************************************************************************** */\r\n/*  Aux Functions */\r\n/* **************************************************************************** */\r\nconst GroupArray =(arr) =>{\r\n    var a = [],b = [],prev;\r\n    arr.sort();\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i] !== prev) {\r\n        a.push(arr[i]);\r\n        b.push(1);\r\n      } else {\r\n        b[b.length - 1]++;\r\n      }\r\n      prev = arr[i];\r\n    }\r\n    return [a, b];\r\n  }\r\n\r\n\r\n  const FindMultiplier=(int)=>{\r\n    const RM = store.getState().STRAPI.ratioModel\r\n    let Multiplier = find(RM, function(o) { return (o.Min <= int && o.max >= int) });\r\n    return Multiplier.multiplier\r\n  }\r\n\r\n\r\n  const FindInterior = (outer, inner)=>{\r\n    inner.map((cluster,i)=>{\r\n      let Inside = false\r\n      if(\r\n          cluster.GroupedBoxBoundaryLimits[0] > outer[0]\r\n        && cluster.GroupedBoxBoundaryLimits[1] < outer[1]\r\n        && cluster.GroupedBoxBoundaryLimits[2] > outer[2]\r\n        && cluster.GroupedBoxBoundaryLimits[3] < outer[3]\r\n      )\r\n      { Inside = true}\r\n      console.log(outer, cluster.GroupedBoxBoundaryLimits)\r\n        console.log(Inside)\r\n    })\r\n  }\r\n\r\n   export const findTradeTypeName = (id)=>{\r\n    \r\n    const TRADETYPE = store.getState().STRAPI.tradeType;\r\n    \r\n    let FoundType = find(TRADETYPE, function(o) { return o.id === id; })\r\n    return FoundType.name\r\n}\r\n\r\n\r\n  export const findClientName=(id)=>{\r\n    const Clients = store.getState().STRAPI.UserData.Customers;\r\n    let FoundClient = find(Clients, function(o) { return o.id === id; });\r\n\r\n    if(FoundClient !== undefined)\r\n      return FoundClient.name \r\n  \r\n    return false\r\n   }\r\n\r\n    const ResourcesRequired = (TradesUsed)=>{\r\n      //console.log(TradesUsed);\r\n      \r\n    }\r\n\r\n    const ChartGroupArrayData = (Compressed)=>{\r\n    let CompressedForPie=[]\r\n    Compressed[0].map((jt,i)=>{ CompressedForPie.push({ name: jt , value: Compressed[1][i] }) })\r\n    return (CompressedForPie);\r\n    }\r\n\r\n/* End Aux Functions **************************************************************************** */\r\n\r\n\r\n/* **************************************************************************** */\r\n/* Worker Functions  */\r\n/* **************************************************************************** */\r\n\r\n\r\n\r\nconst findTradeParent = (trade)=>{\r\n  const TRADETYPEALLOCATION = store.getState().STRAPI.UserData.tradetypes;\r\n\r\n  let FoundType = find(TRADETYPEALLOCATION, function(o) { return o.id === trade; })\r\n  if(FoundType === undefined){\r\n    //console.log(trade)\r\n    return 'undefined'\r\n  }else{\r\n   // console.log(trade, FoundType.trade_allocation_ratio.Name)\r\n    return FoundType.trade_allocation_ratio.Name;\r\n  }\r\n \r\n}\r\n\r\n// Find Allocation of trade type across cluster\r\n\r\n   export const FindTradeTypeAllocation = (data)=>{\r\n     let TotalChildTradesTradearr=[]\r\n     let ParentTradeName=[]\r\n      data.map((site,i)=>{\r\n          site.sites.map((count,i)=>{\r\n            let TradesJson = JSON.parse(count.count[0].TradeTypes);\r\n            TotalChildTradesTradearr=  [...TotalChildTradesTradearr, ...TradesJson]\r\n          })\r\n      })\r\n\r\n      TotalChildTradesTradearr.map((childTrades, i )=>{\r\n        ParentTradeName.push(findTradeParent(childTrades))\r\n      })\r\n      \r\n      return GroupArray(ParentTradeName)\r\n    }\r\n\r\n\r\nexport const SitesbyTier = (data)=>{\r\n    let tiers=[]\r\n    data.map((item,index)=>{\r\n        let ii=0\r\n       \r\n        while(ii<item.sites.length){\r\n           tiers.push(item.scanCategory)\r\n            ii++\r\n        }\r\n      \r\n      \r\n    })\r\n\r\n    console.log(GroupArray(tiers))\r\n    return GroupArray(tiers)\r\n}\r\n\r\n// Return the Total workordercount for a cluster\r\n    export const SumWorkOrderTotal = (sites)=>{\r\n        let total=[]\r\n          sites.map((item,i)=>{\r\n              if (!isNaN(item.SumWorkOrder))\r\n                total.push(item.SumWorkOrder)\r\n          })\r\n          return total.reduce((a, b) => a + b, 0)\r\n      }\r\n\r\n\r\n\r\n\r\nconst Removeinteriors = (Results)=>{\r\n  console.log(Results)\r\n  Results.map((results)=>{\r\n      FindInterior(results.GroupedBoxBoundaryLimits, Results)\r\n  })\r\n}\r\n\r\nconst ClusterCost=(ClusterAssetBreakdown)=>{\r\n    const TRADETYPE = store.getState().STRAPI.tradeType;\r\n    let ClusterCost=[]\r\n    ClusterAssetBreakdown[0].map((id,i)=>{\r\n        let Cost;\r\n        let TT = find(TRADETYPE, function(o) { return o.id === id; });\r\n        if(TT.cpj != undefined){\r\n                //console.log(TT.cpj, id, ClusterAssetBreakdown[1][i], FindMultiplier(ClusterAssetBreakdown[1][i]))\r\n               Cost = (ClusterAssetBreakdown[1][i]* TT.cpj)*FindMultiplier(ClusterAssetBreakdown[1][i])\r\n               ClusterCost.push([findTradeTypeName(id), parseFloat(Cost.toFixed(2))])\r\n        }else{\r\n            console.log(`${findTradeTypeName(id)} is missing a CPJ marker`)\r\n        }\r\n    })\r\n    return ClusterCost\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  const JobTypes =(JOBTYPES,result)=>{\r\n     \r\n       //console.log(JOBTYPES,result)\r\n\r\n        // JOb Type\r\n        let PUSHJobTypeName=[]\r\n        let PUSHJobTypeID=[]\r\n        let PUSHJobTypeWorkOrderCount=[]\r\n        let PUSHTradeType=[]\r\n        let PUSHSplitTradeTypeCount=[]\r\n        let PUSHTradeInt=[]\r\n        let PUSHWorkOrdersTrueNumber=[]\r\n        let WorkOrderValue;\r\n\r\n        result.Sites.map((site,i)=>{\r\n\r\n            //console.log(site)\r\n            // Breakdown Jobtypes\r\n            JOBTYPES.map((jobtype,i)=>{\r\n\r\n                //console.log(find(jobtype.work_orders, function(o) { return o.site === site.id; }))\r\n                let FindWorkOrder = find(jobtype.work_orders, function(o) { return o.site === site.id; })\r\n                if(FindWorkOrder!== undefined){\r\n                    \r\n                    // Store JT name\r\n                    PUSHJobTypeName.push(jobtype.name);\r\n                    PUSHJobTypeID.push(jobtype.id)\r\n\r\n                    //console.log(FindWorkOrder)\r\n                    //console.log(jobtype);\r\n                    \r\n                    PUSHWorkOrdersTrueNumber.push(FindWorkOrder.count)\r\n                    PUSHTradeType.push(findTradeTypeName(FindWorkOrder.trade_type))\r\n                    PUSHTradeInt.push(FindWorkOrder.trade_type)\r\n                   \r\n                    let Index = findIndex(PUSHSplitTradeTypeCount, function(o) { return o.id == FindWorkOrder.trade_type; });\r\n          \r\n                    if(Index != -1){\r\n                          PUSHSplitTradeTypeCount[Index].count = PUSHSplitTradeTypeCount[Index].count + FindWorkOrder.count\r\n                    }else{\r\n                      PUSHSplitTradeTypeCount.push({id:FindWorkOrder.trade_type, count:FindWorkOrder.count, name:findTradeTypeName(FindWorkOrder.trade_type)})\r\n                    }\r\n                    \r\n                    \r\n                     // I DONT THINK THIS IS CORRECT\r\n                    WorkOrderValue = PUSHWorkOrdersTrueNumber.reduce((a, b) => a + b, 0)\r\n                    console.log(\"PUSHWorkOrdersTrueNumber\", PUSHWorkOrdersTrueNumber)\r\n                    let IndexThis = findIndex(PUSHJobTypeWorkOrderCount, function(o) { return o.name === jobtype.name; })\r\n                    \r\n                    if(IndexThis === -1){ \r\n                        PUSHJobTypeWorkOrderCount.push({name:jobtype.name, value:WorkOrderValue})\r\n                    }\r\n                    else{\r\n                        PUSHJobTypeWorkOrderCount.splice(IndexThis, 1, {name:jobtype.name, value: (PUSHJobTypeWorkOrderCount[IndexThis].value+WorkOrderValue)});\r\n                    }\r\n                    \r\n                }\r\n            })\r\n           \r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // Create Analysis to hand off to Reducer\r\n\r\n        return {\r\n            JobTypeNameARR :GroupArray(PUSHJobTypeName),\r\n            JobTypeIDARR : GroupArray(PUSHJobTypeID),\r\n            TradeTypeARR : GroupArray(PUSHTradeType),\r\n            WorkOrdersTrueNumber:PUSHWorkOrdersTrueNumber.reduce((a, b) => a + b, 0),\r\n            JobTypeWorkOrderCount : PUSHJobTypeWorkOrderCount,\r\n            ClusterCost: ClusterCost(GroupArray(PUSHTradeInt)),\r\n            ResourcesRequired:ResourcesRequired(GroupArray(PUSHTradeType)),\r\n            SplitTradeTypeCount:PUSHSplitTradeTypeCount\r\n        }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const checkResourceCount = (Results)=>{\r\n\r\n    Results.map((cluster,i)=>{\r\n\r\n      console.log(cluster, cluster.SplitTradeTypeCount)\r\n    })\r\n      /*\r\n        minValueDay = 2\r\n        ResourceDay = 0.2\r\n        JobsPerDay = 4.4\r\n        MinRadius = 2000\r\n        WorkDays = 250\r\n      */\r\n\r\n  }\r\n\r\n  /* NEW FUNCTIONS */\r\n\r\n  const ExtractWorkOrderValues = (Results) => {\r\n    // Extracts the True workorder count\r\n      Results.map((result)=>{\r\n        let WorkOrderCount = [], WorkOrderNum=0\r\n          result.Sites.map((site, i)=>{\r\n              WorkOrderNum = WorkOrderNum + site.count[0].WorkOrders\r\n              WorkOrderCount.push(site.count[0].WorkOrders)\r\n          })\r\n          result.WorkOrders = WorkOrderCount.reduce((a, b) => a + b, 0);\r\n      })\r\n      return true;\r\n  }\r\n\r\n\r\n  const ExtractTradeTypes = (Results, STRAPI)=>{\r\n\r\n    //console.log(STRAPI)\r\n    \r\n    Results.map((result)=>{\r\n      let PUSHTradeType=[]\r\n        result.Sites.map((site, i)=>{\r\n          PUSHTradeType = [...PUSHTradeType,...JSON.parse(site.count[0].TradeTypes)]\r\n        })\r\n        result.TradeType = GroupArray(PUSHTradeType)\r\n        //console.log(GroupArray(PUSHTradeType));\r\n    })\r\n   \r\n    return true;\r\n  } \r\n\r\n\r\n\r\n/* **************************************************************************** */\r\n/*  Starter Function  ********************************************************* */\r\n/*                                                                               */\r\n/* **************************************************************************** */\r\n\r\n\r\nexport function ClusterAnalysis(Results){\r\n    const STRAPI = store.getState().STRAPI;\r\n    console.log(\"ClusterAnalysis\", Results);\r\n    \r\n    // Let group some of the Data points into Meta data\r\n    // Group by WO\r\n      ExtractWorkOrderValues(Results)\r\n    // Group by Trade type\r\n      ExtractTradeTypes(Results, STRAPI)\r\n    // Group by Resource Type\r\n      //checkResourceCount(Results)\r\n    \r\n    // Group by Cost\r\n    \r\n    // Group by Asset Type\r\n    // Group by Delivery Model\r\n    // Group by Customers\r\n\r\n\r\n\r\n\r\n    // OK time to filter through the results on Known restrictions\r\n    \r\n     // Run Resource Test Here\r\n    \r\n    // Removeinteriors(Results)\r\n\r\n\r\n    \r\n    // find the job types\r\n    /*\r\n     Results.map((result,i)=>{\r\n        \r\n        let TRADEOBJ = JobTypes(STRAPI.JobType,result);\r\n\r\n        //result.WorkOrdersTrueNumber = TRADEOBJ.WorkOrdersTrueNumber\r\n        result.SplitTradeTypeCount = TRADEOBJ.SplitTradeTypeCount\r\n        result.TradeTypeCount =TRADEOBJ.TradeTypeARR\r\n        result.ClusterCost = TRADEOBJ.ClusterCost\r\n        result.Charts={\r\n            JobTypeID:ChartGroupArrayData(TRADEOBJ.JobTypeIDARR),\r\n            JobTypeName:ChartGroupArrayData(TRADEOBJ.JobTypeNameARR),\r\n            TradeType:ChartGroupArrayData(TRADEOBJ.TradeTypeARR),\r\n            JobTypeSum:ChartGroupArrayData(TRADEOBJ.JobTypeNameARR),\r\n            JobTypeWorkOrderCount:TRADEOBJ.JobTypeWorkOrderCount\r\n        }\r\n    })\r\n\r\n    */\r\n   \r\n    console.log(\"FINAL RESULT \", Results)\r\n    \r\n    //store.dispatch({ type:'STORERESULTS', payload:Results}); \r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Assets\\logo.js",["725","726"],"\r\nimport React  from 'react'\r\n\r\nexport const LogoMain=()=>{\r\n    return( <img className=\"MainLogo\" src=\"/img/png/intact-group.png\" />)\r\n}\r\n\r\nexport const LogoMainWhite=()=>{\r\n    return( <img className=\"MainLogo\" src=\"/img/png/intact-group-white.png\" />)\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleMarkerBasedScan.js",["727","728","729","730","731","732","733","734","735","736","737","738","739","740"],"import store from \"../store/index\"\r\nimport { orderBy, findIndex, inRange} from 'lodash'; \r\n\r\n// find the distance in KM from 1 point to another\r\nfunction distancetoPoint(lat1, lon1, lat2, lon2, unit) {\r\n    if ((lat1 == lat2) && (lon1 == lon2)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var radlat1 = Math.PI * lat1/180;\r\n        var radlat2 = Math.PI * lat2/180;\r\n        var theta = lon1-lon2;\r\n        var radtheta = Math.PI * theta/180;\r\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n        if (dist > 1) {\r\n            dist = 1;\r\n        }\r\n        dist = Math.acos(dist);\r\n        dist = dist * 180/Math.PI;\r\n        dist = dist * 60 * 1.1515;\r\n        if (unit==\"K\") { dist = dist * 1.609344 }\r\n        if (unit==\"N\") { dist = dist * 0.8684 }\r\n        return dist;\r\n    }\r\n}\r\n\r\n\r\nexport function ScanSites(){\r\n\r\n    /* ***************************************************************************************** */\r\n    // Arrays and Variable set up\r\n    this.SiteList=null;\r\n    this.SearchThisList=null\r\n    this.GlobalCluster=[]\r\n    this.GlobalCenterpoints=[]\r\n    this.CatchNoLongLat=[]\r\n    this.clusterCount=0\r\n    this.ProcessPointer=0;\r\n\r\n    this.ScanAreas=[\r\n        { name:'SameBuilding',  range: [0,0.2], allocation:0.4, maxAllocation:null, feather:0.1,restrict:[] },\r\n        { name:'CBD',           range: [0,2],   allocation:0.4, maxAllocation:null, feather:10, restrict:[]   },\r\n        { name:'InnerCity',     range: [0,10],  allocation:0.4, maxAllocation:null, feather:5,  restrict:[]   },\r\n        { name:'Metro',         range: [0,50],  allocation:0.4, maxAllocation:1, feather:1 , restrict:[]  },\r\n        { name:'OuterMetro',    range: [0,100], allocation:0.4, maxAllocation:1, feather:0 , restrict:[]  },\r\n        { name:'Regional',      range: [0,200], allocation:0.4, maxAllocation:1, feather:0 , restrict:[[7000,7999]]  },\r\n        { name:'Remote',        range: [0,500], allocation:0.4, maxAllocation:1, feather:0 , restrict:[[7000,7999]]  },\r\n        { name:'ExtremeRemote', range: [0,2000],allocation:0.4, maxAllocation:1, feather:0 , restrict:[[7000,7999]] },\r\n    ]\r\n   \r\n\r\n\r\n\r\n    /* ***************************************************************************************** */\r\n    // AUX Functions\r\n    /* ***************************************************************************************** */\r\n    this.JSONparse = ()=>{\r\n    \r\n        this.SiteList.map((site,i)=>{\r\n            if(typeof site.siteweighting === 'string')\r\n                site.siteweighting = orderBy(JSON.parse(site.siteweighting), ['name'], ['asc', 'desc']); \r\n            else\r\n                site.siteweighting = orderBy(site.siteweighting, ['name'], ['asc', 'desc']);\r\n        })\r\n        this.SiteList = orderBy(this.SiteList, item => item.count[0].WorkOrders, ['desc']);\r\n        this.SearchThisList = JSON.parse(JSON.stringify(this.SiteList));\r\n    }\r\n\r\n\r\n    this.CheckGlobalKeys=(NameKey)=>{\r\n        if(this.GlobalCluster[NameKey] === undefined)\r\n            this.GlobalCluster[NameKey] = []\r\n    }\r\n\r\n\r\n\r\n\r\n    /* ***************************************************************************************** */\r\n    // Rules\r\n    /* ***************************************************************************************** */\r\n\r\n    this.ArrayState = ()=>{\r\n        if((this.ScanAreas.length-1) === this.ProcessPointer || this.SearchThisList.length  === 0){\r\n            console.log(\"SCAN COMPLETE\")\r\n            this.Global();\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n    this.PointerState=(int)=>{\r\n        if(int === (this.SearchThisList.length-1) && int > 0){\r\n            console.log(\"Int and Arr are the Same\")\r\n            this.ProcessPointer = this.ProcessPointer + 1\r\n            this.ProcessScan(this.ScanAreas[this.ProcessPointer], 0);\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    // Rule : is Site in radius Rule\r\n    this.IsInDistance=(SiteInFocus,site,Range)=>{\r\n        let Distance = distancetoPoint(SiteInFocus.lat, SiteInFocus.long, site.lat,site.long, \"K\")\r\n\r\n        if( Distance === 0 || Distance >= Range.range[0] && Distance <= Range.range[1] || (Distance-((Range.feather/100)*Distance)) <= Range.range[1]) \r\n            return true\r\n        else\r\n            return false\r\n    }\r\n\r\n\r\n    // Rule : Restrict Postcode if in restricted Category\r\n    this.sitePostCodeCheck = (postcode,region, int)=>{\r\n        let Retrict = false\r\n\r\n            region.restrict.map((range,i)=>{ Retrict = inRange(postcode, range[0], range[1])})\r\n        \r\n            if(!Retrict)\r\n                return Retrict;\r\n            else\r\n                this.ProcessScan(this.ScanAreas[this.ProcessPointer], (int+1));\r\n                return Retrict;\r\n        \r\n    }\r\n\r\n    // check cluster integity\r\n    this.clusterintegrity =(SiteCluster)=>{\r\n        // check to see if the cluster should be handed over to a quota\r\n        if(SiteCluster.length === 0)\r\n           return false\r\n        else\r\n            return true\r\n    }\r\n\r\n\r\n    // Cluster Rules\r\n\r\n\r\n    this.ClusterQuota = (cluster, int)=>{\r\n        let resourceQuota=[]\r\n        let MaxAllocation = this.ScanAreas[this.ProcessPointer].maxAllocation;\r\n        cluster.map((site,i)=>{\r\n            site.siteweighting.map((weight,ii)=>{  \r\n                \r\n                if(MaxAllocation === null){\r\n                    resourceQuota.push(weight[this.ScanAreas[this.ProcessPointer].name]) \r\n                }else{\r\n                    if(resourceQuota.reduce((a, b) => a + b, 0) < this.ScanAreas[this.ProcessPointer].maxAllocation){\r\n                        resourceQuota.push(weight[this.ScanAreas[this.ProcessPointer].name]) \r\n                    }\r\n                    else{\r\n                        console.log(\"Max Quota Hit for this cluster in this Category. remove the existing sites\")\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\r\n        if(resourceQuota.reduce((a, b) => a + b, 0) >=  this.ScanAreas[this.ProcessPointer].allocation){\r\n           //console.log(\"resourceQuota\", resourceQuota.reduce((a, b) => a + b, 0), this.ScanAreas[this.ProcessPointer].name, this.ScanAreas[this.ProcessPointer].allocation)\r\n            return resourceQuota.reduce((a, b) => a + b, 0)\r\n        }else{\r\n            //console.log(\"Cluster Failed to reach min resources\")\r\n            this.ProcessScan(this.ScanAreas[this.ProcessPointer], (int+1));\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /* ***************************************************************************************** */\r\n    // Power Functions \r\n    // Start Here\r\n    this.Search=()=>{\r\n        console.log(\"Begin Marker Search\")\r\n        // 1. OrderSites on site weighting\r\n        this.JSONparse();\r\n        // 2,\r\n        this.ProcessScan(this.ScanAreas[this.ProcessPointer], 0);\r\n        // 3 Rules\r\n            // Site Rules\r\n            // CLuster Rules\r\n            // State of Search Array\r\n    }\r\n    \r\n\r\n    this.ProcessScan = (Range, int)=>{\r\n\r\n        // Scan Function Variables\r\n        let SiteCluster=[]\r\n        let CenterPoints=[]\r\n        \r\n\r\n        // Scan State Rules\r\n        // If State Complete\r\n        if(this.ArrayState())   \r\n            return true\r\n        // If Pointer exhusted\r\n        if(this.PointerState(int))\r\n            return true\r\n      \r\n        // Data Collection House Keeping\r\n            // check to see if region exists in this.global\r\n            this.CheckGlobalKeys(Range.name);\r\n\r\n\r\n        let SiteInFocus = this.SearchThisList[int];\r\n       \r\n        if(SiteInFocus.combined != null){\r\n            \r\n            // Rule. Check if post code is restricted to the current scan category\r\n            if(this.sitePostCodeCheck(SiteInFocus.postcode.name, Range, int))\r\n                return false\r\n\r\n            // Create an instance of a cluster center point, should cluster exist\r\n            CenterPoints.push({\r\n                name:`${SiteInFocus.region.name}-${Range.name}-${SiteInFocus.name}`,\r\n                center:{ lat: SiteInFocus.lat, lng: SiteInFocus.long },\r\n                range:Range.range[1],\r\n                scanCategory:Range.name,\r\n                feather:Range.feather,\r\n                region:SiteInFocus.region.name,\r\n                postcode:SiteInFocus.postcode.name\r\n            })\r\n\r\n\r\n            this.SearchThisList.map((site,ii)=>{\r\n               \r\n                // 1 rule for sites.\r\n                // Do they fit into the Radius of the center point?\r\n                if(this.IsInDistance(SiteInFocus, site, Range))\r\n                    SiteCluster.push(site)\r\n                else\r\n                    return false\r\n            })\r\n\r\n\r\n        }\r\n        else{\r\n            // CATCH ALL SITES NOT INCLUDED IN SCAN\r\n            let NoLngLat = findIndex(this.CatchNoLongLat, function(o) { return o.name == SiteInFocus.name; });\r\n            if(NoLngLat === -1)\r\n                this.CatchNoLongLat.push(SiteInFocus)\r\n            \r\n            \r\n        }\r\n\r\n        // should i push to Quota or fail this cluster nad move on?\r\n        if(this.clusterintegrity(SiteCluster))\r\n            this.findResourceQuota(SiteCluster, CenterPoints, int);\r\n        else\r\n            this.ProcessScan(this.ScanAreas[this.ProcessPointer], (int+1));\r\n       \r\n    }\r\n\r\n\r\n\r\n    this.findResourceQuota=(cluster, CenterPoints, int)=>{\r\n            //let resourceQuota=[]\r\n\r\n             // is cluster Quote over the current threshold?\r\n             let QuoteThreshold  = this.ClusterQuota(cluster, int) \r\n            \r\n             if(QuoteThreshold)\r\n                {\r\n                \r\n                    CenterPoints[0].resourceQuota = QuoteThreshold;\r\n                    CenterPoints[0].sites = cluster;\r\n                    \r\n                    this.GlobalCluster[this.ScanAreas[this.ProcessPointer].name].push(cluster);\r\n                    this.GlobalCenterpoints.push(CenterPoints[0])\r\n                    \r\n                    this.removeSites(cluster)\r\n             }\r\n\r\n           return true;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    this.removeSites=(cluster)=>{\r\n        //console.log(\"Cluster REMOVAL\")\r\n        \r\n        \r\n        let Index;\r\n        cluster.map((site,i)=>{\r\n            //console.log(site);\r\n            Index = findIndex(this.SearchThisList, function(o) { return o.name == site.name; });\r\n            //console.log(\"Index\", Index, site.name)\r\n            this.SearchThisList.splice(Index , 1)\r\n        })\r\n        this.ProcessScan(this.ScanAreas[this.ProcessPointer], 0);\r\n        //console.log(this.GlobalCluster);\r\n        //console.log(this.SearchThisList.length);\r\n        \r\n    }\r\n\r\n    this.Global = ()=>{\r\n\r\n        console.log(\"this.GlobalCluster\", this.GlobalCluster.length);\r\n        console.log(\"this.CatchNoLongLat\", this.CatchNoLongLat.length);\r\n        console.log(\"this.SearchThisList\", this.SearchThisList.length);\r\n\r\n\r\n        store.dispatch({ type:'SCANSTATE', payload:false}); \r\n        store.dispatch({ type:'STOREMARKERRESULTS', payload:this.GlobalCluster});\r\n        store.dispatch({ type:'STOREMARKERCENTERPOINTS', payload:this.GlobalCenterpoints}); \r\n        store.dispatch({ type:'STORERESIDUALMARKERS', payload:this.SearchThisList});\r\n        store.dispatch({ type:'STORENOLONGLAT', payload:this.CatchNoLongLat}); \r\n        \r\n        \r\n        \r\n    }\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleScanProcess.js",["741"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\authUser.js",["742"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Landing\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\AuthLogin\\index.js",["743"],"import React, { useEffect } from 'react';\r\nimport {useContext_AUTH_FULL} from \"../../../Context/AUTH\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {LogoMain} from \"../../../Assets/logo\"\r\nimport LoginForm from \"../../../venders/MaterialUI/Forms/LoginForm\"\r\n\r\n\r\nconst AuthLogin = ()=>{\r\n\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const Pushhistory = useHistory();\r\n    \r\n \r\n    \r\n    useEffect(()=>{ if(AUTH.jwt !== false){Pushhistory.push(\"/auth\");}},[AUTH])\r\n    return(\r\n        <div className=\"LoginForm\">\r\n             <LogoMain />\r\n            <h1>Intact AnalytiQ</h1>\r\n \r\n            <LoginForm />\r\n           <Disclaimer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthLogin;\r\n\r\n\r\nconst Disclaimer = ()=>{\r\n    return(\r\n          <div className=\"disclaimer\">\r\n              <p>This is a prototype build of Intact Analyiq alpha v0.1 </p>\r\n              <p>Please wait whilst we fire up the Dyno's</p>\r\n          </div>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\PrimaryFeature.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Layout\\SelectRegionLayout.js",["744","745"],"import React, {useEffect, useState} from 'react'\r\n//import { useSelector } from \"react-redux\";\r\n//import store from \"../../../../store/index\"\r\n\r\n\r\nimport Controls from \"../Controls/controls\"\r\n\r\nconst SelectARegion = ()=>{\r\n\r\n    return(\r\n        <div className=\"Main\">\r\n            <Controls />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectARegion;\r\n//\r\n//<Controls  STRAPI={STRAPI} Filters={Filters} onHandle={onHandle}/>","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Layout\\ScanResultsLayout.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Layout\\ScanResults.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Layout\\Header.js",["746","747","748","749","750"],"import React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_STRAPI_FULL} from \"../../../../../Context/STRAPI\";\r\nimport {useContext_STRAPI_Regions} from \"../../../../../Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"../../../../../Context/UX\";\r\nimport {SelectedRegion, CreateMapParameters} from \"../../../../../actions/HandleUX\"\r\nimport { findIndex} from 'lodash'; \r\nconst FeatureHeader = ()=>{\r\n    const STRAPI = useContext_STRAPI_FULL()\r\n    const Regions = useContext_STRAPI_Regions();\r\n\r\n    const UX = useContext_UX_FULL()\r\n    //const [SelectedRegion,setSelectedRegion] = useState(UX.SelectedArea);\r\n\r\n   const  [WorkOrderCount,setWorkOrderCount ] = useState(0)\r\n   const  [Sites,setSites ] = useState(0)\r\n   const  [Cities,setCities ] = useState(0)\r\n  \r\n    \r\n   const WorkorderCount =()=>{\r\n       let WO=0, Cities=0, Sites=0\r\n       \r\n        UX.SelectedArea.map((region,i)=>{\r\n           \r\n            WO = WO+region.count[0].WorkOrders\r\n            Cities = Cities + region.cities.length\r\n            Sites = Sites + region.sites.length\r\n        });\r\n        setWorkOrderCount(WO)\r\n        setSites(Sites)\r\n        setCities(Cities)\r\n   }\r\n   \r\n\r\n   const handleRemove = (item)=>{\r\n        console.log(\"Remove this item\", item.id, UX.SelectedArea)\r\n        let index = findIndex( UX.SelectedArea, function(o) { return o.id === item.id; })\r\n        UX.SelectedArea.splice(index, 1);\r\n        CreateMapParameters(UX.SelectedArea)\r\n   }\r\n\r\n\r\n   useEffect(()=>{\r\n       console.log(\"UX.SelectedArea\", UX.SelectedArea)\r\n        WorkorderCount()\r\n    },[UX.MapParameters])\r\n\r\n    return( \r\n        <>\r\n        <div>\r\n                <ul className=\"RegionRoundup\">\r\n                    <li><h2>{UX.SelectedArea.length}</h2><p>Regions</p> </li>\r\n                    <li><h2>{Sites}</h2><p>Sites</p> </li>\r\n                    <li><h2>{Cities}</h2><p>Cities</p> </li>\r\n                    <li><h2>{WorkOrderCount}</h2><p>Work orders</p></li>\r\n                </ul>\r\n            </div>\r\n            \r\n        <div id=\"FeatureHeader\">\r\n            <div className=\"SelectedCenter\">\r\n                <h2> Centered Region: </h2>\r\n                <h3> {UX.AreaSelectFilter.region.name} </h3>\r\n            </div>\r\n\r\n            <div className=\"AdditionalRegions\">\r\n                <h3>Regions Included in these results</h3>\r\n                <ul className=\"RegionsInScan\">\r\n                    { UX.SelectedArea.map((region,i)=>{\r\n                          return( <li key={i}>\r\n                                    <p>{region.name}</p> \r\n                                    <button onClick={()=>{handleRemove(region)}}>Remove</button>\r\n                                </li>)  \r\n                    })}\r\n                </ul>\r\n            </div>    \r\n           \r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\nexport default FeatureHeader;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Layout\\MapFilterControls.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\controls.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\map.js",["751","752","753","754","755","756"],"import React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_UX_FULL} from \"../../../../../Context/UX\";\r\nimport {CreateMapParameters} from \"../../../../../actions/HandleUX\"\r\n\r\nimport { GoogleMap, LoadScript ,Marker} from '@react-google-maps/api';\r\n\r\n// Components\r\nimport LocationMarkers from \"./LocationMarkers\";\r\nimport PerimeterBox from \"./PerimeterBox\";\r\nimport ScanBox from \"./ScanBox\"; \r\nimport AddNewRegion from \"./AddNewRegion\";\r\n\r\nlet _ = require('lodash');\r\nconst iconBase =\"/icons/\";\r\nconst containerStyle = { height: \"600px\", width: \"auto\" };\r\nlet Targeticon = {};\r\nconst MapSwitch = ()=>{\r\n    \r\n    //const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    \r\n    // USe function pulls the Meta data from UX.SelectedArea. Its !IMPORTANT\r\n    useEffect(()=>{ CreateMapParameters(UX.SelectedArea) },[UX.AreaSelectFilter])\r\n\r\n    useEffect(()=>{ CreateMapParameters(UX.SelectedArea) },[UX.SelectedArea])\r\n    return( \r\n        <>\r\n            {\r\n                UX.MapParameters.SetMap ? <DisplayMap />:<div>Switch</div>\r\n            }\r\n        </>\r\n    )\r\n\r\n   \r\n}\r\n\r\n\r\nexport default MapSwitch;\r\n\r\n\r\n\r\nconst DisplayMap=()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const [MapParameters, setMapParameters] = useState(UX.MapParameters)\r\n    const onLoad = React.useCallback(function callback(map) {\r\n\r\n        Targeticon = {\r\n            url: iconBase + \"target.png\", // url\r\n            scaledSize: new window.google.maps.Size(50, 50), // scaled size\r\n            origin: new window.google.maps.Point(0,0), // origin\r\n            anchor: new window.google.maps.Point(25, 25) // anchor\r\n        }; \r\n\r\n                const bounds = new window.google.maps.LatLngBounds(\r\n                    //bottom left\r\n                    new window.google.maps.LatLng(MapParameters.LatLngBoundaries[0], MapParameters.LatLngBoundaries[2]),\r\n                    //top right\r\n                    new window.google.maps.LatLng(MapParameters.LatLngBoundaries[1], MapParameters.LatLngBoundaries[3])\r\n                    )\r\n                    map.fitBounds(bounds)\r\n                    //setMap(map);\r\n                \r\n      }, [])\r\n      \r\n      \r\n      const onUnmount = React.useCallback(function callback(map) {\r\n        //setMap(null)\r\n  }, []);\r\n\r\n\r\n  useEffect(()=>{\r\n      setMapParameters(UX.MapParameters);},[UX.MapParameters])\r\n\r\n    return(\r\n       <div className=\"ScanMapMain\" id=\"MainMap\">\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={{\r\n                    lat: MapParameters.BoundaryCenterPoint[0],\r\n                    lng: MapParameters.BoundaryCenterPoint[1]\r\n                  }}\r\n                zoom={MapParameters.zoom}\r\n                onLoad={onLoad}\r\n                onUnmount={onUnmount}\r\n            >\r\n            { /* Child components, such as markers, info windows, etc. */ }\r\n            <PerimeterBox />\r\n            <LocationMarkers />\r\n            <ScanBox />\r\n            <AddNewRegion />\r\n        </GoogleMap>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\n\r\n      \r\n             \r\n             \r\n\r\n\r\n      const ReverseGeoCode = (OBJ)=>{\r\n\r\n        axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${OBJ.lat},${OBJ.lng}&key=AIzaSyCfjTtkNqCy9J_CTva17nVpWqRff8CeCjI`)\r\n        .then((res)=>{ \r\n                console.log(res);\r\n                if(res.data.results.length > 0 ){\r\n                    console.log(res.formatted_address)\r\n                    setCenteredLocation(res.data.results[0].formatted_address)\r\n                }\r\n                else{\r\n                    setCenteredLocation(\"No Result Returned!\")\r\n                }\r\n                \r\n            })\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n      \r\n\r\nconst GeoSourceResources = (props)=>{\r\n\r\n\r\n\r\n    // collection infomation from Feature\r\n    const {SelectedRegion} = props\r\n    const [center,setCenter] = useState({ lat: 37.090240, lng: -95.712891 })\r\n    const [LatLngBounds, setLatLngBounds] = useState([])\r\n    const [zoom, setZoom] = useState(2)\r\n    const [Markerset, setMarkerset]= useState(null)\r\n    \r\n    // Display Map when true\r\n    const [LoadingMapDetails, setLoadingMapDetails] = useState(false)\r\n    \r\n\r\n    const findBoundary = (Data)=>{\r\n\r\n            let centerLatArray = [];\r\n            let centerLngArray = [];\r\n            Data.map((marker, i)=>{\r\n                if(!isNaN(parseFloat(marker.lat))){\r\n                    centerLatArray.push(parseFloat(marker.lat))\r\n                    centerLngArray.push(parseFloat(marker.long))\r\n                }\r\n            })\r\n\r\n            var centerLat = ((Math.min(...centerLatArray) + Math.max(...centerLatArray))/2)\r\n            var centerLng = ((Math.min(...centerLngArray) + Math.max(...centerLngArray))/2)\r\n\r\n            //console.log(centerLat);\r\n            //console.log(centerLng);\r\n            \r\n            setLatLngBounds([Math.min(...centerLatArray),Math.max(...centerLatArray),Math.min(...centerLngArray),Math.max(...centerLngArray)])\r\n            setZoom(14)\r\n            setCenter({lat:centerLat, lng:centerLng})\r\n            setLoadingMapDetails(true)\r\n          \r\n      }\r\n\r\n\r\n\r\n      useEffect(()=>{ \r\n          console.log(\"New Location Selected\")\r\n            findBoundary(SelectedRegion.sites); \r\n        }, [SelectedRegion])\r\n\r\n    return (\r\n        <div>\r\n            { LoadingMapDetails ? <DisplayMap LatLngBounds={LatLngBounds} center={center} zoom={zoom} {...props}/>: 'Loading Map'  }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\buttons\\ScanStateBtn.js",["757"],"import React, { useEffect,useState } from 'react'\r\nimport {ScanState} from \"../../../../../../actions/HandleUX\";\r\nimport {useContext_SCAN_FULL} from \"../../../../../../Context/SCAN\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst btnPara={\r\n    label:'Scan Now',\r\n    disabled:''\r\n}\r\n\r\nconst btnActivePara={\r\n    label:'Scanning',\r\n    disabled:'disabled'\r\n}\r\n\r\nconst ScanSwitch = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [btn,setbtn] = useState(btnPara)\r\n    \r\n    const handle=()=>{  \r\n        ScanState(true);\r\n        console.log(\"Scan NOW!!!!! true\");\r\n    }\r\n\r\n    useEffect(()=>{ \r\n     \r\n        console.log(SCAN.active)\r\n        if(SCAN.active)\r\n            setbtn(btnActivePara)\r\n        if(!SCAN.active)\r\n            setbtn(btnPara)\r\n\r\n    },[SCAN])\r\n    return(\r\n        <div className=\"ScanBtnContainer\">\r\n             <Button variant=\"contained\" onClick={handle} disabled={btn.disabled} >\r\n                {btn.label}\r\n            </Button>\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ScanSwitch;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectMaxWorkOrders.js",["758","759"],"import React, {useEffect, useState} from 'react'\r\n\r\n// Context\r\nimport {useContext_SCAN_FULL} from \"../../../../../../Context/SCAN\";\r\n// actions\r\nimport {HandleFilterChange} from \"../../../../../../actions/HandleUX\";\r\n\r\n// UI 3rd Party\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst  MaterialUISelectCountry = () =>{\r\n\r\n    const SCAN= useContext_SCAN_FULL();\r\n\r\n    const classes = useStyles();\r\n    const [Value, setValue] = useState(SCAN.LocationFilter.MaxOrderOrders);\r\n    const [Label, setLabel]= useState('W/O Max')\r\n    const [Disabled, setDisabled] = useState(false)\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const Radui=[500,1000, 2000, 3000, 5000, 10000, 100000, 10000000]\r\n\r\n    const handleChange = (event) => {\r\n        HandleFilterChange('CHANGEMAXWORKORDERS', event.target.value)\r\n        setValue(event.target.value)\r\n    };\r\n  \r\n    const handleClose = () => { setOpen(false); };\r\n    const handleOpen = () => { setOpen(true); };\r\n   \r\n  useEffect(()=>{},[Value]);\r\n \r\n    return (\r\n      <div>\r\n       \r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo\">{Label}</InputLabel>\r\n          <Select\r\n            labelId=\"demo\"\r\n            id=\"demo\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            value={Value}\r\n            onChange={handleChange}\r\n            disabled={Disabled}\r\n          >\r\n              {\r\n                      Radui.map((item, i)=>{\r\n                          return(\r\n                              <MenuItem key={i} value={item} >{item} </MenuItem>\r\n                             \r\n                          )\r\n                      })\r\n                  }\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default MaterialUISelectCountry;\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: 'block',\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectMinWorkOrders.js",["760","761"],"import React, {useEffect, useState} from 'react'\r\n\r\n// Context\r\nimport {useContext_SCAN_FULL} from \"../../../../../../Context/SCAN\";\r\n// actions\r\nimport {HandleFilterChange} from \"../../../../../../actions/HandleUX\";\r\n\r\n// UI 3rd Party\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst  MaterialUISelectCountry = () =>{\r\n\r\n    const SCAN= useContext_SCAN_FULL();\r\n\r\n    const classes = useStyles();\r\n    const [Value, setValue] = useState(SCAN.LocationFilter.MinWorkOrder);\r\n    const [Label, setLabel]= useState('W/O Min')\r\n    const [Disabled, setDisabled] = useState(false)\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const Radui=[0, 1,20,50,100,150,200,500,1000, 2000, 3000, 5000, 10000]\r\n\r\n    const handleChange = (event) => {\r\n        HandleFilterChange('CHANGEMINWORKORDERS', event.target.value)\r\n        setValue(event.target.value)\r\n    };\r\n  \r\n    const handleClose = () => { setOpen(false); };\r\n    const handleOpen = () => { setOpen(true); };\r\n   \r\n  useEffect(()=>{},[Value]);\r\n \r\n    return (\r\n      <div>\r\n       \r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo\">{Label}</InputLabel>\r\n          <Select\r\n            labelId=\"demo\"\r\n            id=\"demo\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            value={Value}\r\n            onChange={handleChange}\r\n            disabled={Disabled}\r\n          >\r\n              {\r\n                      Radui.map((item, i)=>{\r\n                          return(\r\n                              <MenuItem key={i} value={item} >{item} </MenuItem>\r\n                             \r\n                          )\r\n                      })\r\n                  }\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default MaterialUISelectCountry;\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: 'block',\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectMinSitesPerScan.js",["762","763"],"import React, {useEffect, useState} from 'react'\r\n\r\n// Context\r\nimport {useContext_SCAN_FULL} from \"../../../../../../Context/SCAN\";\r\n// actions\r\nimport {HandleFilterChange} from \"../../../../../../actions/HandleUX\";\r\n\r\n// UI 3rd Party\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst  MaterialUISelectCountry = () =>{\r\n\r\n    const SCAN= useContext_SCAN_FULL();\r\n\r\n    const classes = useStyles();\r\n    const [Value, setValue] = useState(SCAN.LocationFilter.minSites);\r\n    const [Label, setLabel]= useState('Min Sites')\r\n    const [Disabled, setDisabled] = useState(false)\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const Radui=[1,2,5,10,20,30,40,50]\r\n\r\n    const handleChange = (event) => {\r\n        HandleFilterChange('CHANGEMINSITES', event.target.value)\r\n        setValue(event.target.value)\r\n    };\r\n  \r\n    const handleClose = () => { setOpen(false); };\r\n    const handleOpen = () => { setOpen(true); };\r\n   \r\n  useEffect(()=>{},[Value]);\r\n \r\n    return (\r\n      <div>\r\n       \r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo\">{Label}</InputLabel>\r\n          <Select\r\n            labelId=\"demo\"\r\n            id=\"demo\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            value={Value}\r\n            onChange={handleChange}\r\n            disabled={Disabled}\r\n          >\r\n              {\r\n                      Radui.map((item, i)=>{\r\n                          return(\r\n                              <MenuItem key={i} value={item} >{item} </MenuItem>\r\n                             \r\n                          )\r\n                      })\r\n                  }\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default MaterialUISelectCountry;\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: 'block',\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectGridSpacing.js",["764","765"],"import React, {useEffect, useState} from 'react'\r\n\r\n// Context\r\nimport {useContext_SCAN_FULL} from \"../../../../../../Context/SCAN\";\r\n// actions\r\nimport {HandleFilterChange} from \"../../../../../../actions/HandleUX\";\r\n\r\n// UI 3rd Party\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst  MaterialUISelectCountry = () =>{\r\n\r\n    const SCAN= useContext_SCAN_FULL();\r\n\r\n    const classes = useStyles();\r\n    const [Value, setValue] = useState(SCAN.LocationFilter.GridSpacing);\r\n    const [Label, setLabel]= useState('Set Grid Spacing')\r\n    const [Disabled, setDisabled] = useState(false)\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const Radui=[.5,1,1.5,2,2.5,3,3.5,4,4.5,5]\r\n\r\n    const handleChange = (event) => {\r\n        HandleFilterChange('CHANGEGRIDSPACING', event.target.value)\r\n        setValue(event.target.value)\r\n    };\r\n  \r\n    const handleClose = () => { setOpen(false); };\r\n    const handleOpen = () => { setOpen(true); };\r\n   \r\n  useEffect(()=>{},[Value]);\r\n \r\n    return (\r\n      <div>\r\n       \r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo\">{Label}</InputLabel>\r\n          <Select\r\n            labelId=\"demo\"\r\n            id=\"demo\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            value={Value}\r\n            onChange={handleChange}\r\n            disabled={Disabled}\r\n          >\r\n              {\r\n                      Radui.map((item, i)=>{\r\n                          return(\r\n                              <MenuItem key={i} value={item} >{item} </MenuItem>\r\n                             \r\n                          )\r\n                      })\r\n                  }\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default MaterialUISelectCountry;\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: 'block',\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectRaduis.js",["766","767"],"import React, {useEffect, useState} from 'react'\r\n\r\n// Context\r\nimport {useContext_SCAN_FULL} from \"../../../../../../Context/SCAN\";\r\n// actions\r\nimport {HandleFilterChange} from \"../../../../../../actions/HandleUX\";\r\n\r\n// UI 3rd Party\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst  MaterialUISelectCountry = () =>{\r\n\r\n    const SCAN= useContext_SCAN_FULL();\r\n\r\n    //const {STRAPI, Filters, onHandle} = props\r\n    const classes = useStyles();\r\n  \r\n    const [Value, setValue] = useState(SCAN.LocationFilter.SearchRadius);\r\n    const [Disabled, setDisabled] = useState(false)\r\n    const [open, setOpen] = useState(false);\r\n    const [Label, setLabel]= useState('Scan Radius')\r\n  \r\n  \r\n    const Radui=[.5,1,1.5,2,2.5,3,3.5,4,4.5,5]\r\n\r\n    const handleChange = (event) => {\r\n        HandleFilterChange('CHANGERADIUS', event.target.value)\r\n        setValue(event.target.value)\r\n    };\r\n  \r\n    const handleClose = () => { setOpen(false); };\r\n    const handleOpen = () => { setOpen(true); };\r\n   \r\n  useEffect(()=>{},[Value]);\r\n \r\n    return (\r\n      <div>\r\n       \r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo\">{Label}</InputLabel>\r\n          <Select\r\n            labelId=\"demo\"\r\n            id=\"demo\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            value={Value}\r\n            onChange={handleChange}\r\n            disabled={Disabled}\r\n          >\r\n              {\r\n                      Radui.map((item, i)=>{\r\n                          return(\r\n                              <MenuItem key={i} value={item} >{item} </MenuItem>\r\n                             \r\n                          )\r\n                      })\r\n                  }\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default MaterialUISelectCountry;\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: 'block',\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Results\\Results.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\ScanBox.js",["768","769","770","771","772"],"import React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_UX_FULL} from \"../../../../../Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"../../../../../Context/SCAN\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport {PreformScan} from \"../../../../../actions/GeoLocationActions\";\r\nimport { Rectangle } from '@react-google-maps/api';\r\n\r\n\r\n//\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport DeleteCluster from \"../Controls/buttons/DeleteClusterBtn\";\r\nimport ClusterMap from \"../Map/clusterMap/clustermap\"\r\n//\r\nconst RenderScan = new PreformScan();\r\n\r\nconst recOptions={\r\n    strokeColor: '#6094ff',\r\n    strokeOpacity: 1,\r\n    strokeWeight: 1.5,\r\n    fillColor: '#6094ff',\r\n    fillOpacity: 0.35,\r\n  }\r\n\r\n  const Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nconst ScanBox = ()=>{\r\n\r\n    // Dialouge Box\r\n    const [open, setOpen] = useState(false);\r\n    const [clusterId, setclusterId]= useState(null)\r\n    const [DeleteClusterRow, setDeleteClusterRow] = useState(null)\r\n\r\n\r\n    //const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [ScanResults, setScanResults] = useState([])\r\n    \r\n    // Region Grid\r\n    const [Gridpoints, setGridpoints] = useState(null)\r\n    const [GridPointer, setGridPointer] = useState(null)\r\n\r\n\r\n\r\n\r\n\r\n    const ScrolltoCluster=()=>{\r\n        console.log(clusterId)\r\n       \r\n       \r\n        setOpen(false);\r\n        setTimeout(()=>{document.getElementById(clusterId).scrollIntoView({ behavior: 'smooth' });},500)\r\n    }\r\n    const handleClickOpen = (cluster, i) => {\r\n\r\n       \r\n        setDeleteClusterRow(SCAN.Results[i])\r\n        setclusterId(cluster)\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n   const TestScan = ()=>{\r\n            RenderScan.Boundaries=UX.MapParameters.LatLngBoundaries;\r\n            RenderScan.FilterVariables = SCAN.LocationFilter\r\n            RenderScan.setGridpoints= setGridpoints;\r\n            RenderScan.setGridPointer= setGridPointer\r\n            RenderScan.TestAgainstSites =  UX.MapParameters.markers;\r\n            RenderScan.ScanResults=[]\r\n            RenderScan.setScanResults= setScanResults\r\n            RenderScan.Scan();\r\n   }\r\n\r\n   const CreateBorders = (Data)=>{\r\n\r\n    let DisplayBorderResults=[];\r\n    Data.map((border,i)=>{\r\n        let position = border.GroupedBoxBoundaryLimits;\r\n        DisplayBorderResults.push(<Rectangle key={i} onClick={()=>{handleClickOpen(`Cluster${i}`, `${i}`)}} visible={true} options={recOptions} bounds={{north: position[3],south: position[2],east: position[0],west: position[1]}} />)\r\n    })\r\n        setScanResults(DisplayBorderResults)\r\n   }\r\n\r\n\r\n    useEffect(()=>{ \r\n        //console.log('SCAN', SCAN.active) \r\n        if(SCAN.active){TestScan() }\r\n     \r\n    },[SCAN])\r\n\r\n    useEffect(()=>{ \r\n        if(SCAN.Results.length != 0 ){ CreateBorders(SCAN.Results); } },[SCAN])\r\n\r\n    return(\r\n        <>\r\n            {Gridpoints}\r\n            {GridPointer}\r\n            {ScanResults}\r\n\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Selected Cluster\"}</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    <ClusterMap Data={DeleteClusterRow} />\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={()=>{ScrolltoCluster()}} color=\"primary\">\r\n                    View to Cluster\r\n                </Button>\r\n            \r\n                <DeleteCluster  Data={DeleteClusterRow}/>\r\n                \r\n                <Button onClick={handleClose} color=\"primary\">\r\n                   Close Box\r\n                </Button>\r\n                \r\n                </DialogActions>\r\n      </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScanBox;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\AddNewRegion.js",["773","774","775","776","777","778"],"import React, {useEffect, useMemo, useState} from 'react'\r\nimport {useContext_STRAPI_Regions} from \"../../../../../Context/STRAPI\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\nimport {useContext_UX_FULL} from \"../../../../../Context/UX\";\r\nimport {SelectedRegion, CreateMapParameters} from \"../../../../../actions/HandleUX\"\r\nimport { find} from 'lodash'; \r\n\r\nconst AddNewRegion = ()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const Regions = useContext_STRAPI_Regions();\r\n    const [NewRegions, setNewRegions] = useState(null)\r\n    const [markerRemoved,setmarkerRemoved] = useState([])\r\n    \r\n    const onLoadMarker=(name)=>{\r\n       // console.log(name)\r\n    }\r\n\r\n    const OnMarkerClick=(region,e)=>{\r\n        \r\n        \r\n        setNewRegions(null);\r\n        console.log(\"Add new Region : \", region.name, region.id)\r\n       \r\n        let FindRegion = find(Regions, function(o) { return o.id === region.id; });\r\n        UX.SelectedArea.push(FindRegion);\r\n\r\n        SelectedRegion(UX.SelectedArea);\r\n        CreateMapParameters(UX.SelectedArea);\r\n        \r\n    }\r\n\r\n    const CreateAddNewRegion = (Data)=>{\r\n          \r\n       \r\n        let StoreMarkers=[]\r\n        //console.log(UX.SelectedArea, StoreMarkers);\r\n\r\n            Data.map((region,i)=>{\r\n                if(find(UX.SelectedArea, {id: region.id}) === undefined){\r\n\r\n                let Targeticon = {\r\n                    path: \"M25 1c-13.234 0-24 10.766-24 24 0 13.233 10.766 24 24 24 13.233 0 24-10.767 24-24 0-13.234-10.767-24-24-24zm3 43.75v-8.75h-6v8.75c-8.625-1.307-15.443-8.125-16.75-16.75h8.75v-6h-8.75c1.307-8.625 8.125-15.443 16.75-16.75v8.75h6v-8.75c8.625 1.307 15.443 8.125 16.75 16.75h-8.75v6h8.75c-1.307 8.625-8.125 15.443-16.75 16.75z\",\r\n                    fillColor: '#FF0000',\r\n                    fillOpacity: .9,\r\n                    anchor: new window.google.maps.Point(0,0),\r\n                    strokeWeight: 0,\r\n                    scale: 1\r\n                }; \r\n                   \r\n\r\n                StoreMarkers.push( \r\n                    <>\r\n                        <Marker\r\n                            key={i}\r\n                            onLoad={onLoadMarker(region.name)}\r\n                            title={region.name}\r\n                            label={region.name}\r\n                            icon={Targeticon}\r\n                           \r\n                            onClick={OnMarkerClick.bind(this,region)}\r\n                            position={{\r\n                                    lat: parseFloat(region.lat),\r\n                                    lng: parseFloat(region.long)\r\n                                }}\r\n                                visible={true}\r\n                        />\r\n                    </>\r\n                )\r\n\r\n                } // close lodash if\r\n            })// close Map\r\n            setNewRegions(StoreMarkers)\r\n    }\r\n\r\n\r\n    useEffect(()=>{ CreateAddNewRegion(UX.AreaSelectFilter.state.regions); },[UX.AreaSelectFilter])\r\n    useEffect(()=>{ CreateAddNewRegion(UX.AreaSelectFilter.state.regions);},[UX.MapParameters])\r\n    return(<> {NewRegions} </>)\r\n}\r\n\r\nexport default AddNewRegion;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Results\\ClusterResults.js",["779","780","781"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport{NumberReducer} from \"../../../../../actions/HandleUX\";\r\n\r\nimport DeleteClusterBtn from \"../Controls/buttons/DeleteClusterBtn\";\r\nimport BacktoMap from \"../Controls/buttons/BacktoMapBtn\";\r\nimport ClusterMap from \"../Map/clusterMap/clustermap\";\r\nimport MoreInfo from \"./MoreInfo\";\r\n\r\n\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nconst ClusterResult = (props)=>{\r\n\r\n    const {result, i} = props;\r\n    const [Multiplier, setMultiplier]= useState(1000)\r\n    const [ClusterTotal, setClusterTotal] = useState(0)\r\n\r\n\r\n    const FindClusterTotal = (result)=>{\r\n        let total=0;\r\n        result.ClusterCost.map((type,i)=>{ total = total + type[1] })\r\n        \r\n        setClusterTotal(NumberReducer(parseFloat((total*Multiplier).toFixed(2))))\r\n    }\r\n\r\n\r\n    useEffect(()=>{ FindClusterTotal(result) },[result])\r\n\r\n    return(\r\n        <>\r\n        <h3><LocationCityIcon /> Cluster { (i+1) }</h3> \r\n        <h3>Resources Required : <strong>{result.TradeTypeCount[0].length}</strong></h3>\r\n        <h3>est Cluster Cost : <strong>${ClusterTotal}</strong></h3>\r\n        <div className=\"ListResultContainer\">\r\n                <div className=\"Title\">\r\n                    \r\n                    <div className=\"metaData\">\r\n                        <BacktoMap />\r\n                        <h3> Work order Count : <strong>{result.WorkOrderCount}</strong></h3>\r\n                        <h3> Sites in this Region : <strong>{result.SiteCount}</strong></h3>\r\n                        <DeleteClusterBtn Data={result}/> \r\n                    </div>\r\n                    \r\n                </div>\r\n              \r\n                <ClusterMap Data={result}/>\r\n                <MoreInfo result={result}/>\r\n        </div>\r\n        </>\r\n    )\r\n} \r\n\r\nexport default ClusterResult;\r\n\r\n/*\r\n  <div className=\"ClusterOverview\">\r\n                    \r\n                    </div>\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\buttons\\DeleteClusterBtn.js",["782"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {useContext_SCAN_FULL} from \"../../../../../../Context/SCAN\";\r\nimport {RemoveClusterItem} from \"../../../../../../actions/HandleUX\";\r\n\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nconst ScanSwitch = (props)=>{\r\n    const {Data} = props\r\n    const SCAN = useContext_SCAN_FULL();\r\n    return(\r\n        <IconButton aria-label=\"delete\" className=\"DeleteCluster\" onClick={()=>{ RemoveClusterItem(SCAN.Results, Data.Boundary)}} >\r\n            <DeleteForeverIcon fontSize=\"inherit\" />\r\n        </IconButton>\r\n             \r\n    )\r\n}\r\n\r\nexport default ScanSwitch;\r\n\r\n/*\r\n<Button variant=\"contained\" onClick={()=>{ RemoveClusterItem(SCAN.Results, Data.Boundary)}}  >\r\n                   <DeleteForeverIcon />\r\n            </Button>\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\clusterMap\\clustermap.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\LocationMarkers.js",["783","784","785","786","787","788"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_UX_FULL} from \"../../../../../Context/UX\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\n\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n\r\n/** Loop Markers */ \r\nconst LocationMarkers = ()=>{\r\n\r\n    //const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    \r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n    const [StarMarker, setStarMarker] = useState(null)\r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name)=>{console.log(\"Marker Clicked\", name) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n        console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n        console.log(\"markers\", markers)\r\n         let MinMax = FindMinMax(markers);\r\n         let NewMarkers =    uniqBy(markers, 'combined');\r\n         let StoreMarkers=[]\r\n         \r\n         console.log('CreateMarkers', markers.length, NewMarkers.length);\r\n         \r\n         NewMarkers.map((marker, i)=>{\r\n                     let fillVariable;\r\n         \r\n                    if(!isNaN(parseFloat(marker.lat)) && marker.count[0] != null){\r\n\r\n                            //Find the WO percetage value based on highest and lowest range\r\n                            let int = ((marker.count[0].WorkOrders - MinMax[0]) * 100) / (MinMax[1] - MinMax[0])\r\n                            fillVariable = ColorMe((int.toFixed(2)/10));\r\n\r\n                            Targeticon = {\r\n                                path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                                fillColor: fillVariable,\r\n                                fillOpacity: .9,\r\n                                anchor: new window.google.maps.Point(0,0),\r\n                                strokeWeight: 0,\r\n                                scale: 1,\r\n                                zIndex:100\r\n                            }; \r\n                               \r\n\r\n                            StoreMarkers.push( \r\n                                \r\n                                    <Marker\r\n                                        key={i}\r\n                                        onLoad={onLoadMarker}\r\n                                        title={marker.name}\r\n                                        label={marker.name}\r\n                                        icon={Targeticon}\r\n                                        onClick={()=>{OnMarkerClick(marker.name)}}\r\n                                        position={{\r\n                                                lat: parseFloat(marker.lat),\r\n                                                lng: parseFloat(marker.long)\r\n                                            }}\r\n                                    />\r\n                                \r\n                            )\r\n                    }                   \r\n            })\r\n            setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{ CreateMarkers(UX.MapParameters.markers)},[UX.MapParameters])\r\n\r\n      return(  <>{DisplayMarkers} {StarMarker}</>)\r\n\r\n}\r\n\r\n\r\nexport default LocationMarkers;\r\n\r\n\r\n\r\nconst MarkerIcon  = ()=>{\r\n    return(<svg baseProfile=\"basic\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\r\n<path d=\"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\"/>\r\n</svg>)\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectStateRegion.js",["789","790"],"import React, {useEffect, useState} from 'react'\r\n\r\n// Context\r\nimport {useContext_STRAPI_Regions} from \"../../../../../../Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"../../../../../../Context/UX\";\r\n\r\n// actions\r\nimport {AreaFilter, SelectedRegion} from \"../../../../../../actions/HandleUX\";\r\n\r\n// UI 3rd Party\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport { find, orderBy} from 'lodash'; \r\n\r\n\r\n/*  SWITCH ***************** */\r\nconst SwitchOnSelect = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n  \r\n    const [Show, setShow]= useState(false);\r\n\r\n    useEffect(()=>{\r\n        UX.AreaSelectFilter.state === null ? setShow(false):setShow(true)\r\n    },[UX.AreaSelectFilter.state])\r\n\r\n    if(Show) return( <MaterialUISelectRegion />) \r\n   \r\n    return( <div> <p>Awaiting Regions.</p> </div>)    \r\n}\r\n\r\nexport default SwitchOnSelect;\r\n\r\n\r\n/* SELECT ********** */\r\n\r\nconst  MaterialUISelectRegion = () =>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const Regions = useContext_STRAPI_Regions();\r\n    const classes = useStyles();\r\n  \r\n    const [Value, setValue] = useState(UX.AreaSelectFilter.region);\r\n    const [Disabled, setDisabled] = useState(false)\r\n    const [open, setOpen] = useState(false);\r\n    const [Label, setLabel]= useState('Select Regions')\r\n  \r\n  \r\n    const handleChange = (event) => {\r\n      \r\n        let FindRegion = find(Regions, function(o) { return o.id === event.target.value.id; });\r\n        AreaFilter('AREAFILTERREGION', event.target.value);\r\n        \r\n        setValue(event.target.value);\r\n        SelectedRegion([FindRegion])\r\n    };\r\n  \r\n    const handleClose = () => { setOpen(false); };\r\n    const handleOpen = () => { setOpen(true); };\r\n   \r\n    useEffect(()=>{},[UX.AreaSelectFilter.state])\r\n    return (\r\n      <div>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo\">{Label}</InputLabel>\r\n          <Select\r\n              labelId=\"demo\"\r\n              id=\"demo\"\r\n              open={open}\r\n              onClose={handleClose}\r\n              onOpen={handleOpen}\r\n              value={Value}\r\n              onChange={handleChange}\r\n              disabled={Disabled}\r\n          >\r\n              {\r\n                \r\n                orderBy(UX.AreaSelectFilter.state.regions, ['name'], ['asc', 'desc']).map((item, i)=>{\r\n                    return(<MenuItem key={i} value={item} >{item.name} </MenuItem>)\r\n                  })\r\n                }\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n\r\n//({item.count[0].WorkOrders})\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: 'block',\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\PerimeterBox.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectStateState.js",["791","792","793"],"import React, {useEffect, useState} from 'react'\r\n\r\n// Context\r\nimport {useContext_STRAPI_States} from \"../../../../../../Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"../../../../../../Context/UX\";\r\n\r\n// actions\r\nimport {AreaFilter} from \"../../../../../../actions/HandleUX\";\r\n\r\n// UI 3rd Party\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {  orderBy} from 'lodash'; \r\nconst  MaterialUISelectState = () =>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const STATES= useContext_STRAPI_States();\r\n\r\n    //const {STRAPI, Filters, onHandle} = props\r\n    const classes = useStyles();\r\n  \r\n    const [Value, setValue] = useState(UX.AreaSelectFilter.state);\r\n    const [Disabled, setDisabled] = useState(false)\r\n    const [open, setOpen] = useState(false);\r\n    const [Label, setLabel]= useState('Select State')\r\n  \r\n  \r\n    const handleChange = (event) => {\r\n        AreaFilter('AREAFILTERSTATE', event.target.value)\r\n        setValue(event.target.value)\r\n    };\r\n  \r\n    const handleClose = () => { setOpen(false); };\r\n    const handleOpen = () => { setOpen(true); };\r\n   \r\n    useEffect(()=>{},[Value]);\r\n    useEffect(()=>{ console.log(STATES)},[])\r\n    return (\r\n      <div>\r\n       \r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo\">{Label}</InputLabel>\r\n          <Select\r\n              labelId=\"demo\"\r\n              id=\"demo\"\r\n              open={open}\r\n              onClose={handleClose}\r\n              onOpen={handleOpen}\r\n              value={Value}\r\n              onChange={handleChange}\r\n              disabled={Disabled}\r\n          >\r\n              {\r\n                \r\n              orderBy(STATES, ['name'], ['asc', 'desc']).map((item, i)=>{\r\n                    return(<MenuItem key={i} value={item} >{item.name} ({item.count[0].WorkOrders})</MenuItem>)\r\n                  })\r\n                }\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default MaterialUISelectState;\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: 'block',\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\inputs\\SelectStateCountry.js",["794","795"],"import React, {useEffect, useState} from 'react'\r\n\r\n// Context\r\nimport {useContext_STRAPI_Countries} from \"../../../../../../Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"../../../../../../Context/UX\";\r\n\r\n// actions\r\nimport {AreaFilter} from \"../../../../../../actions/HandleUX\";\r\n\r\n// UI 3rd Party\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst  MaterialUISelectCountry = () =>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const COUNTRIES= useContext_STRAPI_Countries();\r\n\r\n    //const {STRAPI, Filters, onHandle} = props\r\n    const classes = useStyles();\r\n  \r\n    const [Value, setValue] = useState(UX.AreaSelectFilter.country);\r\n    const [Disabled, setDisabled] = useState(false)\r\n    const [open, setOpen] = useState(false);\r\n    const [Label, setLabel]= useState('Country')\r\n  \r\n  \r\n    const handleChange = (event) => {\r\n        AreaFilter('AREAFILTERCOUNTRY', event.target.value)\r\n        setValue(event.target.value)\r\n    };\r\n  \r\n    const handleClose = () => { setOpen(false); };\r\n    const handleOpen = () => { setOpen(true); };\r\n   \r\n  useEffect(()=>{},[Value]);\r\n\r\n  useEffect(()=>{\r\n    console.log(COUNTRIES)\r\n  },[COUNTRIES]);\r\n \r\n    return (\r\n      <div>\r\n       \r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo\">{Label}</InputLabel>\r\n          <Select\r\n            labelId=\"demo\"\r\n            id=\"demo\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            value={Value}\r\n            onChange={handleChange}\r\n            disabled={Disabled}\r\n          >\r\n              {\r\n                      COUNTRIES.map((item, i)=>{\r\n                          return(\r\n                              <MenuItem key={i} value={item} >{item.country} ({item.count[0].WorkOrders})</MenuItem>\r\n                             \r\n                          )\r\n                      })\r\n                  }\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default MaterialUISelectCountry;\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: 'block',\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Results\\MoreInfo.js",["796"],"import React, { useEffect } from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n// COmponents\r\nimport ClusterSites from \"./MoreInfoComponents/ListSites\"\r\nimport ClusterTradeTypes from \"./MoreInfoComponents/ListTradeTypes\";\r\n\r\n\r\nimport Piechart from \"../../../../../venders/apexCharts/SimplePie\"\r\nimport BarChart from \"../../../../../venders/apexCharts/BarChart\"\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nconst MoreInfo = (props)=>{\r\n\r\n    const {result} = props\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{\r\n        //console.log(result)\r\n    },[result])\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n              className=\"MoreInfoCTA\"\r\n            >\r\n              <h3>Additional Cluster Information</h3>\r\n            </AccordionSummary>\r\n            \r\n\r\n            <AccordionDetails>\r\n                <div className=\"ListtheData\">\r\n                     <ClusterSites Data={result.Sites}/>\r\n                     <ClusterTradeTypes Data={result}/>\r\n                </div>\r\n              \r\n                <div className=\"ResultCharts\">\r\n                    <div>\r\n                        <h3>Occurances of Job type in cluster</h3>\r\n                        <Piechart Data={result.Charts.JobTypeName}/>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Work orders by Trade Type</h3>\r\n                        <Piechart Data={result.Charts.TradeType}/>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Job type totals over the year</h3>\r\n                        <BarChart Data={result.Charts.JobTypeWorkOrderCount}/>\r\n                    </div>\r\n                </div>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n      );\r\n}\r\nexport default MoreInfo;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Controls\\buttons\\BacktoMapBtn.js",["797"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nconst ScanSwitch = ()=>{\r\n    const BacktoMap = ()=>{setTimeout(()=>{document.getElementById(\"MainMap\").scrollIntoView({ behavior: 'smooth' });},500)}\r\n    return( \r\n    \r\n    <IconButton aria-label=\"To Top\" className=\"BackToTop\" onClick={()=>{ BacktoMap()}} >\r\n        <ArrowUpwardIcon fontSize=\"inherit\" />\r\n    </IconButton>\r\n    )\r\n}\r\n\r\nexport default ScanSwitch;\r\n//<Button variant=\"contained\" onClick={()=>{ BacktoMap()}}  >Back to Map</Button>\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\clusterMap\\ClusterBoundary.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\clusterMap\\ClusterScanRadius.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\clusterMap\\ScannedRegionalBoundary.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Map\\clusterMap\\ClusterMarkers.js",["798","799","800"],"import React, {useEffect, useState} from 'react'\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n\r\nimport {uniqBy} from 'lodash';\r\n\r\n\r\n/** Loop Markers */ \r\nconst LocationMarkers = (props)=>{ \r\n    const {Data} = props\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n\r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name)=>{console.log(\"Marker Clicked\", name) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[];\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n        \r\n         let MinMax = FindMinMax(markers);\r\n         let NewMarkers = uniqBy(markers, 'combined');\r\n         let StoreMarkers=[]\r\n         \r\n         //console.log('CreateMarkers', markers.length, NewMarkers.length);\r\n         \r\n         NewMarkers.map((marker, i)=>{\r\n                     let fillVariable;\r\n         \r\n                    if(!isNaN(parseFloat(marker.lat)) && marker.count[0] != null){\r\n\r\n                            //Find the WO percetage value based on highest and lowest range\r\n                            let int = ((marker.count[0].WorkOrders - MinMax[0]) * 100) / (MinMax[1] - MinMax[0])\r\n                            fillVariable = ColorMe((int.toFixed(2)/10));\r\n\r\n                            Targeticon = {\r\n                                path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                                fillColor: fillVariable,\r\n                                fillOpacity: .9,\r\n                                anchor: new window.google.maps.Point(0,0),\r\n                                strokeWeight: 0,\r\n                                scale: 1\r\n                            }; \r\n                               \r\n\r\n                            StoreMarkers.push( \r\n                                <>\r\n                                    <Marker\r\n                                        key={i}\r\n                                        onLoad={onLoadMarker}\r\n                                        title={marker.name}\r\n                                        label={marker.name}\r\n                                        icon={Targeticon}\r\n                                        onClick={()=>{OnMarkerClick(marker.name)}}\r\n                                        position={{\r\n                                                lat: parseFloat(marker.lat),\r\n                                                lng: parseFloat(marker.long)\r\n                                            }}\r\n                                    />\r\n                                </>\r\n                            )\r\n                    }                   \r\n            })\r\n            setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{ CreateMarkers(Data.Sites)},[Data])\r\n\r\n      return(  <>{DisplayMarkers}</>)\r\n\r\n}\r\n\r\n\r\nexport default LocationMarkers;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Results\\MoreInfoComponents\\ListTradeTypes.js",["801","802"],"import React, { useEffect, useState } from 'react'\r\nimport Piechart from \"../../../../../../venders/apexCharts/SimplePie\"\r\nconst ClusterTradeTypes = (props)=>{\r\n\r\n    const {Data} = props;\r\n\r\n    useEffect(()=>{ },[Data])\r\n    return(\r\n        <div className=\"LocationList\">\r\n            <h3>Work orders by Trade Type</h3>\r\n            <ul className=\"SiteBreakdown\">\r\n                {\r\n                    Data.SplitTradeTypeCount.map((trade,i)=>{\r\n                        return(\r\n                            <li key={i}>\r\n                                <div>{trade.name}</div>\r\n                                <div><strong>{ trade.count}</strong></div>\r\n                            </li>\r\n                            )\r\n                    })\r\n                }\r\n            </ul> \r\n            \r\n    </div>\r\n    )\r\n}\r\nexport default ClusterTradeTypes;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Prototype\\Components\\Results\\MoreInfoComponents\\ListSites.js",["803","804"],"import React, { useEffect, useState } from 'react'\r\n\r\nconst ClusterSites = (props)=>{\r\n\r\n    const {Data} = props;\r\n\r\n    return(\r\n        <div className=\"LocationList\">\r\n            <h3>Cluster Locations vs Work orders</h3>\r\n                <ul className=\"SiteBreakdown\">\r\n                        {\r\n                            Data.map((site,i)=>{\r\n                                return(\r\n                                    <li key={i}>\r\n                                        <div>{site.name}</div>\r\n                                        <div><strong>{site.count[0].WorkOrders}</strong></div>\r\n                                    </li>\r\n                                    )\r\n                            })\r\n                        }\r\n                </ul> \r\n        </div>\r\n    )\r\n}\r\nexport default ClusterSites;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\index.js",["805","806","807","808","809","810","811","812"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\About\\about.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Contact\\contact.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\index.js",["813","814","815","816"],"import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport PublicLayout from \"../../Template/PublicLayout\";\r\n// Components\r\nimport history from  '../../History'\r\n\r\nimport ComponentAbout from \"./About/about\";\r\nimport ComponentLanding from \"./Landing/index\"\r\nimport ComponentContact from \"./Contact/contact\";\r\nimport ComponentLogin from \"./AuthLogin/index\";\r\nimport ComponentUnAuth from \"./unAuth/UnAuth\";\r\n\r\nconst publicPath='demo'\r\nconst routes = [\r\n    { Rpath: `/${publicPath}/`, component: ComponentLogin, exact:true},\r\n   // { Rpath: `/${publicPath}/about`, component: ComponentAbout, exact:false},\r\n   // { Rpath: `/${publicPath}/contact`, component: ComponentContact, exact:false},\r\n   // { Rpath: `/${publicPath}/login`, component: ComponentLogin, exact:false},\r\n   // { Rpath: `/${publicPath}/unauthorized`, component: ComponentUnAuth, exact:false},\r\n  ];\r\n\r\n\r\nconst Landing = (props)=>{\r\n\r\n    return(\r\n\r\n                <Switch  history={history}>\r\n                    <PublicLayout>\r\n                    {\r\n                        routes.map((route, i) => (<Route key={i}  exact={route.exact} path={route.Rpath} render={()=> <route.component {... props}/> }/> ))\r\n                    }\r\n                    </PublicLayout>\r\n                </Switch> \r\n    )\r\n}\r\n\r\nexport default Landing\r\n\r\n// </Switch>\r\n/**\r\n * *\r\n *  <div className=\"InnerFrame\">\r\n            <h1>Landing Page</h1>\r\n            <h2>Asset Set List</h2>\r\n            <h3>Header 3</h3>\r\n            <p>Paragragh</p>\r\n            <ul>\r\n                <li>List item</li>\r\n                <li>List item</li>\r\n                <li>List item</li>\r\n            </ul>\r\n\r\n        <h2> For Testing </h2>\r\n            <Login />\r\n\r\n        </div>\r\n */","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\unAuth\\UnAuth.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\AUTH.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\AUTH.js",["817"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_AUTH_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_AUTH_FULL = ()=>{\r\n    return useContext(Context_AUTH_FULL)\r\n}\r\n\r\n\r\n \r\nexport const AUTHContextProvider = ({children})=>{\r\n    const AUTH = useSelector(state => state.AUTH );\r\n\r\n    useMemo(()=>{  },[AUTH]) \r\n\r\n    return(\r\n            <Context_AUTH_FULL.Provider value={AUTH}>\r\n                {children}            \r\n            </Context_AUTH_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\AuthDashboard.js",["818"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport SideBar from \"../Navigation/SideBar\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n   // width: `calc(100% - ${drawerWidth}px)`,\r\n    //marginLeft: drawerWidth,\r\n    zIndex:999\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    backgroundColor:'#ffc20e',\r\n    zIndex:99\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor:'#fff',\r\n    borderRight:'1px solid #ffc20e'\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: { \r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PermanentDrawerRight(props) {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <h1>Intact AnalytiQ </h1>\r\n            <p>Front end Portal</p>\r\n         \r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n    \r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n      \r\n        <SideBar />\r\n       \r\n      </Drawer>\r\n      \r\n      <main className=\"Auth\">  \r\n         <div className={classes.toolbar} />\r\n          <div  className=\"InnerFrame\">\r\n            {props.children}\r\n          </div>\r\n      </main>\r\n\r\n \r\n    </div>\r\n  );\r\n}\r\n/*\r\n\r\n <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n*/\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\PublicLayout.js",["819","820","821"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n\r\n// Components\r\nimport PublicNavigation from \"./Public/Navigation\"\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n   // width: `calc(100% - ${drawerWidth}px)`,\r\n    //marginLeft: drawerWidth,\r\n    zIndex:999\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    backgroundColor:'#ffc20e',\r\n    zIndex:99\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor:'#ffc20e'\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PermanentDrawerRight(props) {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <h1>Intact AnalytiQ </h1>\r\n            <p>Front end Portal</p>\r\n         \r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n    \r\n    \r\n      \r\n      <main className=\"Public\">  \r\n        <div className={classes.toolbar} />\r\n         \r\n            <div  className=\"InnerFrame\">\r\n                {props.children}\r\n            </div>\r\n\r\n            \r\n      </main>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n//    <PublicNavigation />\r\n\r\n/*\r\n\r\n  <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n      \r\n      </Drawer>\r\n\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\Public\\Navigation.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\input.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\LoginForm.js",["822"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_AUTH_FULL} from \"../../../Context/AUTH\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {StrapiAuth} from \"../../../actions/authUser\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function BasicTextFields() {\r\n    const AUTH = useContext_AUTH_FULL();\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{},[AUTH])\r\n  return (\r\n        <>\r\n            {\r\n                AUTH.process ? <Processing />:<LoginForm />\r\n            }\r\n        </>\r\n  );\r\n}\r\n\r\n\r\nconst Processing = ()=>{\r\n   \r\n    return(\r\n        <><h3>Authenticating User ...</h3></>\r\n    )\r\n}\r\n\r\nconst Error = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const ErrorTrue='There was an Error in the Username or Password when processing your details'\r\n    const ErrorFalse=''\r\n    useEffect(()=>{},[AUTH])\r\n    return(\r\n        <>{\r\n            AUTH.error ? <h3>{ErrorTrue}</h3>:<h3>{ErrorFalse}</h3>\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nconst LoginForm = ()=>{\r\n    const classes = useStyles();\r\n    const [USERNAME, setUsername] = useState('')\r\n    const [PASSWORD, setPassword] = useState('')\r\n\r\n    const handleClick=()=>{\r\n\r\n        StrapiAuth(USERNAME,PASSWORD)\r\n    }\r\n\r\n    const handleEmail=(e)=>{setUsername(e.target.value)}\r\n    const handlePassword=(e)=>{setPassword(e.target.value)}\r\n\r\n    return(\r\n        <div className=\"LoginContainer\">\r\n            <Error />\r\n            <div className=\"loginInput\">\r\n                <TextField \r\n                    id=\"outlined-basic\" \r\n                    label=\"e-mail\" \r\n                    variant=\"outlined\" \r\n                    onChange={handleEmail}\r\n                />\r\n            </div>\r\n            <div className=\"loginInput\">\r\n                <TextField\r\n                    id=\"standard-password-input\"\r\n                    label=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    variant=\"outlined\"\r\n                    onChange={handlePassword}\r\n                />\r\n            </div>\r\n            <button className=\"SelectClientBtn\" onClick={()=>{handleClick()}}>Login</button>\r\n                \r\n        </div>\r\n        )\r\n}\r\n\r\n/*\r\n\r\n<TextField id=\"standard-basic\" label=\"Standard\" />\r\n      <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Landing.js",["823"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Loading\\Loading.js",["824","825"],"import React, { useEffect } from 'react'\r\nimport {useContext_UX_FULL} from \"../../../Context/UX\";\r\nimport {LogoMainWhite} from \"../../../Assets/logo\"\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nconst Loading=()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const Pushhistory = useHistory();\r\n    useEffect(()=>{\r\n        console.log(UX)\r\n        if(UX.STRAPIRECEIVED){ Pushhistory.push(\"/demo\");}\r\n    },[UX])\r\n    return(\r\n        <div className=\"App\">\r\n            <div className=\"LoadThis\">\r\n                \r\n                <LoadingCopy />\r\n                <div className=\"loader\">\r\n                <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>\r\n                <LogoMainWhite />\r\n              <Disclaimer />\r\n            </div>\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;\r\n\r\n\r\n\r\nconst LoadingCopy=()=>{\r\n    return(\r\n      <div>\r\n           <h1>Intact AnalytiQ</h1>\r\n            <h2>Fetching Data</h2>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const Disclaimer = ()=>{\r\n      return(\r\n            <div className=\"disclaimer\">\r\n                <p>This is a prototype build of Intact Analyiq alpha v0.1 </p>\r\n                <p>Please wait whilst we fire up the Dyno's</p>\r\n            </div>\r\n      )\r\n  }","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\DataDump.js",["826","827","828","829","830","831"],"import React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_UX_FULL} from \"../../Context/UX\";\r\nimport {useContext_STRAPI_FULL} from \"../../Context/STRAPI\";\r\nimport { Label } from '@material-ui/icons';\r\nimport {FetchDataIntegrity} from \"../../actions/authUser\";\r\n\r\nimport { GoogleMap, Polygon, Circle,Marker } from '@react-google-maps/api';\r\n\r\nlet classifyPoint = require(\"robust-point-in-polygon\");\r\n\r\nconst options = {\r\n    fillColor: \"lightblue\",\r\n    fillOpacity: .1,\r\n    strokeColor: \"red\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n  }\r\n\r\n \r\n\r\nlet coordinates= \r\n    [\r\n        [\r\n            -38.20287888120297,\r\n            145.36076066919964\r\n        ],\r\n        [\r\n            -38.20264653157745,\r\n            145.35500987782163\r\n        ],\r\n        [\r\n            -38.202296857647667,\r\n            145.354647762099\r\n        ],\r\n        [\r\n            -38.202305412878751,\r\n            145.35463348535993\r\n        ],\r\n        [\r\n            -38.198232700381887,\r\n            145.35068167824556\r\n        ],\r\n        [\r\n            -38.19876103435984,\r\n            145.35007007957168\r\n        ],\r\n        [\r\n            -38.199838235120325,\r\n            145.34628309450679\r\n        ],\r\n        [\r\n            -38.198536335604921,\r\n            145.33471649944818\r\n        ],\r\n        [\r\n            -38.201417078584214,\r\n            145.33412249312326\r\n        ],\r\n        [\r\n            -38.204217855444192,\r\n            145.32920686786358\r\n        ],\r\n        [\r\n            -38.200338842255405,\r\n            145.32565779156207\r\n        ],\r\n        [\r\n            -38.199272132555535,\r\n            145.32587787506768\r\n        ],\r\n        [\r\n            -38.201134453004158,\r\n            145.31661470233047\r\n        ],\r\n        [\r\n            -38.214475206442238,\r\n            145.32226343389226\r\n        ],\r\n        [\r\n            -38.218431138769162,\r\n            145.315967848521\r\n        ],\r\n        [\r\n            -38.21547382140082,\r\n            145.30974238773044\r\n        ],\r\n        [\r\n            -38.214076302359281,\r\n            145.30878128090765\r\n        ],\r\n        [\r\n            -38.214340854096449,\r\n            145.30804743711764\r\n        ],\r\n        [\r\n            -38.210236133922869,\r\n            145.3028068714558\r\n        ],\r\n        [\r\n            -38.203207229449824,\r\n            145.30508501666245\r\n        ],\r\n        [\r\n            -38.205496343712426,\r\n            145.28497747301694\r\n        ],\r\n        [\r\n            -38.208844666297004,\r\n            145.28433771443778\r\n        ],\r\n        [\r\n            -38.208897476690623,\r\n            145.28467428888257\r\n        ],\r\n        [\r\n            -38.21287954708383,\r\n            145.28803545465016\r\n        ],\r\n        [\r\n            -38.215531515401246,\r\n            145.28298823474921\r\n        ],\r\n        [\r\n            -38.214849884462467,\r\n            145.27864454464441\r\n        ],\r\n        [\r\n            -38.211032380408426,\r\n            145.2752472396312\r\n        ],\r\n        [\r\n            -38.205934965510842,\r\n            145.27622184847118\r\n        ],\r\n        [\r\n            -38.205944305724778,\r\n            145.27518723347845\r\n        ],\r\n        [\r\n            -38.214720082574594,\r\n            145.27346916832732\r\n        ],\r\n        [\r\n            -38.217551706039849,\r\n            145.26858112298595\r\n        ],\r\n        [\r\n            -38.213695164989552,\r\n            145.26499229099571\r\n        ],\r\n        [\r\n            -38.206725558367658,\r\n            145.26635759823651\r\n        ],\r\n        [\r\n            -38.207964584423067,\r\n            145.25722421839609\r\n        ],\r\n        [\r\n            -38.210273555407106,\r\n            145.25671611357362\r\n        ],\r\n        [\r\n            -38.210456013083068,\r\n            145.25959169408486\r\n        ],\r\n        [\r\n            -38.214101301171553,\r\n            145.26351908956269\r\n        ],\r\n        [\r\n            -38.217199983956078,\r\n            145.2588986740038\r\n        ],\r\n        [\r\n            -38.216979286480438,\r\n            145.25542056674726\r\n        ],\r\n        [\r\n            -38.218260715832983,\r\n            145.25521241196955\r\n        ],\r\n        [\r\n            -38.219914492280822,\r\n            145.2475769362724\r\n        ],\r\n        [\r\n            -38.219528003039279,\r\n            145.24726687489255\r\n        ],\r\n        [\r\n            -38.220818247564083,\r\n            145.24591140463841\r\n        ],\r\n        [\r\n            -38.221825150503136,\r\n            145.24793064080239\r\n        ],\r\n        [\r\n            -38.227961981232518,\r\n            145.24665584241583\r\n        ],\r\n        [\r\n            -38.2279905295668,\r\n            145.24618087061361\r\n        ],\r\n        [\r\n            -38.229556079297943,\r\n            145.24771562069847\r\n        ],\r\n        [\r\n            -38.234043541200606,\r\n            145.24729800398887\r\n        ],\r\n        [\r\n            -38.23423449050015,\r\n            145.24159844513224\r\n        ],\r\n        [\r\n            -38.23271822723008,\r\n            145.23922639919857\r\n        ],\r\n        [\r\n            -38.238419313139381,\r\n            145.23810910271348\r\n        ],\r\n        [\r\n            -38.245228676247606,\r\n            145.23844602649794\r\n        ],\r\n        [\r\n            -38.244470081591494,\r\n            145.24739557667604\r\n        ],\r\n        [\r\n            -38.247319953738831,\r\n            145.25209818302761\r\n        ],\r\n        [\r\n            -38.251151207886977,\r\n            145.24869632106527\r\n        ],\r\n        [\r\n            -38.25570724338607,\r\n            145.21943425254597\r\n        ],\r\n        [\r\n            -38.2722179500131,\r\n            145.21976211337028\r\n        ],\r\n        [\r\n            -38.2756534067565,\r\n            145.21546171657522\r\n        ],\r\n        [\r\n            -38.275631128058464,\r\n            145.20307414288678\r\n        ],\r\n        [\r\n            -38.280518232585507,\r\n            145.2031361200151\r\n        ],\r\n        [\r\n            -38.281412948906727,\r\n            145.20739918754421\r\n        ],\r\n        [\r\n            -38.285216434680862,\r\n            145.21052421437429\r\n        ],\r\n        [\r\n            -38.285827041688904,\r\n            145.21024790418167\r\n        ],\r\n        [\r\n            -38.288848002552456,\r\n            145.21664334900825\r\n        ],\r\n        [\r\n            -38.295112530946483,\r\n            145.21403451105456\r\n        ],\r\n        [\r\n            -38.293819716461222,\r\n            145.19587265346826\r\n        ],\r\n        [\r\n            -38.306970115979574,\r\n            145.19880763790889\r\n        ],\r\n        [\r\n            -38.310765723115253,\r\n            145.19591689859274\r\n        ],\r\n        [\r\n            -38.309057832326467,\r\n            145.1907338120098\r\n        ],\r\n        [\r\n            -38.30686727404737,\r\n            145.18933980973719\r\n        ],\r\n        [\r\n            -38.309376963359327,\r\n            145.18740434524062\r\n        ],\r\n        [\r\n            -38.309336116292073,\r\n            145.18721629815\r\n        ],\r\n        [\r\n            -38.309570003147975,\r\n            145.18705973986283\r\n        ],\r\n        [\r\n            -38.311089497136649,\r\n            145.18350890798359\r\n        ],\r\n        [\r\n            -38.311161139726863,\r\n            145.17133146295285\r\n        ],\r\n        [\r\n            -38.328012479385968,\r\n            145.17132061488513\r\n        ],\r\n        [\r\n            -38.328012479147951,\r\n            145.1713200145588\r\n        ],\r\n        [\r\n            -38.328017594789145,\r\n            145.17132064098064\r\n        ],\r\n        [\r\n            -38.330397835583994,\r\n            145.16398287081878\r\n        ],\r\n        [\r\n            -38.328663765047644,\r\n            145.16281211472025\r\n        ],\r\n        [\r\n            -38.3280098899073,\r\n            145.16273212351575\r\n        ],\r\n        [\r\n            -38.328009889754178,\r\n            145.16273138472064\r\n        ],\r\n        [\r\n            -38.328003867228979,\r\n            145.16273138674404\r\n        ],\r\n        [\r\n            -38.328003647340267,\r\n            145.16273135984409\r\n        ],\r\n        [\r\n            -38.328003435618953,\r\n            145.16273138688905\r\n        ],\r\n        [\r\n            -38.327430227256343,\r\n            145.16273157945983\r\n        ],\r\n        [\r\n            -38.327454983649211,\r\n            145.14994913242276\r\n        ],\r\n        [\r\n            -38.335388541815682,\r\n            145.14995559339206\r\n        ],\r\n        [\r\n            -38.335371836806274,\r\n            145.16882553726896\r\n        ],\r\n        [\r\n            -38.338750552683358,\r\n            145.17312609166504\r\n        ],\r\n        [\r\n            -38.342137787087047,\r\n            145.16883615438772\r\n        ],\r\n        [\r\n            -38.342154497027551,\r\n            145.14996031688858\r\n        ],\r\n        [\r\n            -38.355992540447296,\r\n            145.14996836745044\r\n        ],\r\n        [\r\n            -38.359376966491268,\r\n            145.14567385418428\r\n        ],\r\n        [\r\n            -38.35599530278953,\r\n            145.14137583238679\r\n        ],\r\n        [\r\n            -38.342160678253549,\r\n            145.14136941824844\r\n        ],\r\n        [\r\n            -38.342166491146514,\r\n            145.13155509178586\r\n        ],\r\n        [\r\n            -38.347228271873092,\r\n            145.13155395411698\r\n        ],\r\n        [\r\n            -38.350353333143687,\r\n            145.12890132321624\r\n        ],\r\n        [\r\n            -38.350446046243555,\r\n            145.12851291720133\r\n        ],\r\n        [\r\n            -38.350686003803148,\r\n            145.12908438201018\r\n        ],\r\n        [\r\n            -38.356883666567306,\r\n            145.12670544100061\r\n        ],\r\n        [\r\n            -38.356891631511,\r\n            145.11570728065089\r\n        ],\r\n        [\r\n            -38.356991839752624,\r\n            145.11578261420175\r\n        ],\r\n        [\r\n            -38.361548450489806,\r\n            145.11440427979798\r\n        ],\r\n        [\r\n            -38.360652646065631,\r\n            145.10856494352984\r\n        ],\r\n        [\r\n            -38.355462006986237,\r\n            145.10388336835388\r\n        ],\r\n        [\r\n            -38.355446010189482,\r\n            145.1038938990549\r\n        ],\r\n        [\r\n            -38.355133994384609,\r\n            145.10362424850905\r\n        ],\r\n        [\r\n            -38.34219805173931,\r\n            145.09459096758883\r\n        ],\r\n        [\r\n            -38.342207113761752,\r\n            145.08012495746678\r\n        ],\r\n        [\r\n            -38.344991814794952,\r\n            145.080148525373\r\n        ],\r\n        [\r\n            -38.3449973615199,\r\n            145.08013919404769\r\n        ],\r\n        [\r\n            -38.345572577248653,\r\n            145.08008969699739\r\n        ],\r\n        [\r\n            -38.354207243550441,\r\n            145.0782392858134\r\n        ],\r\n        [\r\n            -38.3570030302851,\r\n            145.07344426922751\r\n        ],\r\n        [\r\n            -38.35332934573109,\r\n            145.06972516533389\r\n        ],\r\n        [\r\n            -38.34730441658256,\r\n            145.07045682590189\r\n        ],\r\n        [\r\n            -38.346796607681462,\r\n            145.06823279986915\r\n        ],\r\n        [\r\n            -38.341985033400192,\r\n            145.06562964455259\r\n        ],\r\n        [\r\n            -38.341556538730458,\r\n            145.06598530859986\r\n        ],\r\n        [\r\n            -38.341186592231793,\r\n            145.06053356721708\r\n        ],\r\n        [\r\n            -38.337523363462594,\r\n            145.05662639487176\r\n        ],\r\n        [\r\n            -38.334446040213855,\r\n            145.06127728918071\r\n        ],\r\n        [\r\n            -38.3352103436585,\r\n            145.07254466425712\r\n        ],\r\n        [\r\n            -38.313856029486374,\r\n            145.0794987232008\r\n        ],\r\n        [\r\n            -38.312532766649277,\r\n            145.06835500427383\r\n        ],\r\n        [\r\n            -38.320348952646469,\r\n            145.06692841902952\r\n        ],\r\n        [\r\n            -38.3213345352237,\r\n            145.05880559278711\r\n        ],\r\n        [\r\n            -38.321028406512006,\r\n            145.05866413759858\r\n        ],\r\n        [\r\n            -38.321356246800036,\r\n            145.05798434073418\r\n        ],\r\n        [\r\n            -38.321662915624415,\r\n            145.05552359182505\r\n        ],\r\n        [\r\n            -38.319565753908925,\r\n            145.03613244123622\r\n        ],\r\n        [\r\n            -38.319803291824265,\r\n            145.03646359983145\r\n        ],\r\n        [\r\n            -38.325447951871887,\r\n            145.03305466464869\r\n        ],\r\n        [\r\n            -38.3248135791294,\r\n            145.01729366755717\r\n        ],\r\n        [\r\n            -38.329401116101138,\r\n            145.01489389021688\r\n        ],\r\n        [\r\n            -38.331676234558493,\r\n            145.0350289529099\r\n        ],\r\n        [\r\n            -38.335508260014926,\r\n            145.03866547718022\r\n        ],\r\n        [\r\n            -38.338372611917535,\r\n            145.0338001657309\r\n        ],\r\n        [\r\n            -38.335974562018137,\r\n            145.01257807867188\r\n        ],\r\n        [\r\n            -38.347975361271075,\r\n            145.0108115021381\r\n        ],\r\n        [\r\n            -38.35095202581806,\r\n            145.00608007779311\r\n        ],\r\n        [\r\n            -38.347244976227422,\r\n            145.00227033865107\r\n        ],\r\n        [\r\n            -38.344220252659184,\r\n            145.00266609216024\r\n        ],\r\n        [\r\n            -38.344596383255109,\r\n            145.00208171158567\r\n        ],\r\n        [\r\n            -38.34416685412112,\r\n            144.99665884982838\r\n        ],\r\n        [\r\n            -38.341772672274111,\r\n            144.99540709964853\r\n        ],\r\n        [\r\n            -38.34126151335574,\r\n            144.99547240513368\r\n        ],\r\n        [\r\n            -38.3412597701498,\r\n            144.99545817751132\r\n        ],\r\n        [\r\n            -38.341255274084496,\r\n            144.9954590729815\r\n        ],\r\n        [\r\n            -38.341253321231939,\r\n            144.99545946192646\r\n        ],\r\n        [\r\n            -38.334555000661631,\r\n            144.99679342490992\r\n        ],\r\n        [\r\n            -38.334336191074186,\r\n            144.99437883189589\r\n        ],\r\n        [\r\n            -38.334607457881752,\r\n            144.9934987710752\r\n        ],\r\n        [\r\n            -38.34460445377767,\r\n            144.99165232675639\r\n        ],\r\n        [\r\n            -38.347503926540611,\r\n            144.9873409576623\r\n        ],\r\n        [\r\n            -38.344511015103691,\r\n            144.98313380720816\r\n        ],\r\n        [\r\n            -38.337182625889056,\r\n            144.98204596445873\r\n        ],\r\n        [\r\n            -38.3401101062904,\r\n            144.97477957375995\r\n        ],\r\n        [\r\n            -38.340363403521636,\r\n            144.9768237664091\r\n        ],\r\n        [\r\n            -38.344092897815273,\r\n            144.98041796782047\r\n        ],\r\n        [\r\n            -38.347078616897448,\r\n            144.97583835931744\r\n        ],\r\n        [\r\n            -38.346439669959871,\r\n            144.96463044806498\r\n        ],\r\n        [\r\n            -38.349170099402727,\r\n            144.96275413765471\r\n        ],\r\n        [\r\n            -38.349078129788161,\r\n            144.95512363707\r\n        ],\r\n        [\r\n            -38.347904914661171,\r\n            144.95437568599976\r\n        ],\r\n        [\r\n            -38.358389395008871,\r\n            144.93016206256794\r\n        ],\r\n        [\r\n            -38.357137176364255,\r\n            144.92436982120219\r\n        ],\r\n        [\r\n            -38.352549171607244,\r\n            144.92582815671977\r\n        ],\r\n        [\r\n            -38.339340977427888,\r\n            144.95330745297579\r\n        ],\r\n        [\r\n            -38.339787267261535,\r\n            144.95528923967743\r\n        ],\r\n        [\r\n            -38.339438015199931,\r\n            144.95609539984608\r\n        ],\r\n        [\r\n            -38.336376743131837,\r\n            144.95670180715987\r\n        ],\r\n        [\r\n            -38.335460260221986,\r\n            144.96483677768919\r\n        ],\r\n        [\r\n            -38.3358447905999,\r\n            144.96500922879648\r\n        ],\r\n        [\r\n            -38.331775568197187,\r\n            144.97516493931741\r\n        ],\r\n        [\r\n            -38.331663256066719,\r\n            144.97421543274345\r\n        ],\r\n        [\r\n            -38.327932578322063,\r\n            144.97059179906387\r\n        ],\r\n        [\r\n            -38.324945774856296,\r\n            144.97519423010561\r\n        ],\r\n        [\r\n            -38.325694431027394,\r\n            144.98742152995629\r\n        ],\r\n        [\r\n            -38.313119930198084,\r\n            145.01048704477412\r\n        ],\r\n        [\r\n            -38.312947656923029,\r\n            145.01071459611907\r\n        ],\r\n        [\r\n            -38.313406907878985,\r\n            145.00473534108764\r\n        ],\r\n        [\r\n            -38.310137569964127,\r\n            145.00217721170807\r\n        ],\r\n        [\r\n            -38.308367571127334,\r\n            145.00296650626589\r\n        ],\r\n        [\r\n            -38.308297739766488,\r\n            145.00250137432377\r\n        ],\r\n        [\r\n            -38.307927961928094,\r\n            145.00123102461609\r\n        ],\r\n        [\r\n            -38.308080507403922,\r\n            144.99800647752519\r\n        ],\r\n        [\r\n            -38.303250206138259,\r\n            144.99387037103432\r\n        ],\r\n        [\r\n            -38.30306606501513,\r\n            144.99400995645397\r\n        ],\r\n        [\r\n            -38.300987637034353,\r\n            144.98655346239107\r\n        ],\r\n        [\r\n            -38.297064437494711,\r\n            144.98380601456915\r\n        ],\r\n        [\r\n            -38.29443401084481,\r\n            144.98840924932284\r\n        ],\r\n        [\r\n            -38.2951802672228,\r\n            144.9982814121251\r\n        ],\r\n        [\r\n            -38.290273647911647,\r\n            145.00023659843566\r\n        ],\r\n        [\r\n            -38.286938646371347,\r\n            144.99639237141233\r\n        ],\r\n        [\r\n            -38.290940299747881,\r\n            144.99271761696949\r\n        ],\r\n        [\r\n            -38.291819421581188,\r\n            144.98692186900516\r\n        ],\r\n        [\r\n            -38.287306583280234,\r\n            144.98549130337474\r\n        ],\r\n        [\r\n            -38.269640808541347,\r\n            144.99822445101341\r\n        ],\r\n        [\r\n            -38.268131048261296,\r\n            145.00046540443392\r\n        ],\r\n        [\r\n            -38.265673115060366,\r\n            145.00890438892768\r\n        ],\r\n        [\r\n            -38.250557791805434,\r\n            145.02333309954855\r\n        ],\r\n        [\r\n            -38.229760266816733,\r\n            145.02198884706107\r\n        ],\r\n        [\r\n            -38.228548061796353,\r\n            145.02219164069422\r\n        ],\r\n        [\r\n            -38.211453005463056,\r\n            145.02926009425246\r\n        ],\r\n        [\r\n            -38.209138000264311,\r\n            145.03387995137797\r\n        ],\r\n        [\r\n            -38.210273147148655,\r\n            145.0453095861167\r\n        ],\r\n        [\r\n            -38.203335514481829,\r\n            145.05340268716233\r\n        ],\r\n        [\r\n            -38.205619718382565,\r\n            145.06085671254542\r\n        ],\r\n        [\r\n            -38.2096644306032,\r\n            145.06085145494322\r\n        ],\r\n        [\r\n            -38.210090080892734,\r\n            145.06362022072216\r\n        ],\r\n        [\r\n            -38.208420064419023,\r\n            145.06576111561822\r\n        ],\r\n        [\r\n            -38.201179953633158,\r\n            145.06015674807341\r\n        ],\r\n        [\r\n            -38.196533634857651,\r\n            145.06160245350026\r\n        ],\r\n        [\r\n            -38.197674331801991,\r\n            145.06749027648124\r\n        ],\r\n        [\r\n            -38.203535004233231,\r\n            145.07202734453597\r\n        ],\r\n        [\r\n            -38.20267581794495,\r\n            145.07312983090625\r\n        ],\r\n        [\r\n            -38.196108247902849,\r\n            145.06934017868571\r\n        ],\r\n        [\r\n            -38.191562797328764,\r\n            145.07169364615052\r\n        ],\r\n        [\r\n            -38.190575796103339,\r\n            145.07493677711082\r\n        ],\r\n        [\r\n            -38.180604650808839,\r\n            145.07276010723697\r\n        ],\r\n        [\r\n            -38.179502383961029,\r\n            145.07572500147657\r\n        ],\r\n        [\r\n            -38.177732455527313,\r\n            145.07462404110447\r\n        ],\r\n        [\r\n            -38.173693861326491,\r\n            145.07825335016713\r\n        ],\r\n        [\r\n            -38.172700185764782,\r\n            145.07786778531994\r\n        ],\r\n        [\r\n            -38.168346006384091,\r\n            145.08160352909439\r\n        ],\r\n        [\r\n            -38.168363933372355,\r\n            145.08184736316522\r\n        ],\r\n        [\r\n            -38.164271164940942,\r\n            145.08379925118072\r\n        ],\r\n        [\r\n            -38.162093446908514,\r\n            145.08830176156283\r\n        ],\r\n        [\r\n            -38.16272146199568,\r\n            145.09529873748104\r\n        ],\r\n        [\r\n            -38.160367860204623,\r\n            145.09579099608317\r\n        ],\r\n        [\r\n            -38.144591447049841,\r\n            145.11493795805166\r\n        ],\r\n        [\r\n            -38.128852136315409,\r\n            145.11986766823574\r\n        ],\r\n        [\r\n            -38.092176144436046,\r\n            145.12121471301873\r\n        ],\r\n        [\r\n            -38.061787019280231,\r\n            145.11504058202996\r\n        ],\r\n        [\r\n            -38.02572205430112,\r\n            145.09623833049167\r\n        ],\r\n        [\r\n            -38.0110975569593,\r\n            145.08483225398919\r\n        ],\r\n        [\r\n            -37.990504915937642,\r\n            145.05407432852837\r\n        ],\r\n        [\r\n            -37.997954541576583,\r\n            145.04068956319918\r\n        ],\r\n        [\r\n            -37.997960864246537,\r\n            145.04067820092564\r\n        ],\r\n        [\r\n            -37.998048690231606,\r\n            145.04052037118018\r\n        ],\r\n        [\r\n            -37.998423136528935,\r\n            145.03643789565288\r\n        ],\r\n        [\r\n            -37.996657261386119,\r\n            145.03090149768147\r\n        ],\r\n        [\r\n            -37.992603339554314,\r\n            145.02839729640306\r\n        ],\r\n        [\r\n            -37.990185642427051,\r\n            145.03321163215614\r\n        ],\r\n        [\r\n            -37.990258713518827,\r\n            145.03355610418069\r\n        ],\r\n        [\r\n            -37.987565074605783,\r\n            145.03515340348557\r\n        ],\r\n        [\r\n            -37.983672156303626,\r\n            145.04290338724974\r\n        ],\r\n        [\r\n            -37.980899887835434,\r\n            145.03951264723349\r\n        ],\r\n        [\r\n            -37.975173902067382,\r\n            145.04255084645112\r\n        ],\r\n        [\r\n            -37.975115401408523,\r\n            145.04957957263005\r\n        ],\r\n        [\r\n            -37.968952666776708,\r\n            145.0507148274296\r\n        ],\r\n        [\r\n            -37.967602013206488,\r\n            145.04622795139119\r\n        ],\r\n        [\r\n            -37.961103572112243,\r\n            145.0470736454794\r\n        ],\r\n        [\r\n            -37.960815874754957,\r\n            145.04933204501017\r\n        ],\r\n        [\r\n            -37.953744592402309,\r\n            145.04430284801441\r\n        ],\r\n        [\r\n            -37.949156414863339,\r\n            145.0459162705441\r\n        ],\r\n        [\r\n            -37.950392025166089,\r\n            145.05172506663453\r\n        ],\r\n        [\r\n            -37.961442104043059,\r\n            145.05992508223002\r\n        ],\r\n        [\r\n            -37.963195498332873,\r\n            145.06816440564768\r\n        ],\r\n        [\r\n            -37.955317998711344,\r\n            145.07209660370216\r\n        ],\r\n        [\r\n            -37.95428075685976,\r\n            145.07290851146755\r\n        ],\r\n        [\r\n            -37.9540726903427,\r\n            145.07325183446807\r\n        ],\r\n        [\r\n            -37.953929096933379,\r\n            145.07316460648374\r\n        ],\r\n        [\r\n            -37.947076305617422,\r\n            145.08138086835541\r\n        ],\r\n        [\r\n            -37.948658073354189,\r\n            145.08540718854519\r\n        ],\r\n        [\r\n            -37.947998887174855,\r\n            145.08653884459414\r\n        ],\r\n        [\r\n            -37.950626371684379,\r\n            145.09106060305393\r\n        ],\r\n        [\r\n            -37.9446881492553,\r\n            145.08646966459602\r\n        ],\r\n        [\r\n            -37.943539359270432,\r\n            145.0829233061435\r\n        ],\r\n        [\r\n            -37.944499592547963,\r\n            145.08209733431286\r\n        ],\r\n        [\r\n            -37.941743646393789,\r\n            145.07480211095648\r\n        ],\r\n        [\r\n            -37.938399043969092,\r\n            145.07529393724255\r\n        ],\r\n        [\r\n            -37.93764157972339,\r\n            145.07691786893812\r\n        ],\r\n        [\r\n            -37.937591304369349,\r\n            145.07694651825057\r\n        ],\r\n        [\r\n            -37.937506284196935,\r\n            145.07720792118988\r\n        ],\r\n        [\r\n            -37.935659578412782,\r\n            145.08116670754788\r\n        ],\r\n        [\r\n            -37.935938537668221,\r\n            145.08202768614856\r\n        ],\r\n        [\r\n            -37.935819765154974,\r\n            145.08239279865015\r\n        ],\r\n        [\r\n            -37.937441047042775,\r\n            145.08770624271429\r\n        ],\r\n        [\r\n            -37.937051308766769,\r\n            145.08825004929847\r\n        ],\r\n        [\r\n            -37.936421202865745,\r\n            145.09140693113312\r\n        ],\r\n        [\r\n            -37.936758897118267,\r\n            145.09437128319144\r\n        ],\r\n        [\r\n            -37.933556315626618,\r\n            145.09498825709841\r\n        ],\r\n        [\r\n            -37.930681492632935,\r\n            145.09905343079154\r\n        ],\r\n        [\r\n            -37.933309862892173,\r\n            145.1033763465079\r\n        ],\r\n        [\r\n            -37.942188838716568,\r\n            145.10595596905387\r\n        ],\r\n        [\r\n            -37.938681719198726,\r\n            145.10944126724192\r\n        ],\r\n        [\r\n            -37.93907258356694,\r\n            145.11267721370513\r\n        ],\r\n        [\r\n            -37.935627304730765,\r\n            145.1133681183926\r\n        ],\r\n        [\r\n            -37.934719384034842,\r\n            145.12145670739835\r\n        ],\r\n        [\r\n            -37.935155596447423,\r\n            145.12165140490208\r\n        ],\r\n        [\r\n            -37.935331717563479,\r\n            145.1230498307078\r\n        ],\r\n        [\r\n            -37.932793841172789,\r\n            145.12354255106894\r\n        ],\r\n        [\r\n            -37.931714490935484,\r\n            145.1221712170221\r\n        ],\r\n        [\r\n            -37.92865559338756,\r\n            145.12287934223329\r\n        ],\r\n        [\r\n            -37.928647722186447,\r\n            145.12287087710578\r\n        ],\r\n        [\r\n            -37.92625424451456,\r\n            145.12213247380217\r\n        ],\r\n        [\r\n            -37.923379826310104,\r\n            145.12262214860323\r\n        ],\r\n        [\r\n            -37.920875134722031,\r\n            145.1162899153781\r\n        ],\r\n        [\r\n            -37.919384470181718,\r\n            145.11655889924515\r\n        ],\r\n        [\r\n            -37.915516853759932,\r\n            145.10965792229169\r\n        ],\r\n        [\r\n            -37.909434347972429,\r\n            145.11137223276367\r\n        ],\r\n        [\r\n            -37.909422610205709,\r\n            145.11250463177115\r\n        ],\r\n        [\r\n            -37.898030324697054,\r\n            145.09342141686861\r\n        ],\r\n        [\r\n            -37.900091440241439,\r\n            145.09004362589641\r\n        ],\r\n        [\r\n            -37.896913071391246,\r\n            145.08320368415332\r\n        ],\r\n        [\r\n            -37.894815053792449,\r\n            145.08360768609788\r\n        ],\r\n        [\r\n            -37.891570385951994,\r\n            145.07904540159751\r\n        ],\r\n        [\r\n            -37.886622036426239,\r\n            145.07895263459434\r\n        ],\r\n        [\r\n            -37.884239532385465,\r\n            145.08210828524179\r\n        ],\r\n        [\r\n            -37.8803549503775,\r\n            145.07056024358019\r\n        ],\r\n        [\r\n            -37.880229647622251,\r\n            145.06936696217716\r\n        ],\r\n        [\r\n            -37.879584638850332,\r\n            145.06827081312855\r\n        ],\r\n        [\r\n            -37.879479968093648,\r\n            145.06795973672536\r\n        ],\r\n        [\r\n            -37.878773814767037,\r\n            145.06586116999648\r\n        ],\r\n        [\r\n            -37.876893427850739,\r\n            145.06356472712295\r\n        ],\r\n        [\r\n            -37.857038665322555,\r\n            145.05371198622808\r\n        ],\r\n        [\r\n            -37.84701274193619,\r\n            145.03685431347145\r\n        ],\r\n        [\r\n            -37.843461332082704,\r\n            145.03529984484109\r\n        ],\r\n        [\r\n            -37.8416163581904,\r\n            145.04200219664241\r\n        ],\r\n        [\r\n            -37.852208893445585,\r\n            145.05981356435109\r\n        ],\r\n        [\r\n            -37.852333999158425,\r\n            145.05998443737209\r\n        ],\r\n        [\r\n            -37.852451956057067,\r\n            145.06017528478361\r\n        ],\r\n        [\r\n            -37.852562424970024,\r\n            145.06029643035421\r\n        ],\r\n        [\r\n            -37.852658829377347,\r\n            145.06042810421343\r\n        ],\r\n        [\r\n            -37.852803578318692,\r\n            145.06056089255384\r\n        ],\r\n        [\r\n            -37.852943813436177,\r\n            145.06071468329171\r\n        ],\r\n        [\r\n            -37.853075720653706,\r\n            145.06081054955715\r\n        ],\r\n        [\r\n            -37.85319517860821,\r\n            145.06092013822143\r\n        ],\r\n        [\r\n            -37.853352749068264,\r\n            145.0610118869194\r\n        ],\r\n        [\r\n            -37.853508554566396,\r\n            145.06112512325453\r\n        ],\r\n        [\r\n            -37.873767720328168,\r\n            145.07283041972127\r\n        ],\r\n        [\r\n            -37.875222731609178,\r\n            145.08669680576793\r\n        ],\r\n        [\r\n            -37.873674658788843,\r\n            145.08790806124506\r\n        ],\r\n        [\r\n            -37.874353018831115,\r\n            145.09296402711072\r\n        ],\r\n        [\r\n            -37.871313513590906,\r\n            145.09538682736871\r\n        ],\r\n        [\r\n            -37.869729520681609,\r\n            145.09918233967718\r\n        ],\r\n        [\r\n            -37.869744198893081,\r\n            145.09962783790442\r\n        ],\r\n        [\r\n            -37.869283407600442,\r\n            145.1003196503741\r\n        ],\r\n        [\r\n            -37.8691832478841,\r\n            145.10066237091479\r\n        ],\r\n        [\r\n            -37.868984279493979,\r\n            145.10040674122598\r\n        ],\r\n        [\r\n            -37.863700291432529,\r\n            145.10475598623987\r\n        ],\r\n        [\r\n            -37.864256360616714,\r\n            145.10810017701493\r\n        ],\r\n        [\r\n            -37.864019243993333,\r\n            145.10814559003509\r\n        ],\r\n        [\r\n            -37.8624250730591,\r\n            145.11571369140231\r\n        ],\r\n        [\r\n            -37.866335654002292,\r\n            145.11964535427495\r\n        ],\r\n        [\r\n            -37.87065827661624,\r\n            145.11951262270389\r\n        ],\r\n        [\r\n            -37.8717326007157,\r\n            145.11831984360597\r\n        ],\r\n        [\r\n            -37.872051622684758,\r\n            145.11970347624788\r\n        ],\r\n        [\r\n            -37.874257051871737,\r\n            145.12185744234711\r\n        ],\r\n        [\r\n            -37.871262779935911,\r\n            145.12670685007802\r\n        ],\r\n        [\r\n            -37.871113507154824,\r\n            145.13172076502968\r\n        ],\r\n        [\r\n            -37.87147339705357,\r\n            145.13240339516159\r\n        ],\r\n        [\r\n            -37.870961042057758,\r\n            145.13230835162454\r\n        ],\r\n        [\r\n            -37.867452388536513,\r\n            145.13719778254597\r\n        ],\r\n        [\r\n            -37.868111358727482,\r\n            145.14284863144297\r\n        ],\r\n        [\r\n            -37.868121011269537,\r\n            145.14285432493062\r\n        ],\r\n        [\r\n            -37.868185471515154,\r\n            145.14339978582498\r\n        ],\r\n        [\r\n            -37.861973148724047,\r\n            145.14610655361724\r\n        ],\r\n        [\r\n            -37.859779805314673,\r\n            145.15114101670554\r\n        ],\r\n        [\r\n            -37.863547371857962,\r\n            145.15436849189251\r\n        ],\r\n        [\r\n            -37.869235270077361,\r\n            145.15333606589309\r\n        ],\r\n        [\r\n            -37.869981813928725,\r\n            145.15887973073703\r\n        ],\r\n        [\r\n            -37.870166301047142,\r\n            145.15955315485624\r\n        ],\r\n        [\r\n            -37.870160927210378,\r\n            145.15960539005488\r\n        ],\r\n        [\r\n            -37.870204659147156,\r\n            145.16043609784958\r\n        ],\r\n        [\r\n            -37.870451338648138,\r\n            145.16233227819421\r\n        ],\r\n        [\r\n            -37.864874169189427,\r\n            145.16430045662941\r\n        ],\r\n        [\r\n            -37.864492805904675,\r\n            145.1644843166471\r\n        ],\r\n        [\r\n            -37.858740788818587,\r\n            145.16469847732006\r\n        ],\r\n        [\r\n            -37.8585148501712,\r\n            145.16543430699781\r\n        ],\r\n        [\r\n            -37.8579540120035,\r\n            145.16552072684675\r\n        ],\r\n        [\r\n            -37.85705751406892,\r\n            145.15826776729077\r\n        ],\r\n        [\r\n            -37.857057302215622,\r\n            145.15826603403536\r\n        ],\r\n        [\r\n            -37.8570563886849,\r\n            145.15825866494069\r\n        ],\r\n        [\r\n            -37.853191524576559,\r\n            145.15470578754335\r\n        ],\r\n        [\r\n            -37.85037109224892,\r\n            145.15957690689362\r\n        ],\r\n        [\r\n            -37.851099767748245,\r\n            145.16553977955854\r\n        ],\r\n        [\r\n            -37.850895225301095,\r\n            145.16557547997417\r\n        ],\r\n        [\r\n            -37.849038434180521,\r\n            145.17231932456181\r\n        ],\r\n        [\r\n            -37.848808653312567,\r\n            145.17237094358305\r\n        ],\r\n        [\r\n            -37.8475228621535,\r\n            145.18012473268323\r\n        ],\r\n        [\r\n            -37.847902934398043,\r\n            145.18044636699886\r\n        ],\r\n        [\r\n            -37.847512583230312,\r\n            145.18086194675539\r\n        ],\r\n        [\r\n            -37.847527403532979,\r\n            145.18459160394997\r\n        ],\r\n        [\r\n            -37.845575417997125,\r\n            145.18509929170298\r\n        ],\r\n        [\r\n            -37.843197776088076,\r\n            145.18744728094941\r\n        ],\r\n        [\r\n            -37.843080763386453,\r\n            145.18784989465459\r\n        ],\r\n        [\r\n            -37.841834778037722,\r\n            145.18758667957863\r\n        ],\r\n        [\r\n            -37.841717673119632,\r\n            145.18729274284783\r\n        ],\r\n        [\r\n            -37.842489753232492,\r\n            145.18256269243895\r\n        ],\r\n        [\r\n            -37.838108798593467,\r\n            145.17577891211033\r\n        ],\r\n        [\r\n            -37.832113297480284,\r\n            145.17864582919029\r\n        ],\r\n        [\r\n            -37.832323793090822,\r\n            145.18580490110884\r\n        ],\r\n        [\r\n            -37.831542437216683,\r\n            145.18627945463788\r\n        ],\r\n        [\r\n            -37.83011753282981,\r\n            145.18996350248588\r\n        ],\r\n        [\r\n            -37.830139224686782,\r\n            145.19054471745943\r\n        ],\r\n        [\r\n            -37.827326241559156,\r\n            145.19031649667664\r\n        ],\r\n        [\r\n            -37.82732584142834,\r\n            145.19031646378934\r\n        ],\r\n        [\r\n            -37.827323030385386,\r\n            145.19031623616004\r\n        ],\r\n        [\r\n            -37.827322106586607,\r\n            145.19033448786678\r\n        ],\r\n        [\r\n            -37.827100351538839,\r\n            145.19030755437814\r\n        ],\r\n        [\r\n            -37.82472014979956,\r\n            145.1975953323134\r\n        ],\r\n        [\r\n            -37.826454323342084,\r\n            145.198758188921\r\n        ],\r\n        [\r\n            -37.826889948325977,\r\n            145.19881114811395\r\n        ],\r\n        [\r\n            -37.82688900538443,\r\n            145.19882951117148\r\n        ],\r\n        [\r\n            -37.828639199480421,\r\n            145.19897356588666\r\n        ],\r\n        [\r\n            -37.825858637893852,\r\n            145.20231903787831\r\n        ],\r\n        [\r\n            -37.825925589552511,\r\n            145.20324907470689\r\n        ],\r\n        [\r\n            -37.824631040341451,\r\n            145.20339027375098\r\n        ],\r\n        [\r\n            -37.823075878545062,\r\n            145.20605838848007\r\n        ],\r\n        [\r\n            -37.82232852347056,\r\n            145.20472562718535\r\n        ],\r\n        [\r\n            -37.820306223726476,\r\n            145.20491908579669\r\n        ],\r\n        [\r\n            -37.819806799693453,\r\n            145.19344481946914\r\n        ],\r\n        [\r\n            -37.816288908042495,\r\n            145.18941953895794\r\n        ],\r\n        [\r\n            -37.81304667887494,\r\n            145.19379703607018\r\n        ],\r\n        [\r\n            -37.813303411420016,\r\n            145.20578427973084\r\n        ],\r\n        [\r\n            -37.812390064529311,\r\n            145.2067581942398\r\n        ],\r\n        [\r\n            -37.803975321644735,\r\n            145.19244867872297\r\n        ],\r\n        [\r\n            -37.806768309620978,\r\n            145.1698829564086\r\n        ],\r\n        [\r\n            -37.803972727818788,\r\n            145.16501278309528\r\n        ],\r\n        [\r\n            -37.800090817648,\r\n            145.16850479035057\r\n        ],\r\n        [\r\n            -37.796964797859374,\r\n            145.19180944090959\r\n        ],\r\n        [\r\n            -37.797207094213441,\r\n            145.19425501891769\r\n        ],\r\n        [\r\n            -37.7973853242726,\r\n            145.19476578920506\r\n        ],\r\n        [\r\n            -37.7975118484664,\r\n            145.19512838656669\r\n        ],\r\n        [\r\n            -37.797704243892547,\r\n            145.19610705728053\r\n        ],\r\n        [\r\n            -37.79807076838663,\r\n            145.19673021136651\r\n        ],\r\n        [\r\n            -37.802370078898981,\r\n            145.20905461946657\r\n        ],\r\n        [\r\n            -37.803197685549733,\r\n            145.21049368747842\r\n        ],\r\n        [\r\n            -37.808502019311554,\r\n            145.21657219225389\r\n        ],\r\n        [\r\n            -37.808330383422657,\r\n            145.21679460226514\r\n        ],\r\n        [\r\n            -37.807971912902445,\r\n            145.21748871544168\r\n        ],\r\n        [\r\n            -37.8077897420681,\r\n            145.21805941062917\r\n        ],\r\n        [\r\n            -37.807605529857447,\r\n            145.2179661920957\r\n        ],\r\n        [\r\n            -37.802614717361308,\r\n            145.22392346243961\r\n        ],\r\n        [\r\n            -37.80374911727106,\r\n            145.2310274461405\r\n        ],\r\n        [\r\n            -37.8060781697875,\r\n            145.23213086116795\r\n        ],\r\n        [\r\n            -37.803922864912629,\r\n            145.24071805252464\r\n        ],\r\n        [\r\n            -37.806073537608661,\r\n            145.24605852693603\r\n        ],\r\n        [\r\n            -37.810339859175464,\r\n            145.24342131158096\r\n        ],\r\n        [\r\n            -37.813574345365858,\r\n            145.23165703766321\r\n        ],\r\n        [\r\n            -37.814885249125076,\r\n            145.23161921577253\r\n        ],\r\n        [\r\n            -37.81760998700728,\r\n            145.22496462366746\r\n        ],\r\n        [\r\n            -37.817457876256931,\r\n            145.22473351159624\r\n        ],\r\n        [\r\n            -37.8201936448072,\r\n            145.22396287029747\r\n        ],\r\n        [\r\n            -37.820319001056951,\r\n            145.2211178816172\r\n        ],\r\n        [\r\n            -37.8289209397028,\r\n            145.22157835046502\r\n        ],\r\n        [\r\n            -37.828920785368304,\r\n            145.22163707744292\r\n        ],\r\n        [\r\n            -37.824422249999863,\r\n            145.22321144492071\r\n        ],\r\n        [\r\n            -37.82198286479499,\r\n            145.2280251687348\r\n        ],\r\n        [\r\n            -37.82552897080533,\r\n            145.23158099479784\r\n        ],\r\n        [\r\n            -37.828904424069044,\r\n            145.23131562323962\r\n        ],\r\n        [\r\n            -37.8289160354719,\r\n            145.23870025827955\r\n        ],\r\n        [\r\n            -37.8289161058624,\r\n            145.23870025810552\r\n        ],\r\n        [\r\n            -37.828916063358044,\r\n            145.23870081411349\r\n        ],\r\n        [\r\n            -37.829911951195491,\r\n            145.24171444318472\r\n        ],\r\n        [\r\n            -37.835618903125855,\r\n            145.23951540011745\r\n        ],\r\n        [\r\n            -37.835682235984336,\r\n            145.23868689379313\r\n        ],\r\n        [\r\n            -37.8356825667444,\r\n            145.23868689330351\r\n        ],\r\n        [\r\n            -37.835677325479224,\r\n            145.23314929812872\r\n        ],\r\n        [\r\n            -37.841750331334687,\r\n            145.23551184595388\r\n        ],\r\n        [\r\n            -37.842514414842931,\r\n            145.23536793715078\r\n        ],\r\n        [\r\n            -37.8413226525023,\r\n            145.24183443783494\r\n        ],\r\n        [\r\n            -37.843735399978982,\r\n            145.2469272068318\r\n        ],\r\n        [\r\n            -37.847852024859272,\r\n            145.24405565011202\r\n        ],\r\n        [\r\n            -37.8481399487317,\r\n            145.24285817880011\r\n        ],\r\n        [\r\n            -37.849944286471292,\r\n            145.24607633420212\r\n        ],\r\n        [\r\n            -37.853160990073427,\r\n            145.24782615501286\r\n        ],\r\n        [\r\n            -37.85337479148054,\r\n            145.24773728788153\r\n        ],\r\n        [\r\n            -37.853450395725567,\r\n            145.24772888099392\r\n        ],\r\n        [\r\n            -37.854085945664593,\r\n            145.24749496086656\r\n        ],\r\n        [\r\n            -37.854103385593952,\r\n            145.24748605201808\r\n        ],\r\n        [\r\n            -37.854103786080941,\r\n            145.2474858474371\r\n        ],\r\n        [\r\n            -37.866473271727131,\r\n            145.2411659880778\r\n        ],\r\n        [\r\n            -37.870630286004108,\r\n            145.2518935114359\r\n        ],\r\n        [\r\n            -37.876829765080124,\r\n            145.25151539655405\r\n        ],\r\n        [\r\n            -37.876993365119795,\r\n            145.25096461993365\r\n        ],\r\n        [\r\n            -37.883271076081932,\r\n            145.2489911840301\r\n        ],\r\n        [\r\n            -37.884252547134594,\r\n            145.25331829491554\r\n        ],\r\n        [\r\n            -37.883838714670155,\r\n            145.25331607589763\r\n        ],\r\n        [\r\n            -37.880478155728767,\r\n            145.25695501639106\r\n        ],\r\n        [\r\n            -37.882850821851449,\r\n            145.26167283922251\r\n        ],\r\n        [\r\n            -37.884394373704836,\r\n            145.26226298347186\r\n        ],\r\n        [\r\n            -37.883621020709342,\r\n            145.26353742118133\r\n        ],\r\n        [\r\n            -37.884224319328453,\r\n            145.26951825474876\r\n        ],\r\n        [\r\n            -37.888966035336217,\r\n            145.26877269400211\r\n        ],\r\n        [\r\n            -37.88897675273094,\r\n            145.26875522119647\r\n        ],\r\n        [\r\n            -37.888976773126,\r\n            145.26875524106808\r\n        ],\r\n        [\r\n            -37.8889798063641,\r\n            145.26875024278883\r\n        ],\r\n        [\r\n            -37.8949122846699,\r\n            145.25907696350157\r\n        ],\r\n        [\r\n            -37.901037918314032,\r\n            145.25785122710997\r\n        ],\r\n        [\r\n            -37.90122659714941,\r\n            145.257768067345\r\n        ],\r\n        [\r\n            -37.90121887402767,\r\n            145.25781438722944\r\n        ],\r\n        [\r\n            -37.905731916402075,\r\n            145.26231893922704\r\n        ],\r\n        [\r\n            -37.9060066386407,\r\n            145.2621557393586\r\n        ],\r\n        [\r\n            -37.90584966741897,\r\n            145.26270220954933\r\n        ],\r\n        [\r\n            -37.908704026792051,\r\n            145.26775999786767\r\n        ],\r\n        [\r\n            -37.905910210853293,\r\n            145.27524279778191\r\n        ],\r\n        [\r\n            -37.910427980881195,\r\n            145.28092654838392\r\n        ],\r\n        [\r\n            -37.915098375680863,\r\n            145.27807783485582\r\n        ],\r\n        [\r\n            -37.915496699682286,\r\n            145.27903540622103\r\n        ],\r\n        [\r\n            -37.916303886673411,\r\n            145.27999888314329\r\n        ],\r\n        [\r\n            -37.917285555786961,\r\n            145.28056359198078\r\n        ],\r\n        [\r\n            -37.917350851217485,\r\n            145.28108600783378\r\n        ],\r\n        [\r\n            -37.917875474098068,\r\n            145.28251339443494\r\n        ],\r\n        [\r\n            -37.926657421010908,\r\n            145.2981860224746\r\n        ],\r\n        [\r\n            -37.93123108374072,\r\n            145.29930722878106\r\n        ],\r\n        [\r\n            -37.932354611034626,\r\n            145.29359842647651\r\n        ],\r\n        [\r\n            -37.9288957757067,\r\n            145.28583634880047\r\n        ],\r\n        [\r\n            -37.934681223578231,\r\n            145.272664194353\r\n        ],\r\n        [\r\n            -37.934786395167137,\r\n            145.26899291935214\r\n        ],\r\n        [\r\n            -37.936971211387686,\r\n            145.26986443338888\r\n        ],\r\n        [\r\n            -37.940367840617029,\r\n            145.26275841039842\r\n        ],\r\n        [\r\n            -37.93755029219173,\r\n            145.25919225409018\r\n        ],\r\n        [\r\n            -37.940012774837861,\r\n            145.25754139743688\r\n        ],\r\n        [\r\n            -37.941458781002083,\r\n            145.25295249378885\r\n        ],\r\n        [\r\n            -37.943534107489462,\r\n            145.25315292192141\r\n        ],\r\n        [\r\n            -37.945363907706572,\r\n            145.24929314054486\r\n        ],\r\n        [\r\n            -37.9461881820575,\r\n            145.24930277760441\r\n        ],\r\n        [\r\n            -37.955558810226457,\r\n            145.26661659899835\r\n        ],\r\n        [\r\n            -37.960612253687991,\r\n            145.26736310305452\r\n        ],\r\n        [\r\n            -37.960691299574876,\r\n            145.2672541274647\r\n        ],\r\n        [\r\n            -37.960642358319916,\r\n            145.26811716274034\r\n        ],\r\n        [\r\n            -37.968876048843754,\r\n            145.27348909388297\r\n        ],\r\n        [\r\n            -37.9685046992401,\r\n            145.27647692713313\r\n        ],\r\n        [\r\n            -37.969031082651377,\r\n            145.27706141187093\r\n        ],\r\n        [\r\n            -37.968903447005545,\r\n            145.27720115519293\r\n        ],\r\n        [\r\n            -37.972012717972653,\r\n            145.28433665895884\r\n        ],\r\n        [\r\n            -37.974606972687759,\r\n            145.28368358363036\r\n        ],\r\n        [\r\n            -37.975161031471629,\r\n            145.28734869808255\r\n        ],\r\n        [\r\n            -37.9751613822234,\r\n            145.28735104361363\r\n        ],\r\n        [\r\n            -37.975162644303737,\r\n            145.28735936818987\r\n        ],\r\n        [\r\n            -37.979121138744432,\r\n            145.2907491007546\r\n        ],\r\n        [\r\n            -37.981808210477588,\r\n            145.28575128439792\r\n        ],\r\n        [\r\n            -37.981313646591296,\r\n            145.28244439989805\r\n        ],\r\n        [\r\n            -37.986751223653819,\r\n            145.28131603832645\r\n        ],\r\n        [\r\n            -37.986687881161906,\r\n            145.28512352166209\r\n        ],\r\n        [\r\n            -37.989995099958563,\r\n            145.28948798151137\r\n        ],\r\n        [\r\n            -37.993452567712175,\r\n            145.28531336923149\r\n        ],\r\n        [\r\n            -37.993490632833982,\r\n            145.28322211021927\r\n        ],\r\n        [\r\n            -37.994981954633545,\r\n            145.28306351650536\r\n        ],\r\n        [\r\n            -37.996370093659536,\r\n            145.29227552887426\r\n        ],\r\n        [\r\n            -37.993081419869988,\r\n            145.2989083814976\r\n        ],\r\n        [\r\n            -37.993982719605526,\r\n            145.30467766013084\r\n        ],\r\n        [\r\n            -37.998590306467143,\r\n            145.30385162120737\r\n        ],\r\n        [\r\n            -38.001202857700207,\r\n            145.29966160563231\r\n        ],\r\n        [\r\n            -38.016481475119271,\r\n            145.31321925656184\r\n        ],\r\n        [\r\n            -38.02116915470782,\r\n            145.31219304386855\r\n        ],\r\n        [\r\n            -38.020409971916052,\r\n            145.30625615628563\r\n        ],\r\n        [\r\n            -38.010692652024581,\r\n            145.29721265415481\r\n        ],\r\n        [\r\n            -38.018942630651459,\r\n            145.30258088571276\r\n        ],\r\n        [\r\n            -38.023152727525833,\r\n            145.29614842475189\r\n        ],\r\n        [\r\n            -38.016994980814864,\r\n            145.2860453582029\r\n        ],\r\n        [\r\n            -38.017264445835316,\r\n            145.28318720752992\r\n        ],\r\n        [\r\n            -38.017786491908588,\r\n            145.28250389381054\r\n        ],\r\n        [\r\n            -38.018270243103011,\r\n            145.28691240147575\r\n        ],\r\n        [\r\n            -38.022733941664313,\r\n            145.29035867881706\r\n        ],\r\n        [\r\n            -38.022841641551672,\r\n            145.29029567305892\r\n        ],\r\n        [\r\n            -38.02287439924573,\r\n            145.29054540413225\r\n        ],\r\n        [\r\n            -38.026365245867517,\r\n            145.293703149791\r\n        ],\r\n        [\r\n            -38.026986916756933,\r\n            145.29357284403622\r\n        ],\r\n        [\r\n            -38.027230250383539,\r\n            145.29926501360282\r\n        ],\r\n        [\r\n            -38.03064033771696,\r\n            145.30330940490597\r\n        ],\r\n        [\r\n            -38.033989424717845,\r\n            145.29918415703941\r\n        ],\r\n        [\r\n            -38.034134155067868,\r\n            145.29398273439656\r\n        ],\r\n        [\r\n            -38.036679956266177,\r\n            145.29560169386704\r\n        ],\r\n        [\r\n            -38.041704815497624,\r\n            145.29572896033892\r\n        ],\r\n        [\r\n            -38.042387030998377,\r\n            145.29417951190527\r\n        ],\r\n        [\r\n            -38.042352376939547,\r\n            145.29490887690565\r\n        ],\r\n        [\r\n            -38.0450973607552,\r\n            145.29895630400236\r\n        ],\r\n        [\r\n            -38.045432726881607,\r\n            145.29899586204218\r\n        ],\r\n        [\r\n            -38.045055694800887,\r\n            145.2992359771863\r\n        ],\r\n        [\r\n            -38.043697923709431,\r\n            145.30435691838363\r\n        ],\r\n        [\r\n            -38.047387572652013,\r\n            145.30707793196171\r\n        ],\r\n        [\r\n            -38.059818610979107,\r\n            145.30459772247602\r\n        ],\r\n        [\r\n            -38.060343537315994,\r\n            145.30782594714555\r\n        ],\r\n        [\r\n            -38.066763820095986,\r\n            145.30864857188689\r\n        ],\r\n        [\r\n            -38.068381497971728,\r\n            145.30385346493168\r\n        ],\r\n        [\r\n            -38.07734845252471,\r\n            145.30164657421091\r\n        ],\r\n        [\r\n            -38.077322897397991,\r\n            145.30544487851944\r\n        ],\r\n        [\r\n            -38.082148709603182,\r\n            145.30935310481806\r\n        ],\r\n        [\r\n            -38.082725685939096,\r\n            145.30884410164222\r\n        ],\r\n        [\r\n            -38.083111843229361,\r\n            145.31186974875612\r\n        ],\r\n        [\r\n            -38.079304520089181,\r\n            145.3118993008371\r\n        ],\r\n        [\r\n            -38.079156828662605,\r\n            145.31076718062059\r\n        ],\r\n        [\r\n            -38.073421165362731,\r\n            145.30845141904916\r\n        ],\r\n        [\r\n            -38.070231404660866,\r\n            145.31254130249192\r\n        ],\r\n        [\r\n            -38.071072874973574,\r\n            145.31935921383868\r\n        ],\r\n        [\r\n            -38.077884248374438,\r\n            145.32386328613083\r\n        ],\r\n        [\r\n            -38.077349514201963,\r\n            145.32425076141283\r\n        ],\r\n        [\r\n            -38.077077243815793,\r\n            145.33055282430163\r\n        ],\r\n        [\r\n            -38.076541297965328,\r\n            145.33065137863812\r\n        ],\r\n        [\r\n            -38.073674990230593,\r\n            145.33549451890312\r\n        ],\r\n        [\r\n            -38.077500989713229,\r\n            145.33912463179578\r\n        ],\r\n        [\r\n            -38.077506384040149,\r\n            145.33912365178261\r\n        ],\r\n        [\r\n            -38.07750758971325,\r\n            145.33912343274179\r\n        ],\r\n        [\r\n            -38.086386467073879,\r\n            145.33751016631041\r\n        ],\r\n        [\r\n            -38.087307535019406,\r\n            145.34526486552252\r\n        ],\r\n        [\r\n            -38.09115221528311,\r\n            145.34885742983732\r\n        ],\r\n        [\r\n            -38.093999512722149,\r\n            145.34400001903472\r\n        ],\r\n        [\r\n            -38.0935840495515,\r\n            145.34040076292729\r\n        ],\r\n        [\r\n            -38.100397026343906,\r\n            145.33493088950522\r\n        ],\r\n        [\r\n            -38.101770571611347,\r\n            145.32983026760414\r\n        ],\r\n        [\r\n            -38.098113606567566,\r\n            145.32706985842097\r\n        ],\r\n        [\r\n            -38.092410027708269,\r\n            145.32811662655308\r\n        ],\r\n        [\r\n            -38.0910604662793,\r\n            145.31772414965809\r\n        ],\r\n        [\r\n            -38.091483199199018,\r\n            145.31770995206213\r\n        ],\r\n        [\r\n            -38.094776044027469,\r\n            145.31331785389776\r\n        ],\r\n        [\r\n            -38.091304845622432,\r\n            145.3091514583144\r\n        ],\r\n        [\r\n            -38.089971480023245,\r\n            145.30919639465094\r\n        ],\r\n        [\r\n            -38.088722509494396,\r\n            145.29919259983248\r\n        ],\r\n        [\r\n            -38.089422687409566,\r\n            145.29902958866214\r\n        ],\r\n        [\r\n            -38.0895121041767,\r\n            145.30197965537013\r\n        ],\r\n        [\r\n            -38.093393749770456,\r\n            145.30604792707103\r\n        ],\r\n        [\r\n            -38.094813166492912,\r\n            145.30577674423989\r\n        ],\r\n        [\r\n            -38.094226719094458,\r\n            145.30839994289357\r\n        ],\r\n        [\r\n            -38.097230650794017,\r\n            145.31384381004841\r\n        ],\r\n        [\r\n            -38.098091863346426,\r\n            145.31373040771314\r\n        ],\r\n        [\r\n            -38.098257991646157,\r\n            145.3145989189357\r\n        ],\r\n        [\r\n            -38.102278603504566,\r\n            145.31740819742512\r\n        ],\r\n        [\r\n            -38.102450524291619,\r\n            145.31774788567566\r\n        ],\r\n        [\r\n            -38.104377143374371,\r\n            145.31909341945232\r\n        ],\r\n        [\r\n            -38.105208482039068,\r\n            145.31910119778308\r\n        ],\r\n        [\r\n            -38.105193802285655,\r\n            145.32010993512054\r\n        ],\r\n        [\r\n            -38.109280126747905,\r\n            145.32473814450421\r\n        ],\r\n        [\r\n            -38.109216781354931,\r\n            145.32477763785243\r\n        ],\r\n        [\r\n            -38.107835163311691,\r\n            145.32992117752053\r\n        ],\r\n        [\r\n            -38.11155145321586,\r\n            145.33263984476133\r\n        ],\r\n        [\r\n            -38.115794259305751,\r\n            145.33174864473656\r\n        ],\r\n        [\r\n            -38.116219129410936,\r\n            145.33497547360631\r\n        ],\r\n        [\r\n            -38.120106640889581,\r\n            145.3384910125817\r\n        ],\r\n        [\r\n            -38.12289487751621,\r\n            145.3335798562513\r\n        ],\r\n        [\r\n            -38.1225311827787,\r\n            145.33071945117354\r\n        ],\r\n        [\r\n            -38.125685524808496,\r\n            145.33011358218891\r\n        ],\r\n        [\r\n            -38.126327091458634,\r\n            145.32990853416285\r\n        ],\r\n        [\r\n            -38.126717561222272,\r\n            145.32967388190139\r\n        ],\r\n        [\r\n            -38.127085236721065,\r\n            145.32974113917879\r\n        ],\r\n        [\r\n            -38.127747510502942,\r\n            145.32969678811094\r\n        ],\r\n        [\r\n            -38.130669327276756,\r\n            145.32912921431068\r\n        ],\r\n        [\r\n            -38.130864495072622,\r\n            145.33070468619246\r\n        ],\r\n        [\r\n            -38.1347344143318,\r\n            145.33426636810151\r\n        ],\r\n        [\r\n            -38.137547634909417,\r\n            145.32936660340937\r\n        ],\r\n        [\r\n            -38.137352897766391,\r\n            145.32779461065402\r\n        ],\r\n        [\r\n            -38.139876091629773,\r\n            145.32727702584214\r\n        ],\r\n        [\r\n            -38.141113493881029,\r\n            145.32669504295603\r\n        ],\r\n        [\r\n            -38.141127106661656,\r\n            145.326681934614\r\n        ],\r\n        [\r\n            -38.141521325723787,\r\n            145.3267794019803\r\n        ],\r\n        [\r\n            -38.142158856894987,\r\n            145.32678271482146\r\n        ],\r\n        [\r\n            -38.159571329185191,\r\n            145.3247704533382\r\n        ],\r\n        [\r\n            -38.162246695615281,\r\n            145.34575796839829\r\n        ],\r\n        [\r\n            -38.166129030574183,\r\n            145.34929940632648\r\n        ],\r\n        [\r\n            -38.168925047218387,\r\n            145.34438178748078\r\n        ],\r\n        [\r\n            -38.16715137593188,\r\n            145.33046440537086\r\n        ],\r\n        [\r\n            -38.184032153221835,\r\n            145.3476513914288\r\n        ],\r\n        [\r\n            -38.185746617465355,\r\n            145.36211844367938\r\n        ],\r\n        [\r\n            -38.189597687690238,\r\n            145.36571535740993\r\n        ],\r\n        [\r\n            -38.192436582311736,\r\n            145.36083575745275\r\n        ],\r\n        [\r\n            -38.191772346621114,\r\n            145.35522893131491\r\n        ],\r\n        [\r\n            -38.198204262918019,\r\n            145.36145304841975\r\n        ],\r\n        [\r\n            -38.198213209830755,\r\n            145.36146173118709\r\n        ],\r\n        [\r\n            -38.198213218903987,\r\n            145.36146171604864\r\n        ],\r\n        [\r\n            -38.198216790050715,\r\n            145.36146517221513\r\n        ],\r\n        [\r\n            -38.198225233002667,\r\n            145.36145104687057\r\n        ],\r\n        [\r\n            -38.198385618629679,\r\n            145.36161715411819\r\n        ],\r\n        [\r\n            -38.20287888120297,\r\n            145.36076066919964\r\n        ]\r\n    ]\r\n\r\nconst Prototype = ()=>{\r\n     const STRAPI = useContext_STRAPI_FULL();\r\n     const UX = useContext_UX_FULL();\r\n\r\n     useEffect(()=>{\r\n         console.log(STRAPI)\r\n     },[STRAPI])\r\n\r\n     useEffect(()=>{\r\n        //FetchDataIntegrity()\r\n     \r\n        \r\n        \r\n     },[]) \r\n  \r\n    return(\r\n        <>\r\n               <IntroText />\r\n               { \r\n                    STRAPI.UserData.Customers ? <DisplayData Data={STRAPI.UserData.Customers} Label=\"by Customer\"/>:false\r\n               }\r\n                { \r\n                    STRAPI.sites ? <DisplayData Data={STRAPI.sites} Label=\"by site\"/>:false\r\n               }\r\n               \r\n               \r\n               \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Prototype \r\n\r\n// \r\n\r\nconst containerStyle = { height: \"500px\", width: \"auto\" };\r\n\r\nconst IntroText = ()=>{ \r\n    \r\n    const [path,setPath] = useState([])\r\n    let points=[[-38.102144,145.188240],[-38.238180,145.622208],[-38.042684,145.194773],[-38.152917,145.538663],[-37.945280,145.225428],[-38.045387,145.122987]]\r\n        \r\n    useEffect(()=>{\r\n    \r\n        let CreatePath=[]\r\n        coordinates.map((point,i)=>{\r\n            //console.log(point)\r\n            CreatePath.push({ lat: point[0], lng: point[1]})\r\n        })\r\n\r\n       \r\n        \r\n        points.map((point,i)=>(\r\n            console.log(classifyPoint(coordinates,point))\r\n        ))\r\n\r\n        setPath(CreatePath)\r\n    },[])\r\n\r\n    return(\r\n            <div className=\"DataCollection \">\r\n                <div className=\"Copy\">\r\n                    <h1>Intact AnalytiQ Prototype</h1>\r\n                    <p>The following is a list of Parent Data collections pulled from strapi</p>\r\n                    <p>This data is spread is just for Admins to check the Datas integrity.</p>\r\n                </div>\r\n\r\n                <GoogleMap \r\n                mapContainerStyle={containerStyle}\r\n                center={ {\r\n                    lat: -38.1399556,\r\n                    lng: 145.1248234 \r\n                  }}\r\n                zoom={15}\r\n            >\r\n                { /* Child components, such as markers, info windows, etc. */ }\r\n                <Polygon\r\n                    paths={path}\r\n                    options={options}\r\n                    />\r\n\r\n                    {\r\n                        points.map((point)=>{\r\n                            return(<Marker\r\n                                  \r\n                                    position={{\r\n                                        lat: point[0],\r\n                                        lng: point[1]\r\n                                      }}\r\n                                />)\r\n                        })\r\n                    }\r\n\r\n        </GoogleMap>\r\n\r\n      </div>\r\n    ) \r\n}\r\n\r\n \r\nconst DisplayData = (props)=>{\r\n    \r\n    const {Data, Label} = props\r\n    \r\n    useEffect(()=>{  console.log(Data) },[Data])\r\n  \r\n    return(\r\n      <div className=\"DataCollection\">\r\n         <h3>{Label}</h3>  \r\n        <div className=\"FlexTable\">\r\n            <div className=\"FlexTableRow head\">\r\n                <div>Name </div>\r\n                <div>Work Orders</div>\r\n              \r\n            </div>\r\n                {  \r\n                Data.map((state,i)=>{\r\n     \r\n                    return(\r\n                        <div key={i} className=\"FlexTableRow\">\r\n                            <div>{state.name}</div>  \r\n                            <div>{state.count}</div>\r\n                        </div> \r\n                        )\r\n                }) } \r\n        </div>\r\n      </div>\r\n    )\r\n  }","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan.js",["832","833","834","835"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_STRAPI_FULL} from \"../../Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"../../Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"../../Context/SCAN\";\r\nimport {ScanSites} from \"../../actions/HandleMarkerBasedScan\";\r\n\r\n// Components\r\nimport ResourceAllocationMap from \"./ResourceAllocationScan/Map\";\r\n\r\nconst RenderScamSites = new ScanSites();\r\n\r\nconst RecourseAllocationScan = ()=>{\r\n\r\n    \r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n\r\n\r\n    const Scan = ()=>{\r\n        //console.log(STRAPI.sites);\r\n        // Pass only fully loaded sites\r\n        let SiteList=[]\r\n        STRAPI.sites.map((site)=>{\r\n                console.log(site.count)\r\n    \r\n                // Add any new rules if required\r\n                if(site.count.length!== 0){\r\n                    SiteList.push(site)\r\n                }\r\n        })\r\n        RenderScamSites.SiteList=SiteList;\r\n        RenderScamSites.Search();\r\n    }\r\n\r\n\r\n    useEffect(()=>{ if(SCAN.active){Scan() }},[SCAN.active])\r\n\r\n    return(\r\n        <>\r\n            {SCAN.MarkerScanResults ?  <ResourceAllocationMap />: false}\r\n        </>\r\n    )\r\n}\r\n//  <ScanBtn />\r\nexport default RecourseAllocationScan;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Map.js",["836","837"],"import React, {useEffect, useState} from 'react'\r\n//import {useContext_STRAPI_FULL} from \"../../../Context/STRAPI\";\r\n//import {useContext_UX_FULL} from \"../../../Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"../../../Context/SCAN\";\r\nimport {ScanSites} from \"../../../actions/HandleMarkerBasedScan\";\r\nimport { GoogleMap,} from '@react-google-maps/api';\r\n\r\n// Components\r\nimport Markers from \"./MapComponents/LocationMarkers\";\r\nimport ResidualMarkers from \"./MapComponents/ResidualLocationMarkers\";\r\nimport CenterPoints from \"./MapComponents/MarkersCenterpoints\";\r\nimport MarkerBasedResults from \"./MapComponents/MarkerBasedResults\";\r\nimport ColorKey from \"./Results/ColorKey\"\r\n\r\nconst RenderScamSites = new ScanSites();\r\n\r\nconst containerStyle = { height: \"600px\", width: \"auto\" };\r\n\r\n\r\nconst ResourceAllocationMap=()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    useEffect(()=>{\r\n        console.log(SCAN.MarkerScanResults)\r\n    },[SCAN])\r\nreturn(\r\n    <div className=\"ScanMapMain\" id=\"MainMap\">\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={{\r\n                    lat: -37.813629,\r\n                    lng: 144.963058\r\n                  }}\r\n                zoom={14}\r\n               \r\n            >\r\n            { /* Child components, such as markers, info windows, etc. */ }\r\n            \r\n                <Markers />\r\n                <CenterPoints />\r\n                <ResidualMarkers />\r\n            </GoogleMap>\r\n\r\n            <ColorKey />\r\n            <MarkerBasedResults />\r\n        </div>\r\n)\r\n}\r\n\r\nexport default ResourceAllocationMap;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\ResidualLocationMarkers.js",["838","839","840","841","842","843","844","845","846"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_STRAPI_FULL} from \"../../../../Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"../../../../Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\n\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkersALL = ()=>{\r\n\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name)=>{console.log(\"Marker Clicked\", name) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n        console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n\r\n        console.log(\"markers\", markers)\r\n        \r\n        let StoreMarkers=[]         \r\n                markers.map((site,i)=>{\r\n                    Targeticon = {\r\n                        path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                        fillColor: '#fff',\r\n                        fillOpacity: .9,\r\n                        anchor: new window.google.maps.Point(0,0),\r\n                        strokeWeight: 0,\r\n                        scale: 1,\r\n                        zIndex:10\r\n                    };\r\n                    StoreMarkers.push( \r\n                        \r\n                            <Marker\r\n                                key={i}\r\n                                onLoad={onLoadMarker}\r\n                                title={site.name}\r\n                                label={site.name}\r\n                                icon={Targeticon}\r\n                                onClick={()=>{OnMarkerClick(site.name)}}\r\n                                position={{\r\n                                        lat: parseFloat(site.lat),\r\n                                        lng: parseFloat(site.long)\r\n                                    }}\r\n                            />\r\n                    )\r\n                })\r\n        setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{ \r\n         \r\n          CreateMarkers(SCAN.MarkerScanResidual)},[SCAN.MarkerScanResidual])\r\n\r\n      return(  <>{DisplayMarkers}</>) \r\n\r\n}\r\n\r\nexport default MarkerBasedLocationMarkersALL;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkerBasedResults.js",["847"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\nimport ClusterResults from \"../Results/ClusterResults\";\r\nimport {GroupArrayByOccurances} from \"../../../../actions/HandleUX\";\r\n\r\nconst MarkerBasedResults = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n\r\n    const [Results, setResults] = useState(null)\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]])\r\n    const extractResults=()=>{\r\n        console.log(SCAN.MarkerScanCenterPoints);\r\n\r\n        let ResultArr=[];\r\n        let CategoryInt=[]\r\n            SCAN.MarkerScanCenterPoints.map((result,i)=>{\r\n                ResultArr.push( <li key={i}> <ClusterResults  result={result} i={i}/></li>)\r\n                CategoryInt.push(result.scanCategory)\r\n                return true\r\n            })\r\n            setResults(ResultArr);\r\n            setCategoryOccurance(GroupArrayByOccurances(CategoryInt))\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        if(SCAN.MarkerScanCenterPoints !==null)\r\n            extractResults()\r\n\r\n    },[SCAN]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"ResultsHeader\">\r\n            <h2>Results</h2>\r\n            <h3>Clusters : <strong>{SCAN.MarkerScanCenterPoints.length}</strong></h3>\r\n            <h4>By Category:</h4>\r\n            <ul className=\"ClustersbyCategory\">\r\n            {\r\n                CategoryOccurance[0].map((cat,i)=>{\r\n                    return(\r\n                        <li key={i}>\r\n                                {cat} : {CategoryOccurance[1][i]}\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n            <h3>Sites were not allocated a Cluster : <strong>{SCAN.MarkerScanResidual.length} </strong></h3>\r\n            <h3>Sites were not included in this scan : <strong>{SCAN.NoLongLat.length} </strong></h3>\r\n            </div>\r\n\r\n            <ul className=\"ListResults\">\r\n                    {Results}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerBasedResults;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\LocationMarkers.js",["848","849","850","851","852","853","854","855","856","857"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_UX_FULL} from \"../../../../Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\nimport {RegionColor} from \"../../../../actions/HandleUX\"\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkers = ()=>{\r\n\r\n    //const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name, Region)=>{console.log(\"Marker Clicked\", name, Region) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n        console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n\r\n        console.log(\"markers\", markers)\r\n        let StoreMarkers=[];\r\n\r\n        markers.map((centerPoint,i)=>{\r\n          console.log(centerPoint.sites)\r\n          centerPoint.sites.map((site,ii)=>{\r\n\r\n              Targeticon = {\r\n                path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                fillColor: RegionColor(centerPoint.scanCategory),\r\n                fillOpacity: .9,\r\n                anchor: new window.google.maps.Point(0,0),\r\n                strokeWeight: 0,\r\n                scale: 1\r\n            }; \r\n          \r\n            StoreMarkers.push( \r\n                \r\n                    <Marker\r\n                        key={site.name}\r\n                        onLoad={onLoadMarker}\r\n                        title={site.name}\r\n                        label={site.name}\r\n                        icon={Targeticon}\r\n                        onClick={()=>{OnMarkerClick(site.name, centerPoint.scanCategory)}}\r\n                        position={{\r\n                                lat: parseFloat(site.lat),\r\n                                lng: parseFloat(site.long)\r\n                            }}\r\n                    />\r\n                \r\n            )\r\n            })\r\n        })\r\n        /*\r\n        Object.keys(markers).map((key, value)=>{\r\n            //console.log(markers[key], value)\r\n              markers[key].map((sites,i)=>{\r\n                  sites.map((site,ii)=>{\r\n\r\n                  \r\n                  })\r\n              })\r\n          })*/\r\n        setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{ \r\n        if(CreateMarkers(SCAN.MarkerScanCenterPoints) != undefined)\r\n          CreateMarkers(SCAN.MarkerScanCenterPoints)\r\n      },[SCAN.MarkerScanCenterPoints])\r\n\r\n      return(  <>{DisplayMarkers}</>)\r\n\r\n}\r\n\r\n\r\nexport default MarkerBasedLocationMarkers;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkersCenterpoints.js",["858","859"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Circle } from '@react-google-maps/api';\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\n\r\nimport {RegionColor} from \"../../../../actions/HandleUX\"\r\n\r\n\r\n\r\nconst MarkerCenterpoints = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [Centerpoints, setCenterpoints] = useState(null)\r\n    \r\n    const CreateCenterpoints = ()=>{\r\n        let StorePoints=[]       \r\n        SCAN.MarkerScanCenterPoints.map((center,i)=>{\r\n        \r\n/*\r\n                        {\r\n                            name:site.name,\r\n                            center:{\r\n                                lat: site.lat,\r\n                                lng: site.long\r\n                              },\r\n                            range:Range.range[1]\r\n                        }\r\n            */\r\n           //console.log(center.center, center.range)\r\n           \r\n           \r\n\r\n           let options = {\r\n               strokeColor: RegionColor(center.scanCategory),\r\n               strokeOpacity: 0.9,\r\n               strokeWeight: 1,\r\n               fillColor: RegionColor(center.scanCategory),\r\n               fillOpacity: 0.2,\r\n               radius: ((center.range*1000)),\r\n               zIndex: 1\r\n             }\r\n            let Featheroptions = {\r\n                strokeColor: RegionColor(center.scanCategory),\r\n                strokeOpacity: 0.7,\r\n                strokeWeight: 3,\r\n                fillColor: RegionColor(center.scanCategory),\r\n                fillOpacity: 0.01,\r\n                radius: (( (center.range+((center.feather/100)*center.range)) *1000)),  \r\n                zIndex: 1\r\n              }\r\n           StorePoints.push(\r\n                <span key={i}>\r\n                    <Circle center={center.center} options={options}/>\r\n                    <Circle center={center.center} options={Featheroptions}/>\r\n                </span>\r\n           )\r\n            \r\n        })\r\n        setCenterpoints(StorePoints)\r\n        \r\n    }\r\n    \r\n    \r\n    useEffect(()=>{  CreateCenterpoints() },[SCAN.MarkerScanCenterPoints])\r\n\r\n    useEffect(()=>{},[ Centerpoints])\r\n\r\n    return(\r\n        <>\r\n        {Centerpoints}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerCenterpoints;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ColorKey.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ClusterResults.js",["860","861","862","863"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport{NumberReducer} from \"../../../../actions/HandleUX\";\r\n\r\n//import DeleteClusterBtn from \"../Controls/buttons/DeleteClusterBtn\";\r\n//import BacktoMap from \"../Controls/buttons/BacktoMapBtn\";\r\n//import ClusterMap from \"../../Prototype/Components/Map/clusterMap/clustermap\"\r\n//import MoreInfo from \"./MoreInfo\";\r\n\r\n\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nconst ClusterResult = (props)=>{\r\n\r\n    const {result, i} = props;\r\n    const [Multiplier, setMultiplier]= useState(1000)\r\n    const [ClusterTotal, setClusterTotal] = useState(0)\r\n\r\n\r\n    const FindClusterTotal = (result)=>{\r\n        let total=0;\r\n        result.ClusterCost.map((type,i)=>{ total = total + type[1] })\r\n        \r\n        setClusterTotal(NumberReducer(parseFloat((total*Multiplier).toFixed(2))))\r\n    }\r\n\r\n\r\n    useEffect(()=>{ \r\n        //FindClusterTotal(result) \r\n        //console.log(result)\r\n    },[result])\r\n\r\n    return(\r\n        <>\r\n            <h3><LocationCityIcon /> Cluster { (i+1) }  - <strong>{result.scanCategory}</strong></h3>\r\n            <h3>Cluster Resource Quota : <strong>{result.resourceQuota.toFixed(2)}</strong></h3> \r\n            <h3>est Cluster Cost : <strong>${0}</strong></h3>\r\n            <div className=\"ListResultContainer\">\r\n                <div className=\"Title\">\r\n                <h3> {result.name}</h3>\r\n                </div>\r\n                Add Map and Cluster Details once Data dump has been completed\r\n\r\n            </div>\r\n                \r\n               \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClusterResult;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\HistoryRerfresh.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ViewSingleResultBtn.js",["864"],"import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\nimport { Link} from \"react-router-dom\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport{FetchSingleScanResult} from \"../../../../actions/authUser\"\r\n\r\n\r\n// this button has 3 states\r\n// Falsey .. nothign downloaded ot process\r\n// Active .. there is a active result in memory\r\n// processing .. system is downloading a result\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function IconButtons(props) {\r\n    const {scanID, scan} = props\r\n    const SCAN = useContext_SCAN_FULL();\r\n    useEffect(()=>{\r\n      console.log(SCAN)\r\n    },[SCAN])\r\n\r\n    return (\r\n          <>\r\n            {\r\n              SCAN.SelectedModelUI.active ? <ActiveTrue scanID={scanID} scan={scan} />:<ActiveFalse scanID={scanID} scan={scan} />\r\n            }\r\n          </>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst ActiveTrue = (props)=>{\r\n  const {scanID, scan} = props\r\n  const SCAN = useContext_SCAN_FULL();\r\n  useEffect(()=>{\r\n      //console.log(scanID,SCAN.SelectedModelUI.activeID )\r\n  },[])\r\n    return(\r\n      <>\r\n        {\r\n          SCAN.SelectedModelUI.activeID === scanID ? <ViewResult /> : <DownloadResult scanID={scanID} scan={scan}/>\r\n        }\r\n      </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ActiveFalse = (props)=>{\r\n  const {scanID, scan} = props\r\n  const SCAN = useContext_SCAN_FULL();\r\n  useEffect(()=>{\r\n      //console.log(scanID,SCAN.SelectedModelUI.activeID )\r\n  },[])\r\n  return(\r\n    <>\r\n      {\r\n          SCAN.SelectedModelUI.processing  ? <Processing /> : <DownloadResult scanID={scanID} scan={scan}/>\r\n        }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst DownloadResult = (props)=>{\r\n  const {scanID, scan} = props\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton aria-label=\"refresh\" onClick={()=>{FetchSingleScanResult(scanID, scan)}}>\r\n        <GetAppIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst ViewResult = (props)=>{\r\n  const {scanID} = props\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton aria-label=\"refresh\"\r\n       component={Link}\r\n       to='/results'\r\n       >\r\n        <VisibilityIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst Processing = ()=>{\r\n  return(\r\n    <>\r\n        <div className=\"loader\">\r\n            <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    </>\r\n  )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateSingleScanBtn.js",["865"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {CreateNewScan} from \"../../../../actions/HandleScanProcess\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ContainedButtons() {\r\n  const classes = useStyles();\r\n\r\n\r\n    const HandleSingle=()=>{ console.log(\"Create Single\", CreateNewScan(0));}\r\n    const HandleCompare=()=>{ console.log(\"Create Single\", CreateNewScan(1));}\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Button variant=\"contained\" onClick={HandleSingle} className=\"SelectClientBtn\">\r\n            Select Clients \r\n        </Button>\r\n    </div>\r\n  );\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateNewScan\\SelectandReview.js",["866","867","868","869","870"],"import React, { useEffect, useState } from 'react'\r\nimport {useContext_STRAPI_FULL} from \"../../../Context/STRAPI\";\r\nimport {useContext_SCAN_FULL} from \"../../../Context/SCAN\";\r\nimport { orderBy,  remove} from 'lodash'; \r\nimport ReviewSelectionBtn from \"../Components/buttons/SetSelectedBtn\";\r\n\r\nimport SelectScanItems from \"./ScanSelectItems\";\r\nimport ReviewSelection from \"./ScanReviewSelectedItems\";\r\n\r\n\r\nconst SelectandReview = ()=>{\r\n\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n    useEffect(()=>{},[SCAN])\r\n \r\n        return(\r\n            <>\r\n                {\r\n                USERSCAN.SetSelectedDatabase ? <ReviewSelection />:<SelectScanItems />\r\n            } \r\n            </>\r\n        )\r\n}\r\n\r\n\r\n/*\r\nconst Single = ()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n    useEffect(()=>{ },[SCAN]);\r\n\r\n    return(\r\n        <div>\r\n  \r\n            {\r\n                USERSCAN.SetSelectedDatabase ? <ReviewSelection />:<SelectScanItems />\r\n            }    \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Compare = ()=>{\r\n    return(\r\n        <div>\r\n            Compare\r\n        </div>\r\n    )\r\n}\r\n*/\r\n/*\r\n \r\n*/\r\nexport default SelectandReview;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateNewScan\\ScanSelectItems.js",["871","872","873"],"import React, { useEffect, useState } from 'react'\r\nimport {useContext_STRAPI_FULL} from \"../../../Context/STRAPI\";\r\nimport {useContext_SCAN_FULL} from \"../../../Context/SCAN\";\r\nimport { orderBy,findIndex,  remove} from 'lodash'; \r\nimport ReviewSelectionBtn from \"../Components/buttons/SetSelectedBtn\";\r\nimport {StoreSelected_Single} from \"../../../actions/HandleScanProcess\";\r\nimport BtnBacktoScanOptions from \"../Components/buttons/BacktoScanType\";\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nconst ScanSelectItems=()=>{\r\n   \r\n   \r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const USERSCAN = SCAN.UserScanState;\r\n    const [nonSelected, setNonselected] = useState([])\r\n    const [Selected, setSelected] = useState([])\r\n\r\n\r\n    const handleAdd=(customer)=>{\r\n    \r\n        let Index= findIndex(Selected, function(o) { return o.id === customer.id; });\r\n        console.log(Index)\r\n        if(Index === -1){\r\n            let NewSelected = [...Selected, customer]; \r\n            setSelected(NewSelected)\r\n        }\r\n       \r\n        let RemoveSelected = remove(nonSelected, function(o) {return o.id != customer.id;});\r\n        setNonselected(RemoveSelected)\r\n        \r\n            \r\n    }\r\n\r\n    const handleRemove=(customer)=>{\r\n\r\n        let Index= findIndex(nonSelected, function(o) { return o.id === customer.id; });\r\n        if(Index === -1){\r\n            let NewSelected = [...nonSelected, customer];\r\n            setNonselected(NewSelected)\r\n        }\r\n        let RemoveSelected = remove( Selected, function(o) {return o.id != customer.id;});\r\n        setSelected(RemoveSelected);\r\n      \r\n    }\r\n\r\n    useEffect(()=>{\r\n        setNonselected(JSON.parse(JSON.stringify(STRAPI.UserData.Customers)));\r\n     \r\n        setSelected(USERSCAN.UserScanSingleDataSets)\r\n      \r\n    },[USERSCAN.ScanOptionSelected])\r\n\r\n    useEffect(()=>{\r\n        StoreSelected_Single(Selected)\r\n    },[Selected,nonSelected])\r\n\r\n    return(\r\n        <div>\r\n            <h2>Select Clients for Model</h2>\r\n            \r\n            <div className=\"BtnWrapper\">\r\n                <ReviewSelectionBtn />\r\n                <BtnBacktoScanOptions />\r\n            </div>\r\n            \r\n            <div className=\"Dataset_Selection\">\r\n                <div>\r\n                    <ul>\r\n                            {\r\n                                \r\n                                orderBy(nonSelected, ['name'], ['asc']).map((customer,i)=>{\r\n                                    return(\r\n                                        <li key={i} >\r\n                                            {customer.name}\r\n                                            <IconButton aria-label=\"add\" onClick={()=>{handleAdd(customer)}}>\r\n                                            <AddCircleIcon />\r\n                                                \r\n                                            </IconButton>\r\n                                            \r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                      </ul>\r\n                </div>\r\n                <div>\r\n                    <ul>\r\n                        {\r\n                            orderBy(Selected, ['name'], ['asc']).map((customer,i)=>{\r\n                                return(\r\n                                    <li key={i} >\r\n                                        {customer.name}\r\n                                        <IconButton aria-label=\"delete\"onClick={()=>{handleRemove(customer)}}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                  </ul>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScanSelectItems;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateNewScan\\ScanReviewSelectedItems.js",["874","875","876","877","878","879"],"import React, { useEffect, useState } from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../Context/SCAN\";\r\nimport { orderBy,  remove} from 'lodash'; \r\n//import {FetchSelectedItems} from \"../../../actions/HandleScanProcess\";\r\nimport BacktoSelectItems from \"../Components/buttons/BacktoAddItemsSingleScan\"\r\nimport ScanForm from \"../../../venders/MaterialUI/Forms/CreateScanoptions\";\r\nimport CreateNewModelBtn from \"../Components/buttons/CreateNewModel\";\r\n\r\nconst ReviewSelected = ()=>{\r\n\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    \r\n    const [Fetching, setFetching] = useState('Review items')\r\n\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n    useEffect(()=>{\r\n    \r\n        if(USERSCAN.UserWorkingDataSet_Single.length === 0){\r\n          //  FetchSelectedItems(USERSCAN.UserScanSingleDataSets)\r\n        }\r\n        \r\n        console.log(USERSCAN.processing)\r\n        \r\n    },[USERSCAN])\r\n    \r\n    return(\r\n        <>\r\n            {\r\n                USERSCAN.processing ? <ReviewSent />:<ReviewScanContnt />\r\n            }\r\n               \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ReviewSelected; \r\n\r\n\r\nconst ReviewScanContnt = ()=>{\r\n    \r\n    const SCAN = useContext_SCAN_FULL();\r\n    \r\n    const [Fetching, setFetching] = useState('Model Name and Description')\r\n\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n    useEffect(()=>{\r\n    \r\n        if(USERSCAN.UserWorkingDataSet_Single.length === 0){\r\n          //  FetchSelectedItems(USERSCAN.UserScanSingleDataSets)\r\n        }\r\n        \r\n        console.log(USERSCAN.processing)\r\n        \r\n    },[USERSCAN])\r\n    return(\r\n        <div>\r\n                <h2>Name and Save Model</h2>\r\n                \r\n                <div className=\"BtnWrapper\">\r\n                    <BacktoSelectItems />\r\n                </div>\r\n            \r\n\r\n                <div className=\"ModelReview\">\r\n                    <div>\r\n                        <h2>Model Name and Description</h2>\r\n                        <p>Add a clear and consis name and description for this model. This will be used later when comparing and anylisis models against each other.</p>\r\n                        <ScanForm  DataSet={USERSCAN.UserScanSingleDataSets} />\r\n                    </div>\r\n                    <div>\r\n                        <ul> \r\n                            {\r\n                                USERSCAN.UserScanSingleDataSets.map((item,i)=>{\r\n                                    return(\r\n                                        <li key={i}>\r\n                                            {item.name}\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n\r\n\r\n                   \r\n                </div>\r\n               \r\n\r\n               \r\n        </div>\r\n    )\r\n}\r\n\r\nconst ReviewSent=()=>{\r\n    return(\r\n        <>\r\n            <h2>Building new Model</h2>\r\n            <p>We are currently building the new model as requested.</p>\r\n            <p>You can check the progess of the model under the \"Resource Models\" page</p>\r\n            <p>Once the model status has changed to 'complete' your results will be viewable</p>\r\n            <CreateNewModelBtn />\r\n        </>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoAddItemsSingleScan.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoScanType.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\SetSelectedBtn.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\CreateScanoptions.js",["880","881","882","883"],"import 'date-fns';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useContext_SCAN_FULL} from \"../../../Context/SCAN\";\r\n\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nimport {FetchSelectedItems} from \"../../../actions/HandleScanProcess\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\n/* Handle Scna Form*/\r\nexport default function CreateNewScanForm() {\r\n  return (<ScanForm />);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Processing = ()=>{\r\n   \r\n    return(\r\n        <>\r\n            processing\r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\nconst Error = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const ErrorTrue='There was an Error in the Username or Password when processing your details'\r\n    const ErrorFalse=''\r\n    useEffect(()=>{},[AUTH])\r\n    return(\r\n        <>{\r\n            AUTH.error ? <h3>{ErrorTrue}</h3>:<h3>{ErrorFalse}</h3>\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n\r\n\r\n\r\nconst ScanForm = ()=>{\r\n    \r\n    const SCAN = useContext_SCAN_FULL();\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n\r\n    const classes = useStyles();\r\n    const [TITLE, setTITLE] = useState('')\r\n    const [DESCRIPTION, setDESCRIPTION] = useState('')\r\n    const[Start, setStart] = useState()\r\n    const[End, setEnd] = useState()\r\n\r\n    const handleClick=()=>{\r\n        FetchSelectedItems(USERSCAN.UserScanSingleDataSets, TITLE, DESCRIPTION, Start, End)\r\n    }\r\n\r\n    const handleTitle=(e)=>{setTITLE(e.target.value)}\r\n    const handleDescription=(e)=>{setDESCRIPTION(e.target.value)}\r\n    const SetStartDate=(START)=>{\r\n        setStart(new Date(`${START}`).getTime() / 1000)\r\n    }\r\n    const SetEndDate=(END)=>{\r\n        setEnd(new Date(`${END}`).getTime() / 1000)\r\n    }\r\n    \r\n    return(\r\n        <div className=\"LoginContainer\">\r\n            {Start}{End}\r\n            <MaterialUIPickers  SetEndDate={SetEndDate} SetStartDate={SetStartDate}/>\r\n\r\n            <TextField \r\n                id=\"outlined-basic\" \r\n                label=\"Model Name\" \r\n                variant=\"outlined\" \r\n                onChange={handleTitle}\r\n            />\r\n            \r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Model Description\"\r\n                multiline\r\n                rows={6}\r\n                onChange={handleDescription}\r\n                variant=\"outlined\"\r\n                />\r\n\r\n            \r\n            <Button variant=\"contained\" onClick={()=>{handleClick()} } className=\"CreateModel\">\r\n                Create Model\r\n            </Button>\r\n                \r\n        </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nfunction MaterialUIPickers(props) {\r\n    const{SetStartDate, SetEndDate} = props\r\n    // The first commit of Material-UI\r\n    const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\r\n    const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\r\n  \r\n    const handleDateChange = (date) => {\r\n        setSelectedStartDate(date);\r\n      SetStartDate(date)\r\n     \r\n    };\r\n\r\n    const handleEndDateChange = (date) => {\r\n        setSelectedEndDate(date);\r\n    \r\n        SetEndDate(date)\r\n      };\r\n  \r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Start Date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={selectedStartDate}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"End Date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={selectedEndDate}\r\n            onChange={handleEndDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n  ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateNewModel.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompare.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel.js",["884"],"import React, { useEffect, useState } from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../Context/SCAN\";\r\nimport CreateButton from \"./Components/buttons/CreateSingleScanBtn\"\r\nimport SelectandReview from \"./CreateNewScan/SelectandReview\";\r\n\r\nimport Footer from \"./Components/Layout/Footer\"\r\nconst CreateNewScan = ()=>{\r\n  \r\n    const SCAN = useContext_SCAN_FULL();\r\n    const USERSCAN = SCAN.UserScanState;\r\n  \r\n    useEffect(()=>{\r\n            console.log(USERSCAN)\r\n    },[USERSCAN])\r\n    return(\r\n        <div className=\"AuthLayout\">\r\n            <div className=\"Header\">\r\n                <h2>Create a Model</h2>\r\n            </div>\r\n            <div className=\"Content\">\r\n                {USERSCAN.ScanOptionSelected !== false ?<SelectandReview />:<ScanSelectScanType />}  \r\n            </div>\r\n\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateNewScan;\r\n\r\n\r\n\r\nconst ScanSelectScanType=()=>{\r\n    return( \r\n        <div>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\r\n            <div className=\"BtnWrapper\">\r\n                <CreateButton />\r\n            </div> \r\n            \r\n        </div> \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ViewModels.js",["885","886","887"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CompareModels.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMPARE.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleCompare.js",["888"],"\r\n// Private Functions\r\nimport store from \"../store/index\"\r\nimport axios from 'axios';\r\n\r\nexport const StoreCompareItem = (scan,i)=>{\r\n    const UserSelected = store.getState().COMPARE.CompareData.UserSelected;\r\n    UserSelected[i] = scan\r\n    console.log(scan,i, UserSelected)\r\n    store.dispatch({ type:'STOREUSERSELECTED', payload:UserSelected});\r\n}\r\n\r\nexport const ConfirmCompare = (bool)=>{\r\n    store.dispatch({ type:'COMPAREPROCESSING', payload:true}); \r\n\r\n    const UserSelected = store.getState().COMPARE.CompareData.UserSelected;\r\n    UserSelected.map((models,i)=>{\r\n        FetchCompareModel(models.id, i, UserSelected.length)\r\n    })\r\n\r\n   \r\n    store.dispatch({ type:'COMPARESTATUS', payload:true}); \r\n}\r\n\r\n\r\nexport const ResetCompare = ()=>{\r\n\r\n    store.dispatch({ type:'COMPARESTATUS', payload:false}); \r\n    store.dispatch({ type:'COMPAREPROCESSING', payload:false}); \r\n    store.dispatch({ type:'STOREUSERSELECTED', payload:[]});\r\n    store.dispatch({ type:'STOREMODELS', payload:[]});\r\n}\r\n\r\n\r\nexport const FetchCompareModel = (scanID, int, total)=>{\r\n\r\n\r\n    console.log(\"scanID\", scanID, int)\r\n    const AWSURL=' https://intactanalytiq.s3-ap-southeast-2.amazonaws.com/';\r\n   // 6002d5ece940b655642d22df.json\r\n   // headers: axiosHeader\r\n   axios({ url: AWSURL+scanID+'.json', method: 'get'})\r\n    .then((result) => { \r\n    \r\n            console.log(result.data);\r\n            //result.data.SCANSTATE\r\n            const FetchedModels = store.getState().COMPARE.CompareData.FetchedModels;\r\n\r\n            \r\n            FetchedModels[int] = result.data\r\n            store.dispatch({ type:'STOREMODELS', payload:FetchedModels}); \r\n\r\n            if(FetchedModels.length === total)\r\n                store.dispatch({ type:'COMPAREPROCESSING', payload:false}); \r\n        \r\n            }).catch(function (thrown) {\r\n                    if (axios.isCancel(thrown)) { console.log('Request canceled', thrown.message);\r\n                    } else { console.log(\"ERROR\", thrown);}\r\n            });\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMPARE.js",["889"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_COMPARE_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_COMPARE_FULL = ()=>{\r\n    return useContext(Context_COMPARE_FULL)\r\n}\r\n\r\n\r\n \r\nexport const COMPAREContextProvider = ({children})=>{\r\n    const COMPARE = useSelector(state => state.COMPARE );\r\n\r\n    useMemo(()=>{  },[COMPARE]) \r\n\r\n    return(\r\n            <Context_COMPARE_FULL.Provider value={COMPARE}>\r\n                {children}            \r\n            </Context_COMPARE_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ConfirmCompareBtn.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SelectModels.js",["890","891","892"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../Context/COMPARE\";\r\n\r\n\r\nimport SelectCompare from \"../Components/selects/SelectCompare\"\r\nimport ConfirmCompareBtn from \"../Components/buttons/ConfirmCompareBtn\";\r\n\r\n const CompareModels=()=>{\r\n\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    // useContext_COMPARE_FULL\r\n    const [ModelLimit, setLimit] = useState(2)\r\n    const [ModelsSelected, setModelsSelected] = useState(2)\r\n    const [ModelSelects, setModelSelects] = useState([])\r\n\r\n    const CreateSelects = ()=>{\r\n        let i=0\r\n        let temp=[]\r\n        while(i<ModelLimit){\r\n            \r\n            temp.push(<SelectCompare pos={i}/>)\r\n            i++;\r\n        }\r\n        setModelSelects(temp)\r\n    }\r\n    useEffect(()=>{\r\n        CreateSelects()\r\n    },[ModelsSelected])\r\n\r\n    useEffect(()=>{ console.log(COMPARE) },[COMPARE])\r\n    return(\r\n        <>\r\n            <div className=\"SectionHeaderWithControls\">\r\n            <h1>Compare Models</h1>\r\n                <div className=\"controls\">\r\n                {ModelSelects }\r\n                    <ConfirmCompareBtn />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"ComparedSelectedItems\">\r\n\r\n                <ul className=\"ComparableItem\">\r\n                                        <li>Model Name</li>\r\n                                        <li>Clients</li>\r\n                                        <li>Clusters</li>\r\n                                        <li>Sites</li>\r\n                                        <li>Description</li>\r\n                                </ul>   \r\n\r\n\r\n                    {\r\n                        COMPARE.CompareData.UserSelected.map((model,i)=>{\r\n                            return(\r\n                                <ul key={i} className=\"ComparableItem\">\r\n                                        <li>{model.Name}</li>\r\n                                        <li>{model.IntClients}</li>\r\n                                        <li>{model.IntCluster}</li>\r\n                                        <li>{model.IntSites}</li>\r\n                                        \r\n                                        <li>{model.Description}</li>\r\n                                </ul>    \r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompareModels","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareModels.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetCompareModels.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableHeader.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableClusters.js",["893","894"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\nimport { runInContext } from 'lodash';\r\nconst Title='Clusters';\r\n\r\nconst TableWorkOrders = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n    const [Values, setValues] = useState([])\r\n   \r\n    useEffect(()=>{},[COMPARE])\r\n\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n            <div>{Title}</div>\r\n            {Values}\r\n            {\r\n                MODELS.map((model,i)=>{\r\n                    return(\r\n                        <div key={i}> {numberWithCommas(model.CLUSTERSTATS.clusters)} </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default TableWorkOrders;\r\n\r\n\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalWorkOrders.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalLocations.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsInScope.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsUnaccomidated.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalWorkOrdersCoveredInCluster.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableWorkorders.js",["895"],"import React, {useEffect} from 'react'\r\n\r\nimport CompareTableTotalWorkOrdersCoveredInCluster from \"./CompareTable/TableTotalWorkOrdersCoveredInCluster\";\r\nimport CompareTableTotalWorkOrders from \"./CompareTable/TableTotalWorkOrders\"\r\nimport WorkorderByClient from \"./CompareTable/TableWorkOrderByClient\";\r\nconst TableSectionWorkorders = ()=>{\r\n    return(\r\n        <>\r\n        \r\n          <div className=\"TableSection\">\r\n            <div className=\"SectionHeader\"><h2>Work Orders</h2></div>\r\n                <CompareTableTotalWorkOrders />\r\n                <WorkorderByClient />\r\n                <CompareTableTotalWorkOrdersCoveredInCluster />\r\n            </div>\r\n        </>\r\n    )\r\n}    \r\n\r\nexport default TableSectionWorkorders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableClusters.js",["896"],"import React, {useEffect} from 'react'\r\n\r\nimport CompareClusters from \"./CompareTable/TableClusters\"\r\nimport ClusterBreakdown from \"./CompareTable/TableClusterBreakDown\";\r\n\r\nconst TableSectionWorkorders = ()=>{\r\n    return(\r\n        <>\r\n            <div className=\"TableSection\">\r\n                <div className=\"SectionHeader\"><h2>Clusters</h2></div>\r\n                <CompareClusters />\r\n                <ClusterBreakdown />\r\n            </div> \r\n        </>\r\n    ) \r\n}   \r\n\r\nexport default TableSectionWorkorders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableLocations.js",["897"],"import React, {useEffect} from 'react'\r\n\r\n    // Locations\r\n    import CompareTableTotalLocations from \"./CompareTable/TableTotalLocations\"\r\n    import CompareTableLocationsInscope from \"./CompareTable/TableLocationsInScope\";\r\n    import CompareTableLocationsUnaccomidated from \"./CompareTable/TableLocationsUnaccomidated\";\r\n    import LocationSitesByTier from \"./CompareTable/TableSitesByTier\";\r\n\r\nconst TableSectionWorkorders = ()=>{\r\n    return(\r\n        <>\r\n          <div className=\"TableSection\">\r\n              <div className=\"SectionHeader\">\r\n                  <h2>Locations</h2>\r\n               </div>\r\n\r\n                    <CompareTableTotalLocations />\r\n                    <CompareTableLocationsInscope />\r\n                    <LocationSitesByTier />\r\n                    <CompareTableLocationsUnaccomidated />\r\n        </div>  \r\n        </>\r\n    )\r\n}   \r\n\r\nexport default TableSectionWorkorders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableResourceAllocation.js",["898"],"import React, {useEffect} from 'react'\r\n\r\n    // Locations\r\n    import TotalResourceAllocation from \"./CompareTable/TableTotalResourceAllocation\"\r\n    import TableResourceAllocationPerResourceTotal from \"./CompareTable/TableResourceAllocationPerResourceTotal\"\r\nconst TableSectionWorkorders = ()=>{\r\n    return(\r\n        <>\r\n          <div className=\"TableSection\">\r\n              <div className=\"SectionHeader\">\r\n                  <h2>Resource Allocations</h2>\r\n               </div>\r\n            <TotalResourceAllocation />\r\n            <TableResourceAllocationPerResourceTotal/>\r\n                   \r\n        </div>  \r\n        </>\r\n    )\r\n}   \r\n\r\nexport default TableSectionWorkorders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalResourceAllocation.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableResourceAllocationPerResourceTotal.js",["899"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\n\r\nconst Title='Avg WO Completed per resource';\r\n\r\nconst TableWorkOrders = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n    \r\n    useEffect(()=>{ },[COMPARE])\r\n\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n            <div>{Title}</div>\r\n            {\r\n                MODELS.map((model,i)=>{\r\n                    return( \r\n                        <div key={i}> {((model.CLUSTERSTATS.WorkOrdersCoveredInModel/model.CLUSTERSTATS.ResourceAllocation)/250).toFixed(2)} </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableWorkOrders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableClusterBreakDown.js",["900","901","902"],"import React, {useEffect, useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\nimport {numberWithCommas, GroupArrayByOccurances} from \"../../../../actions/HandleUX\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n  }));\r\n\r\nconst Title='Tier Breakdown';\r\n\r\nconst TableClusterBreakdown = ()=>{\r\n    const classes = useStyles();\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n    const extractResults=(data)=>{\r\n        let CategoryInt=[]\r\n        data.map((result,i)=>{ CategoryInt.push(result.scanCategory) })\r\n        //console.log(GroupArrayByOccurances(CategoryInt))\r\n            return GroupArrayByOccurances(CategoryInt)\r\n    }\r\n\r\n\r\n    useEffect(()=>{ },[COMPARE])\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <Accordion className=\"ComparisonAccordion\">\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    {Title}\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails className=\"ComparisonRow\">\r\n                    <div>&nbsp;</div>\r\n                        {\r\n                            MODELS.map((model,i)=>{\r\n                                let Breakdown = extractResults(model.STOREMARKERCENTERPOINTS);\r\n                                return(\r\n                                    <div key={i}>\r\n                                        <DisplayBreakdown Breakdown={Breakdown}/>\r\n                                    </div>\r\n                                )\r\n                                    \r\n                            })\r\n                        }\r\n                </AccordionDetails>\r\n\r\n            </Accordion>\r\n            </div>\r\n\r\n      \r\n    )\r\n}\r\n\r\nexport default TableClusterBreakdown;\r\n\r\nconst DisplayBreakdown = (props)=>{\r\n    const {Breakdown} = props\r\n    return(\r\n        Breakdown[0].map((cat,i)=>{\r\n            return(\r\n                <div key={i} className=\"AccordionData\">\r\n                    <div>{cat}</div>\r\n                    <div>{Breakdown[1][i]}</div>\r\n                </div>\r\n            )\r\n        })\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableWorkOrderByClient.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableTradeTypes.js",["903"],"import React, {useEffect} from 'react'\r\n\r\n    // Trade TYpes\r\nimport TradetypeBreakDown from \"./CompareTable/TableTradeTypeBreakdown\";\r\nconst TableSectionTradeTypes = ()=>{\r\n    return(\r\n        <>\r\n          <div className=\"TableSection\">\r\n              <div className=\"SectionHeader\">\r\n                  <h2>Trade Types</h2>\r\n               </div>\r\n          \r\n                   <TradetypeBreakDown />\r\n        </div>  \r\n        </>\r\n    )\r\n}   \r\n\r\nexport default TableSectionTradeTypes;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTradeTypeBreakdown.js",["904"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\nimport {FindTradeTypeAllocation} from \"../../../../actions/ClusterAnalysis\";\r\nconst Title='Model Trades';\r\n\r\nconst TableWorkOrders = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n    \r\n    useEffect(()=>{},[COMPARE])\r\n\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n            <div>{Title}</div>\r\n            {\r\n                        MODELS.map((model,i)=>{\r\n                           let  Breakdown= FindTradeTypeAllocation(model.STOREMARKERCENTERPOINTS)\r\n                            return(\r\n                                <div key={i}>\r\n                                    <DisplayBreakdown Breakdown={Breakdown}/>\r\n                                </div>\r\n                            )\r\n                                \r\n                        })\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableWorkOrders;\r\n\r\nconst DisplayBreakdown = (props)=>{\r\n    const {Breakdown} = props\r\n    return(\r\n        <>\r\n        {\r\n              Breakdown[0].map((cat,i)=>{\r\n                return(\r\n                    <div key={i} className=\"AccordionData\">\r\n                        <div>{cat}</div>\r\n                        <div>{Breakdown[1][i]}</div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        </>       \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableSitesByTier.js",["905","906"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\n\r\nimport {SitesbyTier} from \"../../../../actions/ClusterAnalysis\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\nimport {findClientName} from \"../../../../actions/ClusterAnalysis\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n  }));\r\n\r\nconst Title='Locations allocation by Tier';\r\n\r\nconst WorkordersByClient = ()=>{\r\n    const classes = useStyles();\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n\r\n    useEffect(()=>{ },[COMPARE])\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n        <Accordion className=\"ComparisonAccordion\">\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n                {Title}\r\n            </AccordionSummary>\r\n\r\n            <AccordionDetails className=\"ComparisonRow\">\r\n                <div>&nbsp;</div>\r\n                   \r\n\r\n                    {\r\n                        MODELS.map((model,i)=>{\r\n                            let Breakdown = SitesbyTier(model.STOREMARKERCENTERPOINTS)\r\n                            return(\r\n                                <div key={i}>\r\n                                    <DisplayBreakdown Breakdown={Breakdown}/>\r\n                                </div>\r\n                            )\r\n                                \r\n                        })\r\n                    }\r\n            </AccordionDetails>\r\n\r\n        </Accordion>\r\n        </div>\r\n    )\r\n} \r\nexport default WorkordersByClient;\r\n\r\n\r\nconst DisplayBreakdown = (props)=>{\r\n    const {Breakdown} = props\r\n    return(\r\n        <>\r\n        {\r\n              Breakdown[0].map((cat,i)=>{\r\n                return(\r\n                    <div key={i} className=\"AccordionData\">\r\n                        <div>{cat}</div>\r\n                        <div>{Breakdown[1][i]}</div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        </>        \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult.js",["907"],"import React  from 'react'\r\n\r\n// components\r\nimport ResultHeader from \"./SingleModelResult/ResultHeader\"\r\nimport ResultMap from \"./SingleModelResult/ResultMap\"\r\nimport ResultClusterResults from \"./SingleModelResult/ResultClusterResults\"\r\nconst SingleModelResult = ()=>{\r\n\r\n    return(\r\n        <>\r\n            <ResultHeader />\r\n            <ResultMap />\r\n            \r\n        </>\r\n    ) \r\n}\r\n \r\n//<ResultClusterResults />\r\nexport default SingleModelResult; ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\ResultHeader.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\ResultMap.js",["908","909"],"import React, {useEffect, useState} from 'react'\r\n\r\n// Components\r\n\r\nimport Colorkey from \"./components/MapColorKey\"\r\nimport SingleModelMap from \"./components/SingleModelMap\"\r\nconst ResultMap = ()=>{\r\n    return(\r\n         <div className=\"ScanMapMain\" id=\"MainMap\">\r\n             <h2>Model Map</h2>\r\n             <p>Below is a Visual account of the Model.</p>\r\n            <SingleModelMap />\r\n            <Colorkey />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultMap; ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\ResultClusterResults.js",["910"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../Context/SCAN\";\r\nimport ClusterResults from \"./components/ClusterResults\";\r\n\r\nconst CulsterResults = ()=>{\r\n   \r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [Results, setResults] = useState(null)\r\n\r\n    const extractResults=()=>{\r\n        let ResultArr=[];\r\n            SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((result,i)=>{\r\n                ResultArr.push( <li key={i}> <ClusterResults  result={result} i={i}/></li>)\r\n                return true\r\n            })\r\n            setResults(ResultArr);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(SCAN.SelectedModel.STOREMARKERCENTERPOINTS !==null)\r\n            extractResults()\r\n        \r\n    },[SCAN]);\r\n\r\n    return(\r\n        <>\r\n            <div class=\"MetaRow\"> <h2> Cluster Breakdown</h2></div>\r\n           \r\n            <ul className=\"ListResults\">{Results}</ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CulsterResults; ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\MapColorKey.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\SingleModelMap.js",["911","912"],"import React from 'react';\r\nimport { GoogleMap } from '@react-google-maps/api';\r\n\r\n// Components\r\n\r\nimport Markers from \"./LocationMarkers\";\r\nimport ResidualMarkers from \"./ResidualLocationMarkers\";\r\nimport CenterPoints from \"./MarkersCenterpoints\";\r\nimport MarkerBasedResults from \"./MarkerBasedResults\";\r\nimport Polygons from \"./Polygons\"\r\n\r\nconst containerStyle = { height: \"700px\", width: \"auto\" };\r\nconst Map=()=>{\r\n        return(\r\n                <div className=\"ScanMapMain\" id=\"MainMap\">\r\n                    <GoogleMap \r\n                        mapContainerStyle={containerStyle}\r\n                        center={{\r\n                                lat: -37.813629,\r\n                                lng: 144.963058\r\n                        }}\r\n                        zoom={14}\r\n                    >\r\n                        { /* Child components, such as markers, info windows, etc. */ }\r\n                        \r\n                        <Markers />\r\n                        <ResidualMarkers />\r\n                        <Polygons />\r\n                    </GoogleMap>\r\n                \r\n                    </div>\r\n                )\r\n}\r\n\r\n//<CenterPoints />\r\n\r\nexport default Map;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ScanStateBtn.js",["913"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\MarkersCenterpoints.js",["914","915"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Circle } from '@react-google-maps/api';\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\n\r\nimport {RegionColor} from \"../../../../actions/HandleUX\"\r\n\r\n\r\n\r\nconst MarkerCenterpoints = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [Centerpoints, setCenterpoints] = useState(null)\r\n     \r\n    const CreateCenterpoints = ()=>{\r\n        let StorePoints=[]       \r\n        SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((center,i)=>{\r\n        \r\n/*\r\n                        {\r\n                            name:site.name,\r\n                            center:{\r\n                                lat: site.lat,\r\n                                lng: site.long\r\n                              },\r\n                            range:Range.range[1]\r\n                        }\r\n            */\r\n           //console.log(center.center, center.range)\r\n           \r\n           \r\n\r\n           let options = {\r\n               strokeColor: RegionColor(center.scanCategory),\r\n               strokeOpacity: 0.9,\r\n               strokeWeight: 1,\r\n               fillColor: RegionColor(center.scanCategory),\r\n               fillOpacity: 0.2,\r\n               radius: ((center.range*1000)),\r\n               zIndex: 1\r\n             }\r\n            let Featheroptions = {\r\n                strokeColor: RegionColor(center.scanCategory),\r\n                strokeOpacity: 0.7,\r\n                strokeWeight: 3,\r\n                fillColor: RegionColor(center.scanCategory),\r\n                fillOpacity: 0.01,\r\n                radius: (( (center.range+((center.feather/100)*center.range)) *1000)),  \r\n                zIndex: 1\r\n              }\r\n           StorePoints.push(\r\n                <span key={i}>\r\n                    <Circle center={center.center} options={options}/>\r\n                    <Circle center={center.center} options={Featheroptions}/>\r\n                </span>\r\n           )\r\n            \r\n        })\r\n        setCenterpoints(StorePoints)\r\n        \r\n    }\r\n    \r\n    \r\n    useEffect(()=>{  CreateCenterpoints() },[SCAN.SelectedModel])\r\n\r\n    useEffect(()=>{},[ Centerpoints])\r\n\r\n    return(\r\n        <>\r\n            {Centerpoints}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerCenterpoints;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\LocationMarkers.js",["916","917","918","919","920","921","922","923","924","925","926","927"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_UX_FULL} from \"../../../../Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker, MarkerClusterer  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\nimport {RegionColor} from \"../../../../actions/HandleUX\"\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n  const mcOptions = {\r\n    styles: [{\r\n        height: 53,\r\n        url: \"/clusters/m1.png\",\r\n        width: 53, \r\n\r\n      },\r\n      {\r\n        height: 56,\r\n        url: \"/clusters/m2.png\",\r\n        width: 56,\r\n      },\r\n      {\r\n        height: 66,\r\n        url: \"/clusters/m3.png\",\r\n        width: 66,\r\n      },\r\n      {\r\n        height: 78,\r\n        url: \"/clusters/m4.png\",\r\n        width: 78,\r\n      },\r\n      {\r\n        height: 90,\r\n        url: \"/clusters/m5.png\",\r\n        width: 90,\r\n      }\r\n    ]\r\n  }\r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkers = ()=>{\r\n\r\n    //const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name, Region)=>{console.log(\"Marker Clicked\", name, Region) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n        console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers,  clusterer)=>{\r\n\r\n        //console.log(\"markers\", markers)\r\n        let StoreMarkers=[];\r\n\r\n        markers.map((centerPoint,i)=>{\r\n          //console.log(centerPoint.sites)\r\n          centerPoint.sites.map((site,ii)=>{\r\n\r\n              Targeticon = {\r\n                //path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                path:\"M-24-48h48v48h-48z\",\r\n                fillColor: RegionColor(centerPoint.scanCategory),\r\n                fillOpacity: .9,\r\n                anchor: new window.google.maps.Point(0,0),\r\n                strokeWeight: 0,\r\n                scale: .3\r\n            }; \r\n          \r\n            \r\n            StoreMarkers.push( \r\n                \r\n                    <Marker\r\n                        clusterer={clusterer}\r\n                        key={site.name}\r\n                        onLoad={onLoadMarker}\r\n                        title={site.name}\r\n                        //label={site.name}\r\n                        icon={Targeticon}\r\n                        onClick={()=>{OnMarkerClick(site.name, centerPoint.scanCategory)}}\r\n                        position={{\r\n                                lat: parseFloat(site.lat),\r\n                                lng: parseFloat(site.long)\r\n                            }}\r\n                    />\r\n                \r\n            )\r\n            })\r\n        })\r\n        /*\r\n        Object.keys(markers).map((key, value)=>{\r\n            //console.log(markers[key], value)\r\n              markers[key].map((sites,i)=>{\r\n                  sites.map((site,ii)=>{\r\n\r\n                  \r\n                  })\r\n              })\r\n          })*/\r\n     //   setDisplayMarkers(StoreMarkers);\r\n        return StoreMarkers;\r\n        }\r\n\r\n\r\n \r\n   \r\n\r\n      useEffect(()=>{ \r\n        if(CreateMarkers(SCAN.SelectedModel.STOREMARKERCENTERPOINTS) != undefined)\r\n          CreateMarkers(SCAN.SelectedModel.STOREMARKERCENTERPOINTS)\r\n      },[SCAN.SelectedModel])\r\n\r\n      return(  <>\r\n               \r\n                 <MarkerClusterer options={mcOptions} maxZoom={12} minimumClusterSize={30}>\r\n                    {(clusterer) =>\r\n                       CreateMarkers(SCAN.SelectedModel.STOREMARKERCENTERPOINTS, clusterer)\r\n                    }\r\n                  </MarkerClusterer>\r\n                </>\r\n                )\r\n\r\n}\r\n\r\n\r\nexport default MarkerBasedLocationMarkers;\r\n\r\n//  {DisplayMarkers}\r\n/*\r\nlocations.map((location) => (\r\n                        <Marker key={createKey(location)} position={location} clusterer={clusterer} />\r\n                      ))\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\ResidualLocationMarkers.js",["928","929","930","931","932","933","934","935","936"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_STRAPI_FULL} from \"../../../../Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"../../../../Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\n\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkersALL = ()=>{\r\n\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name)=>{console.log(\"Marker Clicked\", name) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n       // console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n\r\n        //console.log(\"markers\", markers)\r\n        \r\n        let StoreMarkers=[]         \r\n                markers.map((site,i)=>{\r\n                    Targeticon = {\r\n                        //path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                        path:\"M-24-48h48v48h-48z\",\r\n                        fillColor: '#3D3D3D',\r\n                        fillOpacity: 1,\r\n                        anchor: new window.google.maps.Point(0,0),\r\n                        strokeWeight: 0,\r\n                        scale: .2,\r\n                        zIndex:10\r\n                    };\r\n                    StoreMarkers.push( \r\n                        \r\n                            <Marker\r\n                                key={i}\r\n                                onLoad={onLoadMarker}\r\n                                title={site.name}\r\n                                //label={site.name}\r\n                                icon={Targeticon}\r\n                                onClick={()=>{OnMarkerClick(site.name)}}\r\n                                position={{\r\n                                        lat: parseFloat(site.lat),\r\n                                        lng: parseFloat(site.long)\r\n                                    }}\r\n                            />\r\n                    )\r\n                })\r\n        setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{  CreateMarkers(SCAN.SelectedModel.STORERESIDUALMARKERS)},[SCAN.SelectedModel])\r\n\r\n      return(  <>{DisplayMarkers}</>) \r\n\r\n}\r\n\r\nexport default MarkerBasedLocationMarkersALL;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\MarkerBasedResults.js",["937","938"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\nimport ClusterResults from \"./ClusterResults\";\r\nimport {GroupArrayByOccurances} from \"../../../../actions/HandleUX\";\r\nimport {FindTradeTypeAllocation, findClientName} from \"../../../../actions/ClusterAnalysis\";\r\nimport { Data } from '@react-google-maps/api';\r\n\r\nconst MarkerBasedResults = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n\r\n    const CLUSTERSTATS = SCAN.SelectedModel.CLUSTERSTATS;\r\n    \r\n    const [Results, setResults] = useState(null)\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n    const [TradeAllocation,setTradeAllocation] = useState([[],[]])\r\n\r\n\r\n    const extractResults=()=>{\r\n        //console.log(SCAN.SelectedModel.STOREMARKERCENTERPOINTS);\r\n\r\n        let ResultArr=[];\r\n        let CategoryInt=[]\r\n            SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((result,i)=>{\r\n                ResultArr.push( <li key={i}> <ClusterResults  result={result} i={i}/></li>)\r\n                CategoryInt.push(result.scanCategory)\r\n                return true\r\n            })\r\n            setResults(ResultArr);\r\n            setCategoryOccurance(GroupArrayByOccurances(CategoryInt))\r\n    }\r\n\r\n    const gl=(data)=>{\r\n        return data.length\r\n    }\r\n\r\n    useEffect(()=>{ \r\n     \r\n        if(SCAN.SelectedModel.STOREMARKERCENTERPOINTS !==null){\r\n            extractResults()\r\n            setTradeAllocation(FindTradeTypeAllocation(SCAN.SelectedModel.STOREMARKERCENTERPOINTS));\r\n        \r\n        }\r\n            \r\n     \r\n    },[SCAN]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"ResultsHeader\">\r\n            \r\n            <h2>Model Stats</h2>\r\n\r\n            <h3>Clusters : {CLUSTERSTATS.clusters}</h3>\r\n            <h3>Total Locations {gl(SCAN.SelectedModel.USERSELECTEDLIST)} </h3>\r\n            <h3>Unaccommodated Locations : {CLUSTERSTATS.UnaccommodatedLocations}</h3>\r\n            <h3>Locations Inscope {CLUSTERSTATS.Inscope} ({ ((CLUSTERSTATS.Inscope/gl(SCAN.SelectedModel.USERSELECTEDLIST)*100)).toFixed(2)}%)</h3>\r\n            \r\n            <hr />\r\n\r\n                <h3>Clients Total Work Orders {CLUSTERSTATS.TotalWorkOrders}</h3>\r\n                <h3>Work Orders Covered in model {CLUSTERSTATS.WorkOrdersCoveredInModel} ({((CLUSTERSTATS.WorkOrdersCoveredInModel/CLUSTERSTATS.TotalWorkOrders)*100).toFixed(2)}%)</h3>\r\n            \r\n            <hr />\r\n\r\n\r\n            <h4>Model Work Orders by Client</h4>\r\n            \r\n            <ul className=\"\">\r\n                {\r\n                    Object.keys(CLUSTERSTATS.ByClient).map(function(key, i) {\r\n                        return(\r\n                            <li key={i}>\r\n                                {findClientName(key)} : {CLUSTERSTATS.ByClient[key]} \r\n                            </li>\r\n                            )\r\n                      })        \r\n                }\r\n            </ul>\r\n            <hr />\r\n            <h3>Resource Allocation : {CLUSTERSTATS.ResourceAllocation}</h3>\r\n            <h3>Avg WO Completed per resource: {(CLUSTERSTATS.WorkOrdersCoveredInModel/CLUSTERSTATS.ResourceAllocation).toFixed(2)} ({((CLUSTERSTATS.WorkOrdersCoveredInModel/CLUSTERSTATS.ResourceAllocation)/250).toFixed(2)}) </h3>\r\n         \r\n            <hr />\r\n\r\n            <h4>Trade Overview:</h4>\r\n            <p>These numbers are just instances, not real numbers</p>\r\n            <ul className=\"ClustersbyCategory\">\r\n                {\r\n                    TradeAllocation[0].map((trade,i)=>{\r\n                        return(\r\n                            <li key={i}>\r\n                                {trade} {TradeAllocation[1][i]}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n\r\n            <h4>Cluster by Tiers</h4>\r\n                <ul className=\"ClustersbyCategory\">\r\n                    {\r\n                        CategoryOccurance[0].map((cat,i)=>{\r\n                            return(\r\n                                <li key={i}>\r\n                                        {cat} : {CategoryOccurance[1][i]}\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n           \r\n            </div>\r\n\r\n            <ul className=\"ListResults\">\r\n                    {Results}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerBasedResults;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\ClusterResults.js",["939","940","941","942","943"],"import React, { useEffect, useState } from 'react'\r\nimport{NumberReducer, RegionColor, GroupArrayByOccurances} from \"../../../../actions/HandleUX\";\r\nimport {findClientName, FindTradeTypeAllocation} from \"../../../../actions/ClusterAnalysis\";\r\nimport ClusterMiniMap from \"./ClusterMiniMap\";\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\n\r\nconst ClusterResult = (props)=>{\r\n\r\n    const {result, i} = props;\r\n    const [WorkOrderTotal, setWorkOrderTotal] = useState(0)\r\n   \r\n    const SumWorkorders = (data)=>{\r\n        let total = []\r\n        data.map((site)=>{\r\n            if(!isNaN(site.SumWorkOrder))\r\n                total.push(site.SumWorkOrder)\r\n        })\r\n        setWorkOrderTotal(total.reduce((a, b) => a + b, 0))\r\n    }\r\n\r\n    const SumTradeType = ()=>{\r\n\r\n    }\r\n \r\n    useEffect(()=>{ \r\n        //FindClusterTotal(result)\r\n        SumWorkorders(result.sites) \r\n        SumTradeType(result.sites)\r\n        //console.log(result)\r\n    },[result])\r\n \r\n    return(\r\n        <>\r\n            \r\n            <div className=\"colorkey\" style={{backgroundColor:RegionColor(result.scanCategory)}}>\r\n             <strong>{result.scanCategory}</strong>\r\n            </div>\r\n          \r\n            <h3><LocationCityIcon /> Cluster { (i+1) }</h3>            \r\n            <ul className=\"ListStats\">\r\n                <li>Sites: <strong>{result.sites.length}</strong></li>\r\n                <li>Total Work Orders: <strong>{WorkOrderTotal}</strong></li>\r\n                <li>Resource Quota : <strong>{result.resourceQuota.toFixed(2)}</strong></li> \r\n               \r\n               <li>\r\n                   Clients\r\n                   <GetClientName clients = {GroupArrayByOccurances(JSON.parse(result.sites[0].count[0].Customers))}/></li>\r\n                <li>\r\n                    Trade Types %\r\n                   <GetTradeName Trades = {FindTradeTypeAllocation([{sites:result.sites}])}/></li>\r\n               \r\n             \r\n            </ul>\r\n            <h4></h4> \r\n           \r\n            \r\n            \r\n            <div className=\"ListResultContainer\">\r\n               <ClusterMiniMap result={result}/>\r\n            </div>\r\n                \r\n               \r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\n   <li>est Cost : <strong>$?</strong></li>\r\n  <CenterPoints />\r\n                        <Markers />\r\n                        <ResidualMarkers />\r\n*/\r\nexport default ClusterResult;\r\n\r\n//<h3> {result.name}</h3>\r\n\r\nconst GetTradeName = (props)=>{\r\n    const {Trades} = props\r\n    const [TradeAllocationTotal, setTradeAllocationTotal] = useState(0)\r\n    const TradeWoRatioForDemo=(num)=>{\r\n        return ((num/TradeAllocationTotal)*100).toFixed(2)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let TWV=0\r\n        Trades[1].map((value,i)=>{TWV= TWV+value})\r\n        setTradeAllocationTotal(TWV)\r\n    },[])\r\n\r\n    return(\r\n        <ul>\r\n            {\r\n                Trades[0].map((trade,i)=>{\r\n                    return(\r\n                        <li key={i}>\r\n                            {trade} <strong>{ TradeWoRatioForDemo(Trades[1][i]) }%</strong>\r\n                        </li>\r\n                    )\r\n                })\r\n\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n \r\n\r\nconst GetClientName = (props)=>{\r\n    const {clients} = props\r\n    return(\r\n        <ul>\r\n            {\r\n                clients[0].map((client, i )=>{\r\n                    return(\r\n                        <li key={i}><strong>{findClientName(client)}</strong></li>\r\n                    )\r\n                })\r\n\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\ClusterMiniMap.js",["944","945","946","947","948"],"import React, { useEffect, useState } from 'react'\r\nimport { GoogleMap, Circle,Marker,Polygon } from '@react-google-maps/api';\r\n\r\nimport {RegionColor} from \"../../../../actions/HandleUX\";\r\n\r\nconst containerStyle = { height: \"300px\", width: \"auto\" };\r\nlet Targeticon = { };\r\nconst ClusterMap = (props)=>{\r\n    const {result} = props;\r\n\r\n    const [markers, setMarkers] = useState([])\r\n    const [PolyPath, setPolyPath] = useState([])\r\n\r\n    let options = {\r\n        strokeColor: RegionColor(result.scanCategory),\r\n        strokeOpacity: 0.9,\r\n        strokeWeight: 1,\r\n        fillColor: RegionColor(result.scanCategory),\r\n        fillOpacity: 0.2,\r\n        radius: ((result.range*1000)),\r\n        zIndex: 1\r\n      }\r\n\r\n      const CreateMarkers = ()=>{\r\n\r\n        //console.log(\"markers\", markers)\r\n        let StoreMarkers=[];\r\n\r\n    \r\n          //console.log(centerPoint.sites)\r\n          result.sites.map((site,ii)=>{\r\n\r\n              Targeticon = {\r\n                //path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                path:\"M-24-48h48v48h-48z\",\r\n                fillColor: RegionColor(result.scanCategory),\r\n                fillOpacity: .9,\r\n                anchor: new window.google.maps.Point(0,0), \r\n                strokeWeight: 0,\r\n                scale: .5\r\n            }; \r\n          \r\n            \r\n            StoreMarkers.push( \r\n                \r\n                    <Marker\r\n                       \r\n                        key={site.name}\r\n                     \r\n                        title={site.name}\r\n                        label={site.name}\r\n                        icon={Targeticon}\r\n                        \r\n                        position={{\r\n                                lat: parseFloat(site.lat),\r\n                                lng: parseFloat(site.long)\r\n                            }}\r\n                    />\r\n                \r\n            )\r\n            })\r\n            setMarkers(StoreMarkers);\r\n        }\r\n\r\n\r\n\r\n        const CreatePolygon = ()=>{\r\n          let Polyoptions = {\r\n            strokeColor: RegionColor(result.scanCategory),\r\n            strokeOpacity: 1,\r\n            strokeWeight: 1.5,\r\n            fillColor: RegionColor(result.scanCategory),\r\n            fillOpacity: 0.1,\r\n          \r\n            zIndex: 1\r\n          }\r\n\r\n              let PolygonPath=[]\r\n              result.polygon.map((point,i)=>{\r\n                  //console.log(point)\r\n                  PolygonPath.push({ lat: point[0], lng: point[1]})\r\n              })\r\n              \r\n              setPolyPath(<Polygon paths={PolygonPath} options={Polyoptions} />)\r\n              \r\n            }\r\n\r\n\r\n      useEffect(()=>{  \r\n        CreateMarkers() \r\n        CreatePolygon()\r\n      },[])\r\n\r\n    return(\r\n        <GoogleMap \r\n                mapContainerStyle={containerStyle}\r\n                center={result.center}\r\n                zoom={15}\r\n            >\r\n                { /* Child components, such as markers, info windows, etc. */ }\r\n               \r\n                {markers}\r\n                {PolyPath}\r\n        </GoogleMap>\r\n\r\n    )\r\n}\r\n// <Circle center={result.center} options={options}/>\r\nexport default ClusterMap;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Footer.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Polygons.js",["949","950","951","952"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\nimport {RegionColor} from \"../../../../actions/HandleUX\"\r\nimport {Polygon} from '@react-google-maps/api';\r\n\r\n\r\nconst options = {\r\n    fillColor: \"lightblue\",\r\n    fillOpacity: .1,\r\n    strokeColor: \"red\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n  }\r\n\r\n\r\nconst Polygons = ()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayPolygons, setPolygons] = useState([])\r\n\r\n    const CreatePolygons = ()=>{\r\n        let CreatePolyPaths=[]\r\n        SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((centerpoint,i)=>{\r\n                //console.log(centerpoint.polygon)\r\n\r\n                let options = {\r\n                    strokeColor: RegionColor(centerpoint.scanCategory),\r\n                    strokeOpacity: 1,\r\n                    strokeWeight: 1.5,\r\n                    fillColor: RegionColor(centerpoint.scanCategory),\r\n                    fillOpacity: 0.1,\r\n                  \r\n                    zIndex: 1\r\n                  }\r\n\r\n                let PolygonPath=[]\r\n                centerpoint.polygon.map((point,i)=>{\r\n                    //console.log(point)\r\n                    PolygonPath.push({ lat: point[0], lng: point[1]})\r\n                })\r\n                CreatePolyPaths.push(\r\n                    <Polygon paths={PolygonPath} options={options} />\r\n                )\r\n                \r\n        })\r\n\r\n        setPolygons(CreatePolyPaths)\r\n    }\r\n\r\n\r\n\r\n    useEffect(()=>{  \r\n     \r\n        CreatePolygons()\r\n     },[SCAN.SelectedModel])\r\n\r\n     useEffect(()=>{},[DisplayPolygons])\r\n    return(\r\n        <>\r\n            {DisplayPolygons}\r\n        </>\r\n    )\r\n} \r\n\r\nexport default Polygons;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\HeaderLocations.js",["953"],"import React, {useEffect} from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../../../Context/SCAN\";\r\nimport { numberWithCommas} from \"../../../../../actions/HandleUX\";\r\n\r\nconst HeaderLocations=()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const MODEL = SCAN.SelectedModel\r\n \r\n    const gl=(data)=>{\r\n        return data.length\r\n    }\r\n\r\n    const inScope=()=>{\r\n        return gl(MODEL.USERSELECTEDLIST)-gl(MODEL.STORERESIDUALMARKERS)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(MODEL)\r\n    },[]) \r\n    return(\r\n        <div className=\"MetaRow\">\r\n            <h2>Locations</h2>\r\n                <div>\r\n                    {MODEL.STOREMARKERCENTERPOINTS.length}\r\n                    <h3>Clusters </h3>\r\n                    &nbsp;\r\n                </div>\r\n                <div>\r\n                    {numberWithCommas(gl(MODEL.USERSELECTEDLIST))}\r\n                    <h3>Total Locations </h3>\r\n                    &nbsp;\r\n                </div>\r\n                <div>\r\n                 {numberWithCommas(inScope())} \r\n                    <h3>Locations Inscope </h3>\r\n                    { ((inScope()/gl(MODEL.USERSELECTEDLIST)*100)).toFixed(2)}%\r\n                </div>\r\n                <div>\r\n                    {numberWithCommas(gl(MODEL.STORERESIDUALMARKERS))}\r\n                    <h3>Out of Scope</h3>\r\n                    &nbsp;\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\nexport default HeaderLocations;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\HeaderTotalWorkOrder.js",["954","955"],"import React from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../../../Context/SCAN\";\r\nimport {numberWithCommas} from \"../../../../../actions/HandleUX\";\r\n\r\nconst HeaderTotalWorkOrder = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const Model = SCAN.SelectedModel;\r\n    \r\n    const TotalWorkOrders=(Data)=>{\r\n        let TotalWOs=[]\r\n        Data.map((site,i)=>{\r\n            if(site.SumWorkOrder !== undefined) \r\n                TotalWOs.push(site.SumWorkOrder)\r\n        })\r\n        return TotalWOs.reduce((a, b) => a + b, 0)\r\n    }\r\n\r\n    const WOsCoveredInModel = ()=>{\r\n        let ModelTotal=[];\r\n            Model.STOREMARKERCENTERPOINTS.map((site)=>{\r\n                ModelTotal.push(TotalWorkOrders(site.sites))\r\n            })\r\n        return ModelTotal.reduce((a, b) => a + b, 0)\r\n    }\r\n\r\n    return(\r\n        <div className=\"MetaRow\">\r\n        <h2>Workorders</h2>\r\n                <div>\r\n                        {numberWithCommas(TotalWorkOrders(Model.USERSELECTEDLIST))}\r\n                        <h3>Clients Total Work Orders </h3>\r\n                        &nbsp;\r\n                </div>\r\n                <div>\r\n                    {numberWithCommas(WOsCoveredInModel())} \r\n                    \r\n                    <h3>Work Orders Covered in model </h3>\r\n                    {((WOsCoveredInModel()/TotalWorkOrders(Model.USERSELECTEDLIST))*100).toFixed(2)}%\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\nexport default HeaderTotalWorkOrder;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\HeaderClusterbyClientName.js",["956","957","958"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../../../Context/SCAN\";\r\nimport {findClientName} from \"../../../../../actions/ClusterAnalysis\";\r\n\r\nconst ClusterByClientName = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [byClient, setByClient] = useState([])\r\n    const Model = SCAN.SelectedModel;\r\n    const ByClient=()=>{\r\n        let client=[];\r\n        let SumByClient\r\n        Model.STOREMARKERCENTERPOINTS.map((sites,i)=>{\r\n            sites.sites.map((site,i)=>{\r\n                client.push({\r\n                    sum:site.SumWorkOrder,\r\n                    client:site.customers[0]\r\n                })\r\n            })\r\n        })\r\n      \r\n        SumByClient = client.reduce(function (r, o) { (r[o.client])? r[o.client] += o.sum : r[o.client] = o.sum; return r; }, {});\r\n\r\n        setByClient(SumByClient)\r\n    }\r\n\r\n    useEffect(()=>{ByClient()},[SCAN])\r\n\r\n    return(\r\n        <div className=\"ResultsHeader\">\r\n        <ul className=\"\">\r\n           {\r\n               Object.keys(byClient).map(function(key, i) {\r\n                   return(\r\n                       <li key={i}>\r\n                           <div>{findClientName(key)}</div>\r\n                           <div>{byClient[key]} </div>\r\n                       </li>\r\n                       )\r\n                 })        \r\n           }\r\n       </ul>\r\n   </div>\r\n    )\r\n}\r\n\r\nexport default ClusterByClientName;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\ClusterByCategory.js",["959"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../../../Context/SCAN\";\r\nimport {GroupArrayByOccurances} from \"../../../../../actions/HandleUX\";\r\n\r\nconst ClusterByCategory = () =>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n\r\n    const extractResults=()=>{\r\n        let CategoryInt=[]\r\n            SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((result,i)=>{\r\n                CategoryInt.push(result.scanCategory)\r\n                return true\r\n            })\r\n        setCategoryOccurance(GroupArrayByOccurances(CategoryInt))\r\n    }\r\n\r\n    useEffect(()=>{extractResults()},[SCAN])\r\n\r\n    return(\r\n        <div className=\"ResultsHeader\">\r\n        <ul className=\"ClustersbyCategory\">\r\n            {\r\n                CategoryOccurance[0].map((cat,i)=>{\r\n                    return(\r\n                        <li key={i}>\r\n                                {cat} : {CategoryOccurance[1][i]}\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n   \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ClusterByCategory;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\ByTradeRatio.js",["960","961","962"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../../../Context/SCAN\";\r\nimport {FindTradeTypeAllocation} from \"../../../../../actions/ClusterAnalysis\";\r\n\r\n\r\nconst ByTradeRatio = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const Model = SCAN.SelectedModel;\r\n    \r\n    const [TradeAllocationTotal, setTradeAllocationTotal] = useState(0)\r\n    const [TradeAllocation,setTradeAllocation] = useState([[],[]])\r\n    \r\n    const TradeWoRatioForDemo=(num)=>{\r\n        return ((num/TradeAllocationTotal)*100).toFixed(2)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let TWV=0\r\n        FindTradeTypeAllocation(Model.STOREMARKERCENTERPOINTS)[1].map((value,i)=>{TWV= TWV+value})\r\n        setTradeAllocationTotal(TWV)\r\n    },[])\r\n    \r\n    return(\r\n        <div className=\"ResultsHeader\">\r\n        <h4>Workorders by Trade Type</h4>\r\n        <ul className=\"ClustersbyCategory\">\r\n            {\r\n                TradeAllocation[0].map((trade,i)=>{\r\n                    return(\r\n                        <li key={i}>\r\n                            <span>{TradeWoRatioForDemo(TradeAllocation[1][i])}%</span>\r\n                            {trade} \r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n     \r\n</div>\r\n    )\r\n}\r\n\r\nexport default ByTradeRatio;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\HeaderResourceAllocationRatios.js",["963","964","965","966"],"import React from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../../../Context/SCAN\";\r\n\r\n\r\nconst ResourceAllocationRatios = ()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const Model = SCAN.SelectedModel;\r\n    \r\n    const FindTotalResourceAllocation = ()=>{\r\n        let TotalResources = 0\r\n        Model.STOREMARKERCENTERPOINTS.map((point,i)=>{\r\n            point.resourceQuota.map((resource,i)=>{\r\n                TotalResources = TotalResources + resource.ResourceAllocation\r\n            })\r\n                \r\n        })\r\n        return TotalResources.toFixed(2);\r\n    }\r\n\r\n    const TotalWorkOrders=(data)=>{\r\n        let TotalWOs=[]\r\n        data.map((site,i)=>{\r\n            if(site.SumWorkOrder !== undefined) \r\n                TotalWOs.push(site.SumWorkOrder)\r\n        })\r\n        return TotalWOs.reduce((a, b) => a + b, 0)\r\n    }\r\n\r\n    const WOsCoveredInModel = ()=>{\r\n        let ModelTotal=[];\r\n        Model.STOREMARKERCENTERPOINTS.map((site)=>{\r\n                ModelTotal.push(TotalWorkOrders(site.sites))\r\n            })\r\n        return ModelTotal.reduce((a, b) => a + b, 0)\r\n    }\r\n\r\n    return(\r\n        <div className=\"MetaRow\">\r\n        <h2>Resources</h2>\r\n                <div>\r\n                    {FindTotalResourceAllocation()}\r\n                    <h3>Resource Allocation </h3>\r\n                </div>\r\n                <div>\r\n                   {((WOsCoveredInModel()/FindTotalResourceAllocation())/250).toFixed(2)}\r\n                    <h3>Avg WO Completed per resource</h3>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResourceAllocationRatios;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\HeaderStats\\HeaderTitle.js",["967"],"import React, { useEffect } from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../../../Context/SCAN\";\r\nimport { HandleTZDate} from \"../../../../../actions/HandleUX\";\r\nconst HeaderTitle = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const SCANMODELMETA = SCAN.SelectedModelMeta\r\n\r\n    useEffect(()=>{\r\n        console.log(SCAN)\r\n    },[])\r\n    return(\r\n        <div className=\"ModelSingleHeader\">\r\n                <div className=\"created\"><p>Created : {HandleTZDate(SCANMODELMETA.createdAt)}</p></div>\r\n                <h2>Model : {SCANMODELMETA.Name}</h2>\r\n                <p>{SCANMODELMETA.Description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderTitle;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\UICompnents\\index.js",[],{"ruleId":"968","severity":1,"message":"969","line":21,"column":7,"nodeType":"970","messageId":"971","endLine":21,"endColumn":15},{"ruleId":"972","replacedBy":"973"},{"ruleId":"974","replacedBy":"975"},{"ruleId":"976","severity":1,"message":"977","line":153,"column":42,"nodeType":"978","messageId":"979","endLine":153,"endColumn":44},{"ruleId":"980","severity":1,"message":"981","line":16,"column":15,"nodeType":"982","messageId":"983","endLine":16,"endColumn":17},{"ruleId":"980","severity":1,"message":"981","line":16,"column":33,"nodeType":"982","messageId":"983","endLine":16,"endColumn":35},{"ruleId":"980","severity":1,"message":"981","line":31,"column":17,"nodeType":"982","messageId":"983","endLine":31,"endColumn":19},{"ruleId":"980","severity":1,"message":"981","line":32,"column":17,"nodeType":"982","messageId":"983","endLine":32,"endColumn":19},{"ruleId":"968","severity":1,"message":"984","line":287,"column":12,"nodeType":"970","messageId":"971","endLine":287,"endColumn":26},{"ruleId":"976","severity":1,"message":"977","line":290,"column":43,"nodeType":"978","messageId":"979","endLine":290,"endColumn":45},{"ruleId":"976","severity":1,"message":"985","line":332,"column":73,"nodeType":"986","messageId":"987","endLine":332,"endColumn":82},{"ruleId":"976","severity":1,"message":"977","line":342,"column":26,"nodeType":"978","messageId":"979","endLine":342,"endColumn":28},{"ruleId":"976","severity":1,"message":"977","line":53,"column":33,"nodeType":"978","messageId":"979","endLine":53,"endColumn":35},{"ruleId":"976","severity":1,"message":"977","line":55,"column":44,"nodeType":"978","messageId":"979","endLine":55,"endColumn":46},{"ruleId":"988","severity":1,"message":"989","line":98,"column":11,"nodeType":"990","messageId":"991","endLine":98,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":101,"column":11,"nodeType":"990","messageId":"991","endLine":101,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":104,"column":11,"nodeType":"990","messageId":"991","endLine":104,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":107,"column":11,"nodeType":"990","messageId":"991","endLine":107,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":110,"column":11,"nodeType":"990","messageId":"991","endLine":110,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":113,"column":11,"nodeType":"990","messageId":"991","endLine":113,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":116,"column":11,"nodeType":"990","messageId":"991","endLine":116,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":119,"column":11,"nodeType":"990","messageId":"991","endLine":119,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":122,"column":11,"nodeType":"990","messageId":"991","endLine":122,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":125,"column":11,"nodeType":"990","messageId":"991","endLine":125,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":128,"column":11,"nodeType":"990","messageId":"991","endLine":128,"endColumn":17},{"ruleId":"992","severity":1,"message":"993","line":163,"column":3,"nodeType":"994","messageId":"995","endLine":189,"endColumn":4},{"ruleId":"988","severity":1,"message":"989","line":166,"column":13,"nodeType":"990","messageId":"991","endLine":166,"endColumn":19},{"ruleId":"988","severity":1,"message":"989","line":169,"column":9,"nodeType":"990","messageId":"991","endLine":169,"endColumn":15},{"ruleId":"988","severity":1,"message":"989","line":172,"column":11,"nodeType":"990","messageId":"991","endLine":172,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":175,"column":11,"nodeType":"990","messageId":"991","endLine":175,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":178,"column":11,"nodeType":"990","messageId":"991","endLine":178,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":181,"column":11,"nodeType":"990","messageId":"991","endLine":181,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":184,"column":11,"nodeType":"990","messageId":"991","endLine":184,"endColumn":17},{"ruleId":"988","severity":1,"message":"989","line":187,"column":11,"nodeType":"990","messageId":"991","endLine":187,"endColumn":17},{"ruleId":"972","replacedBy":"996"},{"ruleId":"974","replacedBy":"997"},{"ruleId":"968","severity":1,"message":"998","line":3,"column":18,"nodeType":"970","messageId":"971","endLine":3,"endColumn":22},{"ruleId":"976","severity":1,"message":"977","line":33,"column":26,"nodeType":"978","messageId":"979","endLine":33,"endColumn":28},{"ruleId":"968","severity":1,"message":"999","line":71,"column":11,"nodeType":"970","messageId":"971","endLine":71,"endColumn":30},{"ruleId":"976","severity":1,"message":"977","line":73,"column":29,"nodeType":"978","messageId":"979","endLine":73,"endColumn":31},{"ruleId":"976","severity":1,"message":"977","line":105,"column":24,"nodeType":"978","messageId":"979","endLine":105,"endColumn":26},{"ruleId":"976","severity":1,"message":"977","line":106,"column":35,"nodeType":"978","messageId":"979","endLine":106,"endColumn":37},{"ruleId":"976","severity":1,"message":"977","line":112,"column":53,"nodeType":"978","messageId":"979","endLine":112,"endColumn":55},{"ruleId":"976","severity":1,"message":"977","line":122,"column":26,"nodeType":"978","messageId":"979","endLine":122,"endColumn":28},{"ruleId":"976","severity":1,"message":"977","line":140,"column":29,"nodeType":"978","messageId":"979","endLine":140,"endColumn":31},{"ruleId":"968","severity":1,"message":"1000","line":150,"column":7,"nodeType":"970","messageId":"971","endLine":150,"endColumn":22},{"ruleId":"976","severity":1,"message":"977","line":152,"column":24,"nodeType":"978","messageId":"979","endLine":152,"endColumn":26},{"ruleId":"976","severity":1,"message":"977","line":160,"column":40,"nodeType":"978","messageId":"979","endLine":160,"endColumn":42},{"ruleId":"980","severity":1,"message":"1001","line":163,"column":19,"nodeType":"982","messageId":"983","endLine":163,"endColumn":21},{"ruleId":"968","severity":1,"message":"1002","line":178,"column":9,"nodeType":"970","messageId":"971","endLine":178,"endColumn":17},{"ruleId":"976","severity":1,"message":"977","line":192,"column":34,"nodeType":"978","messageId":"979","endLine":192,"endColumn":36},{"ruleId":"976","severity":1,"message":"977","line":196,"column":37,"nodeType":"978","messageId":"979","endLine":196,"endColumn":39},{"ruleId":"980","severity":1,"message":"981","line":213,"column":94,"nodeType":"982","messageId":"983","endLine":213,"endColumn":96},{"ruleId":"980","severity":1,"message":"1001","line":215,"column":30,"nodeType":"982","messageId":"983","endLine":215,"endColumn":32},{"ruleId":"968","severity":1,"message":"1003","line":267,"column":9,"nodeType":"970","messageId":"971","endLine":267,"endColumn":27},{"ruleId":"976","severity":1,"message":"977","line":269,"column":28,"nodeType":"978","messageId":"979","endLine":269,"endColumn":30},{"ruleId":"976","severity":1,"message":"977","line":287,"column":27,"nodeType":"978","messageId":"979","endLine":287,"endColumn":29},{"ruleId":"976","severity":1,"message":"977","line":289,"column":37,"nodeType":"978","messageId":"979","endLine":289,"endColumn":39},{"ruleId":"976","severity":1,"message":"977","line":303,"column":25,"nodeType":"978","messageId":"979","endLine":303,"endColumn":27},{"ruleId":"976","severity":1,"message":"977","line":305,"column":35,"nodeType":"978","messageId":"979","endLine":305,"endColumn":37},{"ruleId":"1004","severity":1,"message":"1005","line":5,"column":13,"nodeType":"1006","endLine":5,"endColumn":73},{"ruleId":"1004","severity":1,"message":"1005","line":9,"column":13,"nodeType":"1006","endLine":9,"endColumn":79},{"ruleId":"980","severity":1,"message":"981","line":6,"column":15,"nodeType":"982","messageId":"983","endLine":6,"endColumn":17},{"ruleId":"980","severity":1,"message":"981","line":6,"column":33,"nodeType":"982","messageId":"983","endLine":6,"endColumn":35},{"ruleId":"980","severity":1,"message":"981","line":21,"column":17,"nodeType":"982","messageId":"983","endLine":21,"endColumn":19},{"ruleId":"980","severity":1,"message":"981","line":22,"column":17,"nodeType":"982","messageId":"983","endLine":22,"endColumn":19},{"ruleId":"976","severity":1,"message":"977","line":59,"column":35,"nodeType":"978","messageId":"979","endLine":59,"endColumn":37},{"ruleId":"1007","severity":1,"message":"1008","line":108,"column":28,"nodeType":"1009","messageId":"1010","endLine":108,"endColumn":30},{"ruleId":"1007","severity":1,"message":"1008","line":108,"column":58,"nodeType":"1009","messageId":"1010","endLine":108,"endColumn":60},{"ruleId":"976","severity":1,"message":"977","line":119,"column":42,"nodeType":"978","messageId":"979","endLine":119,"endColumn":44},{"ruleId":"976","severity":1,"message":"977","line":145,"column":29,"nodeType":"978","messageId":"979","endLine":145,"endColumn":31},{"ruleId":"976","severity":1,"message":"977","line":146,"column":47,"nodeType":"978","messageId":"979","endLine":146,"endColumn":49},{"ruleId":"976","severity":1,"message":"1011","line":231,"column":46,"nodeType":"978","messageId":"987","endLine":231,"endColumn":48},{"ruleId":"980","severity":1,"message":"981","line":245,"column":87,"nodeType":"982","messageId":"983","endLine":245,"endColumn":89},{"ruleId":"976","severity":1,"message":"977","line":295,"column":29,"nodeType":"978","messageId":"979","endLine":295,"endColumn":31},{"ruleId":"980","severity":1,"message":"981","line":297,"column":80,"nodeType":"982","messageId":"983","endLine":297,"endColumn":82},{"ruleId":"976","severity":1,"message":"977","line":50,"column":26,"nodeType":"978","messageId":"979","endLine":50,"endColumn":28},{"ruleId":"968","severity":1,"message":"1012","line":185,"column":7,"nodeType":"970","messageId":"971","endLine":185,"endColumn":15},{"ruleId":"1013","severity":1,"message":"1014","line":15,"column":73,"nodeType":"1015","endLine":15,"endColumn":79,"suggestions":"1016"},{"ruleId":"968","severity":1,"message":"1017","line":1,"column":16,"nodeType":"970","messageId":"971","endLine":1,"endColumn":25},{"ruleId":"968","severity":1,"message":"1018","line":1,"column":27,"nodeType":"970","messageId":"971","endLine":1,"endColumn":35},{"ruleId":"968","severity":1,"message":"1019","line":6,"column":9,"nodeType":"970","messageId":"971","endLine":6,"endColumn":23},{"ruleId":"968","severity":1,"message":"1020","line":9,"column":11,"nodeType":"970","messageId":"971","endLine":9,"endColumn":17},{"ruleId":"968","severity":1,"message":"1021","line":10,"column":11,"nodeType":"970","messageId":"971","endLine":10,"endColumn":18},{"ruleId":"976","severity":1,"message":"977","line":23,"column":39,"nodeType":"978","messageId":"979","endLine":23,"endColumn":41},{"ruleId":"1013","severity":1,"message":"1022","line":46,"column":7,"nodeType":"1015","endLine":46,"endColumn":25,"suggestions":"1023"},{"ruleId":"968","severity":1,"message":"1024","line":6,"column":21,"nodeType":"970","messageId":"971","endLine":6,"endColumn":31},{"ruleId":"968","severity":1,"message":"1025","line":6,"column":33,"nodeType":"970","messageId":"971","endLine":6,"endColumn":39},{"ruleId":"968","severity":1,"message":"1026","line":14,"column":5,"nodeType":"970","messageId":"971","endLine":14,"endColumn":6},{"ruleId":"1013","severity":1,"message":"1027","line":24,"column":60,"nodeType":"1015","endLine":24,"endColumn":81,"suggestions":"1028"},{"ruleId":"968","severity":1,"message":"1029","line":49,"column":9,"nodeType":"970","messageId":"971","endLine":49,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1030","line":65,"column":10,"nodeType":"1015","endLine":65,"endColumn":12,"suggestions":"1031"},{"ruleId":"968","severity":1,"message":"1032","line":5,"column":10,"nodeType":"970","messageId":"971","endLine":5,"endColumn":20},{"ruleId":"968","severity":1,"message":"1033","line":22,"column":19,"nodeType":"970","messageId":"971","endLine":22,"endColumn":27},{"ruleId":"968","severity":1,"message":"1034","line":23,"column":22,"nodeType":"970","messageId":"971","endLine":23,"endColumn":33},{"ruleId":"968","severity":1,"message":"1033","line":22,"column":19,"nodeType":"970","messageId":"971","endLine":22,"endColumn":27},{"ruleId":"968","severity":1,"message":"1034","line":23,"column":22,"nodeType":"970","messageId":"971","endLine":23,"endColumn":33},{"ruleId":"968","severity":1,"message":"1033","line":22,"column":19,"nodeType":"970","messageId":"971","endLine":22,"endColumn":27},{"ruleId":"968","severity":1,"message":"1034","line":23,"column":22,"nodeType":"970","messageId":"971","endLine":23,"endColumn":33},{"ruleId":"968","severity":1,"message":"1033","line":22,"column":19,"nodeType":"970","messageId":"971","endLine":22,"endColumn":27},{"ruleId":"968","severity":1,"message":"1034","line":23,"column":22,"nodeType":"970","messageId":"971","endLine":23,"endColumn":33},{"ruleId":"968","severity":1,"message":"1034","line":24,"column":22,"nodeType":"970","messageId":"971","endLine":24,"endColumn":33},{"ruleId":"968","severity":1,"message":"1033","line":26,"column":19,"nodeType":"970","messageId":"971","endLine":26,"endColumn":27},{"ruleId":"968","severity":1,"message":"1035","line":6,"column":10,"nodeType":"970","messageId":"971","endLine":6,"endColumn":21},{"ruleId":"976","severity":1,"message":"977","line":90,"column":24,"nodeType":"978","messageId":"979","endLine":90,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1036","line":102,"column":7,"nodeType":"1015","endLine":102,"endColumn":13,"suggestions":"1037"},{"ruleId":"980","severity":1,"message":"1001","line":105,"column":32,"nodeType":"982","messageId":"983","endLine":105,"endColumn":34},{"ruleId":"1013","severity":1,"message":"1038","line":105,"column":73,"nodeType":"1015","endLine":105,"endColumn":79,"suggestions":"1039"},{"ruleId":"968","severity":1,"message":"1040","line":1,"column":27,"nodeType":"970","messageId":"971","endLine":1,"endColumn":34},{"ruleId":"968","severity":1,"message":"1041","line":13,"column":12,"nodeType":"970","messageId":"971","endLine":13,"endColumn":25},{"ruleId":"968","severity":1,"message":"1042","line":13,"column":26,"nodeType":"970","messageId":"971","endLine":13,"endColumn":42},{"ruleId":"976","severity":1,"message":"977","line":39,"column":32,"nodeType":"978","messageId":"979","endLine":39,"endColumn":34},{"ruleId":"1013","severity":1,"message":"1043","line":77,"column":78,"nodeType":"1015","endLine":77,"endColumn":99,"suggestions":"1044"},{"ruleId":"1013","severity":1,"message":"1045","line":78,"column":77,"nodeType":"1015","endLine":78,"endColumn":95,"suggestions":"1046"},{"ruleId":"968","severity":1,"message":"1047","line":15,"column":24,"nodeType":"970","messageId":"971","endLine":15,"endColumn":37},{"ruleId":"976","severity":1,"message":"977","line":21,"column":40,"nodeType":"978","messageId":"979","endLine":21,"endColumn":42},{"ruleId":"1013","severity":1,"message":"1048","line":27,"column":48,"nodeType":"1015","endLine":27,"endColumn":56,"suggestions":"1049"},{"ruleId":"968","severity":1,"message":"1050","line":2,"column":8,"nodeType":"970","messageId":"971","endLine":2,"endColumn":14},{"ruleId":"968","severity":1,"message":"1051","line":12,"column":7,"nodeType":"970","messageId":"971","endLine":12,"endColumn":15},{"ruleId":"968","severity":1,"message":"1052","line":25,"column":24,"nodeType":"970","messageId":"971","endLine":25,"endColumn":37},{"ruleId":"976","severity":1,"message":"977","line":41,"column":28,"nodeType":"978","messageId":"979","endLine":41,"endColumn":30},{"ruleId":"976","severity":1,"message":"977","line":61,"column":36,"nodeType":"978","messageId":"979","endLine":61,"endColumn":38},{"ruleId":"1013","severity":1,"message":"1053","line":102,"column":64,"nodeType":"1015","endLine":102,"endColumn":82,"suggestions":"1054"},{"ruleId":"968","severity":1,"message":"1055","line":113,"column":7,"nodeType":"970","messageId":"971","endLine":113,"endColumn":17},{"ruleId":"968","severity":1,"message":"1034","line":47,"column":22,"nodeType":"970","messageId":"971","endLine":47,"endColumn":33},{"ruleId":"968","severity":1,"message":"1033","line":49,"column":19,"nodeType":"970","messageId":"971","endLine":49,"endColumn":27},{"ruleId":"968","severity":1,"message":"1034","line":26,"column":22,"nodeType":"970","messageId":"971","endLine":26,"endColumn":33},{"ruleId":"968","severity":1,"message":"1033","line":28,"column":19,"nodeType":"970","messageId":"971","endLine":28,"endColumn":27},{"ruleId":"1013","severity":1,"message":"1056","line":40,"column":42,"nodeType":"1015","endLine":40,"endColumn":44,"suggestions":"1057"},{"ruleId":"968","severity":1,"message":"1034","line":27,"column":22,"nodeType":"970","messageId":"971","endLine":27,"endColumn":33},{"ruleId":"968","severity":1,"message":"1033","line":29,"column":19,"nodeType":"970","messageId":"971","endLine":29,"endColumn":27},{"ruleId":"968","severity":1,"message":"1058","line":7,"column":8,"nodeType":"970","messageId":"971","endLine":7,"endColumn":18},{"ruleId":"968","severity":1,"message":"1050","line":2,"column":8,"nodeType":"970","messageId":"971","endLine":2,"endColumn":14},{"ruleId":"976","severity":1,"message":"977","line":26,"column":28,"nodeType":"978","messageId":"979","endLine":26,"endColumn":30},{"ruleId":"976","severity":1,"message":"977","line":44,"column":36,"nodeType":"978","messageId":"979","endLine":44,"endColumn":38},{"ruleId":"1013","severity":1,"message":"1053","line":84,"column":50,"nodeType":"1015","endLine":84,"endColumn":56,"suggestions":"1059"},{"ruleId":"968","severity":1,"message":"1018","line":1,"column":28,"nodeType":"970","messageId":"971","endLine":1,"endColumn":36},{"ruleId":"968","severity":1,"message":"1060","line":2,"column":8,"nodeType":"970","messageId":"971","endLine":2,"endColumn":16},{"ruleId":"968","severity":1,"message":"1017","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1018","line":1,"column":28,"nodeType":"970","messageId":"971","endLine":1,"endColumn":36},{"ruleId":"1013","severity":1,"message":"1014","line":58,"column":8,"nodeType":"1015","endLine":58,"endColumn":14,"suggestions":"1061"},{"ruleId":"976","severity":1,"message":"1062","line":63,"column":43,"nodeType":"986","messageId":"979","endLine":63,"endColumn":51},{"ruleId":"1013","severity":1,"message":"1063","line":71,"column":41,"nodeType":"1015","endLine":71,"endColumn":58,"suggestions":"1064"},{"ruleId":"1013","severity":1,"message":"1065","line":94,"column":7,"nodeType":"1015","endLine":94,"endColumn":9,"suggestions":"1066"},{"ruleId":"968","severity":1,"message":"1020","line":136,"column":11,"nodeType":"970","messageId":"971","endLine":136,"endColumn":17},{"ruleId":"968","severity":1,"message":"1067","line":138,"column":12,"nodeType":"970","messageId":"971","endLine":138,"endColumn":22},{"ruleId":"968","severity":1,"message":"1068","line":138,"column":24,"nodeType":"970","messageId":"971","endLine":138,"endColumn":37},{"ruleId":"1013","severity":1,"message":"1014","line":149,"column":8,"nodeType":"1015","endLine":149,"endColumn":14,"suggestions":"1069"},{"ruleId":"968","severity":1,"message":"1070","line":7,"column":8,"nodeType":"970","messageId":"971","endLine":7,"endColumn":22},{"ruleId":"968","severity":1,"message":"1071","line":8,"column":8,"nodeType":"970","messageId":"971","endLine":8,"endColumn":24},{"ruleId":"968","severity":1,"message":"1072","line":9,"column":8,"nodeType":"970","messageId":"971","endLine":9,"endColumn":24},{"ruleId":"968","severity":1,"message":"1073","line":11,"column":8,"nodeType":"970","messageId":"971","endLine":11,"endColumn":23},{"ruleId":"1013","severity":1,"message":"1074","line":25,"column":22,"nodeType":"1015","endLine":25,"endColumn":28,"suggestions":"1075"},{"ruleId":"968","severity":1,"message":"1076","line":8,"column":8,"nodeType":"970","messageId":"971","endLine":8,"endColumn":15},{"ruleId":"968","severity":1,"message":"1077","line":3,"column":8,"nodeType":"970","messageId":"971","endLine":3,"endColumn":14},{"ruleId":"968","severity":1,"message":"1078","line":10,"column":8,"nodeType":"970","messageId":"971","endLine":10,"endColumn":24},{"ruleId":"968","severity":1,"message":"1076","line":12,"column":8,"nodeType":"970","messageId":"971","endLine":12,"endColumn":15},{"ruleId":"968","severity":1,"message":"1079","line":56,"column":11,"nodeType":"970","messageId":"971","endLine":56,"endColumn":18},{"ruleId":"968","severity":1,"message":"1017","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1080","line":4,"column":22,"nodeType":"970","messageId":"971","endLine":4,"endColumn":32},{"ruleId":"1013","severity":1,"message":"1014","line":11,"column":7,"nodeType":"1015","endLine":11,"endColumn":11,"suggestions":"1081"},{"ruleId":"968","severity":1,"message":"1082","line":5,"column":10,"nodeType":"970","messageId":"971","endLine":5,"endColumn":15},{"ruleId":"968","severity":1,"message":"1083","line":6,"column":9,"nodeType":"970","messageId":"971","endLine":6,"endColumn":27},{"ruleId":"968","severity":1,"message":"1084","line":8,"column":30,"nodeType":"970","messageId":"971","endLine":8,"endColumn":36},{"ruleId":"968","severity":1,"message":"1085","line":2709,"column":12,"nodeType":"970","messageId":"971","endLine":2709,"endColumn":14},{"ruleId":"976","severity":1,"message":"977","line":2752,"column":34,"nodeType":"978","messageId":"979","endLine":2752,"endColumn":36},{"ruleId":"1013","severity":1,"message":"1086","line":2764,"column":7,"nodeType":"1015","endLine":2764,"endColumn":9,"suggestions":"1087"},{"ruleId":"968","severity":1,"message":"1018","line":1,"column":27,"nodeType":"970","messageId":"971","endLine":1,"endColumn":35},{"ruleId":"968","severity":1,"message":"1085","line":16,"column":11,"nodeType":"970","messageId":"971","endLine":16,"endColumn":13},{"ruleId":"976","severity":1,"message":"977","line":24,"column":32,"nodeType":"978","messageId":"979","endLine":24,"endColumn":34},{"ruleId":"1013","severity":1,"message":"1088","line":37,"column":47,"nodeType":"1015","endLine":37,"endColumn":60,"suggestions":"1089"},{"ruleId":"968","severity":1,"message":"1018","line":1,"column":27,"nodeType":"970","messageId":"971","endLine":1,"endColumn":35},{"ruleId":"968","severity":1,"message":"1090","line":15,"column":7,"nodeType":"970","messageId":"971","endLine":15,"endColumn":22},{"ruleId":"968","severity":1,"message":"1091","line":11,"column":9,"nodeType":"970","messageId":"971","endLine":11,"endColumn":15},{"ruleId":"968","severity":1,"message":"1051","line":14,"column":7,"nodeType":"970","messageId":"971","endLine":14,"endColumn":15},{"ruleId":"968","severity":1,"message":"1020","line":23,"column":11,"nodeType":"970","messageId":"971","endLine":23,"endColumn":17},{"ruleId":"968","severity":1,"message":"1085","line":24,"column":11,"nodeType":"970","messageId":"971","endLine":24,"endColumn":13},{"ruleId":"968","severity":1,"message":"1092","line":34,"column":13,"nodeType":"970","messageId":"971","endLine":34,"endColumn":20},{"ruleId":"968","severity":1,"message":"1093","line":39,"column":13,"nodeType":"970","messageId":"971","endLine":39,"endColumn":23},{"ruleId":"976","severity":1,"message":"977","line":43,"column":28,"nodeType":"978","messageId":"979","endLine":43,"endColumn":30},{"ruleId":"976","severity":1,"message":"977","line":60,"column":37,"nodeType":"978","messageId":"979","endLine":60,"endColumn":39},{"ruleId":"1013","severity":1,"message":"1053","line":91,"column":51,"nodeType":"1015","endLine":91,"endColumn":76,"suggestions":"1094"},{"ruleId":"1013","severity":1,"message":"1095","line":30,"column":7,"nodeType":"1015","endLine":30,"endColumn":13,"suggestions":"1096"},{"ruleId":"968","severity":1,"message":"1091","line":10,"column":9,"nodeType":"970","messageId":"971","endLine":10,"endColumn":15},{"ruleId":"968","severity":1,"message":"1051","line":13,"column":7,"nodeType":"970","messageId":"971","endLine":13,"endColumn":15},{"ruleId":"968","severity":1,"message":"1085","line":23,"column":11,"nodeType":"970","messageId":"971","endLine":23,"endColumn":13},{"ruleId":"968","severity":1,"message":"1092","line":33,"column":13,"nodeType":"970","messageId":"971","endLine":33,"endColumn":20},{"ruleId":"968","severity":1,"message":"1093","line":38,"column":13,"nodeType":"970","messageId":"971","endLine":38,"endColumn":23},{"ruleId":"976","severity":1,"message":"977","line":42,"column":28,"nodeType":"978","messageId":"979","endLine":42,"endColumn":30},{"ruleId":"976","severity":1,"message":"977","line":59,"column":36,"nodeType":"978","messageId":"979","endLine":59,"endColumn":38},{"ruleId":"976","severity":1,"message":"977","line":61,"column":42,"nodeType":"978","messageId":"979","endLine":61,"endColumn":44},{"ruleId":"980","severity":1,"message":"1001","line":104,"column":55,"nodeType":"982","messageId":"983","endLine":104,"endColumn":57},{"ruleId":"1013","severity":1,"message":"1053","line":106,"column":9,"nodeType":"1015","endLine":106,"endColumn":38,"suggestions":"1097"},{"ruleId":"976","severity":1,"message":"977","line":16,"column":51,"nodeType":"978","messageId":"979","endLine":16,"endColumn":53},{"ruleId":"1013","severity":1,"message":"1098","line":63,"column":45,"nodeType":"1015","endLine":63,"endColumn":74,"suggestions":"1099"},{"ruleId":"968","severity":1,"message":"1047","line":15,"column":24,"nodeType":"970","messageId":"971","endLine":15,"endColumn":37},{"ruleId":"968","severity":1,"message":"1100","line":16,"column":12,"nodeType":"970","messageId":"971","endLine":16,"endColumn":24},{"ruleId":"968","severity":1,"message":"1101","line":19,"column":11,"nodeType":"970","messageId":"971","endLine":19,"endColumn":27},{"ruleId":"976","severity":1,"message":"977","line":21,"column":40,"nodeType":"978","messageId":"979","endLine":21,"endColumn":42},{"ruleId":"968","severity":1,"message":"1102","line":97,"column":10,"nodeType":"970","messageId":"971","endLine":97,"endColumn":16},{"ruleId":"968","severity":1,"message":"1103","line":19,"column":11,"nodeType":"970","messageId":"971","endLine":19,"endColumn":24},{"ruleId":"968","severity":1,"message":"1018","line":1,"column":28,"nodeType":"970","messageId":"971","endLine":1,"endColumn":36},{"ruleId":"968","severity":1,"message":"1104","line":4,"column":10,"nodeType":"970","messageId":"971","endLine":4,"endColumn":17},{"ruleId":"968","severity":1,"message":"1105","line":4,"column":20,"nodeType":"970","messageId":"971","endLine":4,"endColumn":26},{"ruleId":"968","severity":1,"message":"1106","line":5,"column":8,"nodeType":"970","messageId":"971","endLine":5,"endColumn":26},{"ruleId":"968","severity":1,"message":"1020","line":13,"column":11,"nodeType":"970","messageId":"971","endLine":13,"endColumn":17},{"ruleId":"980","severity":1,"message":"1001","line":31,"column":75,"nodeType":"982","messageId":"983","endLine":31,"endColumn":77},{"ruleId":"980","severity":1,"message":"1001","line":44,"column":73,"nodeType":"982","messageId":"983","endLine":44,"endColumn":75},{"ruleId":"1013","severity":1,"message":"1107","line":54,"column":7,"nodeType":"1015","endLine":54,"endColumn":36,"suggestions":"1108"},{"ruleId":"968","severity":1,"message":"1104","line":3,"column":10,"nodeType":"970","messageId":"971","endLine":3,"endColumn":17},{"ruleId":"968","severity":1,"message":"1105","line":3,"column":20,"nodeType":"970","messageId":"971","endLine":3,"endColumn":26},{"ruleId":"968","severity":1,"message":"1109","line":14,"column":12,"nodeType":"970","messageId":"971","endLine":14,"endColumn":20},{"ruleId":"968","severity":1,"message":"1110","line":14,"column":22,"nodeType":"970","messageId":"971","endLine":14,"endColumn":33},{"ruleId":"968","severity":1,"message":"1109","line":46,"column":12,"nodeType":"970","messageId":"971","endLine":46,"endColumn":20},{"ruleId":"968","severity":1,"message":"1110","line":46,"column":22,"nodeType":"970","messageId":"971","endLine":46,"endColumn":33},{"ruleId":"968","severity":1,"message":"1017","line":2,"column":17,"nodeType":"970","messageId":"971","endLine":2,"endColumn":26},{"ruleId":"968","severity":1,"message":"1111","line":12,"column":3,"nodeType":"970","messageId":"971","endLine":12,"endColumn":21},{"ruleId":"968","severity":1,"message":"1112","line":41,"column":7,"nodeType":"970","messageId":"971","endLine":41,"endColumn":17},{"ruleId":"968","severity":1,"message":"1079","line":75,"column":11,"nodeType":"970","messageId":"971","endLine":75,"endColumn":18},{"ruleId":"968","severity":1,"message":"1018","line":1,"column":28,"nodeType":"970","messageId":"971","endLine":1,"endColumn":36},{"ruleId":"968","severity":1,"message":"1113","line":2,"column":9,"nodeType":"970","messageId":"971","endLine":2,"endColumn":31},{"ruleId":"968","severity":1,"message":"1114","line":3,"column":9,"nodeType":"970","messageId":"971","endLine":3,"endColumn":29},{"ruleId":"968","severity":1,"message":"1115","line":5,"column":8,"nodeType":"970","messageId":"971","endLine":5,"endColumn":26},{"ruleId":"976","severity":1,"message":"977","line":17,"column":32,"nodeType":"978","messageId":"979","endLine":17,"endColumn":34},{"ruleId":"1013","severity":1,"message":"1116","line":25,"column":22,"nodeType":"1015","endLine":25,"endColumn":31,"suggestions":"1117"},{"ruleId":"968","severity":1,"message":"1118","line":12,"column":24,"nodeType":"970","messageId":"971","endLine":12,"endColumn":32},{"ruleId":"968","severity":1,"message":"1119","line":13,"column":28,"nodeType":"970","messageId":"971","endLine":13,"endColumn":45},{"ruleId":"1013","severity":1,"message":"1120","line":28,"column":7,"nodeType":"1015","endLine":28,"endColumn":23,"suggestions":"1121"},{"ruleId":"968","severity":1,"message":"1122","line":4,"column":10,"nodeType":"970","messageId":"971","endLine":4,"endColumn":22},{"ruleId":"968","severity":1,"message":"1123","line":10,"column":20,"nodeType":"970","messageId":"971","endLine":10,"endColumn":29},{"ruleId":"968","severity":1,"message":"1017","line":1,"column":16,"nodeType":"970","messageId":"971","endLine":1,"endColumn":25},{"ruleId":"968","severity":1,"message":"1017","line":1,"column":16,"nodeType":"970","messageId":"971","endLine":1,"endColumn":25},{"ruleId":"968","severity":1,"message":"1017","line":1,"column":16,"nodeType":"970","messageId":"971","endLine":1,"endColumn":25},{"ruleId":"968","severity":1,"message":"1017","line":1,"column":16,"nodeType":"970","messageId":"971","endLine":1,"endColumn":25},{"ruleId":"968","severity":1,"message":"1124","line":3,"column":9,"nodeType":"970","messageId":"971","endLine":3,"endColumn":25},{"ruleId":"968","severity":1,"message":"1018","line":1,"column":27,"nodeType":"970","messageId":"971","endLine":1,"endColumn":35},{"ruleId":"968","severity":1,"message":"1124","line":10,"column":9,"nodeType":"970","messageId":"971","endLine":10,"endColumn":25},{"ruleId":"976","severity":1,"message":"977","line":26,"column":28,"nodeType":"978","messageId":"979","endLine":26,"endColumn":30},{"ruleId":"968","severity":1,"message":"1017","line":1,"column":16,"nodeType":"970","messageId":"971","endLine":1,"endColumn":25},{"ruleId":"968","severity":1,"message":"1124","line":3,"column":9,"nodeType":"970","messageId":"971","endLine":3,"endColumn":25},{"ruleId":"968","severity":1,"message":"1124","line":12,"column":9,"nodeType":"970","messageId":"971","endLine":12,"endColumn":25},{"ruleId":"968","severity":1,"message":"1125","line":13,"column":9,"nodeType":"970","messageId":"971","endLine":13,"endColumn":23},{"ruleId":"968","severity":1,"message":"1126","line":6,"column":8,"nodeType":"970","messageId":"971","endLine":6,"endColumn":28},{"ruleId":"968","severity":1,"message":"1017","line":1,"column":16,"nodeType":"970","messageId":"971","endLine":1,"endColumn":25},{"ruleId":"968","severity":1,"message":"1018","line":1,"column":27,"nodeType":"970","messageId":"971","endLine":1,"endColumn":35},{"ruleId":"1013","severity":1,"message":"1095","line":23,"column":7,"nodeType":"1015","endLine":23,"endColumn":13,"suggestions":"1127"},{"ruleId":"968","severity":1,"message":"1128","line":8,"column":8,"nodeType":"970","messageId":"971","endLine":8,"endColumn":20},{"ruleId":"968","severity":1,"message":"1129","line":9,"column":8,"nodeType":"970","messageId":"971","endLine":9,"endColumn":26},{"ruleId":"968","severity":1,"message":"1032","line":5,"column":10,"nodeType":"970","messageId":"971","endLine":5,"endColumn":20},{"ruleId":"976","severity":1,"message":"977","line":16,"column":66,"nodeType":"978","messageId":"979","endLine":16,"endColumn":68},{"ruleId":"1013","severity":1,"message":"1098","line":63,"column":45,"nodeType":"1015","endLine":63,"endColumn":65,"suggestions":"1130"},{"ruleId":"968","severity":1,"message":"1091","line":10,"column":9,"nodeType":"970","messageId":"971","endLine":10,"endColumn":15},{"ruleId":"968","severity":1,"message":"1051","line":13,"column":7,"nodeType":"970","messageId":"971","endLine":13,"endColumn":15},{"ruleId":"968","severity":1,"message":"1085","line":52,"column":11,"nodeType":"970","messageId":"971","endLine":52,"endColumn":13},{"ruleId":"968","severity":1,"message":"1131","line":54,"column":12,"nodeType":"970","messageId":"971","endLine":54,"endColumn":26},{"ruleId":"968","severity":1,"message":"1132","line":54,"column":27,"nodeType":"970","messageId":"971","endLine":54,"endColumn":44},{"ruleId":"968","severity":1,"message":"1092","line":62,"column":13,"nodeType":"970","messageId":"971","endLine":62,"endColumn":20},{"ruleId":"968","severity":1,"message":"1093","line":67,"column":13,"nodeType":"970","messageId":"971","endLine":67,"endColumn":23},{"ruleId":"976","severity":1,"message":"977","line":71,"column":28,"nodeType":"978","messageId":"979","endLine":71,"endColumn":30},{"ruleId":"976","severity":1,"message":"977","line":88,"column":36,"nodeType":"978","messageId":"979","endLine":88,"endColumn":38},{"ruleId":"976","severity":1,"message":"977","line":90,"column":42,"nodeType":"978","messageId":"979","endLine":90,"endColumn":44},{"ruleId":"980","severity":1,"message":"1001","line":141,"column":70,"nodeType":"982","messageId":"983","endLine":141,"endColumn":72},{"ruleId":"1013","severity":1,"message":"1053","line":143,"column":9,"nodeType":"1015","endLine":143,"endColumn":29,"suggestions":"1133"},{"ruleId":"968","severity":1,"message":"1091","line":11,"column":9,"nodeType":"970","messageId":"971","endLine":11,"endColumn":15},{"ruleId":"968","severity":1,"message":"1051","line":14,"column":7,"nodeType":"970","messageId":"971","endLine":14,"endColumn":15},{"ruleId":"968","severity":1,"message":"1020","line":23,"column":11,"nodeType":"970","messageId":"971","endLine":23,"endColumn":17},{"ruleId":"968","severity":1,"message":"1085","line":24,"column":11,"nodeType":"970","messageId":"971","endLine":24,"endColumn":13},{"ruleId":"968","severity":1,"message":"1092","line":34,"column":13,"nodeType":"970","messageId":"971","endLine":34,"endColumn":20},{"ruleId":"968","severity":1,"message":"1093","line":39,"column":13,"nodeType":"970","messageId":"971","endLine":39,"endColumn":23},{"ruleId":"976","severity":1,"message":"977","line":43,"column":28,"nodeType":"978","messageId":"979","endLine":43,"endColumn":30},{"ruleId":"976","severity":1,"message":"977","line":60,"column":37,"nodeType":"978","messageId":"979","endLine":60,"endColumn":39},{"ruleId":"1013","severity":1,"message":"1053","line":90,"column":80,"nodeType":"1015","endLine":90,"endColumn":100,"suggestions":"1134"},{"ruleId":"968","severity":1,"message":"1135","line":6,"column":10,"nodeType":"970","messageId":"971","endLine":6,"endColumn":14},{"ruleId":"1013","severity":1,"message":"1095","line":45,"column":7,"nodeType":"1015","endLine":45,"endColumn":13,"suggestions":"1136"},{"ruleId":"968","severity":1,"message":"1137","line":2,"column":8,"nodeType":"970","messageId":"971","endLine":2,"endColumn":21},{"ruleId":"976","severity":1,"message":"977","line":15,"column":24,"nodeType":"978","messageId":"979","endLine":15,"endColumn":26},{"ruleId":"1138","severity":1,"message":"1139","line":55,"column":13,"nodeType":"1006","endLine":55,"endColumn":17},{"ruleId":"976","severity":1,"message":"977","line":87,"column":32,"nodeType":"978","messageId":"979","endLine":87,"endColumn":34},{"ruleId":"1013","severity":1,"message":"1140","line":89,"column":7,"nodeType":"1015","endLine":89,"endColumn":9,"suggestions":"1141"},{"ruleId":"968","severity":1,"message":"1084","line":2,"column":21,"nodeType":"970","messageId":"971","endLine":2,"endColumn":27},{"ruleId":"968","severity":1,"message":"1142","line":14,"column":9,"nodeType":"970","messageId":"971","endLine":14,"endColumn":16},{"ruleId":"976","severity":1,"message":"977","line":31,"column":37,"nodeType":"978","messageId":"979","endLine":31,"endColumn":39},{"ruleId":"976","severity":1,"message":"977","line":79,"column":43,"nodeType":"978","messageId":"979","endLine":79,"endColumn":45},{"ruleId":"1013","severity":1,"message":"1143","line":92,"column":9,"nodeType":"1015","endLine":92,"endColumn":11,"suggestions":"1144"},{"ruleId":"968","severity":1,"message":"1142","line":7,"column":7,"nodeType":"970","messageId":"971","endLine":7,"endColumn":14},{"ruleId":"976","severity":1,"message":"977","line":28,"column":71,"nodeType":"978","messageId":"979","endLine":28,"endColumn":73},{"ruleId":"976","severity":1,"message":"977","line":42,"column":50,"nodeType":"978","messageId":"979","endLine":42,"endColumn":52},{"ruleId":"1013","severity":1,"message":"1145","line":60,"column":8,"nodeType":"1015","endLine":60,"endColumn":28,"suggestions":"1146"},{"ruleId":"1013","severity":1,"message":"1147","line":20,"column":7,"nodeType":"1015","endLine":20,"endColumn":9,"suggestions":"1148"},{"ruleId":"976","severity":1,"message":"977","line":11,"column":26,"nodeType":"978","messageId":"979","endLine":11,"endColumn":28},{"ruleId":"976","severity":1,"message":"977","line":20,"column":53,"nodeType":"978","messageId":"979","endLine":20,"endColumn":55},{"ruleId":"976","severity":1,"message":"977","line":12,"column":52,"nodeType":"978","messageId":"979","endLine":12,"endColumn":54},{"ruleId":"976","severity":1,"message":"977","line":13,"column":37,"nodeType":"978","messageId":"979","endLine":13,"endColumn":39},{"ruleId":"1013","severity":1,"message":"1149","line":26,"column":32,"nodeType":"1015","endLine":26,"endColumn":38,"suggestions":"1150"},{"ruleId":"1013","severity":1,"message":"1095","line":18,"column":38,"nodeType":"1015","endLine":18,"endColumn":44,"suggestions":"1151"},{"ruleId":"968","severity":1,"message":"1152","line":11,"column":28,"nodeType":"970","messageId":"971","endLine":11,"endColumn":46},{"ruleId":"976","severity":1,"message":"977","line":19,"column":80,"nodeType":"978","messageId":"979","endLine":19,"endColumn":82},{"ruleId":"1013","severity":1,"message":"1153","line":21,"column":7,"nodeType":"1015","endLine":21,"endColumn":9,"suggestions":"1154"},{"ruleId":"976","severity":1,"message":"977","line":12,"column":52,"nodeType":"978","messageId":"979","endLine":12,"endColumn":54},{"ruleId":"976","severity":1,"message":"977","line":13,"column":49,"nodeType":"978","messageId":"979","endLine":13,"endColumn":51},{"ruleId":"976","severity":1,"message":"977","line":23,"column":26,"nodeType":"978","messageId":"979","endLine":23,"endColumn":28},{"ruleId":"976","severity":1,"message":"977","line":32,"column":49,"nodeType":"978","messageId":"979","endLine":32,"endColumn":51},{"ruleId":"1013","severity":1,"message":"1155","line":10,"column":7,"nodeType":"1015","endLine":10,"endColumn":9,"suggestions":"1156"},"no-unused-vars","'JWTCHECK' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["1157"],"no-negated-in-lhs",["1158"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'WorkOrderCount' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["1157"],["1158"],"'Cell' is defined but never used.","'ChartGroupArrayData' is assigned a value but never used.","'Removeinteriors' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'JobTypes' is assigned a value but never used.","'checkResourceCount' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","Array.prototype.map() expects a value to be returned at the end of arrow function.","'GetSites' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Pushhistory'. Either include it or remove the dependency array.","ArrayExpression",["1159"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'SelectedRegion' is defined but never used.","'STRAPI' is assigned a value but never used.","'Regions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'UX.SelectedArea' and 'WorkorderCount'. Either include them or remove the dependency array.",["1160"],"'LoadScript' is defined but never used.","'Marker' is defined but never used.","'_' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'UX.SelectedArea'. Either include it or remove the dependency array.",["1161"],"'Targeticon' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'MapParameters.LatLngBoundaries'. Either include it or remove the dependency array.",["1162"],"'makeStyles' is defined but never used.","'setLabel' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'TestScan'. Either include it or remove the dependency array.",["1163"],"React Hook useEffect has a missing dependency: 'CreateBorders'. Either include it or remove the dependency array.",["1164"],"'useMemo' is defined but never used.","'markerRemoved' is assigned a value but never used.","'setmarkerRemoved' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateAddNewRegion'. Either include it or remove the dependency array.",["1165"],"React Hook useEffect has missing dependencies: 'CreateAddNewRegion' and 'UX.AreaSelectFilter.state.regions'. Either include them or remove the dependency array.",["1166"],"'setMultiplier' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'FindClusterTotal'. Either include it or remove the dependency array.",["1167"],"'Button' is defined but never used.","'divStyle' is assigned a value but never used.","'setStarMarker' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateMarkers'. Either include it or remove the dependency array.",["1168"],"'MarkerIcon' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'STATES'. Either include it or remove the dependency array.",["1169"],"'Typography' is defined but never used.",["1170"],"'Piechart' is defined but never used.",["1171"],"Array.prototype.map() expects a return value from function.","React Hook useEffect has a missing dependency: 'checkDataStatus'. Either include it or remove the dependency array.",["1172"],"React Hook useEffect has a missing dependency: 'Fetch'. Either include it or remove the dependency array.",["1173"],"'DataStatus' is assigned a value but never used.","'setDataStatus' is assigned a value but never used.",["1174"],"'ComponentAbout' is defined but never used.","'ComponentLanding' is defined but never used.","'ComponentContact' is defined but never used.","'ComponentUnAuth' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'AUTH'. Either exclude it or remove the dependency array.",["1175"],"'Divider' is defined but never used.","'Drawer' is defined but never used.","'PublicNavigation' is defined but never used.","'classes' is assigned a value but never used.","'withRouter' is defined but never used.",["1176"],"'Label' is defined but never used.","'FetchDataIntegrity' is defined but never used.","'Circle' is defined but never used.","'UX' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'points'. Either include it or remove the dependency array.",["1177"],"React Hook useEffect has a missing dependency: 'Scan'. Either include it or remove the dependency array.",["1178"],"'RenderScamSites' is assigned a value but never used.","'uniqBy' is defined but never used.","'ColorMe' is assigned a value but never used.","'FindMinMax' is assigned a value but never used.",["1179"],"React Hook useEffect has a missing dependency: 'extractResults'. Either include it or remove the dependency array.",["1180"],["1181"],"React Hook useEffect has a missing dependency: 'CreateCenterpoints'. Either include it or remove the dependency array.",["1182"],"'ClusterTotal' is assigned a value but never used.","'FindClusterTotal' is assigned a value but never used.","'scanID' is assigned a value but never used.","'HandleCompare' is assigned a value but never used.","'orderBy' is defined but never used.","'remove' is defined but never used.","'ReviewSelectionBtn' is defined but never used.","React Hook useEffect has missing dependencies: 'STRAPI.UserData.Customers' and 'USERSCAN.UserScanSingleDataSets'. Either include them or remove the dependency array.",["1183"],"'Fetching' is assigned a value but never used.","'setFetching' is assigned a value but never used.","'KeyboardTimePicker' is defined but never used.","'Processing' is assigned a value but never used.","'useContext_STRAPI_FULL' is defined but never used.","'useContext_SCAN_FULL' is defined but never used.","'FetchPreviousScans' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'COMPARE'. Either exclude it or remove the dependency array.",["1184"],"'setLimit' is assigned a value but never used.","'setModelsSelected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateSelects'. Either include it or remove the dependency array.",["1185"],"'runInContext' is defined but never used.","'setValues' is assigned a value but never used.","'numberWithCommas' is defined but never used.","'findClientName' is defined but never used.","'ResultClusterResults' is defined but never used.",["1186"],"'CenterPoints' is defined but never used.","'MarkerBasedResults' is defined but never used.",["1187"],"'DisplayMarkers' is assigned a value but never used.","'setDisplayMarkers' is assigned a value but never used.",["1188"],["1189"],"'Data' is defined but never used.",["1190"],"'NumberReducer' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'Trades'. Either include it or remove the dependency array.",["1191"],"'options' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CreateMarkers' and 'CreatePolygon'. Either include them or remove the dependency array.",["1192"],"React Hook useEffect has a missing dependency: 'CreatePolygons'. Either include it or remove the dependency array.",["1193"],"React Hook useEffect has a missing dependency: 'MODEL'. Either include it or remove the dependency array.",["1194"],"React Hook useEffect has a missing dependency: 'ByClient'. Either include it or remove the dependency array.",["1195"],["1196"],"'setTradeAllocation' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Model.STOREMARKERCENTERPOINTS'. Either include it or remove the dependency array.",["1197"],"React Hook useEffect has a missing dependency: 'SCAN'. Either include it or remove the dependency array.",["1198"],"no-global-assign","no-unsafe-negation",{"desc":"1199","fix":"1200"},{"desc":"1201","fix":"1202"},{"desc":"1203","fix":"1204"},{"desc":"1205","fix":"1206"},{"desc":"1207","fix":"1208"},{"desc":"1209","fix":"1210"},{"desc":"1211","fix":"1212"},{"desc":"1213","fix":"1214"},{"desc":"1215","fix":"1216"},{"desc":"1217","fix":"1218"},{"desc":"1219","fix":"1220"},{"desc":"1221","fix":"1222"},{"desc":"1199","fix":"1223"},{"desc":"1224","fix":"1225"},{"desc":"1226","fix":"1227"},{"desc":"1199","fix":"1228"},{"desc":"1229","fix":"1230"},{"desc":"1231","fix":"1232"},{"desc":"1233","fix":"1234"},{"desc":"1235","fix":"1236"},{"desc":"1237","fix":"1238"},{"desc":"1239","fix":"1240"},{"desc":"1241","fix":"1242"},{"desc":"1243","fix":"1244"},{"desc":"1245","fix":"1246"},{"desc":"1229","fix":"1247"},{"desc":"1248","fix":"1249"},{"desc":"1239","fix":"1250"},{"desc":"1251","fix":"1252"},{"desc":"1253","fix":"1254"},{"desc":"1253","fix":"1255"},{"desc":"1239","fix":"1256"},{"desc":"1257","fix":"1258"},{"desc":"1259","fix":"1260"},{"desc":"1261","fix":"1262"},{"desc":"1263","fix":"1264"},{"desc":"1265","fix":"1266"},{"desc":"1239","fix":"1267"},{"desc":"1268","fix":"1269"},{"desc":"1270","fix":"1271"},"Update the dependencies array to be: [AUTH, Pushhistory]",{"range":"1272","text":"1273"},"Update the dependencies array to be: [UX.MapParameters, UX.SelectedArea, WorkorderCount]",{"range":"1274","text":"1275"},"Update the dependencies array to be: [UX.AreaSelectFilter, UX.SelectedArea]",{"range":"1276","text":"1277"},"Update the dependencies array to be: [MapParameters.LatLngBoundaries]",{"range":"1278","text":"1279"},"Update the dependencies array to be: [SCAN, TestScan]",{"range":"1280","text":"1281"},"Update the dependencies array to be: [CreateBorders, SCAN]",{"range":"1282","text":"1283"},"Update the dependencies array to be: [CreateAddNewRegion, UX.AreaSelectFilter]",{"range":"1284","text":"1285"},"Update the dependencies array to be: [CreateAddNewRegion, UX.AreaSelectFilter.state.regions, UX.MapParameters]",{"range":"1286","text":"1287"},"Update the dependencies array to be: [FindClusterTotal, result]",{"range":"1288","text":"1289"},"Update the dependencies array to be: [CreateMarkers, UX.MapParameters]",{"range":"1290","text":"1291"},"Update the dependencies array to be: [STATES]",{"range":"1292","text":"1293"},"Update the dependencies array to be: [CreateMarkers, Data]",{"range":"1294","text":"1295"},{"range":"1296","text":"1273"},"Update the dependencies array to be: [STRAPI.UserData, checkDataStatus]",{"range":"1297","text":"1298"},"Update the dependencies array to be: [Fetch]",{"range":"1299","text":"1300"},{"range":"1301","text":"1273"},"Update the dependencies array to be: []",{"range":"1302","text":"1303"},"Update the dependencies array to be: [Pushhistory, UX]",{"range":"1304","text":"1305"},"Update the dependencies array to be: [points]",{"range":"1306","text":"1307"},"Update the dependencies array to be: [SCAN.active, Scan]",{"range":"1308","text":"1309"},"Update the dependencies array to be: [CreateMarkers, SCAN.MarkerScanResidual]",{"range":"1310","text":"1311"},"Update the dependencies array to be: [SCAN, extractResults]",{"range":"1312","text":"1313"},"Update the dependencies array to be: [CreateMarkers, SCAN.MarkerScanCenterPoints]",{"range":"1314","text":"1315"},"Update the dependencies array to be: [CreateCenterpoints, SCAN.MarkerScanCenterPoints]",{"range":"1316","text":"1317"},"Update the dependencies array to be: [STRAPI.UserData.Customers, USERSCAN.ScanOptionSelected, USERSCAN.UserScanSingleDataSets]",{"range":"1318","text":"1319"},{"range":"1320","text":"1303"},"Update the dependencies array to be: [CreateSelects, ModelsSelected]",{"range":"1321","text":"1322"},{"range":"1323","text":"1313"},"Update the dependencies array to be: [CreateCenterpoints, SCAN.SelectedModel]",{"range":"1324","text":"1325"},"Update the dependencies array to be: [CreateMarkers, SCAN.SelectedModel]",{"range":"1326","text":"1327"},{"range":"1328","text":"1327"},{"range":"1329","text":"1313"},"Update the dependencies array to be: [Trades]",{"range":"1330","text":"1331"},"Update the dependencies array to be: [CreateMarkers, CreatePolygon]",{"range":"1332","text":"1333"},"Update the dependencies array to be: [CreatePolygons, SCAN.SelectedModel]",{"range":"1334","text":"1335"},"Update the dependencies array to be: [MODEL]",{"range":"1336","text":"1337"},"Update the dependencies array to be: [ByClient, SCAN]",{"range":"1338","text":"1339"},{"range":"1340","text":"1313"},"Update the dependencies array to be: [Model.STOREMARKERCENTERPOINTS]",{"range":"1341","text":"1342"},"Update the dependencies array to be: [SCAN]",{"range":"1343","text":"1344"},[467,473],"[AUTH, Pushhistory]",[1574,1592],"[UX.MapParameters, UX.SelectedArea, WorkorderCount]",[848,869],"[UX.AreaSelectFilter, UX.SelectedArea]",[2164,2166],"[MapParameters.LatLngBoundaries]",[3281,3287],"[SCAN, TestScan]",[3386,3392],"[CreateBorders, SCAN]",[2952,2973],"[CreateAddNewRegion, UX.AreaSelectFilter]",[3052,3070],"[CreateAddNewRegion, UX.AreaSelectFilter.state.regions, UX.MapParameters]",[879,887],"[FindClusterTotal, result]",[3838,3856],"[CreateMarkers, UX.MapParameters]",[1382,1384],"[STATES]",[3247,3253],"[CreateMarkers, Data]",[2155,2161],[2486,2503],"[STRAPI.UserData, checkDataStatus]",[2925,2927],"[Fetch]",[4425,4431],[478,484],"[]",[421,425],"[Pushhistory, UX]",[61405,61407],"[points]",[1108,1121],"[SCAN.active, Scan]",[3066,3091],"[CreateMarkers, SCAN.MarkerScanResidual]",[1059,1065],"[SCAN, extractResults]",[3373,3402],"[CreateMarkers, SCAN.MarkerScanCenterPoints]",[2070,2099],"[CreateCenterpoints, SCAN.MarkerScanCenterPoints]",[1957,1986],"[STRAPI.UserData.Customers, USERSCAN.ScanOptionSelected, USERSCAN.UserScanSingleDataSets]",[496,505],[824,840],"[CreateSelects, ModelsSelected]",[748,754],[2086,2106],"[CreateCenterpoints, SCAN.SelectedModel]",[4104,4124],"[CreateMarkers, SCAN.SelectedModel]",[3123,3143],[1587,1593],[2804,2806],"[Trades]",[2789,2791],"[CreateMarkers, CreatePolygon]",[1668,1688],"[CreatePolygons, SCAN.SelectedModel]",[515,517],"[MODEL]",[914,920],"[ByClient, SCAN]",[688,694],[757,759],"[Model.STOREMARKERCENTERPOINTS]",[348,350],"[SCAN]"]