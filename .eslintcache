[{"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\index.js":"1","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\App.js":"2","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\reportWebVitals.js":"3","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\index.js":"4","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\index.js":"5","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\UX.js":"6","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\History.js":"7","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\PrototypeLoader.js":"8","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\index.js":"9","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\STRAPI.js":"10","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\SideBar.js":"11","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\GeoLocationActions.js":"12","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\STRAPI.js":"13","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\UX.js":"14","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\SCANSTATE.js":"15","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleUX.js":"16","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SCAN.js":"17","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\SimplePie.js":"18","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\BarChart.js":"19","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\ClusterAnalysis.js":"20","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Assets\\logo.js":"21","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleMarkerBasedScan.js":"22","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleScanProcess.js":"23","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\authUser.js":"24","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Landing\\index.js":"25","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\AuthLogin\\index.js":"26","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\index.js":"27","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\About\\about.js":"28","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Contact\\contact.js":"29","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\index.js":"30","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\unAuth\\UnAuth.js":"31","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\AUTH.js":"32","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\AUTH.js":"33","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\AuthDashboard.js":"34","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\PublicLayout.js":"35","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\Public\\Navigation.js":"36","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\input.js":"37","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\LoginForm.js":"38","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Landing.js":"39","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Loading\\Loading.js":"40","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\DataDump.js":"41","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan.js":"42","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Map.js":"43","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\ResidualLocationMarkers.js":"44","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkerBasedResults.js":"45","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\LocationMarkers.js":"46","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkersCenterpoints.js":"47","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ColorKey.js":"48","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ClusterResults.js":"49","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\HistoryRerfresh.js":"50","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ViewSingleResultBtn.js":"51","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateSingleScanBtn.js":"52","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoAddItemsSingleScan.js":"53","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoScanType.js":"54","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\SetSelectedBtn.js":"55","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\CreateScanoptions.js":"56","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateNewModel.js":"57","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompare.js":"58","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel.js":"59","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ViewModels.js":"60","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CompareModels.js":"61","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMPARE.js":"62","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleCompare.js":"63","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMPARE.js":"64","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ConfirmCompareBtn.js":"65","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SelectModels.js":"66","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareModels.js":"67","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetCompareModels.js":"68","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsInScope.js":"69","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsUnaccomidated.js":"70","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalWorkOrdersCoveredInCluster.js":"71","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableResourceAllocationPerResourceTotal.js":"72","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableWorkOrderByClient.js":"73","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTradeTypeBreakdown.js":"74","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableSitesByTier.js":"75","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult.js":"76","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ScanStateBtn.js":"77","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Footer.js":"78","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\UICompnents\\index.js":"79","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Type.js":"80","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Section.js":"81","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Locations.js":"82","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\HeaderTitle.js":"83","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\AppBar.js":"84","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_FullMap.js":"85","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Client.js":"86","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Clusters.js":"87","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Workorders.js":"88","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Trade.js":"89","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Stats.js":"90","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_ByTier.js":"91","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Charts.js":"92","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basics.js":"93","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basic_Charts.js":"94","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clients_Names.js":"95","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_ResourceAllocation.js":"96","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Ratios.js":"97","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\OLD_ResultHeader.js":"98","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Map_Full_MAin.js":"99","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Map_SingleModelReview_FULLModel.js":"100","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\LocationMarkers.js":"101","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ResidualLocationMarkers.js":"102","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Polygons.js":"103","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MarkersCenterpoints.js":"104","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MarkerBasedResults.js":"105","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapColorKey.js":"106","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\OLD_ResultMap.js":"107","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clusters_ResultsList.js":"108","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterResults.js":"109","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterMiniMap.js":"110","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\SelectandReview.js":"111","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanSelectItems.js":"112","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanReviewSelectedItems.js":"113","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\RadialSIngleChart.js":"114","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_CLusterSpreadbyCLient.js":"115","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\RadialMultiChart.js":"116","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapMainFilter.js":"117","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_ResourceSpread.js":"118","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\StackedBarChart.js":"119","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByResourceType.js":"120","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByClusterType.js":"121","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByCapitalCities.js":"122","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectResourceType.js":"123","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_WorkOrderSpread.js":"124","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\ChartHeader.js":"125","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\ReviewGlobalFilter.js":"126","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\FilterChips.js":"127","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectClusterType.js":"128","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Radial_Charts.js":"129","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\ModelSingleReview.js":"130","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SINGLE.js":"131","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CreateSingleViewModel.js":"132","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrder_Radial_Charts.js":"133","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Radial_Clients.js":"134","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_AllocationOverTime.js":"135","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Specific_ClientBreakdown.js":"136","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Specific_Overview.js":"137","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_Basic_Differences.js":"138","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clients_Site_Resource_StatsBar.js":"139","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_WorkordersOverTime.js":"140","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_OverTime.js":"141","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_ResourceAllocationOverTime.js":"142","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectClient.js":"143","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_ResourceDistribution.js":"144","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_SingleSelectedComponents.js":"145","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_Selected_ClusterSpread.js":"146","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_WorkOrderDistribution.js":"147","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\DiagramContainer.js":"148","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Stats_Bar.js":"149","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoPie.js":"150","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoRadial.js":"151","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoWaffle.js":"152","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoFunnel.js":"153","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoLine.js":"154","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoSwarmPlot.js":"155","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CreateCompareModelView.js":"156","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\TableHeader.js":"157","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Locations_CompareTotals.js":"158","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Locations_Main.js":"159","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Clusters_Main.js":"160","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Clusters_TotalsBreakdown.js":"161","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Clusters_Totals.js":"162","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\CLusters_ComparisionPie.js":"163","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\ClusterComparisonRadial.js":"164","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Cluster_ResourcesBar.js":"165","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Resources_Main.js":"166","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Resource_Totals.js":"167","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\WorkOrders_Main.js":"168","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\WorkOrders_Totals.js":"169","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\TableTradeTypes.js":"170","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Clients_Main.js":"171","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\SectionCharts.js":"172","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompareModel.js":"173","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Location_Radial_Clusters.js":"174","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Location_Pie_OutofScope.js":"175","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Clusters_Pie_ClusterNumbers.js":"176","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Clusters_SwarmPlot_Numbers.js":"177","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cluster_Bar_ResourceAllocation.js":"178","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cluster_Bar_Workorders.js":"179","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resource_Radial_Resources.js":"180","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Pie_ResourceAllocation.js":"181","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Trade_Heatmap.js":"182","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Location_Heatmap.js":"183","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Pie_ClientsBreakdown.js":"184","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Cluster_Funnel.js":"185","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Line_Allocation_OverTime.js":"186","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Radial_Workorders.js":"187","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_pie_outofscope.js":"188","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_pie_Clients.js":"189","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Radial_Cluster.js":"190","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\WorkOrder_Heatmap.js":"191","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Bar_Overtime.js":"192","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_Resources.js":"193","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_Sites.js":"194","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_WorkOrders.js":"195","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_line_WorkordersOvertime.js":"196","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_line_ResourcesOvertime.js":"197","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\CompareGlobalFilter.js":"198"},{"size":1249,"mtime":1612394991365,"results":"199","hashOfConfig":"200"},{"size":517,"mtime":1610596234694,"results":"201","hashOfConfig":"200"},{"size":362,"mtime":499162500000,"results":"202","hashOfConfig":"200"},{"size":344,"mtime":1608627476978,"results":"203","hashOfConfig":"200"},{"size":423,"mtime":1612400881139,"results":"204","hashOfConfig":"200"},{"size":3071,"mtime":1613446520089,"results":"205","hashOfConfig":"200"},{"size":87,"mtime":1608627826907,"results":"206","hashOfConfig":"200"},{"size":5760,"mtime":1612412786342,"results":"207","hashOfConfig":"200"},{"size":1853,"mtime":1612392518100,"results":"208","hashOfConfig":"200"},{"size":3018,"mtime":1611208185346,"results":"209","hashOfConfig":"200"},{"size":2260,"mtime":1612237343586,"results":"210","hashOfConfig":"200"},{"size":12399,"mtime":1612412785866,"results":"211","hashOfConfig":"200"},{"size":1995,"mtime":1610967499605,"results":"212","hashOfConfig":"200"},{"size":661,"mtime":1612412633952,"results":"213","hashOfConfig":"200"},{"size":2854,"mtime":1612400872747,"results":"214","hashOfConfig":"200"},{"size":11752,"mtime":1613605652179,"results":"215","hashOfConfig":"200"},{"size":661,"mtime":1612392447468,"results":"216","hashOfConfig":"200"},{"size":802,"mtime":1612497021993,"results":"217","hashOfConfig":"200"},{"size":959,"mtime":1609677692743,"results":"218","hashOfConfig":"200"},{"size":11522,"mtime":1612412785866,"results":"219","hashOfConfig":"200"},{"size":257,"mtime":1609657333309,"results":"220","hashOfConfig":"200"},{"size":11449,"mtime":1612831915819,"results":"221","hashOfConfig":"200"},{"size":2328,"mtime":1612412785866,"results":"222","hashOfConfig":"200"},{"size":6899,"mtime":1613444660596,"results":"223","hashOfConfig":"200"},{"size":405,"mtime":1610502856130,"results":"224","hashOfConfig":"200"},{"size":944,"mtime":1612224754193,"results":"225","hashOfConfig":"200"},{"size":4825,"mtime":1612224759452,"results":"226","hashOfConfig":"200"},{"size":149,"mtime":1610502909105,"results":"227","hashOfConfig":"200"},{"size":155,"mtime":1610502916347,"results":"228","hashOfConfig":"200"},{"size":1743,"mtime":1611184340847,"results":"229","hashOfConfig":"200"},{"size":160,"mtime":1610448527461,"results":"230","hashOfConfig":"200"},{"size":1396,"mtime":1610779434340,"results":"231","hashOfConfig":"200"},{"size":654,"mtime":1610861163069,"results":"232","hashOfConfig":"200"},{"size":1928,"mtime":1611901415553,"results":"233","hashOfConfig":"200"},{"size":1983,"mtime":1611184403823,"results":"234","hashOfConfig":"200"},{"size":1028,"mtime":1610585645670,"results":"235","hashOfConfig":"200"},{"size":882,"mtime":1610504872791,"results":"236","hashOfConfig":"200"},{"size":2511,"mtime":1612224754193,"results":"237","hashOfConfig":"200"},{"size":1438,"mtime":1611874750577,"results":"238","hashOfConfig":"200"},{"size":1268,"mtime":1612412274048,"results":"239","hashOfConfig":"200"},{"size":178,"mtime":1612412855636,"results":"240","hashOfConfig":"200"},{"size":1281,"mtime":1612412785866,"results":"241","hashOfConfig":"200"},{"size":1574,"mtime":1612412358680,"results":"242","hashOfConfig":"200"},{"size":3156,"mtime":1612412342861,"results":"243","hashOfConfig":"200"},{"size":2016,"mtime":1612412346359,"results":"244","hashOfConfig":"200"},{"size":3467,"mtime":1612412353984,"results":"245","hashOfConfig":"200"},{"size":2229,"mtime":1612224749439,"results":"246","hashOfConfig":"200"},{"size":1561,"mtime":1612224691804,"results":"247","hashOfConfig":"200"},{"size":1596,"mtime":1612224691804,"results":"248","hashOfConfig":"200"},{"size":639,"mtime":1612224691804,"results":"249","hashOfConfig":"200"},{"size":2899,"mtime":1612412785866,"results":"250","hashOfConfig":"200"},{"size":758,"mtime":1612421792565,"results":"251","hashOfConfig":"200"},{"size":615,"mtime":1612224691803,"results":"252","hashOfConfig":"200"},{"size":602,"mtime":1612224691803,"results":"253","hashOfConfig":"200"},{"size":595,"mtime":1612224691804,"results":"254","hashOfConfig":"200"},{"size":4270,"mtime":1612224754193,"results":"255","hashOfConfig":"200"},{"size":613,"mtime":1612224691803,"results":"256","hashOfConfig":"200"},{"size":1707,"mtime":1613444062751,"results":"257","hashOfConfig":"200"},{"size":1368,"mtime":1612421716785,"results":"258","hashOfConfig":"200"},{"size":5672,"mtime":1612412785866,"results":"259","hashOfConfig":"200"},{"size":753,"mtime":1613459563439,"results":"260","hashOfConfig":"200"},{"size":1186,"mtime":1611016416902,"results":"261","hashOfConfig":"200"},{"size":2011,"mtime":1612412785866,"results":"262","hashOfConfig":"200"},{"size":684,"mtime":1611014353088,"results":"263","hashOfConfig":"200"},{"size":607,"mtime":1612224691803,"results":"264","hashOfConfig":"200"},{"size":2471,"mtime":1612412573543,"results":"265","hashOfConfig":"200"},{"size":2186,"mtime":1613609090247,"results":"266","hashOfConfig":"200"},{"size":605,"mtime":1612224691803,"results":"267","hashOfConfig":"200"},{"size":1260,"mtime":1612224749438,"results":"268","hashOfConfig":"200"},{"size":1307,"mtime":1612224749438,"results":"269","hashOfConfig":"200"},{"size":1199,"mtime":1612224749438,"results":"270","hashOfConfig":"200"},{"size":814,"mtime":1612224749438,"results":"271","hashOfConfig":"200"},{"size":2392,"mtime":1612224749438,"results":"272","hashOfConfig":"200"},{"size":1484,"mtime":1612224749438,"results":"273","hashOfConfig":"200"},{"size":2425,"mtime":1612224749438,"results":"274","hashOfConfig":"200"},{"size":2139,"mtime":1613522948741,"results":"275","hashOfConfig":"200"},{"size":1101,"mtime":1611033406310,"results":"276","hashOfConfig":"200"},{"size":177,"mtime":1611106241190,"results":"277","hashOfConfig":"200"},{"size":6481,"mtime":1611902389898,"results":"278","hashOfConfig":"200"},{"size":377,"mtime":1611879742123,"results":"279","hashOfConfig":"200"},{"size":212,"mtime":1613104480890,"results":"280","hashOfConfig":"200"},{"size":1077,"mtime":1613515345103,"results":"281","hashOfConfig":"200"},{"size":1418,"mtime":1612845000167,"results":"282","hashOfConfig":"200"},{"size":2577,"mtime":1613605293992,"results":"283","hashOfConfig":"200"},{"size":481,"mtime":1612267326651,"results":"284","hashOfConfig":"200"},{"size":1589,"mtime":1613531869050,"results":"285","hashOfConfig":"200"},{"size":852,"mtime":1612760888496,"results":"286","hashOfConfig":"200"},{"size":1069,"mtime":1613528356917,"results":"287","hashOfConfig":"200"},{"size":2660,"mtime":1613520093014,"results":"288","hashOfConfig":"200"},{"size":2830,"mtime":1613440875700,"results":"289","hashOfConfig":"200"},{"size":531,"mtime":1613102989347,"results":"290","hashOfConfig":"200"},{"size":1089,"mtime":1613448106644,"results":"291","hashOfConfig":"200"},{"size":1775,"mtime":1613522991301,"results":"292","hashOfConfig":"200"},{"size":1024,"mtime":1613528263204,"results":"293","hashOfConfig":"200"},{"size":1490,"mtime":1612225407057,"results":"294","hashOfConfig":"200"},{"size":2005,"mtime":1613515503087,"results":"295","hashOfConfig":"200"},{"size":1491,"mtime":1613102891710,"results":"296","hashOfConfig":"200"},{"size":1357,"mtime":1612227661625,"results":"297","hashOfConfig":"200"},{"size":593,"mtime":1612266935153,"results":"298","hashOfConfig":"200"},{"size":1445,"mtime":1612412785866,"results":"299","hashOfConfig":"200"},{"size":5445,"mtime":1612412785866,"results":"300","hashOfConfig":"200"},{"size":3203,"mtime":1612412785866,"results":"301","hashOfConfig":"200"},{"size":2682,"mtime":1612250401130,"results":"302","hashOfConfig":"200"},{"size":2240,"mtime":1612226142973,"results":"303","hashOfConfig":"200"},{"size":4422,"mtime":1612226987862,"results":"304","hashOfConfig":"200"},{"size":2062,"mtime":1612267271008,"results":"305","hashOfConfig":"200"},{"size":484,"mtime":1612226692141,"results":"306","hashOfConfig":"200"},{"size":1183,"mtime":1612412329781,"results":"307","hashOfConfig":"200"},{"size":3569,"mtime":1612412785866,"results":"308","hashOfConfig":"200"},{"size":3220,"mtime":1612226943564,"results":"309","hashOfConfig":"200"},{"size":806,"mtime":1612227396905,"results":"310","hashOfConfig":"200"},{"size":4048,"mtime":1612412510064,"results":"311","hashOfConfig":"200"},{"size":3180,"mtime":1612412785866,"results":"312","hashOfConfig":"200"},{"size":757,"mtime":1612497273344,"results":"313","hashOfConfig":"200"},{"size":3896,"mtime":1612232478939,"results":"314","hashOfConfig":"200"},{"size":948,"mtime":1612239028885,"results":"315","hashOfConfig":"200"},{"size":578,"mtime":1613102495949,"results":"316","hashOfConfig":"200"},{"size":827,"mtime":1613457978056,"results":"317","hashOfConfig":"200"},{"size":1162,"mtime":1612269527076,"results":"318","hashOfConfig":"200"},{"size":2227,"mtime":1612412785866,"results":"319","hashOfConfig":"200"},{"size":2236,"mtime":1612412785866,"results":"320","hashOfConfig":"200"},{"size":3005,"mtime":1612412785866,"results":"321","hashOfConfig":"200"},{"size":2195,"mtime":1612845006055,"results":"322","hashOfConfig":"200"},{"size":455,"mtime":1613457942264,"results":"323","hashOfConfig":"200"},{"size":1608,"mtime":1613451088646,"results":"324","hashOfConfig":"200"},{"size":793,"mtime":1613604463516,"results":"325","hashOfConfig":"200"},{"size":2873,"mtime":1613605842713,"results":"326","hashOfConfig":"200"},{"size":2227,"mtime":1612845557009,"results":"327","hashOfConfig":"200"},{"size":974,"mtime":1613520593717,"results":"328","hashOfConfig":"200"},{"size":923,"mtime":1612398332279,"results":"329","hashOfConfig":"200"},{"size":672,"mtime":1612392440875,"results":"330","hashOfConfig":"200"},{"size":34909,"mtime":1613523053877,"results":"331","hashOfConfig":"200"},{"size":1154,"mtime":1613527916940,"results":"332","hashOfConfig":"200"},{"size":5609,"mtime":1613195713852,"results":"333","hashOfConfig":"200"},{"size":581,"mtime":1613520912562,"results":"334","hashOfConfig":"200"},{"size":1399,"mtime":1613520581811,"results":"335","hashOfConfig":"200"},{"size":1091,"mtime":1613102396459,"results":"336","hashOfConfig":"200"},{"size":885,"mtime":1613535326625,"results":"337","hashOfConfig":"200"},{"size":2079,"mtime":1613535338537,"results":"338","hashOfConfig":"200"},{"size":500,"mtime":1613532785576,"results":"339","hashOfConfig":"200"},{"size":467,"mtime":1613529049481,"results":"340","hashOfConfig":"200"},{"size":524,"mtime":1613533216041,"results":"341","hashOfConfig":"200"},{"size":2288,"mtime":1613038246128,"results":"342","hashOfConfig":"200"},{"size":4425,"mtime":1613190036917,"results":"343","hashOfConfig":"200"},{"size":3248,"mtime":1613197620806,"results":"344","hashOfConfig":"200"},{"size":4327,"mtime":1613197911963,"results":"345","hashOfConfig":"200"},{"size":4267,"mtime":1613190190222,"results":"346","hashOfConfig":"200"},{"size":218,"mtime":1613452038810,"results":"347","hashOfConfig":"200"},{"size":469,"mtime":1613103116605,"results":"348","hashOfConfig":"200"},{"size":2360,"mtime":1613197602389,"results":"349","hashOfConfig":"200"},{"size":2773,"mtime":1613198962589,"results":"350","hashOfConfig":"200"},{"size":3202,"mtime":1613195507027,"results":"351","hashOfConfig":"200"},{"size":1742,"mtime":1613197603460,"results":"352","hashOfConfig":"200"},{"size":3596,"mtime":1613199871522,"results":"353","hashOfConfig":"200"},{"size":4822,"mtime":1613268148495,"results":"354","hashOfConfig":"200"},{"size":12664,"mtime":1613608424862,"results":"355","hashOfConfig":"200"},{"size":738,"mtime":1613440232736,"results":"356","hashOfConfig":"200"},{"size":2114,"mtime":1613535369417,"results":"357","hashOfConfig":"200"},{"size":2564,"mtime":1613515344048,"results":"358","hashOfConfig":"200"},{"size":1136,"mtime":1613458706480,"results":"359","hashOfConfig":"200"},{"size":2622,"mtime":1613432065714,"results":"360","hashOfConfig":"200"},{"size":1102,"mtime":1613441443496,"results":"361","hashOfConfig":"200"},{"size":1209,"mtime":1613450269331,"results":"362","hashOfConfig":"200"},{"size":1452,"mtime":1613432348128,"results":"363","hashOfConfig":"200"},{"size":2350,"mtime":1613432509856,"results":"364","hashOfConfig":"200"},{"size":1932,"mtime":1613521060890,"results":"365","hashOfConfig":"200"},{"size":4217,"mtime":1613608178571,"results":"366","hashOfConfig":"200"},{"size":1823,"mtime":1613529368109,"results":"367","hashOfConfig":"200"},{"size":4426,"mtime":1613608011145,"results":"368","hashOfConfig":"200"},{"size":491,"mtime":1613434863728,"results":"369","hashOfConfig":"200"},{"size":1488,"mtime":1613535358987,"results":"370","hashOfConfig":"200"},{"size":2515,"mtime":1613604803945,"results":"371","hashOfConfig":"200"},{"size":2523,"mtime":1613535091898,"results":"372","hashOfConfig":"200"},{"size":1208,"mtime":1613461291155,"results":"373","hashOfConfig":"200"},{"size":1445,"mtime":1613451051029,"results":"374","hashOfConfig":"200"},{"size":1189,"mtime":1613451054141,"results":"375","hashOfConfig":"200"},{"size":1128,"mtime":1613455723586,"results":"376","hashOfConfig":"200"},{"size":2297,"mtime":1613457805880,"results":"377","hashOfConfig":"200"},{"size":2022,"mtime":1613457955816,"results":"378","hashOfConfig":"200"},{"size":1487,"mtime":1613515186484,"results":"379","hashOfConfig":"200"},{"size":1339,"mtime":1613520591870,"results":"380","hashOfConfig":"200"},{"size":1926,"mtime":1613606297600,"results":"381","hashOfConfig":"200"},{"size":1926,"mtime":1613606198193,"results":"382","hashOfConfig":"200"},{"size":1292,"mtime":1613520587163,"results":"383","hashOfConfig":"200"},{"size":1142,"mtime":1613520588882,"results":"384","hashOfConfig":"200"},{"size":1779,"mtime":1613521150483,"results":"385","hashOfConfig":"200"},{"size":1445,"mtime":1613527252466,"results":"386","hashOfConfig":"200"},{"size":1453,"mtime":1613527543409,"results":"387","hashOfConfig":"200"},{"size":1044,"mtime":1613528200497,"results":"388","hashOfConfig":"200"},{"size":1161,"mtime":1613528199425,"results":"389","hashOfConfig":"200"},{"size":1917,"mtime":1613606327229,"results":"390","hashOfConfig":"200"},{"size":2464,"mtime":1613528949082,"results":"391","hashOfConfig":"200"},{"size":1195,"mtime":1613533323143,"results":"392","hashOfConfig":"200"},{"size":1214,"mtime":1613535296177,"results":"393","hashOfConfig":"200"},{"size":1202,"mtime":1613535321123,"results":"394","hashOfConfig":"200"},{"size":3061,"mtime":1613532712353,"results":"395","hashOfConfig":"200"},{"size":3375,"mtime":1613533087088,"results":"396","hashOfConfig":"200"},{"size":807,"mtime":1613604724024,"results":"397","hashOfConfig":"200"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"401"},"i3jrvt",{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"401"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"401"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"401"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"401"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"443"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"401"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"401"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"401"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"401"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"401"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"401"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"401"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"401"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"401"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"401"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"401"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"401"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"401"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"401"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"401"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"401"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"401"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"401"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"401"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"401"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"401"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"401"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"401"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"401"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"401"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"401"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"401"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"401"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"401"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"401"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"401"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"589","messages":"590","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"401"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"606","messages":"607","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"401"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"611","messages":"612","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"401"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"616","messages":"617","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"618","messages":"619","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"628","messages":"629","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"631"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"634","messages":"635","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"401"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"641","usedDeprecatedRules":"401"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644","usedDeprecatedRules":"401"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"401"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"401"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"401"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"657"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"657"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"665","messages":"666","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"401"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"401"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"401"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"401"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"401"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"401"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"685"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"689"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"689"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"697","messages":"698","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"699","messages":"700","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"401"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"401"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"401"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"712","messages":"713","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"714","messages":"715","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"716","messages":"717","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"718","messages":"719","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"401"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727","usedDeprecatedRules":"401"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"730","messages":"731","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"732","messages":"733","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"401"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"737","messages":"738","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"739","messages":"740","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741","usedDeprecatedRules":"401"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"746","messages":"747","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"748","messages":"749","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"750","messages":"751","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"752","messages":"753","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754","usedDeprecatedRules":"401"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757","usedDeprecatedRules":"401"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"760","usedDeprecatedRules":"401"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"401"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"401"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"401"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776","usedDeprecatedRules":"401"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"401"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"401"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"401"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"788","messages":"789","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"792","messages":"793","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"794","messages":"795","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"796","messages":"797","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"798","messages":"799","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"806","messages":"807","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"808","messages":"809","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"810","messages":"811","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"812","messages":"813","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"814","messages":"815","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"816","messages":"817","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"818","messages":"819","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"820","messages":"821","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"822","messages":"823","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"830","messages":"831","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"852","messages":"853","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"860","messages":"861","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"870","messages":"871","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"872","messages":"873","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\index.js",["874"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { LoadScript } from '@react-google-maps/api';\nimport {UXContextProvider} from \"./Context/UX\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './store/'; \nimport {LoadPrototype} from \"./actions/PrototypeLoader\";\nimport {JWT} from \"./actions/authUser\";\n\n/*\ngit add .\ngit commit -am \"FirstPushTest\"\ngit push heroku master\n\n*/\nrequire('dotenv').config();\nconst PrepApp = new LoadPrototype();\nconst JWTCHECK = JWT();\nPrepApp.Fetch();\n//require('dotenv').config()\n\nlet APIKEY = process.env.REACT_APP_GOOGLEAPI;\n\nReactDOM.render(\n    <Provider store={ store }>\n      <LoadScript  googleMapsApiKey={APIKEY}  libraries={[\"visualization\"]}>\n        <UXContextProvider>\n          <React.StrictMode>\n            <App />\n          </React.StrictMode>\n        </UXContextProvider>\n      </LoadScript>\n    </Provider>,\n  document.getElementById('root')\n); \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["875","876"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\App.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\reportWebVitals.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\UX.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\History.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\PrototypeLoader.js",["877"],"\r\n// Private Functions\r\nimport store from \"../store/index\"\r\nimport axios from 'axios';\r\nimport {useAPILOCATION} from \"./authUser\"\r\n\r\n\r\n/*\r\nexport function LoginSequence(arr){\r\n    let State = arr.map((Value,i)=>{\r\n       store.dispatch({ type:Value.Type, payload:Value.Value });\r\n       return true;\r\n    })\r\n    return State;\r\n} \r\n */\r\n\r\nexport function LoadPrototype(){\r\n\r\n    console.log(\"LOAD ME\")\r\n    this.API=useAPILOCATION()+'graphql'\r\n\r\n    this.Limit=100;\r\n\r\n   \r\n\r\n    this.RegionRequest= `\r\n         {name id combined long lat  \r\n          count{ WorkOrders JobTypes TradeTypes Customers} \r\n          sites{name id lat long delivery_model{name id} combined count{ WorkOrders JobTypes TradeTypes Customers} }\r\n          cities{name id }\r\n        }\r\n      `\r\n    this.LimitedRequest = `{ name id }`\r\n\r\n    \r\n    this.Store={customers:true,SmallFetch:true, sites:true}\r\n\r\n    this.SmallReturnsQuery = `query{ \r\n        states {name id combined long lat count{ WorkOrders } }\r\n        countries { country lat long combined count{ WorkOrders }}\r\n      }`\r\n    // THIS IS HORRIBLE FIX IT\r\n    this.SitesRequest =`{ name lat long combined siteweighting count{ WorkOrders}  region_type{name} postcode{name} }`\r\n    this.StoreSites=[]\r\n    this.SitesQuery =` query { sites (start: 0) ${ this.SitesRequest} }`;\r\n\r\n    this.StoreRegions=[]\r\n    this.RegionQuery = `query {regions (start: 0) ${this.RegionRequest}}`\r\n\r\n    this.StoreCustomers=[]\r\n    this.CustomerQuery = `query { customers (start: 0) ${this.LimitedRequest}}`;\r\n\r\n    \r\n    this.GraphQL=(Query, CallBack)=>{\r\n        axios({  url: this.API,  method: 'post', data: { query: Query} }).then((result) => { CallBack(result.data) });\r\n    }\r\n\r\n\r\n    this.Fetch = ()=>{\r\n        console.log(\"Prep App\");\r\n        // Large Data Fetch\r\n        \r\n        // commented out for dev\r\n        //this.GraphQL(this.SitesQuery, this.ProcessSites)\r\n        //this.GraphQL(this.RegionQuery, this.ProcessRegions)\r\n\r\n    //    this.GraphQL(this.CustomerQuery, this.ProcessCustomer)\r\n\r\n        // Small Data Fetch\r\n    //    this.GraphQL( this.SmallReturnsQuery, this.ProcessSmallReturns)\r\n    this.processCheck()\r\n    }\r\n\r\n\r\n\r\n    /* *************************************************************************************************** */\r\n    // Process Small\r\n    /* *************************************************************************************************** */       \r\n        this.ProcessSmallReturns = (Data)=>{\r\n            //console.log(Data.data)\r\n\r\n            store.dispatch({ type:'STORECOUNTRIES', payload:Data.data.countries});\r\n            store.dispatch({ type:'STORETRADETYPE', payload:Data.data.tradeTypes});\r\n            store.dispatch({ type:'STOREJOBTYPE', payload:Data.data.jobTypes});\r\n            store.dispatch({ type:'STOREINDUSTRYTYPE', payload:Data.data.industryTypes});\r\n            store.dispatch({ type:'STORERATIOMODELS', payload:Data.data.ratioModels});\r\n            store.dispatch({ type:'STORESTATES', payload:Data.data.states});\r\n\r\n            this.Store.SmallFetch=true;\r\n            this.processCheck()\r\n        }     \r\n\r\n        \r\n  /* *************************************************************************************************** */\r\n    // Sites\r\n     /* *************************************************************************************************** */\r\n     this.ProcessSites=(Data)=>{ \r\n        this.StoreSites = [...this.StoreSites,...Data.data.sites];\r\n\r\n      //console.log(\"modulus\", this.StoreSites.length % this.Limit);\r\n\r\n        //console.log(this.StoreSites)\r\n\r\n        if((this.StoreSites.length % this.Limit) === 0){  \r\n            this.GraphQL(`query {sites (start: ${this.StoreSites.length}) ${this.SitesRequest}}`, this.ProcessSites)\r\n        }\r\n        else{ this.Store.sites=true}\r\n\r\n        store.dispatch({ type:'STORESITES', payload:this.StoreSites});\r\n\r\n        this.processCheck()\r\n    }\r\n\r\n  /* *************************************************************************************************** */\r\n    // Regions\r\n     /* *************************************************************************************************** */\r\n     this.ProcessRegions=(Data)=>{ \r\n        this.StoreRegions = [...this.StoreRegions,...Data.data.regions];\r\n\r\n           //console.log(\"modulus\", this.StoreRegions.length % this.Limit)\r\n        if((this.StoreRegions.length % this.Limit) === 0){  \r\n            this.GraphQL(`query {regions (start: ${this.StoreRegions.length}) ${this.RegionRequest}}`, this.ProcessRegions)\r\n        }\r\n        else{ this.Store.Region=true}\r\n\r\n        store.dispatch({ type:'STOREREGIONS', payload:this.StoreRegions});\r\n\r\n        this.processCheck()\r\n    }\r\n\r\n  /* *************************************************************************************************** */\r\n  // Customer\r\n   /* *************************************************************************************************** */\r\n   this.ProcessCustomer=(Data)=>{ \r\n    this.StoreCustomers = [...this.StoreCustomers,...Data.data.customers];\r\n\r\n    if(this.StoreCustomers.length === this.Limit){  \r\n        this.GraphQL(`query {customers (start: ${Data.data.customers.length}) ${this.LimitedRequest}}`, \r\n        this.ProcessCustomer)\r\n    }\r\n    else{ this.Store.customers=true}\r\n\r\n    store.dispatch({ type:'STORECUSTOMERS', payload:this.StoreCustomers});\r\n\r\n    this.processCheck()\r\n    }\r\n\r\n\r\n    /* Is Process Complete?  */\r\n    this.processCheck=()=>{ \r\n        let Load = true\r\n        Object.keys(this.Store).map((k,i)=>{\r\n            if(!this.Store[k])\r\n                Load=false\r\n        })\r\n        console.log(\"Load\", Load)\r\n            if(Load)\r\n                store.dispatch({ type:'DATARECEIVED', payload:true});\r\n            \r\n    }\r\n\r\n\r\n\r\n} ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\STRAPI.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\SideBar.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\GeoLocationActions.js",["878","879","880","881","882","883","884","885"],"import { Circle } from '@react-google-maps/api';\r\nimport store from \"../store/index\"\r\nimport {ClusterAnalysis} from \"./ClusterAnalysis\";\r\n\r\n\r\n\r\n/*\r\n    This class should deal with Geolocation Processes ONLY\r\n    all result filtering to be handled in phase two\r\n\r\n*/\r\n\r\n\r\n// find the distance in KM from 1 point to another\r\nexport function distancetoPoint(lat1, lon1, lat2, lon2, unit) {\r\n    if ((lat1 == lat2) && (lon1 == lon2)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var radlat1 = Math.PI * lat1/180;\r\n        var radlat2 = Math.PI * lat2/180;\r\n        var theta = lon1-lon2;\r\n        var radtheta = Math.PI * theta/180;\r\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n        if (dist > 1) {\r\n            dist = 1;\r\n        }\r\n        dist = Math.acos(dist);\r\n        dist = dist * 180/Math.PI;\r\n        dist = dist * 60 * 1.1515;\r\n        if (unit==\"K\") { dist = dist * 1.609344 }\r\n        if (unit==\"N\") { dist = dist * 0.8684 }\r\n        return dist;\r\n    }\r\n}\r\n\r\n// use to find the scan box area.\r\n// this function return the corosponding lnglat to a given point\r\n\r\n\r\nexport  function llFromDistance(latitude, longitude, distance, bearing) {\r\n    // taken from: https://stackoverflow.com/a/46410871/13549 \r\n    // distance in KM, bearing in degrees\r\n  \r\n    const R = 6378.1; // Radius of the Earth\r\n    const brng = bearing * Math.PI / 180; // Convert bearing to radian\r\n    let lat = latitude * Math.PI / 180; // Current coords to radians\r\n    let lon = longitude * Math.PI / 180;\r\n  \r\n    // Do the math magic\r\n    lat = Math.asin(Math.sin(lat) * Math.cos(distance / R) + Math.cos(lat) * Math.sin(distance / R) * Math.cos(brng));\r\n    lon += Math.atan2(Math.sin(brng) * Math.sin(distance / R) * Math.cos(lat), Math.cos(distance / R) - Math.sin(lat) * Math.sin(lat));\r\n  \r\n    // Coords back to degrees and return\r\n    return [(lat * 180 / Math.PI), (lon * 180 / Math.PI)];\r\n  \r\n  }\r\n\r\n\r\n  export const TestBoundaries = (site, Area)=>{\r\n    let found=false;\r\n    if(site.lat <=  Area.north && site.lat >= Area.south && site.long >= Area.west && site.long <= Area.east ){found=true}\r\n    return found\r\n}\r\n\r\n\r\n\r\n\r\n\r\n \r\n// Main Scan Class\r\nexport function PreformScan(){\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /* Variables */\r\n    /* *************************************************************************************************************** */        \r\n    \r\n    //this.Area=.5\r\n    //this.ScanDistanceArea=this.Area;\r\n    //this.SearchRadius = .5\r\n    //this.minSites=2\r\n    //this.WorkOrderVariants = [500,1500];\r\n    this.FilterVariables=null\r\n\r\n\r\n    this.Boundaries=null;\r\n    this.setGridpoints=null;\r\n    this.setGridPointer=null;\r\n\r\n    this.TestAgainstSites=null;\r\n    this.ScanResults=[];\r\n    this.setScanResults=null\r\n    this.sleepFor=10;\r\n    this.NESW={ north: null, south: null, east: null,  west: null }\r\n    \r\n    \r\n    this.PointOptions={\r\n        strokeColor: '#FF0000',\r\n        strokeOpacity: 0.5,\r\n        strokeWeight: 1,\r\n        fillColor: '#FF0000',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 10,\r\n        zIndex: 1\r\n      }\r\n         \r\n     this.GridPointerOptions = {\r\n        strokeColor: '#00ff00',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 1,\r\n        fillColor: '#00ff00',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 100,\r\n        zIndex: 10\r\n      }\r\n\r\n      this.GridResultOptions={\r\n        strokeColor: '#00ff00',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 1,\r\n        fillColor: '#00ff00',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 1000,\r\n        zIndex: 10\r\n      }\r\n\r\n      this.recOptions={\r\n        strokeColor: '#6094ff',\r\n        strokeOpacity: 0.9,\r\n        strokeWeight: 1,\r\n        fillColor: '#6094ff',\r\n        fillOpacity: 0.15,\r\n      }\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /*  AUX Functions*/\r\n    /* *************************************************************************************************************** */        \r\n\r\n    this.sleep = ()=>{  return new Promise(resolve => setTimeout(resolve, this.sleepFor)) }\r\n    \r\n    this.BreakBoundaries=(Boundaries)=>{\r\n        this.NESW = {  north: Boundaries[1], south: Boundaries[0], east: Boundaries[3], west: Boundaries[2] }\r\n    }\r\n\r\n    this.arePointsNear = (checkPoint, centerPoint, km) => {\r\n                var ky = 40000 / 360;\r\n                var kx = Math.cos(Math.PI * centerPoint.lat / 180.0) * ky;\r\n                var dx = Math.abs(centerPoint.lng - checkPoint.lng) * kx;\r\n                var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\r\n                return Math.sqrt(dx * dx + dy * dy) <= km;\r\n            }\r\n\r\n    this.RemoveDuplicates =()=>{\r\n\r\n    }\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /* Process */\r\n    /* *************************************************************************************************************** */        \r\n\r\n    this.Scan=()=>{\r\n            console.log(\"START SCAN \")\r\n            console.log(\"Scan Filters\", this.FilterVariables)\r\n            \r\n            this.BreakBoundaries(this.Boundaries)\r\n            //console.log(this.NESW)\r\n            \r\n            \r\n            //console.log(this.FilterVariables.Area, this.FilterVariables);\r\n            let Xiterations = distancetoPoint(this.NESW.north,this.NESW.west, this.NESW.north, this.NESW.east,'K')/this.FilterVariables.GridSpacing;\r\n            let Yiterations = distancetoPoint(this.NESW.north,this.NESW.west, this.NESW.south, this.NESW.west,'K')/this.FilterVariables.GridSpacing;\r\n\r\n            //console.log( Xiterations, Yiterations);\r\n            //let ScanBoxStartingPosition = llFromDistance(this.NESW.north, this.NESW.west, Math.sqrt(2)*this.Area, 135)\r\n            \r\n            //let LargestSurfaceArea = Math.max(Math.ceil(Xiterations), Math.ceil(Yiterations))\r\n\r\n            this.setGridPointer(<Circle options={this.GridPointerOptions}  center={{ lat: this.NESW.north, lng: this.NESW.west }} />)\r\n            this.FindScanPoints(Math.ceil(Xiterations), Math.ceil(Yiterations))\r\n            \r\n        }\r\n\r\n\r\n\r\n    this.FindScanPoints = (Xiterations, Yiterations)=>{\r\n\r\n        //console.log(Xiterations, Yiterations);\r\n\r\n        let LargestSurfaceArea = Math.max(Xiterations, Yiterations)\r\n        let i=0;\r\n        let Points = []\r\n        let ReturnedLngLat;\r\n\r\n      \r\n        while( i < LargestSurfaceArea){\r\n           \r\n            ReturnedLngLat = llFromDistance(this.NESW.north, this.NESW.west, (Math.sqrt(2)*(i*this.FilterVariables.GridSpacing)), 135)\r\n            //console.log(ReturnedLngLat[0],ReturnedLngLat[1])\r\n            Points.push([ReturnedLngLat[0],ReturnedLngLat[1]]) \r\n            \r\n            i++\r\n        }\r\n\r\n        //console.log(Points);\r\n        this.MapScanPoints(Points, Xiterations, Yiterations)\r\n    }\r\n\r\n\r\n\r\n    this.MapScanPoints=(Points, Xiterations, Yiterations)=>{\r\n\r\n        let MapGrid=[]\r\n        let createCircles=[];\r\n\r\n\r\n        let ii=0;\r\n\r\n        while(ii < Yiterations){\r\n            let Row=0, Col=0, iii=0\r\n            while(iii < Xiterations){\r\n                Row=ii;\r\n                Col=iii\r\n                    //console.log([Row,Col])\r\n                    MapGrid.push([Points[Row][0], Points[Col][1]])\r\n                    createCircles.push(<Circle key={ii+iii} options={this.PointOptions}  center={{ lat: Points[Row][0], lng: Points[Col][1] }} />)\r\n                    iii++\r\n            }\r\n            ii++\r\n        }\r\n        //console.log(MapGrid);\r\n        this.setGridpoints(createCircles)\r\n        this.RunScanTest (MapGrid)\r\n    }\r\n\r\n\r\n    this.RunScanTest = async(MapGrid)=>{\r\n        \r\n        // Variables\r\n        this.setScanResults(null)\r\n        let i=0\r\n        // run loop to scan through Grid points\r\n        while(i<MapGrid.length){\r\n            // Hold scan point for FE show only\r\n            await this.sleep()\r\n            // find\r\n          //  let ScanBoxNewPosition = llFromDistance(MapGrid[i][0], MapGrid[i][1], Math.sqrt(2)*this.Area, 135)\r\n          //  south: ScanBoxNewPosition[0],east: ScanBoxNewPosition[1],\r\n            this.setGridPointer(<Circle options={this.GridPointerOptions}  center={{ lat: MapGrid[i][0], lng: MapGrid[i][1] }} />)\r\n            \r\n            // Create Circle Center point to scan in next function hand off.\r\n            let ScanBoundary = { north: MapGrid[i][0],  west: MapGrid[i][1] }\r\n            \r\n            this.scanTestDiameter(ScanBoundary)\r\n            \r\n            i++\r\n        }\r\n\r\n        this.setGridPointer(<Circle visible={false} options={this.GridPointerOptions}   />)\r\n        this.StoreResults()\r\n        ClusterAnalysis(this.ScanResults)\r\n        \r\n    }\r\n\r\n\r\n\r\n    this.scanTestDiameter = (ScanBoundary)=>{\r\n\r\n        // This function checks to see if a site is within the Radius of the center point in the scan\r\n        // it should check each site lng/lst. if true then store in array this.ScanResults;\r\n       \r\n        // Outer Global Variables\r\n        let CollectSites=[];\r\n        let long=[],lat=[],GroupedBoxBoundaryLimits=[];\r\n       // Variables\r\n       let WorkOrderCount = 0;\r\n\r\n        // Loop known sites in this area for matches\r\n        this.TestAgainstSites.map((site,i)=>{\r\n            \r\n            \r\n            if(this.arePointsNear({ lat: site.lat, lng: site.long}, { lat: ScanBoundary.north, lng: ScanBoundary.west }, this.FilterVariables.SearchRadius)){\r\n\r\n                //console.log(site)\r\n\r\n                // Push Values into Arrays\r\n                long.push(site.long);\r\n                lat.push(site.lat)\r\n                CollectSites.push(site);\r\n                \r\n                //console.log(site)\r\n                //if(site.count[0] !== null) WorkOrderCount = WorkOrderCount + site.count[0].WorkOrders;\r\n               \r\n              \r\n            } // close if true\r\n           \r\n          })  // close Map\r\n\r\n            // Limit Boundaries to outer most\r\n            GroupedBoxBoundaryLimits.push([Math.max(...long), Math.min(...long), Math.max(...lat), Math.min(...lat)])\r\n            // if work orders !0 ship it off for processing\r\n            /*\r\n            if( WorkOrderCount >= this.FilterVariables.MinWorkOrder \r\n                && WorkOrderCount <= this.FilterVariables.MaxOrderOrders \r\n                && CollectSites.length>=this.FilterVariables.minSites)\r\n                { }\r\n            */\r\n                this.ProcessGridBoundary(CollectSites, GroupedBoxBoundaryLimits, ScanBoundary)\r\n        }\r\n\r\n \r\n\r\n    this.ProcessGridBoundary=(Sites, GroupedBoxBoundaryLimits, ScanBoundary)=>{\r\n     \r\n        // Variables\r\n        let tmp = [];\r\n        let remove=[];\r\n        let removeDuplicateBoundaryLimits;\r\n        \r\n        // remove any dupliactes from arrays\r\n        removeDuplicateBoundaryLimits = GroupedBoxBoundaryLimits.filter(function (v, i) {\r\n            if (tmp.indexOf(v.toString()) < 0) \r\n                { \r\n                    tmp.push(v.toString());\r\n                    return v;\r\n                }else{\r\n                    remove.push(i)\r\n                }\r\n        });\r\n\r\n        remove.map((id,i)=>{ Sites.splice(id, 1);})\r\n\r\n        // only add items with a site count\r\n        if(Sites.length>0){\r\n            this.ScanResults.push({\r\n                Sites:Sites,\r\n                SiteCount:Sites.length,\r\n                Boundary:ScanBoundary,\r\n                //WorkOrderCount:WorkOrderCount,\r\n                GroupedBoxBoundaryLimits:removeDuplicateBoundaryLimits[0]\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    this.StoreResults = ()=>{\r\n\r\n\r\n        //console.log(\"Scan End Num\", this.ScanResults.length)\r\n        // Store Results\r\n        store.dispatch({ type:'SCANSTATE', payload:false}); \r\n        \r\n        \r\n        //store.dispatch({ type:'STORERESULTS', payload:this.ScanResults});        \r\n \r\n    }\r\n\r\n} ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\STRAPI.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\UX.js",["886"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n    Full\r\n    Countries\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_UX_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_UX_FULL = ()=>{\r\n    return useContext(Context_UX_FULL)\r\n}\r\n\r\n\r\n \r\nexport const UXContextProvider = ({children})=>{\r\n        const UX = useSelector(state => state.UX );\r\n\r\n    useMemo(()=>{  },[UX]) \r\n\r\n    return(\r\n            <Context_UX_FULL.Provider value={UX}>\r\n                {children}            \r\n            </Context_UX_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\SCANSTATE.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleUX.js",["887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SCAN.js",["921"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_SCAN_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_SCAN_FULL = ()=>{\r\n    return useContext(Context_SCAN_FULL)\r\n}\r\n\r\n\r\n \r\nexport const SCANContextProvider = ({children})=>{\r\n        const SCAN = useSelector(state => state.SCANSTATE );\r\n\r\n    useMemo(()=>{  },[SCAN]) \r\n\r\n    return(\r\n            <Context_SCAN_FULL.Provider value={SCAN}>\r\n                {children}            \r\n            </Context_SCAN_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\SimplePie.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\BarChart.js",["922"],"import React  from 'react';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n} from 'recharts';\r\n\r\n/*\r\nexample\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n];\r\n*/\r\n\r\nconst SimpleBarChart = (props)=>{\r\n\r\n    const {Data} = props\r\n    return (\r\n      <div style={{ width: '100%', height: 400 }}>\r\n      <ResponsiveContainer>\r\n          <BarChart\r\n            width={600}\r\n            height={400}\r\n            data={Data}\r\n            margin={{\r\n              top: 5, right: 30, left: 20, bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"value\" fill=\"#ffbf00\" />\r\n          \r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default SimpleBarChart;\r\n",["923","924"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\ClusterAnalysis.js",["925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947"],"import store from \"../store/index\"\r\n//import axios from 'axios';\r\nimport {find, findIndex} from 'lodash'; \r\n\r\n\r\n/* **************************************************************************** */\r\n/*  Aux Functions */\r\n/* **************************************************************************** */\r\nconst GroupArray =(arr) =>{\r\n    var a = [],b = [],prev;\r\n    arr.sort();\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i] !== prev) {\r\n        a.push(arr[i]);\r\n        b.push(1);\r\n      } else {\r\n        b[b.length - 1]++;\r\n      }\r\n      prev = arr[i];\r\n    }\r\n    return [a, b];\r\n  }\r\n\r\n\r\n  const FindMultiplier=(int)=>{\r\n    const RM = store.getState().STRAPI.ratioModel\r\n    let Multiplier = find(RM, function(o) { return (o.Min <= int && o.max >= int) });\r\n    return Multiplier.multiplier\r\n  }\r\n\r\n\r\n  const FindInterior = (outer, inner)=>{\r\n    inner.map((cluster,i)=>{\r\n      let Inside = false\r\n      if(\r\n          cluster.GroupedBoxBoundaryLimits[0] > outer[0]\r\n        && cluster.GroupedBoxBoundaryLimits[1] < outer[1]\r\n        && cluster.GroupedBoxBoundaryLimits[2] > outer[2]\r\n        && cluster.GroupedBoxBoundaryLimits[3] < outer[3]\r\n      )\r\n      { Inside = true}\r\n      console.log(outer, cluster.GroupedBoxBoundaryLimits)\r\n        console.log(Inside)\r\n    })\r\n  }\r\n\r\n   export const findTradeTypeName = (id)=>{\r\n    \r\n    const TRADETYPE = store.getState().STRAPI.tradeType;\r\n    \r\n    let FoundType = find(TRADETYPE, function(o) { return o.id === id; })\r\n    return FoundType.name\r\n}\r\n\r\n\r\n  export const findClientName=(id)=>{\r\n    const Clients = store.getState().STRAPI.UserData.Customers;\r\n    let FoundClient = find(Clients, function(o) { return o.id === id; });\r\n\r\n    if(FoundClient !== undefined)\r\n      return FoundClient.name \r\n  \r\n    return false\r\n   }\r\n\r\n    const ResourcesRequired = (TradesUsed)=>{\r\n      //console.log(TradesUsed);\r\n      \r\n    }\r\n\r\n    const ChartGroupArrayData = (Compressed)=>{\r\n    let CompressedForPie=[]\r\n    Compressed[0].map((jt,i)=>{ CompressedForPie.push({ name: jt , value: Compressed[1][i] }) })\r\n    return (CompressedForPie);\r\n    }\r\n\r\n/* End Aux Functions **************************************************************************** */\r\n\r\n\r\n/* **************************************************************************** */\r\n/* Worker Functions  */\r\n/* **************************************************************************** */\r\n\r\n\r\n\r\nconst findTradeParent = (trade)=>{\r\n  const TRADETYPEALLOCATION = store.getState().STRAPI.UserData.tradetypes;\r\n\r\n  let FoundType = find(TRADETYPEALLOCATION, function(o) { return o.id === trade; })\r\n  if(FoundType === undefined){\r\n    //console.log(trade)\r\n    return 'undefined'\r\n  }else{\r\n   // console.log(trade, FoundType.trade_allocation_ratio.Name)\r\n    return FoundType.trade_allocation_ratio.Name;\r\n  }\r\n \r\n}\r\n\r\n// Find Allocation of trade type across cluster\r\n\r\n   export const FindTradeTypeAllocation = (data)=>{\r\n     let TotalChildTradesTradearr=[]\r\n     let ParentTradeName=[]\r\n      data.map((site,i)=>{\r\n          site.sites.map((count,i)=>{\r\n            let TradesJson = JSON.parse(count.count[0].TradeTypes);\r\n            TotalChildTradesTradearr=  [...TotalChildTradesTradearr, ...TradesJson]\r\n          })\r\n      })\r\n\r\n      TotalChildTradesTradearr.map((childTrades, i )=>{\r\n        ParentTradeName.push(findTradeParent(childTrades))\r\n      })\r\n      \r\n      return GroupArray(ParentTradeName)\r\n    }\r\n\r\n\r\nexport const SitesbyTier = (data)=>{\r\n    let tiers=[]\r\n    data.map((item,index)=>{\r\n        let ii=0\r\n       \r\n        while(ii<item.sites.length){\r\n           tiers.push(item.scanCategory)\r\n            ii++\r\n        }\r\n      \r\n      \r\n    })\r\n\r\n    console.log(GroupArray(tiers))\r\n    return GroupArray(tiers)\r\n}\r\n\r\n// Return the Total workordercount for a cluster\r\n    export const SumWorkOrderTotal = (sites)=>{\r\n        let total=[]\r\n          sites.map((item,i)=>{\r\n              if (!isNaN(item.SumWorkOrder))\r\n                total.push(item.SumWorkOrder)\r\n          })\r\n          return total.reduce((a, b) => a + b, 0)\r\n      }\r\n\r\n\r\n\r\n\r\nconst Removeinteriors = (Results)=>{\r\n  console.log(Results)\r\n  Results.map((results)=>{\r\n      FindInterior(results.GroupedBoxBoundaryLimits, Results)\r\n  })\r\n}\r\n\r\nconst ClusterCost=(ClusterAssetBreakdown)=>{\r\n    const TRADETYPE = store.getState().STRAPI.tradeType;\r\n    let ClusterCost=[]\r\n    ClusterAssetBreakdown[0].map((id,i)=>{\r\n        let Cost;\r\n        let TT = find(TRADETYPE, function(o) { return o.id === id; });\r\n        if(TT.cpj != undefined){\r\n                //console.log(TT.cpj, id, ClusterAssetBreakdown[1][i], FindMultiplier(ClusterAssetBreakdown[1][i]))\r\n               Cost = (ClusterAssetBreakdown[1][i]* TT.cpj)*FindMultiplier(ClusterAssetBreakdown[1][i])\r\n               ClusterCost.push([findTradeTypeName(id), parseFloat(Cost.toFixed(2))])\r\n        }else{\r\n            console.log(`${findTradeTypeName(id)} is missing a CPJ marker`)\r\n        }\r\n    })\r\n    return ClusterCost\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  const JobTypes =(JOBTYPES,result)=>{\r\n     \r\n       //console.log(JOBTYPES,result)\r\n\r\n        // JOb Type\r\n        let PUSHJobTypeName=[]\r\n        let PUSHJobTypeID=[]\r\n        let PUSHJobTypeWorkOrderCount=[]\r\n        let PUSHTradeType=[]\r\n        let PUSHSplitTradeTypeCount=[]\r\n        let PUSHTradeInt=[]\r\n        let PUSHWorkOrdersTrueNumber=[]\r\n        let WorkOrderValue;\r\n\r\n        result.Sites.map((site,i)=>{\r\n\r\n            //console.log(site)\r\n            // Breakdown Jobtypes\r\n            JOBTYPES.map((jobtype,i)=>{\r\n\r\n                //console.log(find(jobtype.work_orders, function(o) { return o.site === site.id; }))\r\n                let FindWorkOrder = find(jobtype.work_orders, function(o) { return o.site === site.id; })\r\n                if(FindWorkOrder!== undefined){\r\n                    \r\n                    // Store JT name\r\n                    PUSHJobTypeName.push(jobtype.name);\r\n                    PUSHJobTypeID.push(jobtype.id)\r\n\r\n                    //console.log(FindWorkOrder)\r\n                    //console.log(jobtype);\r\n                    \r\n                    PUSHWorkOrdersTrueNumber.push(FindWorkOrder.count)\r\n                    PUSHTradeType.push(findTradeTypeName(FindWorkOrder.trade_type))\r\n                    PUSHTradeInt.push(FindWorkOrder.trade_type)\r\n                   \r\n                    let Index = findIndex(PUSHSplitTradeTypeCount, function(o) { return o.id == FindWorkOrder.trade_type; });\r\n          \r\n                    if(Index != -1){\r\n                          PUSHSplitTradeTypeCount[Index].count = PUSHSplitTradeTypeCount[Index].count + FindWorkOrder.count\r\n                    }else{\r\n                      PUSHSplitTradeTypeCount.push({id:FindWorkOrder.trade_type, count:FindWorkOrder.count, name:findTradeTypeName(FindWorkOrder.trade_type)})\r\n                    }\r\n                    \r\n                    \r\n                     // I DONT THINK THIS IS CORRECT\r\n                    WorkOrderValue = PUSHWorkOrdersTrueNumber.reduce((a, b) => a + b, 0)\r\n                    console.log(\"PUSHWorkOrdersTrueNumber\", PUSHWorkOrdersTrueNumber)\r\n                    let IndexThis = findIndex(PUSHJobTypeWorkOrderCount, function(o) { return o.name === jobtype.name; })\r\n                    \r\n                    if(IndexThis === -1){ \r\n                        PUSHJobTypeWorkOrderCount.push({name:jobtype.name, value:WorkOrderValue})\r\n                    }\r\n                    else{\r\n                        PUSHJobTypeWorkOrderCount.splice(IndexThis, 1, {name:jobtype.name, value: (PUSHJobTypeWorkOrderCount[IndexThis].value+WorkOrderValue)});\r\n                    }\r\n                    \r\n                }\r\n            })\r\n           \r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // Create Analysis to hand off to Reducer\r\n\r\n        return {\r\n            JobTypeNameARR :GroupArray(PUSHJobTypeName),\r\n            JobTypeIDARR : GroupArray(PUSHJobTypeID),\r\n            TradeTypeARR : GroupArray(PUSHTradeType),\r\n            WorkOrdersTrueNumber:PUSHWorkOrdersTrueNumber.reduce((a, b) => a + b, 0),\r\n            JobTypeWorkOrderCount : PUSHJobTypeWorkOrderCount,\r\n            ClusterCost: ClusterCost(GroupArray(PUSHTradeInt)),\r\n            ResourcesRequired:ResourcesRequired(GroupArray(PUSHTradeType)),\r\n            SplitTradeTypeCount:PUSHSplitTradeTypeCount\r\n        }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const checkResourceCount = (Results)=>{\r\n\r\n    Results.map((cluster,i)=>{\r\n\r\n      console.log(cluster, cluster.SplitTradeTypeCount)\r\n    })\r\n      /*\r\n        minValueDay = 2\r\n        ResourceDay = 0.2\r\n        JobsPerDay = 4.4\r\n        MinRadius = 2000\r\n        WorkDays = 250\r\n      */\r\n\r\n  }\r\n\r\n  /* NEW FUNCTIONS */\r\n\r\n  const ExtractWorkOrderValues = (Results) => {\r\n    // Extracts the True workorder count\r\n      Results.map((result)=>{\r\n        let WorkOrderCount = [], WorkOrderNum=0\r\n          result.Sites.map((site, i)=>{\r\n              WorkOrderNum = WorkOrderNum + site.count[0].WorkOrders\r\n              WorkOrderCount.push(site.count[0].WorkOrders)\r\n          })\r\n          result.WorkOrders = WorkOrderCount.reduce((a, b) => a + b, 0);\r\n      })\r\n      return true;\r\n  }\r\n\r\n\r\n  const ExtractTradeTypes = (Results, STRAPI)=>{\r\n\r\n    //console.log(STRAPI)\r\n    \r\n    Results.map((result)=>{\r\n      let PUSHTradeType=[]\r\n        result.Sites.map((site, i)=>{\r\n          PUSHTradeType = [...PUSHTradeType,...JSON.parse(site.count[0].TradeTypes)]\r\n        })\r\n        result.TradeType = GroupArray(PUSHTradeType)\r\n        //console.log(GroupArray(PUSHTradeType));\r\n    })\r\n   \r\n    return true;\r\n  } \r\n\r\n\r\n\r\n/* **************************************************************************** */\r\n/*  Starter Function  ********************************************************* */\r\n/*                                                                               */\r\n/* **************************************************************************** */\r\n\r\n\r\nexport function ClusterAnalysis(Results){\r\n    const STRAPI = store.getState().STRAPI;\r\n    console.log(\"ClusterAnalysis\", Results);\r\n    \r\n    // Let group some of the Data points into Meta data\r\n    // Group by WO\r\n      ExtractWorkOrderValues(Results)\r\n    // Group by Trade type\r\n      ExtractTradeTypes(Results, STRAPI)\r\n    // Group by Resource Type\r\n      //checkResourceCount(Results)\r\n    \r\n    // Group by Cost\r\n    \r\n    // Group by Asset Type\r\n    // Group by Delivery Model\r\n    // Group by Customers\r\n\r\n\r\n\r\n\r\n    // OK time to filter through the results on Known restrictions\r\n    \r\n     // Run Resource Test Here\r\n    \r\n    // Removeinteriors(Results)\r\n\r\n\r\n    \r\n    // find the job types\r\n    /*\r\n     Results.map((result,i)=>{\r\n        \r\n        let TRADEOBJ = JobTypes(STRAPI.JobType,result);\r\n\r\n        //result.WorkOrdersTrueNumber = TRADEOBJ.WorkOrdersTrueNumber\r\n        result.SplitTradeTypeCount = TRADEOBJ.SplitTradeTypeCount\r\n        result.TradeTypeCount =TRADEOBJ.TradeTypeARR\r\n        result.ClusterCost = TRADEOBJ.ClusterCost\r\n        result.Charts={\r\n            JobTypeID:ChartGroupArrayData(TRADEOBJ.JobTypeIDARR),\r\n            JobTypeName:ChartGroupArrayData(TRADEOBJ.JobTypeNameARR),\r\n            TradeType:ChartGroupArrayData(TRADEOBJ.TradeTypeARR),\r\n            JobTypeSum:ChartGroupArrayData(TRADEOBJ.JobTypeNameARR),\r\n            JobTypeWorkOrderCount:TRADEOBJ.JobTypeWorkOrderCount\r\n        }\r\n    })\r\n\r\n    */\r\n   \r\n    console.log(\"FINAL RESULT \", Results)\r\n    \r\n    //store.dispatch({ type:'STORERESULTS', payload:Results}); \r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Assets\\logo.js",["948","949"],"\r\nimport React  from 'react'\r\n\r\nexport const LogoMain=()=>{\r\n    return( <img className=\"MainLogo\" src=\"/img/png/intact-group.png\" />)\r\n}\r\n\r\nexport const LogoMainWhite=()=>{\r\n    return( <img className=\"MainLogo\" src=\"/img/png/intact-group-white.png\" />)\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleMarkerBasedScan.js",["950","951","952","953","954","955","956","957","958","959","960","961","962","963"],"import store from \"../store/index\"\r\nimport { orderBy, findIndex, inRange} from 'lodash'; \r\n\r\n// find the distance in KM from 1 point to another\r\nfunction distancetoPoint(lat1, lon1, lat2, lon2, unit) {\r\n    if ((lat1 == lat2) && (lon1 == lon2)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var radlat1 = Math.PI * lat1/180;\r\n        var radlat2 = Math.PI * lat2/180;\r\n        var theta = lon1-lon2;\r\n        var radtheta = Math.PI * theta/180;\r\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n        if (dist > 1) {\r\n            dist = 1;\r\n        }\r\n        dist = Math.acos(dist);\r\n        dist = dist * 180/Math.PI;\r\n        dist = dist * 60 * 1.1515;\r\n        if (unit==\"K\") { dist = dist * 1.609344 }\r\n        if (unit==\"N\") { dist = dist * 0.8684 }\r\n        return dist;\r\n    }\r\n}\r\n\r\n\r\nexport function ScanSites(){\r\n\r\n    /* ***************************************************************************************** */\r\n    // Arrays and Variable set up\r\n    this.SiteList=null;\r\n    this.SearchThisList=null\r\n    this.GlobalCluster=[]\r\n    this.GlobalCenterpoints=[]\r\n    this.CatchNoLongLat=[]\r\n    this.clusterCount=0\r\n    this.ProcessPointer=0;\r\n\r\n    this.ScanAreas=[\r\n        { name:'SameBuilding',  range: [0,0.2], allocation:0.4, maxAllocation:null, feather:0.1,restrict:[] },\r\n        { name:'CBD',           range: [0,2],   allocation:0.4, maxAllocation:null, feather:10, restrict:[]   },\r\n        { name:'InnerCity',     range: [0,10],  allocation:0.4, maxAllocation:null, feather:5,  restrict:[]   },\r\n        { name:'Metro',         range: [0,50],  allocation:0.4, maxAllocation:1, feather:1 , restrict:[]  },\r\n        { name:'OuterMetro',    range: [0,100], allocation:0.4, maxAllocation:1, feather:0 , restrict:[]  },\r\n        { name:'Regional',      range: [0,200], allocation:0.4, maxAllocation:1, feather:0 , restrict:[[7000,7999]]  },\r\n        { name:'Remote',        range: [0,500], allocation:0.4, maxAllocation:1, feather:0 , restrict:[[7000,7999]]  },\r\n        { name:'ExtremeRemote', range: [0,2000],allocation:0.4, maxAllocation:1, feather:0 , restrict:[[7000,7999]] },\r\n    ]\r\n   \r\n\r\n\r\n\r\n    /* ***************************************************************************************** */\r\n    // AUX Functions\r\n    /* ***************************************************************************************** */\r\n    this.JSONparse = ()=>{\r\n    \r\n        this.SiteList.map((site,i)=>{\r\n            if(typeof site.siteweighting === 'string')\r\n                site.siteweighting = orderBy(JSON.parse(site.siteweighting), ['name'], ['asc', 'desc']); \r\n            else\r\n                site.siteweighting = orderBy(site.siteweighting, ['name'], ['asc', 'desc']);\r\n        })\r\n        this.SiteList = orderBy(this.SiteList, item => item.count[0].WorkOrders, ['desc']);\r\n        this.SearchThisList = JSON.parse(JSON.stringify(this.SiteList));\r\n    }\r\n\r\n\r\n    this.CheckGlobalKeys=(NameKey)=>{\r\n        if(this.GlobalCluster[NameKey] === undefined)\r\n            this.GlobalCluster[NameKey] = []\r\n    }\r\n\r\n\r\n\r\n\r\n    /* ***************************************************************************************** */\r\n    // Rules\r\n    /* ***************************************************************************************** */\r\n\r\n    this.ArrayState = ()=>{\r\n        if((this.ScanAreas.length-1) === this.ProcessPointer || this.SearchThisList.length  === 0){\r\n            //console.log(\"SCAN COMPLETE\")\r\n            this.Global();\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n    this.PointerState=(int)=>{\r\n        if(int === (this.SearchThisList.length-1) && int > 0){\r\n            //console.log(\"Int and Arr are the Same\")\r\n            this.ProcessPointer = this.ProcessPointer + 1\r\n            this.ProcessScan(this.ScanAreas[this.ProcessPointer], 0);\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    // Rule : is Site in radius Rule\r\n    this.IsInDistance=(SiteInFocus,site,Range)=>{\r\n        let Distance = distancetoPoint(SiteInFocus.lat, SiteInFocus.long, site.lat,site.long, \"K\")\r\n\r\n        if( Distance === 0 || Distance >= Range.range[0] && Distance <= Range.range[1] || (Distance-((Range.feather/100)*Distance)) <= Range.range[1]) \r\n            return true\r\n        else\r\n            return false\r\n    }\r\n\r\n\r\n    // Rule : Restrict Postcode if in restricted Category\r\n    this.sitePostCodeCheck = (postcode,region, int)=>{\r\n        let Retrict = false\r\n\r\n            region.restrict.map((range,i)=>{ Retrict = inRange(postcode, range[0], range[1])})\r\n        \r\n            if(!Retrict)\r\n                return Retrict;\r\n            else\r\n                this.ProcessScan(this.ScanAreas[this.ProcessPointer], (int+1));\r\n                return Retrict;\r\n        \r\n    }\r\n\r\n    // check cluster integity\r\n    this.clusterintegrity =(SiteCluster)=>{\r\n        // check to see if the cluster should be handed over to a quota\r\n        if(SiteCluster.length === 0)\r\n           return false\r\n        else\r\n            return true\r\n    }\r\n\r\n\r\n    // Cluster Rules\r\n\r\n\r\n    this.ClusterQuota = (cluster, int)=>{\r\n        let resourceQuota=[]\r\n        let MaxAllocation = this.ScanAreas[this.ProcessPointer].maxAllocation;\r\n        cluster.map((site,i)=>{\r\n            site.siteweighting.map((weight,ii)=>{  \r\n                \r\n                if(MaxAllocation === null){\r\n                    resourceQuota.push(weight[this.ScanAreas[this.ProcessPointer].name]) \r\n                }else{\r\n                    if(resourceQuota.reduce((a, b) => a + b, 0) < this.ScanAreas[this.ProcessPointer].maxAllocation){\r\n                        resourceQuota.push(weight[this.ScanAreas[this.ProcessPointer].name]) \r\n                    }\r\n                    else{\r\n                        //console.log(\"Max Quota Hit for this cluster in this Category. remove the existing sites\")\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\r\n        if(resourceQuota.reduce((a, b) => a + b, 0) >=  this.ScanAreas[this.ProcessPointer].allocation){\r\n           //console.log(\"resourceQuota\", resourceQuota.reduce((a, b) => a + b, 0), this.ScanAreas[this.ProcessPointer].name, this.ScanAreas[this.ProcessPointer].allocation)\r\n            return resourceQuota.reduce((a, b) => a + b, 0)\r\n        }else{\r\n            //console.log(\"Cluster Failed to reach min resources\")\r\n            this.ProcessScan(this.ScanAreas[this.ProcessPointer], (int+1));\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /* ***************************************************************************************** */\r\n    // Power Functions \r\n    // Start Here\r\n    this.Search=()=>{\r\n        //console.log(\"Begin Marker Search\")\r\n        // 1. OrderSites on site weighting\r\n        this.JSONparse();\r\n        // 2,\r\n        this.ProcessScan(this.ScanAreas[this.ProcessPointer], 0);\r\n        // 3 Rules\r\n            // Site Rules\r\n            // CLuster Rules\r\n            // State of Search Array\r\n    }\r\n    \r\n\r\n    this.ProcessScan = (Range, int)=>{\r\n\r\n        // Scan Function Variables\r\n        let SiteCluster=[]\r\n        let CenterPoints=[]\r\n        \r\n\r\n        // Scan State Rules\r\n        // If State Complete\r\n        if(this.ArrayState())   \r\n            return true\r\n        // If Pointer exhusted\r\n        if(this.PointerState(int))\r\n            return true\r\n      \r\n        // Data Collection House Keeping\r\n            // check to see if region exists in this.global\r\n            this.CheckGlobalKeys(Range.name);\r\n\r\n\r\n        let SiteInFocus = this.SearchThisList[int];\r\n       \r\n        if(SiteInFocus.combined != null){\r\n            \r\n            // Rule. Check if post code is restricted to the current scan category\r\n            if(this.sitePostCodeCheck(SiteInFocus.postcode.name, Range, int))\r\n                return false\r\n\r\n            // Create an instance of a cluster center point, should cluster exist\r\n            CenterPoints.push({\r\n                name:`${SiteInFocus.region.name}-${Range.name}-${SiteInFocus.name}`,\r\n                center:{ lat: SiteInFocus.lat, lng: SiteInFocus.long },\r\n                range:Range.range[1],\r\n                scanCategory:Range.name,\r\n                feather:Range.feather,\r\n                region:SiteInFocus.region.name,\r\n                postcode:SiteInFocus.postcode.name\r\n            })\r\n\r\n\r\n            this.SearchThisList.map((site,ii)=>{\r\n               \r\n                // 1 rule for sites.\r\n                // Do they fit into the Radius of the center point?\r\n                if(this.IsInDistance(SiteInFocus, site, Range))\r\n                    SiteCluster.push(site)\r\n                else\r\n                    return false\r\n            })\r\n\r\n\r\n        }\r\n        else{\r\n            // CATCH ALL SITES NOT INCLUDED IN SCAN\r\n            let NoLngLat = findIndex(this.CatchNoLongLat, function(o) { return o.name == SiteInFocus.name; });\r\n            if(NoLngLat === -1)\r\n                this.CatchNoLongLat.push(SiteInFocus)\r\n            \r\n            \r\n        }\r\n\r\n        // should i push to Quota or fail this cluster nad move on?\r\n        if(this.clusterintegrity(SiteCluster))\r\n            this.findResourceQuota(SiteCluster, CenterPoints, int);\r\n        else\r\n            this.ProcessScan(this.ScanAreas[this.ProcessPointer], (int+1));\r\n       \r\n    }\r\n\r\n\r\n\r\n    this.findResourceQuota=(cluster, CenterPoints, int)=>{\r\n            //let resourceQuota=[]\r\n\r\n             // is cluster Quote over the current threshold?\r\n             let QuoteThreshold  = this.ClusterQuota(cluster, int) \r\n            \r\n             if(QuoteThreshold)\r\n                {\r\n                \r\n                    CenterPoints[0].resourceQuota = QuoteThreshold;\r\n                    CenterPoints[0].sites = cluster;\r\n                    \r\n                    this.GlobalCluster[this.ScanAreas[this.ProcessPointer].name].push(cluster);\r\n                    this.GlobalCenterpoints.push(CenterPoints[0])\r\n                    \r\n                    this.removeSites(cluster)\r\n             }\r\n\r\n           return true;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    this.removeSites=(cluster)=>{\r\n        //console.log(\"Cluster REMOVAL\")\r\n        \r\n        \r\n        let Index;\r\n        cluster.map((site,i)=>{\r\n            //console.log(site);\r\n            Index = findIndex(this.SearchThisList, function(o) { return o.name == site.name; });\r\n            //console.log(\"Index\", Index, site.name)\r\n            this.SearchThisList.splice(Index , 1)\r\n        })\r\n        this.ProcessScan(this.ScanAreas[this.ProcessPointer], 0);\r\n        //console.log(this.GlobalCluster);\r\n        //console.log(this.SearchThisList.length);\r\n        \r\n    }\r\n\r\n    this.Global = ()=>{\r\n\r\n        //console.log(\"this.GlobalCluster\", this.GlobalCluster.length);\r\n        //console.log(\"this.CatchNoLongLat\", this.CatchNoLongLat.length);\r\n        //console.log(\"this.SearchThisList\", this.SearchThisList.length);\r\n\r\n\r\n        store.dispatch({ type:'SCANSTATE', payload:false}); \r\n        store.dispatch({ type:'STOREMARKERRESULTS', payload:this.GlobalCluster});\r\n        store.dispatch({ type:'STOREMARKERCENTERPOINTS', payload:this.GlobalCenterpoints}); \r\n        store.dispatch({ type:'STORERESIDUALMARKERS', payload:this.SearchThisList});\r\n        store.dispatch({ type:'STORENOLONGLAT', payload:this.CatchNoLongLat}); \r\n        \r\n        \r\n        \r\n    }\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleScanProcess.js",["964"],"\r\n// Private Functions\r\nimport store from \"../store/index\"\r\nimport axios from 'axios';\r\nimport {useAPILOCATION} from \"./authUser\"\r\n\r\n\r\n\r\nexport const CreateNewScan = (value)=>{  store.dispatch({ type:'CREATENEWDATASET', payload:value});} \r\n\r\n\r\nexport const SetSelected = (value)=>{\r\n    store.dispatch({ type:'USERDATASETSELECTEDDATABASE', payload:value});\r\n    \r\n}\r\n\r\nexport const StoreSelected_Single =(Data)=>{\r\n\r\n    console.log(Data);\r\n    store.dispatch({ type:'USERSTORESINGLEDATASET', payload:Data});\r\n} \r\n\r\nexport const BacktoScanOptions = ()=>{\r\n        console.log(\"BACK\");\r\n        CreateNewScan(false)\r\n        SetSelected(false)\r\n        StoreSelected_Single([])    \r\n}\r\n\r\nexport const BacktoAddItemsSingle = ()=>{\r\n    console.log(\"BACK to Select\");\r\n    \r\n    SetSelected(false)\r\n   // StoreSelected_Single([]) \r\n}\r\n\r\n\r\nexport const ResetCreateNewModel = ()=>{\r\n\r\n  \r\n    store.dispatch({ type:'CREATENEWDATASET', payload:false})\r\n    store.dispatch({ type:'USERDATASETSELECTEDDATABASE', payload:false})\r\n    store.dispatch({ type:'USERSTORESINGLEDATASET', payload:[]})\r\n    store.dispatch({ type:'USERSCANPROCESSING', payload:false})\r\n}\r\n\r\nexport const FetchSelectedItems = async  (DATA, TITLE, DESCRIPTION, S,E)=>{\r\n\r\n    let IDStr=[];\r\n    DATA.map((customer,i)=>{\r\n            IDStr.push(customer.id)\r\n    })\r\n\r\n    const ENDPOINT=useAPILOCATION()+'sites/scan'\r\n    const JWTToken = store.getState().AUTH.jwt;\r\n    const AuthUSer = store.getState().AUTH.user\r\n    const axiosHeader = {Authorization: \"Bearer \" + JWTToken}\r\n\r\n    \r\n    \r\n\r\n    console.log(\"Items sent to Strapi \", IDStr.length)\r\n    console.log(AuthUSer.id,  TITLE, DESCRIPTION)\r\n    const ScanName=TITLE\r\n    const ScanDescription=DESCRIPTION\r\n    \r\n    \r\n    store.dispatch({ type:'USERSCANPROCESSING', payload:true}); \r\n\r\n    //await axios.get(ENDPOINT+IDStr.toString()) \r\n\r\n   await axios({ url: ENDPOINT+'/'+[S,E].toString()+'/'+ScanName+'/'+ScanDescription+'/'+AuthUSer.id+'/'+IDStr.toString(), method: 'get', headers: axiosHeader})\r\n        .then(function (res) {\r\n            console.log(\"Create Model Return Value from Server\", res.data);\r\n            \r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n        .then(function () {\r\n            // always executed\r\n        });\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\authUser.js",["965"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Landing\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\AuthLogin\\index.js",["966"],"import React, { useEffect } from 'react';\r\nimport {useContext_AUTH_FULL} from \"../../../Context/AUTH\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {LogoMain} from \"../../../Assets/logo\"\r\nimport LoginForm from \"../../../venders/MaterialUI/Forms/LoginForm\"\r\n\r\n\r\nconst AuthLogin = ()=>{\r\n\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const Pushhistory = useHistory();\r\n    \r\n \r\n    \r\n    useEffect(()=>{ if(AUTH.jwt !== false){Pushhistory.push(\"/auth\");}},[AUTH])\r\n    return(\r\n        <div className=\"LoginForm\">\r\n             <LogoMain />\r\n            <h1>Intact AnalytiQ</h1>\r\n \r\n            <LoginForm />\r\n           <Disclaimer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthLogin;\r\n\r\n\r\nconst Disclaimer = ()=>{\r\n    return(\r\n          <div className=\"disclaimer\">\r\n              <p>This is a prototype build of Intact Analyiq alpha v0.1 </p>\r\n              <p>Please wait whilst we fire up the Dyno's</p>\r\n          </div>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\index.js",["967","968","969","970","971","972","973","974"],"import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport {useContext_AUTH_FULL} from \"Context/AUTH\";\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\n\r\n// actions\r\nimport {FetchDataIntegrity} from \"actions/authUser\";\r\n// Components\r\nimport history from  '../../History'\r\nimport DashBoard from \"../../Template/AuthDashboard\"\r\n\r\n// Dataloading\r\nimport {LogoMainWhite} from \"../../Assets/logo\"\r\n\r\n// Routes\r\nimport ComponentLanding from \"./Landing\";\r\nimport ComponentDataDump from \"./DataDump\"\r\nimport ComponentCreateModel from \"./CreateModel\";\r\nimport ComponentViewModels from \"./ViewModels\";\r\nimport CompareComponent from \"./CompareModels\";\r\nimport ComponentScan from \"./ResourceAllocationScan\"\r\nimport UIComponents from \"./UICompnents/index\"\r\n//import ResultsComponent from \"./MarkerBasedScan/MarkerBasedScan\";\r\nimport ResultsComponent from \"./SingleModelResult\";\r\n\r\nconst routes = [\r\n    { Rpath: \"/\", component: ComponentLanding, exact:true},\r\n    { Rpath: \"/view-models\", component: ComponentViewModels, exact:true},\r\n    { Rpath: \"/create-model\", component: ComponentCreateModel, exact:false},\r\n    { Rpath: \"/compare-models\", component: CompareComponent, exact:false},\r\n    { Rpath: \"/MarkerBasedScan\", component: ComponentScan, exact:false},\r\n    { Rpath: \"/integity\", component: ComponentDataDump, exact:false},\r\n    { Rpath: \"/results\", component: ResultsComponent, exact:false},\r\n    { Rpath: \"/UIComponents\", component: UIComponents, exact:false},\r\n  \r\n];\r\n\r\nconst Auth = (props)=>{\r\n\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const Pushhistory = useHistory();\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n\r\n    const [DataStatus, setDataStatus] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        //console.log(AUTH)\r\n        if(AUTH.jwt === false){\r\n            console.log(\"USER DENIED\")\r\n            //Pushhistory.push(\"/demo/login\");\r\n            Pushhistory.push(\"/\");\r\n        }else{ \r\n            console.log(\"USER AUTHED\")\r\n        }\r\n    }, [AUTH])\r\n\r\n\r\n    const checkDataStatus=()=>{\r\n        let DS=true\r\n        Object.keys( STRAPI.UserData).map(function(key, index) { \r\n            if(STRAPI.UserData[key] === false){\r\n                DS = STRAPI.UserData[key] \r\n            }\r\n        });\r\n        setDataStatus(DS)\r\n    }\r\n\r\n    useEffect(()=>{ checkDataStatus() },[STRAPI.UserData])\r\n\r\n    return(\r\n           <>\r\n            { DataStatus ? <AuthRouters {...props} />:<FetchData /> }\r\n           </>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n//   </Switch> \r\n\r\n\r\nconst FetchData=()=>{\r\n\r\n    const [Fetch, setFetch] = useState(null)\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n\r\n    useEffect(()=>{\r\n        if(Fetch === null){\r\n            FetchDataIntegrity()\r\n            setFetch(true)\r\n        }\r\n    },[])\r\n    return( \r\n        <div className=\"DataLoad\">\r\n            <div className=\"LoadThis\">    \r\n                <LoadingCopy />\r\n                <div className=\"loader\">\r\n                <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>\r\n                <LogoMainWhite />\r\n                \r\n                {\r\n                    STRAPI.DataError ? 'There was an Error loading the data. Please try again later':''\r\n                }\r\n              <Disclaimer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst LoadingCopy=()=>{\r\n    return(\r\n      <div>\r\n           <h1>Intact AnalytiQ</h1>\r\n            <h2>Fetching Data</h2>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const Disclaimer = ()=>{\r\n      return(\r\n            <div className=\"disclaimer\">\r\n                <p>This is a prototype build of Intact Analyiq alpha v0.1 </p>\r\n                <p>Please wait whilst we fire up the Dyno's and fetch your profile</p>\r\n            </div>\r\n      )\r\n  }\r\n\r\n\r\nconst AuthRouters = (props)=>{\r\n\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const Pushhistory = useHistory();\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n\r\n    const [DataStatus, setDataStatus] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        //console.log(AUTH)\r\n        if(AUTH.jwt === false){\r\n            console.log(\"USER DENIED\")\r\n            //Pushhistory.push(\"/demo/login\");\r\n            Pushhistory.push(\"/\");\r\n        }else{ \r\n            console.log(\"USER AUTHED\")\r\n        }\r\n    }, [AUTH])\r\n\r\n    return(\r\n      \r\n        <Router  basename={'/auth/'} >\r\n            <Switch history={history}>\r\n                <DashBoard>\r\n                {\r\n                    routes.map((route, i) => (<Route key={i}  exact={route.exact} path={route.Rpath} render={()=> <route.component {... props}/> }/> ))\r\n                }\r\n                </DashBoard>\r\n                </Switch>\r\n        </Router>\r\n    \r\n)\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\About\\about.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Contact\\contact.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\index.js",["975","976","977","978"],"import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport PublicLayout from \"../../Template/PublicLayout\";\r\n// Components\r\nimport history from  '../../History'\r\n\r\nimport ComponentAbout from \"./About/about\";\r\nimport ComponentLanding from \"./Landing/index\"\r\nimport ComponentContact from \"./Contact/contact\";\r\nimport ComponentLogin from \"./AuthLogin/index\";\r\nimport ComponentUnAuth from \"./unAuth/UnAuth\";\r\n\r\nconst publicPath='demo'\r\nconst routes = [\r\n    { Rpath: `/${publicPath}/`, component: ComponentLogin, exact:true},\r\n   // { Rpath: `/${publicPath}/about`, component: ComponentAbout, exact:false},\r\n   // { Rpath: `/${publicPath}/contact`, component: ComponentContact, exact:false},\r\n   // { Rpath: `/${publicPath}/login`, component: ComponentLogin, exact:false},\r\n   // { Rpath: `/${publicPath}/unauthorized`, component: ComponentUnAuth, exact:false},\r\n  ];\r\n\r\n\r\nconst Landing = (props)=>{\r\n\r\n    return(\r\n\r\n                <Switch  history={history}>\r\n                    <PublicLayout>\r\n                    {\r\n                        routes.map((route, i) => (<Route key={i}  exact={route.exact} path={route.Rpath} render={()=> <route.component {... props}/> }/> ))\r\n                    }\r\n                    </PublicLayout>\r\n                </Switch> \r\n    )\r\n}\r\n\r\nexport default Landing\r\n\r\n// </Switch>\r\n/**\r\n * *\r\n *  <div className=\"InnerFrame\">\r\n            <h1>Landing Page</h1>\r\n            <h2>Asset Set List</h2>\r\n            <h3>Header 3</h3>\r\n            <p>Paragragh</p>\r\n            <ul>\r\n                <li>List item</li>\r\n                <li>List item</li>\r\n                <li>List item</li>\r\n            </ul>\r\n\r\n        <h2> For Testing </h2>\r\n            <Login />\r\n\r\n        </div>\r\n */","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\unAuth\\UnAuth.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\AUTH.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\AUTH.js",["979"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_AUTH_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_AUTH_FULL = ()=>{\r\n    return useContext(Context_AUTH_FULL)\r\n}\r\n\r\n\r\n \r\nexport const AUTHContextProvider = ({children})=>{\r\n    const AUTH = useSelector(state => state.AUTH );\r\n\r\n    useMemo(()=>{  },[AUTH]) \r\n\r\n    return(\r\n            <Context_AUTH_FULL.Provider value={AUTH}>\r\n                {children}            \r\n            </Context_AUTH_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\AuthDashboard.js",["980"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport SideBar from \"../Navigation/SideBar\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n   // width: `calc(100% - ${drawerWidth}px)`,\r\n    //marginLeft: drawerWidth,\r\n    zIndex:999\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    backgroundColor:'#ffc20e',\r\n    zIndex:99\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor:'#fff',\r\n    borderRight:'1px solid #ffc20e'\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: { \r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PermanentDrawerRight(props) {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <h1>Intact AnalytiQ </h1>\r\n            <p>Front end Portal</p>\r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n    \r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n      \r\n        <SideBar />\r\n       \r\n      </Drawer>\r\n      \r\n      <main className=\"Auth\">  \r\n         <div className={classes.toolbar} />\r\n          <div  className=\"InnerFrame\">\r\n            {props.children}\r\n          </div>\r\n      </main>\r\n\r\n \r\n    </div>\r\n  );\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\PublicLayout.js",["981","982","983"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n\r\n// Components\r\nimport PublicNavigation from \"./Public/Navigation\"\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n   // width: `calc(100% - ${drawerWidth}px)`,\r\n    //marginLeft: drawerWidth,\r\n    zIndex:999\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    backgroundColor:'#ffc20e',\r\n    zIndex:99\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor:'#ffc20e'\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PermanentDrawerRight(props) {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <h1>Intact AnalytiQ </h1>\r\n            <p>Front end Portal</p>\r\n         \r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n    \r\n    \r\n      \r\n      <main className=\"Public\">  \r\n        <div className={classes.toolbar} />\r\n         \r\n            <div  className=\"InnerFrame\">\r\n                {props.children}\r\n            </div>\r\n\r\n            \r\n      </main>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n//    <PublicNavigation />\r\n\r\n/*\r\n\r\n  <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n      \r\n      </Drawer>\r\n\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\Public\\Navigation.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\input.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\LoginForm.js",["984"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_AUTH_FULL} from \"Context/AUTH\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {StrapiAuth} from \"actions/authUser\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function BasicTextFields() {\r\n    const AUTH = useContext_AUTH_FULL();\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{},[AUTH])\r\n  return (\r\n        <>\r\n            {\r\n                AUTH.process ? <Processing />:<LoginForm />\r\n            }\r\n        </>\r\n  );\r\n}\r\n\r\n\r\nconst Processing = ()=>{\r\n   \r\n    return(\r\n        <><h3>Authenticating User ...</h3></>\r\n    )\r\n}\r\n\r\nconst Error = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const ErrorTrue='There was an Error in the Username or Password when processing your details'\r\n    const ErrorFalse=''\r\n    useEffect(()=>{},[AUTH])\r\n    return(\r\n        <>{\r\n            AUTH.error ? <h3>{ErrorTrue}</h3>:<h3>{ErrorFalse}</h3>\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nconst LoginForm = ()=>{\r\n    const classes = useStyles();\r\n    const [USERNAME, setUsername] = useState('')\r\n    const [PASSWORD, setPassword] = useState('')\r\n\r\n    const handleClick=()=>{\r\n\r\n        StrapiAuth(USERNAME,PASSWORD)\r\n    }\r\n\r\n    const handleEmail=(e)=>{setUsername(e.target.value)}\r\n    const handlePassword=(e)=>{setPassword(e.target.value)}\r\n\r\n    return(\r\n        <div className=\"LoginContainer\">\r\n            <Error />\r\n            <div className=\"loginInput\">\r\n                <TextField \r\n                    id=\"outlined-basic\" \r\n                    label=\"e-mail\" \r\n                    variant=\"outlined\" \r\n                    onChange={handleEmail}\r\n                />\r\n            </div>\r\n            <div className=\"loginInput\">\r\n                <TextField\r\n                    id=\"standard-password-input\"\r\n                    label=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    variant=\"outlined\"\r\n                    onChange={handlePassword}\r\n                />\r\n            </div>\r\n            <button className=\"SelectClientBtn\" onClick={()=>{handleClick()}}>Login</button>\r\n                \r\n        </div>\r\n        )\r\n}\r\n\r\n/*\r\n\r\n<TextField id=\"standard-basic\" label=\"Standard\" />\r\n      <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Landing.js",["985"],"import React, { useEffect } from 'react';\r\n\r\nimport Footer from \"./Components/Layout/Footer\";\r\n\r\nconst Profile = ()=>{    \r\n    return(\r\n        <div className=\"AuthLayout\">\r\n        <div className=\"Header\">\r\n            <h1>Profile</h1>\r\n            <h2>User</h2>\r\n        </div>\r\n\r\n        <div className=\"Content\">\r\n            <div>\r\n               <h2>What is a Model</h2>\r\n               <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n            </div>\r\n            <div>\r\n                <h2>Viewing saved Models</h2>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n            </div>\r\n            <div>\r\n                <h2>Comparing Models</h2>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n            </div>\r\n            </div>\r\n\r\n            <Footer />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Loading\\Loading.js",["986","987"],"import React, { useEffect } from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {LogoMainWhite} from \"../../../Assets/logo\"\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nconst Loading=()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const Pushhistory = useHistory();\r\n    useEffect(()=>{\r\n        //console.log(UX)\r\n        if(UX.STRAPIRECEIVED){ Pushhistory.push(\"/demo\");}\r\n    },[UX])\r\n    return(\r\n        <div className=\"App\">\r\n            <div className=\"LoadThis\">\r\n                \r\n                <LoadingCopy />\r\n                <div className=\"loader\">\r\n                <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>\r\n                <LogoMainWhite />\r\n              <Disclaimer />\r\n            </div>\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;\r\n\r\n\r\n\r\nconst LoadingCopy=()=>{\r\n    return(\r\n      <div>\r\n           <h1>Intact AnalytiQ</h1>\r\n            <h2>Fetching Data</h2>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const Disclaimer = ()=>{\r\n      return(\r\n            <div className=\"disclaimer\">\r\n                <p>This is a prototype build of Intact Analyiq alpha v0.1 </p>\r\n                <p>Please wait whilst we fire up the Dyno's</p>\r\n            </div>\r\n      )\r\n  }","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\DataDump.js",["988","989"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst DataDump = ()=>{\r\n    return(\r\n        <>\r\n            Remove THiS\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataDump;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan.js",["990","991","992","993"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_STRAPI_FULL} from \"../../Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"../../Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"../../Context/SCAN\";\r\nimport {ScanSites} from \"../../actions/HandleMarkerBasedScan\";\r\n\r\n// Components\r\nimport ResourceAllocationMap from \"./ResourceAllocationScan/Map\";\r\n\r\nconst RenderScamSites = new ScanSites();\r\n\r\nconst RecourseAllocationScan = ()=>{\r\n\r\n    \r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n\r\n\r\n    const Scan = ()=>{\r\n        //console.log(STRAPI.sites);\r\n        // Pass only fully loaded sites\r\n        let SiteList=[]\r\n        STRAPI.sites.map((site)=>{\r\n                console.log(site.count)\r\n    \r\n                // Add any new rules if required\r\n                if(site.count.length!== 0){\r\n                    SiteList.push(site)\r\n                }\r\n        })\r\n        RenderScamSites.SiteList=SiteList;\r\n        RenderScamSites.Search();\r\n    }\r\n\r\n\r\n    useEffect(()=>{ if(SCAN.active){Scan() }},[SCAN.active])\r\n\r\n    return(\r\n        <>\r\n            {SCAN.MarkerScanResults ?  <ResourceAllocationMap />: false}\r\n        </>\r\n    )\r\n}\r\n//  <ScanBtn />\r\nexport default RecourseAllocationScan;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Map.js",["994","995"],"import React, {useEffect, useState} from 'react'\r\n//import {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\n//import {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {ScanSites} from \"actions/HandleMarkerBasedScan\";\r\nimport { GoogleMap,} from '@react-google-maps/api';\r\n\r\n// Components\r\nimport Markers from \"./MapComponents/LocationMarkers\";\r\nimport ResidualMarkers from \"./MapComponents/ResidualLocationMarkers\";\r\nimport CenterPoints from \"./MapComponents/MarkersCenterpoints\";\r\nimport MarkerBasedResults from \"./MapComponents/MarkerBasedResults\";\r\nimport ColorKey from \"./Results/ColorKey\"\r\n\r\nconst RenderScamSites = new ScanSites();\r\n\r\nconst containerStyle = { height: \"600px\", width: \"auto\" };\r\n\r\n\r\nconst ResourceAllocationMap=()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    useEffect(()=>{\r\n        //console.log(SCAN.MarkerScanResults)\r\n    },[SCAN])\r\nreturn(\r\n    <div className=\"ScanMapMain\" id=\"MainMap\">\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={{\r\n                    lat: -37.813629,\r\n                    lng: 144.963058\r\n                  }}\r\n                zoom={14}\r\n               \r\n            >\r\n            { /* Child components, such as markers, info windows, etc. */ }\r\n            \r\n                <Markers />\r\n                <CenterPoints />\r\n                <ResidualMarkers />\r\n            </GoogleMap>\r\n\r\n            <ColorKey />\r\n            <MarkerBasedResults />\r\n        </div>\r\n)\r\n}\r\n\r\nexport default ResourceAllocationMap;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\ResidualLocationMarkers.js",["996","997","998","999","1000","1001","1002","1003","1004"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\n\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkersALL = ()=>{\r\n\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name)=>{console.log(\"Marker Clicked\", name) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n        //console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n\r\n        //console.log(\"markers\", markers)\r\n        \r\n        let StoreMarkers=[]         \r\n                markers.map((site,i)=>{\r\n                    Targeticon = {\r\n                        path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                        fillColor: '#fff',\r\n                        fillOpacity: .9,\r\n                        anchor: new window.google.maps.Point(0,0),\r\n                        strokeWeight: 0,\r\n                        scale: 1,\r\n                        zIndex:10\r\n                    };\r\n                    StoreMarkers.push( \r\n                        \r\n                            <Marker\r\n                                key={i}\r\n                                onLoad={onLoadMarker}\r\n                                title={site.name}\r\n                                label={site.name}\r\n                                icon={Targeticon}\r\n                                onClick={()=>{OnMarkerClick(site.name)}}\r\n                                position={{\r\n                                        lat: parseFloat(site.lat),\r\n                                        lng: parseFloat(site.long)\r\n                                    }}\r\n                            />\r\n                    )\r\n                })\r\n        setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{ \r\n         \r\n          CreateMarkers(SCAN.MarkerScanResidual)},[SCAN.MarkerScanResidual])\r\n\r\n      return(  <>{DisplayMarkers}</>) \r\n\r\n}\r\n\r\nexport default MarkerBasedLocationMarkersALL;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkerBasedResults.js",["1005"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport ClusterResults from \"../Results/ClusterResults\";\r\nimport {GroupArrayByOccurances} from \"actions/HandleUX\";\r\n\r\nconst MarkerBasedResults = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n\r\n    const [Results, setResults] = useState(null)\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]])\r\n    const extractResults=()=>{\r\n        //console.log(SCAN.MarkerScanCenterPoints);\r\n\r\n        let ResultArr=[];\r\n        let CategoryInt=[]\r\n            SCAN.MarkerScanCenterPoints.map((result,i)=>{\r\n                ResultArr.push( <li key={i}> <ClusterResults  result={result} i={i}/></li>)\r\n                CategoryInt.push(result.scanCategory)\r\n                return true\r\n            })\r\n            setResults(ResultArr);\r\n            setCategoryOccurance(GroupArrayByOccurances(CategoryInt))\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        if(SCAN.MarkerScanCenterPoints !==null)\r\n            extractResults()\r\n\r\n    },[SCAN]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"ResultsHeader\">\r\n            <h2>Results</h2>\r\n            <h3>Clusters : <strong>{SCAN.MarkerScanCenterPoints.length}</strong></h3>\r\n            <h4>By Category:</h4>\r\n            <ul className=\"ClustersbyCategory\">\r\n            {\r\n                CategoryOccurance[0].map((cat,i)=>{\r\n                    return(\r\n                        <li key={i}>\r\n                                {cat} : {CategoryOccurance[1][i]}\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n            <h3>Sites were not allocated a Cluster : <strong>{SCAN.MarkerScanResidual.length} </strong></h3>\r\n            <h3>Sites were not included in this scan : <strong>{SCAN.NoLongLat.length} </strong></h3>\r\n            </div>\r\n\r\n            <ul className=\"ListResults\">\r\n                    {Results}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerBasedResults;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\LocationMarkers.js",["1006","1007","1008","1009","1010","1011","1012","1013","1014","1015"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\nimport {RegionColor} from \"actions/HandleUX\"\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkers = ()=>{\r\n\r\n    //const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name, Region)=>{console.log(\"Marker Clicked\", name, Region) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n        //console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n\r\n        //console.log(\"markers\", markers)\r\n        let StoreMarkers=[];\r\n\r\n        markers.map((centerPoint,i)=>{\r\n          //console.log(centerPoint.sites)\r\n          centerPoint.sites.map((site,ii)=>{\r\n\r\n              Targeticon = {\r\n                path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                fillColor: RegionColor(centerPoint.scanCategory),\r\n                fillOpacity: .9,\r\n                anchor: new window.google.maps.Point(0,0),\r\n                strokeWeight: 0,\r\n                scale: 1\r\n            }; \r\n          \r\n            StoreMarkers.push( \r\n                \r\n                    <Marker\r\n                        key={site.name}\r\n                        onLoad={onLoadMarker}\r\n                        title={site.name}\r\n                        label={site.name}\r\n                        icon={Targeticon}\r\n                        onClick={()=>{OnMarkerClick(site.name, centerPoint.scanCategory)}}\r\n                        position={{\r\n                                lat: parseFloat(site.lat),\r\n                                lng: parseFloat(site.long)\r\n                            }}\r\n                    />\r\n                \r\n            )\r\n            })\r\n        })\r\n        /*\r\n        Object.keys(markers).map((key, value)=>{\r\n            //console.log(markers[key], value)\r\n              markers[key].map((sites,i)=>{\r\n                  sites.map((site,ii)=>{\r\n\r\n                  \r\n                  })\r\n              })\r\n          })*/\r\n        setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{ \r\n        if(CreateMarkers(SCAN.MarkerScanCenterPoints) != undefined)\r\n          CreateMarkers(SCAN.MarkerScanCenterPoints)\r\n      },[SCAN.MarkerScanCenterPoints])\r\n\r\n      return(  <>{DisplayMarkers}</>)\r\n\r\n}\r\n\r\n\r\nexport default MarkerBasedLocationMarkers;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkersCenterpoints.js",["1016","1017"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Circle } from '@react-google-maps/api';\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\n\r\nimport {RegionColor} from \"../../../../actions/HandleUX\"\r\n\r\n\r\n\r\nconst MarkerCenterpoints = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [Centerpoints, setCenterpoints] = useState(null)\r\n    \r\n    const CreateCenterpoints = ()=>{\r\n        let StorePoints=[]       \r\n        SCAN.MarkerScanCenterPoints.map((center,i)=>{\r\n        \r\n/*\r\n                        {\r\n                            name:site.name,\r\n                            center:{\r\n                                lat: site.lat,\r\n                                lng: site.long\r\n                              },\r\n                            range:Range.range[1]\r\n                        }\r\n            */\r\n           //console.log(center.center, center.range)\r\n           \r\n           \r\n\r\n           let options = {\r\n               strokeColor: RegionColor(center.scanCategory),\r\n               strokeOpacity: 0.9,\r\n               strokeWeight: 1,\r\n               fillColor: RegionColor(center.scanCategory),\r\n               fillOpacity: 0.2,\r\n               radius: ((center.range*1000)),\r\n               zIndex: 1\r\n             }\r\n            let Featheroptions = {\r\n                strokeColor: RegionColor(center.scanCategory),\r\n                strokeOpacity: 0.7,\r\n                strokeWeight: 3,\r\n                fillColor: RegionColor(center.scanCategory),\r\n                fillOpacity: 0.01,\r\n                radius: (( (center.range+((center.feather/100)*center.range)) *1000)),  \r\n                zIndex: 1\r\n              }\r\n           StorePoints.push(\r\n                <span key={i}>\r\n                    <Circle center={center.center} options={options}/>\r\n                    <Circle center={center.center} options={Featheroptions}/>\r\n                </span>\r\n           )\r\n            \r\n        })\r\n        setCenterpoints(StorePoints)\r\n        \r\n    }\r\n    \r\n    \r\n    useEffect(()=>{  CreateCenterpoints() },[SCAN.MarkerScanCenterPoints])\r\n\r\n    useEffect(()=>{},[ Centerpoints])\r\n\r\n    return(\r\n        <>\r\n        {Centerpoints}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerCenterpoints;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ColorKey.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ClusterResults.js",["1018","1019","1020","1021"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport{NumberReducer} from \"../../../../actions/HandleUX\";\r\n\r\n//import DeleteClusterBtn from \"../Controls/buttons/DeleteClusterBtn\";\r\n//import BacktoMap from \"../Controls/buttons/BacktoMapBtn\";\r\n//import ClusterMap from \"../../Prototype/Components/Map/clusterMap/clustermap\"\r\n//import MoreInfo from \"./MoreInfo\";\r\n\r\n\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nconst ClusterResult = (props)=>{\r\n\r\n    const {result, i} = props;\r\n    const [Multiplier, setMultiplier]= useState(1000)\r\n    const [ClusterTotal, setClusterTotal] = useState(0)\r\n\r\n\r\n    const FindClusterTotal = (result)=>{\r\n        let total=0;\r\n        result.ClusterCost.map((type,i)=>{ total = total + type[1] })\r\n        \r\n        setClusterTotal(NumberReducer(parseFloat((total*Multiplier).toFixed(2))))\r\n    }\r\n\r\n\r\n    useEffect(()=>{ \r\n        //FindClusterTotal(result) \r\n        //console.log(result)\r\n    },[result])\r\n\r\n    return(\r\n        <>\r\n            <h3><LocationCityIcon /> Cluster { (i+1) }  - <strong>{result.scanCategory}</strong></h3>\r\n            <h3>Cluster Resource Quota : <strong>{result.resourceQuota.toFixed(2)}</strong></h3> \r\n            <h3>est Cluster Cost : <strong>${0}</strong></h3>\r\n            <div className=\"ListResultContainer\">\r\n                <div className=\"Title\">\r\n                <h3> {result.name}</h3>\r\n                </div>\r\n                Add Map and Cluster Details once Data dump has been completed\r\n\r\n            </div>\r\n                \r\n               \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClusterResult;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\HistoryRerfresh.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ViewSingleResultBtn.js",["1022"],"import React, {useEffect} from 'react';\r\nimport store from \"store/index\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { Link} from \"react-router-dom\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport{FetchSingleScanResult} from \"actions/authUser\"\r\n\r\n\r\n// this button has 3 states\r\n// Falsey .. nothign downloaded ot process\r\n// Active .. there is a active result in memory\r\n// processing .. system is downloading a result\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function IconButtons(props) {\r\n    const {scanID, scan} = props\r\n    const SCAN = useContext_SCAN_FULL();\r\n    useEffect(()=>{},[SCAN])\r\n\r\n    return (\r\n          <>\r\n            {\r\n              SCAN.SelectedModelUI.active ? <ActiveTrue scanID={scanID} scan={scan} />:<ActiveFalse scanID={scanID} scan={scan} />\r\n            }\r\n          </>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst ActiveTrue = (props)=>{\r\n  const {scanID, scan} = props\r\n  const SCAN = useContext_SCAN_FULL();\r\n  useEffect(()=>{\r\n      //console.log(scanID,SCAN.SelectedModelUI.activeID )\r\n  },[])\r\n    return(\r\n      <>\r\n        {\r\n          SCAN.SelectedModelUI.activeID === scanID ? <ViewResult /> : <DownloadResult scanID={scanID} scan={scan}/>\r\n        }\r\n      </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ActiveFalse = (props)=>{\r\n  const {scanID, scan} = props\r\n  const SCAN = useContext_SCAN_FULL();\r\n  useEffect(()=>{\r\n      //console.log(scanID,SCAN.SelectedModelUI.activeID )\r\n  },[])\r\n  return(\r\n    <>\r\n      {\r\n          SCAN.SelectedModelUI.processing  ? <Processing /> : <DownloadResult scanID={scanID} scan={scan}/>\r\n        }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst DownloadResult = (props)=>{\r\n  const {scanID, scan} = props\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton aria-label=\"refresh\" onClick={()=>{FetchSingleScanResult(scanID, scan)}}>\r\n        <GetAppIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst ViewResult = (props)=>{\r\n  const {scanID} = props\r\n  const classes = useStyles();\r\n  \r\n  const ClearOldModel=()=>{\r\n    //console.log(\"Clear out old Model\")\r\n    store.dispatch({ type:'MODELREVIEWREADY', payload:false});\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton aria-label=\"refresh\"\r\n        component={Link}\r\n        onClick={ClearOldModel}\r\n        to='/results/locations'\r\n\r\n       >\r\n        <VisibilityIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst Processing = ()=>{\r\n  return(\r\n    <>\r\n        <div className=\"loader\">\r\n            <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    </>\r\n  )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateSingleScanBtn.js",["1023"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {CreateNewScan} from \"actions/HandleScanProcess\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ContainedButtons() {\r\n  const classes = useStyles();\r\n\r\n\r\n    const HandleSingle=()=>{ console.log(\"Create Single\", CreateNewScan(0));}\r\n    const HandleCompare=()=>{ console.log(\"Create Single\", CreateNewScan(1));}\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Button variant=\"contained\" onClick={HandleSingle} className=\"btn-Next\">\r\n            Select Clients \r\n        </Button>\r\n    </div>\r\n  );\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoAddItemsSingleScan.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoScanType.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\SetSelectedBtn.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\CreateScanoptions.js",["1024","1025","1026","1027"],"import 'date-fns';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useContext_SCAN_FULL} from \"../../../Context/SCAN\";\r\n\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nimport {FetchSelectedItems} from \"../../../actions/HandleScanProcess\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\n/* Handle Scna Form*/\r\nexport default function CreateNewScanForm() {\r\n  return (<ScanForm />);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Processing = ()=>{\r\n   \r\n    return(\r\n        <>\r\n            processing\r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\nconst Error = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const ErrorTrue='There was an Error in the Username or Password when processing your details'\r\n    const ErrorFalse=''\r\n    useEffect(()=>{},[AUTH])\r\n    return(\r\n        <>{\r\n            AUTH.error ? <h3>{ErrorTrue}</h3>:<h3>{ErrorFalse}</h3>\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n\r\n\r\n\r\nconst ScanForm = ()=>{\r\n    \r\n    const SCAN = useContext_SCAN_FULL();\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n\r\n    const classes = useStyles();\r\n    const [TITLE, setTITLE] = useState('')\r\n    const [DESCRIPTION, setDESCRIPTION] = useState('')\r\n    const[Start, setStart] = useState()\r\n    const[End, setEnd] = useState()\r\n\r\n    const handleClick=()=>{\r\n        FetchSelectedItems(USERSCAN.UserScanSingleDataSets, TITLE, DESCRIPTION, Start, End)\r\n    }\r\n\r\n    const handleTitle=(e)=>{setTITLE(e.target.value)}\r\n    const handleDescription=(e)=>{setDESCRIPTION(e.target.value)}\r\n    const SetStartDate=(START)=>{\r\n        setStart(new Date(`${START}`).getTime() / 1000)\r\n    }\r\n    const SetEndDate=(END)=>{\r\n        setEnd(new Date(`${END}`).getTime() / 1000)\r\n    }\r\n    \r\n    return(\r\n        <div className=\"LoginContainer\">\r\n            {Start}{End}\r\n            <MaterialUIPickers  SetEndDate={SetEndDate} SetStartDate={SetStartDate}/>\r\n\r\n            <TextField \r\n                id=\"outlined-basic\" \r\n                label=\"Model Name\" \r\n                variant=\"outlined\" \r\n                onChange={handleTitle}\r\n            />\r\n            \r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Model Description\"\r\n                multiline\r\n                rows={6}\r\n                onChange={handleDescription}\r\n                variant=\"outlined\"\r\n                />\r\n\r\n            \r\n            <Button variant=\"contained\" onClick={()=>{handleClick()} } className=\"btn-Confirm\">\r\n                Create Model\r\n            </Button>\r\n                \r\n        </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nfunction MaterialUIPickers(props) {\r\n    const{SetStartDate, SetEndDate} = props\r\n    // The first commit of Material-UI\r\n    const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\r\n    const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\r\n  \r\n    const handleDateChange = (date) => {\r\n        setSelectedStartDate(date);\r\n      SetStartDate(date)\r\n     \r\n    };\r\n\r\n    const handleEndDateChange = (date) => {\r\n        setSelectedEndDate(date);\r\n    \r\n        SetEndDate(date)\r\n      };\r\n  \r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Start Date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={selectedStartDate}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"End Date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={selectedEndDate}\r\n            onChange={handleEndDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n  ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateNewModel.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompare.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ViewModels.js",["1028","1029","1030","1031","1032","1033"],"import React, { useEffect } from 'react';\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_AUTH_FULL} from \"Context/AUTH\";\r\nimport{FetchPreviousScans} from \"actions/authUser\"\r\n\r\n// Layout\r\nimport {H1, H2, H3,H4, P, S} from \"./Components/Type\";\r\nimport Section from \"./Components/Layout/Section\"\r\n\r\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\r\nimport LocationDisabledIcon from '@material-ui/icons/LocationDisabled';\r\nimport LocationSearchingIcon from '@material-ui/icons/LocationSearching';\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\n\r\nimport {HandleTZDate} from \"actions/HandleUX\";\r\nimport ScanHistoryRefreshBtn from \"./Components/buttons/HistoryRerfresh\";\r\nimport ViewSingleResultBtn from \"./Components/buttons/ViewSingleResultBtn\";\r\nimport Footer from \"./Components/Layout/Footer\"\r\n\r\nconst Profile = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n    return(\r\n        <div className=\"AuthLayout\">\r\n                <div className=\"Header\">\r\n                    <H2 Copy={`View Models`} />\r\n                </div>\r\n\r\n                <div className=\"Content\">\r\n        \r\n                        <div className=\"ControlBar\">\r\n                            {  AUTH.RefreshScanHistory ? <Refreshloading />: <ScanHistoryRefreshBtn /> }\r\n                        </div> \r\n                    \r\n                    <Section>\r\n                        <ModelHistory />\r\n                    </Section>\r\n                \r\n                </div>\r\n            \r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\nconst ModelHistory = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n\r\n    const HandleDate=(timestamp)=>{\r\n        var a = new Date(timestamp * 1000);\r\n        var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n        var year = a.getFullYear();\r\n        var month = months[a.getMonth()];\r\n        var date = a.getDate();\r\n        var time = date + ' ' + month + ' ' + year;\r\n        return time;\r\n        \r\n    }\r\n    useEffect(()=>{\r\n        //console.log(AUTH.ScanHistory);\r\n    },[AUTH.ScanHistory])\r\n    return(\r\n        <div className=\"ModelHistory\">\r\n            <ul className=\"Card_List\">\r\n                    \r\n\r\n            {\r\n                AUTH.ScanHistory.map((scan,i)=>{\r\n                    //console.log(scan);\r\n                    return(\r\n                        <li key={i} className=\"Card\">\r\n\r\n                             <div className=\"Card_Header\">\r\n                                <div><H2 Copy={scan.Name}/></div>\r\n                                <p><strong>{HandleDate(scan.DateStart)} - {HandleDate(scan.DateEnd) }</strong></p>\r\n                              \r\n                                { scan.ScanState=== 'Complete'? <CTA scan={scan}/>: <ProcessingStatus scan={scan} />  }\r\n                             </div>\r\n                            \r\n\r\n                             <div className=\"Card_Body\">\r\n                               \r\n                                <div className=\"description\">\r\n                                    <P Copy={scan.Description}/>    \r\n                                </div>\r\n\r\n                                <div className=\"ResultStats\">\r\n                                    <ul> \r\n                                        <li><span>{scan.IntClients}</span><PersonPinIcon />Clients</li>\r\n                                        <li><span>{scan.IntCluster}</span><GroupWorkIcon />Clusters</li>\r\n                                        <li><span>{scan.IntSites}</span><LocationCityIcon />Locations</li>\r\n                                        <li><span>{(scan.IntSites-scan.IntLocationsunaccommodated)}</span><LocationSearchingIcon />Inscope</li>\r\n                                        <li><span>{scan.IntLocationsunaccommodated}</span><LocationDisabledIcon />Out of Scope</li>\r\n                            \r\n                                    </ul>\r\n                                </div>\r\n                               \r\n                             </div>\r\n                             <div className=\"Card_Footer\">\r\n                                <CreatedAt scan={scan}/>\r\n                                { scan.ScanState=== 'Complete'? <ProcessingStatus scan={scan} />: false }\r\n                             </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Refreshloading=()=>{\r\n    return(\r\n        <div className=\"loader\"><div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>\r\n    )\r\n}\r\n\r\n\r\nconst CreatedAt=(props)=>{\r\n    const {scan} = props\r\n    return(\r\n        <div className=\"ModelDateCreated\">\r\n            <S Copy={`Created : ${HandleTZDate(scan.createdAt)}`}/>                        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ProcessingStatus=(props)=>{\r\n    const {scan} = props\r\n    return(<>\r\n            <div className={`${scan.ScanState} status`}>\r\n                \r\n                {\r\n                    scan.ScanState=== 'Complete' ? `Processing Time ${scan.CreateModel_TimeTaken}`:`ETA: ${scan.CreateModel_RemainingTime} `\r\n                }\r\n                <br />\r\n                {scan.ScanState} \r\n             \r\n            </div>\r\n    </>\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst CTA = (props)=>{\r\n    const {scan} = props\r\n    return(\r\n        <div className=\"cta\">\r\n            <div><ViewSingleResultBtn scanID={scan.id} scan={scan}/></div>\r\n            <div>Delete</div>\r\n        </div>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CompareModels.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMPARE.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleCompare.js",["1034"],"\r\n// Private Functions\r\nimport store from \"../store/index\"\r\nimport axios from 'axios';\r\n\r\nexport const StoreCompareItem = (scan,i)=>{\r\n    const UserSelected = store.getState().COMPARE.CompareData.UserSelected;\r\n    UserSelected[i] = scan\r\n    console.log(scan,i, UserSelected)\r\n    store.dispatch({ type:'STOREUSERSELECTED', payload:UserSelected});\r\n}\r\n\r\nexport const ConfirmCompare = (bool)=>{\r\n    store.dispatch({ type:'COMPAREPROCESSING', payload:true}); \r\n\r\n    const UserSelected = store.getState().COMPARE.CompareData.UserSelected;\r\n    UserSelected.map((models,i)=>{\r\n        FetchCompareModel(models.id, i, UserSelected.length)\r\n    })\r\n\r\n   \r\n    store.dispatch({ type:'COMPARESTATUS', payload:true}); \r\n}\r\n\r\n\r\nexport const ResetCompare = ()=>{\r\n\r\n    store.dispatch({ type:'COMPARESTATUS', payload:false}); \r\n    store.dispatch({ type:'COMPAREPROCESSING', payload:false}); \r\n    store.dispatch({ type:'STOREUSERSELECTED', payload:[]});\r\n    store.dispatch({ type:'STOREMODELS', payload:[]});\r\n}\r\n\r\n\r\nexport const FetchCompareModel = (scanID, int, total)=>{\r\n\r\n\r\n    console.log(\"scanID\", scanID, int)\r\n    const AWSURL=' https://intactanalytiq.s3-ap-southeast-2.amazonaws.com/';\r\n   // 6002d5ece940b655642d22df.json\r\n   // headers: axiosHeader\r\n   axios({ url: AWSURL+scanID+'.json', method: 'get'})\r\n    .then((result) => { \r\n    \r\n            console.log(result.data);\r\n            //result.data.SCANSTATE\r\n            const FetchedModels = store.getState().COMPARE.CompareData.FetchedModels;\r\n\r\n            \r\n            FetchedModels[int] = result.data\r\n            store.dispatch({ type:'STOREMODELS', payload:FetchedModels}); \r\n\r\n            if(FetchedModels.length === total)\r\n                store.dispatch({ type:'COMPAREPROCESSING', payload:false}); \r\n        \r\n            }).catch(function (thrown) {\r\n                    if (axios.isCancel(thrown)) { console.log('Request canceled', thrown.message);\r\n                    } else { console.log(\"ERROR\", thrown);}\r\n            });\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMPARE.js",["1035"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_COMPARE_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_COMPARE_FULL = ()=>{\r\n    return useContext(Context_COMPARE_FULL)\r\n}\r\n\r\n\r\n \r\nexport const COMPAREContextProvider = ({children})=>{\r\n    const COMPARE = useSelector(state => state.COMPARE );\r\n\r\n    useMemo(()=>{  },[COMPARE]) \r\n\r\n    return(\r\n            <Context_COMPARE_FULL.Provider value={COMPARE}>\r\n                {children}            \r\n            </Context_COMPARE_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ConfirmCompareBtn.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SelectModels.js",["1036","1037","1038"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"Context/COMPARE\";\r\n\r\n\r\nimport SelectCompare from \"../Components/selects/SelectCompare\"\r\nimport ConfirmCompareBtn from \"../Components/buttons/ConfirmCompareBtn\";\r\n\r\n const CompareModels=()=>{\r\n\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    // useContext_COMPARE_FULL\r\n    const [ModelLimit, setLimit] = useState(2)\r\n    const [ModelsSelected, setModelsSelected] = useState(2)\r\n    const [ModelSelects, setModelSelects] = useState([])\r\n\r\n    const CreateSelects = ()=>{\r\n        let i=0\r\n        let temp=[]\r\n        while(i<ModelLimit){\r\n            \r\n            temp.push(<SelectCompare pos={i}/>)\r\n            i++;\r\n        }\r\n        setModelSelects(temp)\r\n    }\r\n    useEffect(()=>{\r\n        CreateSelects()\r\n    },[ModelsSelected])\r\n\r\n    useEffect(()=>{ \r\n        //console.log(COMPARE) \r\n    },[COMPARE])\r\n    return(\r\n        <>\r\n            <div className=\"SectionHeaderWithControls\">\r\n            <h1>Compare Models</h1>\r\n                <div className=\"controls\">\r\n                {ModelSelects }\r\n                    <ConfirmCompareBtn />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"ComparedSelectedItems\">\r\n\r\n                <ul className=\"ComparableItem\">\r\n                                        <li>Model Name</li>\r\n                                        <li>Clients</li>\r\n                                        <li>Clusters</li>\r\n                                        <li>Sites</li>\r\n                                        <li>Description</li>\r\n                                </ul>   \r\n\r\n\r\n                    {\r\n                        COMPARE.CompareData.UserSelected.map((model,i)=>{\r\n                            return(\r\n                                <ul key={i} className=\"ComparableItem\">\r\n                                        <li>{model.Name}</li>\r\n                                        <li>{model.IntClients}</li>\r\n                                        <li>{model.IntCluster}</li>\r\n                                        <li>{model.IntSites}</li>\r\n                                        \r\n                                        <li>{model.Description}</li>\r\n                                </ul>    \r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompareModels","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareModels.js",["1039","1040","1041","1042","1043","1044"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetCompareModels.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsInScope.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsUnaccomidated.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalWorkOrdersCoveredInCluster.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableResourceAllocationPerResourceTotal.js",["1045"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\n\r\nconst Title='Avg WO Completed per resource';\r\n\r\nconst TableWorkOrders = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n    \r\n    useEffect(()=>{ },[COMPARE])\r\n\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n            <div>{Title}</div>\r\n            {\r\n                MODELS.map((model,i)=>{\r\n                    return( \r\n                        <div key={i}> {((model.CLUSTERSTATS.WorkOrdersCoveredInModel/model.CLUSTERSTATS.ResourceAllocation)/250).toFixed(2)} </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableWorkOrders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableWorkOrderByClient.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTradeTypeBreakdown.js",["1046"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\nimport {FindTradeTypeAllocation} from \"../../../../actions/ClusterAnalysis\";\r\nconst Title='Model Trades';\r\n\r\nconst TableWorkOrders = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n    \r\n    useEffect(()=>{},[COMPARE])\r\n\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n            <div>{Title}</div>\r\n            {\r\n                        MODELS.map((model,i)=>{\r\n                           let  Breakdown= FindTradeTypeAllocation(model.STOREMARKERCENTERPOINTS)\r\n                            return(\r\n                                <div key={i}>\r\n                                    <DisplayBreakdown Breakdown={Breakdown}/>\r\n                                </div>\r\n                            )\r\n                                \r\n                        })\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableWorkOrders;\r\n\r\nconst DisplayBreakdown = (props)=>{\r\n    const {Breakdown} = props\r\n    return(\r\n        <>\r\n        {\r\n              Breakdown[0].map((cat,i)=>{\r\n                return(\r\n                    <div key={i} className=\"AccordionData\">\r\n                        <div>{cat}</div>\r\n                        <div>{Breakdown[1][i]}</div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        </>       \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableSitesByTier.js",["1047","1048"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\n\r\nimport {SitesbyTier} from \"../../../../actions/ClusterAnalysis\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\nimport {findClientName} from \"../../../../actions/ClusterAnalysis\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n  }));\r\n\r\nconst Title='Locations allocation by Tier';\r\n\r\nconst WorkordersByClient = ()=>{\r\n    const classes = useStyles();\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n\r\n    useEffect(()=>{ },[COMPARE])\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n        <Accordion className=\"ComparisonAccordion\">\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n                {Title}\r\n            </AccordionSummary>\r\n\r\n            <AccordionDetails className=\"ComparisonRow\">\r\n                <div>&nbsp;</div>\r\n                   \r\n\r\n                    {\r\n                        MODELS.map((model,i)=>{\r\n                            let Breakdown = SitesbyTier(model.STOREMARKERCENTERPOINTS)\r\n                            return(\r\n                                <div key={i}>\r\n                                    <DisplayBreakdown Breakdown={Breakdown}/>\r\n                                </div>\r\n                            )\r\n                                \r\n                        })\r\n                    }\r\n            </AccordionDetails>\r\n\r\n        </Accordion>\r\n        </div>\r\n    )\r\n} \r\nexport default WorkordersByClient;\r\n\r\n\r\nconst DisplayBreakdown = (props)=>{\r\n    const {Breakdown} = props\r\n    return(\r\n        <>\r\n        {\r\n              Breakdown[0].map((cat,i)=>{\r\n                return(\r\n                    <div key={i} className=\"AccordionData\">\r\n                        <div>{cat}</div>\r\n                        <div>{Breakdown[1][i]}</div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        </>        \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult.js",["1049","1050","1051","1052","1053","1054"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ScanStateBtn.js",["1055"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Footer.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\UICompnents\\index.js",["1056"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n// Type\r\nimport {H1, H2, H3,H4, P, S} from \"../Components/Type\";\r\nimport Section from \"../Components/Layout/Section\"\r\nconst UIComponentList = ()=>{\r\n    return(\r\n        <>\r\n        <H1 Copy={`UI COMPONENTS`}/>\r\n            <Section><BasicTypeOptions /></Section>            \r\n            <Section><ColorPallete /></Section>\r\n            <Section><Cards /></Section>\r\n            <Section><Pods /></Section>\r\n            <Section><StatBar /></Section>\r\n            <Section><Buttons /></Section>\r\n            <Section><ControlBar /></Section>\r\n            \r\n\r\n            <Section>\r\n               \r\n             Controls\r\n            charts\r\n            </Section>\r\n           \r\n\r\n\r\n        </> \r\n    )\r\n}\r\n\r\nexport default UIComponentList; \r\n\r\n\r\nconst ControlBar=()=>{\r\n    return(\r\n        <div className=\"ControlBar\">\r\n            Icon\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Buttons=()=>{\r\n    return(\r\n        <>\r\n             <H2 Copy={`Buttons`}/>\r\n             <Button variant=\"contained\" className=\"btn-Back\"> Back </Button>\r\n             <Button variant=\"contained\" className=\"btn-Select\"> Select </Button>\r\n             <Button variant=\"contained\" className=\"btn-Next\"> Next </Button>\r\n             <Button variant=\"contained\" className=\"btn-Confirm\"> Confirm </Button>\r\n             <Button variant=\"contained\" className=\"btn-Create\"> Create </Button>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst StatBar=()=>{\r\n\r\n        return(\r\n            <>\r\n             <H2 Copy={`Stat/Data Bar`}/>\r\n                <ul className=\"Stat_Bar\">\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                </ul>\r\n            </>\r\n        )\r\n}\r\n\r\nconst Pods =()=>{\r\n    return(\r\n        <>\r\n            <H2 Copy={`Data Pods`}/>\r\n\r\n            <ul className=\"Pod_List\">\r\n                <li className=\"Pod\">\r\n                    \r\n                    <div className=\"Data\"><P Copy={`Pod Data`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Pod Title`}/></div>\r\n                    <div className=\"Data Strong\"><P Copy={`Secondary  Data`}/></div>\r\n                </li>\r\n                <li className=\"Pod\">\r\n                    <div className=\"Data\"><P Copy={`Pod Data`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Pod Title`}/></div>\r\n                    \r\n                </li>\r\n                <li className=\"Pod\">\r\n                    \r\n                    <div className=\"Data\"><P Copy={`Pod Data`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Pod Title`}/></div>\r\n                    <div className=\"Data Strong\"><P Copy={`Secondary  Data`}/></div>\r\n                </li>\r\n                <li className=\"Pod\">\r\n                    <div className=\"Data\"><P Copy={`Pod Data`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Pod Title`}/></div>\r\n                    \r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst Cards = ()=>{\r\n    return(\r\n        <>\r\n        <H2 Copy={`Cards`}/>\r\n\r\n        <ul className=\"Card_List\">\r\n            <li className=\"Card\">\r\n                    <div className=\"Card_Header\">\r\n                            <H2 Copy={`Card Header`}/>\r\n                    </div>\r\n                    <div className=\"Card_Body\">\r\n                            <P Copy={`Card Body`}/>\r\n                    </div>\r\n                    <div className=\"Card_Footer\">\r\n                            <H4 Copy={`Card Footer`}/>\r\n                    </div>\r\n            </li>\r\n\r\n            <li className=\"Card\">\r\n                    <div className=\"Card_Header\">\r\n                            <H2 Copy={`Card Header`}/>\r\n                    </div>\r\n                    <div className=\"Card_Body\">\r\n                            <P Copy={`Card Body`}/>\r\n                    </div>\r\n                    <div className=\"Card_Footer\">\r\n                            <H4 Copy={`Card Footer`}/>\r\n                    </div>\r\n            </li>\r\n        </ul>\r\n\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst ColorPallete=()=>{\r\n    return(\r\n        <>\r\n        <H2 Copy={`Color palettes`}/>\r\n        <H3 Copy={`Baseline Colors`}/>\r\n            <ul className=\"ColorPalette\">\r\n                <li>\r\n                    <span className=\"color1\"></span>\r\n                    <H4 Copy={`Color 1`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"color2\"></span>\r\n                    <H4 Copy={`Color 2`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"color3\"></span>\r\n                    <H4 Copy={`Color 3`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"color4\"></span>\r\n                    <H4 Copy={`Color 4`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"color5\"></span>\r\n                    <H4 Copy={`Color 5`}/>\r\n                </li>\r\n            </ul>\r\n        <H3 Copy={`Accent Colors`}/>\r\n            <ul className=\"ColorPalette\">\r\n                <li>\r\n                    <span className=\"true\"></span>\r\n                    <H4 Copy={`Accent True`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"false\"></span>\r\n                    <H4 Copy={`Accent False`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"Link\"></span>\r\n                    <H4 Copy={`Link`}/>\r\n                </li>\r\n               \r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst ULList = ()=>{\r\n    return(\r\n        <ul>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst BasicTypeOptions=()=>{\r\n    return(\r\n        <>\r\n            \r\n            \r\n            <H1 Copy={`Header H1. Font : Roboto`}/>\r\n            <H2 Copy={`Header H2. Font : Roboto`}/>\r\n            <H3 Copy={`Header H3. Font : Roboto`}/>\r\n            <H4 Copy={`Header H4. Font : Roboto`}/>\r\n            \r\n            <P Copy={`Paragraph Font : Montserrat`}/>\r\n            <S Copy={`Small Copy Font : Montserrat`}/>\r\n        </>\r\n    )\r\n}\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Type.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Section.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Locations.js",["1057","1058","1059","1060"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\HeaderTitle.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\AppBar.js",["1061","1062","1063"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_FullMap.js",["1064"],"import React  from 'react'\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H1} from \"Pages/Auth/Components/Type\";\r\n\r\nimport Map_Full_Main from \"Pages/Auth/SingleModelResult/components/Map_Full_MAin\";\r\nconst SubSection_FullMap = ()=>{\r\n\r\n    return(\r\n        <>\r\n         <H1 Copy={`Model Overview`} />\r\n            <Section>\r\n                <Map_Full_Main />\r\n            </Section>\r\n        </>\r\n    )  \r\n} \r\n\r\nexport default SubSection_FullMap;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Client.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Clusters.js",["1065","1066","1067","1068","1069","1070"],"import React, { useEffect }  from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H1} from \"Pages/Auth/Components/Type\";\r\nimport Clusters_ResultsList from \"Pages/Auth/SingleModelResult/components/Clusters_ResultsList\";\r\n\r\nimport{sumBy, groupBy, chain} from 'lodash'\r\n\r\nconst SubSection_Clusters = ()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const MODEL = useContext_SCAN_FULL()\r\n\r\n    useEffect(()=>{\r\n        console.log(MODEL.SelectedModel.STOREMARKERCENTERPOINTS)\r\n    },[])\r\n    return(\r\n        <>\r\n        <H1 Copy={`Clusters`} />\r\n           <Section>\r\n            \r\n                <Clusters_ResultsList />\r\n           </Section>\r\n       </>\r\n    ) \r\n}\r\n\r\nexport default SubSection_Clusters;  \r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Workorders.js",["1071","1072","1073"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Trade.js",["1074","1075","1076","1077","1078","1079","1080","1081"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Stats.js",["1082"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_ByTier.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Charts.js",["1083","1084","1085","1086"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basics.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basic_Charts.js",["1087","1088","1089","1090"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clients_Names.js",["1091","1092","1093"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {findClientName} from \"actions/ClusterAnalysis\";\r\n\r\n\r\nconst ClusterByClientName = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [byClient, setByClient] = useState([])\r\n    const Model = SCAN.SelectedModel;\r\n    const ByClient=()=>{\r\n        let client=[];\r\n        let SumByClient\r\n        Model.STOREMARKERCENTERPOINTS.map((sites,i)=>{\r\n            sites.sites.map((site,i)=>{\r\n                client.push({\r\n                    sum:site.SumWorkOrder,\r\n                    client:site.customers[0]\r\n                })\r\n            })\r\n        })\r\n      \r\n        SumByClient = client.reduce(function (r, o) { (r[o.client])? r[o.client] += o.sum : r[o.client] = o.sum; return r; }, {});\r\n\r\n        setByClient(SumByClient)\r\n    }\r\n\r\n    useEffect(()=>{ByClient()},[SCAN])\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"Stat_Bar Column\">\r\n            {\r\n                Object.keys(byClient).map(function(key, i) {\r\n                    return(\r\n                        <li key={i}>\r\n                            <div>\r\n                                <div>{findClientName(key)}</div>\r\n                                <div>{byClient[key]} </div>\r\n                            </div>\r\n                        </li>\r\n                        )\r\n                    })        \r\n            }\r\n        </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClusterByClientName;",["1094","1095"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_ResourceAllocation.js",["1096"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Ratios.js",["1097","1098","1099","1100","1101"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {FindTradeTypeAllocation} from \"actions/ClusterAnalysis\";\r\n\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H4,H2, P} from \"Pages/Auth/Components/Type\";\r\n \r\nconst ByTradeRatio = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const Model = SCAN.SelectedModel;\r\n    \r\n    const [TradeAllocationTotal, setTradeAllocationTotal] = useState(0)\r\n    const [TradeAllocation,setTradeAllocation] = useState([[],[]])\r\n    \r\n    const TradeWoRatioForDemo=(num)=>{\r\n        return ((num/TradeAllocationTotal)*100).toFixed(2)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let TWV=0\r\n        FindTradeTypeAllocation(Model.STOREMARKERCENTERPOINTS)[1].map((value,i)=>{TWV= TWV+value})\r\n        setTradeAllocationTotal(TWV)\r\n    },[])\r\n    \r\n    return(\r\n        <>\r\n        <H2 Copy={`Workorders by Trade Type`} />\r\n        <Section>\r\n        \r\n            <ul className=\"Stat_Bar\">\r\n                {\r\n                    TradeAllocation[0].map((trade,i)=>{\r\n                        return(\r\n                            <li key={i}>\r\n                                <span>{TradeWoRatioForDemo(TradeAllocation[1][i])}%</span>\r\n                                {trade} \r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </Section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ByTradeRatio;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\OLD_ResultHeader.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Map_Full_MAin.js",["1102"],"import React from 'react'\r\n\r\n// Components\r\nimport Map_SingleModelReview_FULLModel from \"Pages/Auth/Components/Maps/Map_SingleModelReview_FULLModel\"\r\nimport MapColorKey from \"Pages/Auth/Components/Maps/MapColorKey\"\r\nimport MainMapFilters from \"Pages/Auth/Components/Maps/MapMainFilter\";\r\n\r\nconst ResultMap = ()=>{\r\n    return(\r\n        <>\r\n  \r\n            <div className=\"ScanMapMain\" id=\"MainMap\">\r\n                <MainMapFilters />\r\n                <MapColorKey />\r\n                <Map_SingleModelReview_FULLModel />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResultMap; ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Map_SingleModelReview_FULLModel.js",["1103"],"import React, { useEffect, useRef } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport { GoogleMap } from '@react-google-maps/api';\r\n\r\n// Components\r\n\r\nimport Markers from \"Pages/Auth/Components/Maps/LocationMarkers\";\r\nimport ResidualMarkers from \"Pages/Auth/Components/Maps/ResidualLocationMarkers\";\r\n//import CenterPoints from \"Pages/Auth/Components/Maps/MarkersCenterpoints\";\r\n//import MarkerBasedResults from \"Pages/Auth/Components/Maps/MarkerBasedResults\";\r\nimport Polygons from \"Pages/Auth/Components/Maps/Polygons\"\r\n\r\nconst containerStyle = { height: \"700px\", width: \"auto\" };\r\nconst Map=()=>{\r\n    const UX = useContext_UX_FULL();\r\n\r\n    useEffect(()=>{\r\n        console.log(UX)\r\n    },[UX])\r\n        return(\r\n                <div className=\"ScanMapMain\" id=\"MainMap\">\r\n                        <GoogleMap \r\n                            mapContainerStyle={containerStyle}\r\n                            center={UX.MapParameters.LatLngBoundaries}\r\n                            zoom={UX.MapParameters.zoom}\r\n                        >\r\n                            { /* Child components, such as markers, info windows, etc. */ }\r\n                            \r\n                            <Markers />\r\n                            <ResidualMarkers />\r\n                            <Polygons />\r\n                        </GoogleMap> \r\n                    </div>\r\n                )\r\n}\r\n\r\n//<CenterPoints />\r\n \r\nexport default Map;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\LocationMarkers.js",["1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker, MarkerClusterer  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {findIndex} from 'lodash'; \r\nimport {RegionColor} from \"actions/HandleUX\"\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n  const mcOptions = {\r\n    styles: [{\r\n        height: 53,\r\n        url: \"/clusters/m1.png\",\r\n        width: 53, \r\n\r\n      },\r\n      {\r\n        height: 56,\r\n        url: \"/clusters/m2.png\",\r\n        width: 56,\r\n      },\r\n      {\r\n        height: 66,\r\n        url: \"/clusters/m3.png\",    \r\n        width: 66,\r\n      },\r\n      {\r\n        height: 78,\r\n        url: \"/clusters/m4.png\",\r\n        width: 78,\r\n      },\r\n      {\r\n        height: 90,\r\n        url: \"/clusters/m5.png\",\r\n        width: 90,\r\n      }\r\n    ]\r\n  }\r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkers = ()=>{\r\n\r\n    //const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name, Region)=>{console.log(\"Marker Clicked\", name, Region) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n        console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers,  clusterer)=>{\r\n\r\n        //console.log(\"markers\", markers)\r\n        let StoreMarkers=[];\r\n\r\n        markers.map((centerPoint,i)=>{\r\n\r\n          //console.log(centerPoint, UX.AreaSelectFilter.ByResourceType)\r\n/* ******************************************************************************** */         \r\n// Map Filters\r\n\r\n// Filter Results by Cluster Type\r\n          if(UX.AreaSelectFilter.ByClusterType !== null)  \r\n            if(centerPoint.scanCategory != UX.AreaSelectFilter.ByClusterType)\r\n              return\r\n// Filter Results by Reource Type \r\n            if(UX.AreaSelectFilter.ByResourceType !== null)  \r\n             if(findIndex(centerPoint.resourceQuota, function(o) { return o.Trade === UX.AreaSelectFilter.ByResourceType}) === -1)\r\n              return\r\n// End Map Filters\r\n/* ******************************************************************************** */  \r\n\r\n          centerPoint.sites.map((site,ii)=>{\r\n\r\n              Targeticon = {\r\n                //path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                path:\"M-24-48h48v48h-48z\",\r\n                fillColor: RegionColor(centerPoint.scanCategory),\r\n                fillOpacity: .9,\r\n                anchor: new window.google.maps.Point(0,0),\r\n                strokeWeight: 0,\r\n                scale: .3\r\n            }; \r\n          \r\n            \r\n            StoreMarkers.push( \r\n                \r\n                    <Marker\r\n                        clusterer={clusterer}\r\n                        key={site.name}\r\n                        onLoad={onLoadMarker}\r\n                        title={site.name}\r\n                        //label={site.name}\r\n                        icon={Targeticon}\r\n                        onClick={()=>{OnMarkerClick(site.name, centerPoint.scanCategory)}}\r\n                        position={{\r\n                                lat: parseFloat(site.lat),\r\n                                lng: parseFloat(site.long)\r\n                            }}\r\n                    />\r\n                \r\n            )\r\n            })\r\n        })\r\n        /*\r\n        Object.keys(markers).map((key, value)=>{\r\n            //console.log(markers[key], value)\r\n              markers[key].map((sites,i)=>{\r\n                  sites.map((site,ii)=>{\r\n\r\n                  \r\n                  })\r\n              })\r\n          })*/\r\n     //   setDisplayMarkers(StoreMarkers);\r\n        return StoreMarkers;\r\n        }\r\n\r\n\r\n \r\n   \r\n\r\n      useEffect(()=>{ \r\n        if(CreateMarkers(SCAN.SelectedModel.STOREMARKERCENTERPOINTS) != undefined)\r\n          CreateMarkers(SCAN.SelectedModel.STOREMARKERCENTERPOINTS)\r\n      },[SCAN.SelectedModel])\r\n\r\n      useEffect(()=>{ },[UX])\r\n      return(  <>\r\n               \r\n                 <MarkerClusterer options={mcOptions} maxZoom={12} minimumClusterSize={30}>\r\n                    {(clusterer) =>\r\n                       CreateMarkers(SCAN.SelectedModel.STOREMARKERCENTERPOINTS, clusterer)\r\n                    }\r\n                  </MarkerClusterer>\r\n                </>\r\n                )\r\n\r\n}\r\n\r\n\r\nexport default MarkerBasedLocationMarkers;\r\n\r\n//  {DisplayMarkers}\r\n/*\r\nlocations.map((location) => (\r\n                        <Marker key={createKey(location)} position={location} clusterer={clusterer} />\r\n                      ))\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ResidualLocationMarkers.js",["1117","1118","1119","1120","1121","1122","1123","1124","1125"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\n\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkersALL = ()=>{\r\n\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name)=>{console.log(\"Marker Clicked\", name) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n       // console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n\r\n        //console.log(\"markers\", markers)\r\n        \r\n        let StoreMarkers=[]         \r\n                markers.map((site,i)=>{\r\n                    Targeticon = {\r\n                        //path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                        path:\"M-24-48h48v48h-48z\",\r\n                        fillColor: '#3D3D3D',\r\n                        fillOpacity: 1,\r\n                        anchor: new window.google.maps.Point(0,0),\r\n                        strokeWeight: 0,\r\n                        scale: .2,\r\n                        zIndex:10\r\n                    };\r\n                    StoreMarkers.push( \r\n                        \r\n                            <Marker\r\n                                key={i}\r\n                                onLoad={onLoadMarker}\r\n                                title={site.name}\r\n                                //label={site.name}\r\n                                icon={Targeticon}\r\n                                onClick={()=>{OnMarkerClick(site.name)}}\r\n                                position={{\r\n                                        lat: parseFloat(site.lat),\r\n                                        lng: parseFloat(site.long)\r\n                                    }}\r\n                            />\r\n                    )\r\n                })\r\n        setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{  CreateMarkers(SCAN.SelectedModel.STORERESIDUALMARKERS)},[SCAN.SelectedModel])\r\n\r\n      return(  <>{DisplayMarkers}</>) \r\n\r\n}\r\n\r\nexport default MarkerBasedLocationMarkersALL;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Polygons.js",["1126","1127","1128","1129","1130","1131","1132","1133"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {RegionColor} from \"actions/HandleUX\"\r\nimport {Polygon} from '@react-google-maps/api';\r\nimport {findIndex} from 'lodash'; \r\n\r\nconst options = {\r\n    fillColor: \"lightblue\",\r\n    fillOpacity: .1,\r\n    strokeColor: \"red\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n  }\r\n\r\n\r\nconst Polygons = ()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const [DisplayPolygons, setPolygons] = useState([])\r\n\r\n    const CreatePolygons = ()=>{\r\n        let CreatePolyPaths=[]\r\n        SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((centerpoint,i)=>{\r\n\r\n  \r\n            \r\n/* ******************************************************************************** */         \r\n// Map Filters\r\n\r\n        //console.log(centerpoint.scanCategory)\r\n        // Filter Results by Cluster Type    \r\n        if(UX.AreaSelectFilter.ByClusterType !== null)  \r\n            if(centerpoint.scanCategory != UX.AreaSelectFilter.ByClusterType)\r\n                return\r\n\r\n        // Filter Results by Reource Type  \r\n        if(UX.AreaSelectFilter.ByResourceType !== null)  \r\n            if(findIndex(centerpoint.resourceQuota, function(o) { return o.Trade === UX.AreaSelectFilter.ByResourceType}) === -1)\r\n                 return\r\n\r\n// End Map Filters\r\n/* ******************************************************************************** */         \r\n\r\n\r\n                let options = {\r\n                    strokeColor: RegionColor(centerpoint.scanCategory),\r\n                    strokeOpacity: 1,\r\n                    strokeWeight: 1.5,\r\n                    fillColor: RegionColor(centerpoint.scanCategory),\r\n                    fillOpacity: 0.1,\r\n                  \r\n                    zIndex: 1\r\n                  }\r\n\r\n                let PolygonPath=[]\r\n                centerpoint.polygon.map((point,i)=>{\r\n                    //console.log(point)\r\n                    PolygonPath.push({ lat: point[0], lng: point[1]})\r\n                })\r\n                CreatePolyPaths.push(\r\n                    <Polygon paths={PolygonPath} options={options} />\r\n                )\r\n                \r\n        })\r\n\r\n        setPolygons(CreatePolyPaths)\r\n    }\r\n\r\n\r\n\r\n     useEffect(()=>{ CreatePolygons() },[SCAN.SelectedModel])\r\n     useEffect(()=>{},[DisplayPolygons])\r\n     useEffect(()=>{ CreatePolygons() },[UX])\r\n    return(\r\n        <>\r\n            {DisplayPolygons}\r\n        </>\r\n    )\r\n} \r\n\r\nexport default Polygons;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MarkersCenterpoints.js",["1134","1135"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Circle } from '@react-google-maps/api';\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\nimport {RegionColor} from \"actions/HandleUX\"\r\n\r\n\r\n\r\nconst MarkerCenterpoints = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [Centerpoints, setCenterpoints] = useState(null)\r\n     \r\n    const CreateCenterpoints = ()=>{\r\n        let StorePoints=[]       \r\n        SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((center,i)=>{\r\n        \r\n/*\r\n                        {\r\n                            name:site.name,\r\n                            center:{\r\n                                lat: site.lat,\r\n                                lng: site.long\r\n                              },\r\n                            range:Range.range[1]\r\n                        }\r\n            */\r\n           //console.log(center.center, center.range)\r\n           \r\n           \r\n\r\n           let options = {\r\n               strokeColor: RegionColor(center.scanCategory),\r\n               strokeOpacity: 0.9,\r\n               strokeWeight: 1,\r\n               fillColor: RegionColor(center.scanCategory),\r\n               fillOpacity: 0.2,\r\n               radius: ((center.range*1000)),\r\n               zIndex: 1\r\n             }\r\n            let Featheroptions = {\r\n                strokeColor: RegionColor(center.scanCategory),\r\n                strokeOpacity: 0.7,\r\n                strokeWeight: 3,\r\n                fillColor: RegionColor(center.scanCategory),\r\n                fillOpacity: 0.01,\r\n                radius: (( (center.range+((center.feather/100)*center.range)) *1000)),  \r\n                zIndex: 1\r\n              }\r\n           StorePoints.push(\r\n                <span key={i}>\r\n                    <Circle center={center.center} options={options}/>\r\n                    <Circle center={center.center} options={Featheroptions}/>\r\n                </span>\r\n           )\r\n            \r\n        })\r\n        setCenterpoints(StorePoints)\r\n        \r\n    }\r\n    \r\n    \r\n    useEffect(()=>{  CreateCenterpoints() },[SCAN.SelectedModel])\r\n\r\n    useEffect(()=>{},[ Centerpoints])\r\n\r\n    return(\r\n        <>\r\n            {Centerpoints}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerCenterpoints;",["1136","1137"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MarkerBasedResults.js",["1138"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport ClusterResults from \"Pages/Auth/Components/Maps/ClusterMiniMapResults/ClusterResults\";\r\nimport {GroupArrayByOccurances} from \"actions/HandleUX\";\r\nimport {FindTradeTypeAllocation, findClientName} from \"actions/ClusterAnalysis\";\r\n\r\n\r\nconst MarkerBasedResults = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n\r\n    const CLUSTERSTATS = SCAN.SelectedModel.CLUSTERSTATS;\r\n    \r\n    const [Results, setResults] = useState(null)\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n    const [TradeAllocation,setTradeAllocation] = useState([[],[]])\r\n\r\n\r\n    const extractResults=()=>{\r\n        //console.log(SCAN.SelectedModel.STOREMARKERCENTERPOINTS);\r\n\r\n        let ResultArr=[];\r\n        let CategoryInt=[]\r\n            SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((result,i)=>{\r\n                ResultArr.push( <li key={i}> <ClusterResults  result={result} i={i}/></li>)\r\n                CategoryInt.push(result.scanCategory)\r\n                return true\r\n            })\r\n            setResults(ResultArr);\r\n            setCategoryOccurance(GroupArrayByOccurances(CategoryInt))\r\n    }\r\n\r\n    const gl=(data)=>{\r\n        return data.length\r\n    }\r\n\r\n    useEffect(()=>{ \r\n     \r\n        if(SCAN.SelectedModel.STOREMARKERCENTERPOINTS !==null){\r\n            extractResults()\r\n            setTradeAllocation(FindTradeTypeAllocation(SCAN.SelectedModel.STOREMARKERCENTERPOINTS));\r\n        \r\n        }\r\n            \r\n     \r\n    },[SCAN]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"ResultsHeader\">\r\n            \r\n            <h2>Model Stats</h2>\r\n\r\n            <h3>Clusters : {CLUSTERSTATS.clusters}</h3>\r\n            <h3>Total Locations {gl(SCAN.SelectedModel.USERSELECTEDLIST)} </h3>\r\n            <h3>Unaccommodated Locations : {CLUSTERSTATS.UnaccommodatedLocations}</h3>\r\n            <h3>Locations Inscope {CLUSTERSTATS.Inscope} ({ ((CLUSTERSTATS.Inscope/gl(SCAN.SelectedModel.USERSELECTEDLIST)*100)).toFixed(2)}%)</h3>\r\n            \r\n            <hr />\r\n\r\n                <h3>Clients Total Work Orders {CLUSTERSTATS.TotalWorkOrders}</h3>\r\n                <h3>Work Orders Covered in model {CLUSTERSTATS.WorkOrdersCoveredInModel} ({((CLUSTERSTATS.WorkOrdersCoveredInModel/CLUSTERSTATS.TotalWorkOrders)*100).toFixed(2)}%)</h3>\r\n            \r\n            <hr />\r\n\r\n\r\n            <h4>Model Work Orders by Client</h4>\r\n            \r\n            <ul className=\"\">\r\n                {\r\n                    Object.keys(CLUSTERSTATS.ByClient).map(function(key, i) {\r\n                        return(\r\n                            <li key={i}>\r\n                                {findClientName(key)} : {CLUSTERSTATS.ByClient[key]} \r\n                            </li>\r\n                            )\r\n                      })        \r\n                }\r\n            </ul>\r\n            <hr />\r\n            <h3>Resource Allocation : {CLUSTERSTATS.ResourceAllocation}</h3>\r\n            <h3>Avg WO Completed per resource: {(CLUSTERSTATS.WorkOrdersCoveredInModel/CLUSTERSTATS.ResourceAllocation).toFixed(2)} ({((CLUSTERSTATS.WorkOrdersCoveredInModel/CLUSTERSTATS.ResourceAllocation)/250).toFixed(2)}) </h3>\r\n         \r\n            <hr />\r\n\r\n            <h4>Trade Overview:</h4>\r\n            <p>These numbers are just instances, not real numbers</p>\r\n            <ul className=\"ClustersbyCategory\">\r\n                {\r\n                    TradeAllocation[0].map((trade,i)=>{\r\n                        return(\r\n                            <li key={i}>\r\n                                {trade} {TradeAllocation[1][i]}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n\r\n            <h4>Cluster by Tiers</h4>\r\n                <ul className=\"ClustersbyCategory\">\r\n                    {\r\n                        CategoryOccurance[0].map((cat,i)=>{\r\n                            return(\r\n                                <li key={i}>\r\n                                        {cat} : {CategoryOccurance[1][i]}\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n           \r\n            </div>\r\n\r\n            <ul className=\"ListResults\">\r\n                    {Results}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerBasedResults;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapColorKey.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\OLD_ResultMap.js",["1139","1140"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clusters_ResultsList.js",["1141","1142"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport ClusterResults from \"Pages/Auth/Components/Maps/ClusterMiniMapResults/ClusterResults\";\r\n\r\n\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H2} from \"Pages/Auth/Components/Type\";\r\nconst CulsterResults = ()=>{\r\n   \r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [Results, setResults] = useState(null)\r\n\r\n    const extractResults=()=>{\r\n        let ResultArr=[];\r\n            SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((result,i)=>{\r\n                ResultArr.push( <li key={i}> <ClusterResults  result={result} i={i}/></li>)\r\n                return true\r\n            })\r\n            setResults(ResultArr);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        //console.log(SCAN.SelectedModel.STOREMARKERCENTERPOINTS)\r\n        if(SCAN.SelectedModel.STOREMARKERCENTERPOINTS !==null)\r\n            extractResults()\r\n        \r\n    },[SCAN]);\r\n\r\n    return(\r\n        <Section>\r\n            <H2 Copy={`Cluster Breakdown`}/> \r\n            \r\n            \r\n        </Section>\r\n    )\r\n}\r\n\r\nexport default CulsterResults; \r\n\r\n// <ul className=\"ListResults\">{Results}</ul>","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterResults.js",["1143","1144","1145","1146","1147"],"import React, { useEffect, useState } from 'react'\r\nimport{NumberReducer, RegionColor, GroupArrayByOccurances} from \"actions/HandleUX\";\r\nimport {findClientName, FindTradeTypeAllocation} from \"actions/ClusterAnalysis\";\r\nimport ClusterMiniMap from \"Pages/Auth/Components/Maps/ClusterMiniMapResults/ClusterMiniMap\"\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\n\r\nconst ClusterResult = (props)=>{\r\n\r\n    const {result, i} = props;\r\n    const [WorkOrderTotal, setWorkOrderTotal] = useState(0)\r\n   \r\n    const SumWorkorders = (data)=>{\r\n        let total = []\r\n        data.map((site)=>{\r\n            if(!isNaN(site.SumWorkOrder))\r\n                total.push(site.SumWorkOrder)\r\n        })\r\n        setWorkOrderTotal(total.reduce((a, b) => a + b, 0))\r\n    }\r\n\r\n    const SumTradeType = ()=>{\r\n\r\n    }\r\n \r\n    useEffect(()=>{ \r\n        console.log(result)\r\n        //FindClusterTotal(result)\r\n        SumWorkorders(result.sites) \r\n        SumTradeType(result.sites)\r\n        \r\n    },[result])\r\n \r\n    return(\r\n        <>\r\n            \r\n            <div className=\"colorkey\" style={{backgroundColor:RegionColor(result.scanCategory)}}>\r\n             <strong>{result.scanCategory}</strong>\r\n            </div>\r\n          \r\n            <h3><LocationCityIcon /> Cluster { (i+1) }</h3>            \r\n            <ul className=\"ListStats\">\r\n                <li>Sites: <strong>{result.sites.length}</strong></li>\r\n                <li>Total Work Orders: <strong>{WorkOrderTotal}</strong></li>\r\n                <li>Resource Quota : <strong>{result.resourceQuota.toFixed(2)}</strong></li> \r\n               \r\n               <li>\r\n                   Clients\r\n                   <GetClientName clients = {GroupArrayByOccurances(JSON.parse(result.sites[0].count[0].Customers))}/></li>\r\n                <li>\r\n                    Trade Types %\r\n                   <GetTradeName Trades = {FindTradeTypeAllocation([{sites:result.sites}])}/></li>\r\n               \r\n             \r\n            </ul>\r\n            <h4></h4> \r\n           \r\n            \r\n            \r\n            <div className=\"ListResultContainer\">\r\n               <ClusterMiniMap result={result}/>\r\n            </div>\r\n                \r\n               \r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\n   <li>est Cost : <strong>$?</strong></li>\r\n  <CenterPoints />\r\n                        <Markers />\r\n                        <ResidualMarkers />\r\n*/\r\nexport default ClusterResult;\r\n\r\n//<h3> {result.name}</h3>\r\n\r\nconst GetTradeName = (props)=>{\r\n    const {Trades} = props\r\n    const [TradeAllocationTotal, setTradeAllocationTotal] = useState(0)\r\n    const TradeWoRatioForDemo=(num)=>{\r\n        return ((num/TradeAllocationTotal)*100).toFixed(2)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let TWV=0\r\n        Trades[1].map((value,i)=>{TWV= TWV+value})\r\n        setTradeAllocationTotal(TWV)\r\n    },[])\r\n\r\n    return(\r\n        <ul>\r\n            {\r\n                Trades[0].map((trade,i)=>{\r\n                    return(\r\n                        <li key={i}>\r\n                            {trade} <strong>{ TradeWoRatioForDemo(Trades[1][i]) }%</strong>\r\n                        </li>\r\n                    )\r\n                })\r\n\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n \r\n\r\nconst GetClientName = (props)=>{\r\n    const {clients} = props\r\n    return(\r\n        <ul>\r\n            {\r\n                clients[0].map((client, i )=>{\r\n                    return(\r\n                        <li key={i}><strong>{findClientName(client)}</strong></li>\r\n                    )\r\n                })\r\n\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterMiniMap.js",["1148","1149","1150","1151","1152"],"import React, { useEffect, useState } from 'react'\r\nimport { GoogleMap, Circle,Marker,Polygon } from '@react-google-maps/api';\r\n\r\nimport {RegionColor} from \"actions/HandleUX\";\r\n\r\nconst containerStyle = { height: \"300px\", width: \"auto\" };\r\nlet Targeticon = { };\r\nconst ClusterMap = (props)=>{\r\n    const {result} = props;\r\n\r\n    const [markers, setMarkers] = useState([])\r\n    const [PolyPath, setPolyPath] = useState([])\r\n\r\n    let options = {\r\n        strokeColor: RegionColor(result.scanCategory),\r\n        strokeOpacity: 0.9,\r\n        strokeWeight: 1,\r\n        fillColor: RegionColor(result.scanCategory),\r\n        fillOpacity: 0.2,\r\n        radius: ((result.range*1000)),\r\n        zIndex: 1\r\n      }\r\n\r\n      const CreateMarkers = ()=>{\r\n\r\n        //console.log(\"markers\", markers)\r\n        let StoreMarkers=[];\r\n\r\n    \r\n          //console.log(centerPoint.sites)\r\n          result.sites.map((site,ii)=>{\r\n\r\n              Targeticon = {\r\n                //path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                path:\"M-24-48h48v48h-48z\",\r\n                fillColor: RegionColor(result.scanCategory),\r\n                fillOpacity: .9,\r\n                anchor: new window.google.maps.Point(0,0), \r\n                strokeWeight: 0,\r\n                scale: .5\r\n            }; \r\n          \r\n            \r\n            StoreMarkers.push( \r\n                \r\n                    <Marker\r\n                       \r\n                        key={site.name}\r\n                     \r\n                        title={site.name}\r\n                        label={site.name}\r\n                        icon={Targeticon}\r\n                        \r\n                        position={{\r\n                                lat: parseFloat(site.lat),\r\n                                lng: parseFloat(site.long)\r\n                            }}\r\n                    />\r\n                \r\n            )\r\n            })\r\n            setMarkers(StoreMarkers);\r\n        }\r\n\r\n\r\n\r\n        const CreatePolygon = ()=>{\r\n          let Polyoptions = {\r\n            strokeColor: RegionColor(result.scanCategory),\r\n            strokeOpacity: 1,\r\n            strokeWeight: 1.5,\r\n            fillColor: RegionColor(result.scanCategory),\r\n            fillOpacity: 0.1,\r\n          \r\n            zIndex: 1\r\n          }\r\n\r\n              let PolygonPath=[]\r\n              result.polygon.map((point,i)=>{\r\n                  //console.log(point)\r\n                  PolygonPath.push({ lat: point[0], lng: point[1]})\r\n              })\r\n              \r\n              setPolyPath(<Polygon paths={PolygonPath} options={Polyoptions} />)\r\n              \r\n            }\r\n\r\n\r\n      useEffect(()=>{  \r\n        CreateMarkers() \r\n        CreatePolygon()\r\n      },[])\r\n\r\n    return(\r\n        <GoogleMap \r\n                mapContainerStyle={containerStyle}\r\n                center={result.center}\r\n                zoom={15}\r\n            >\r\n                { /* Child components, such as markers, info windows, etc. */ }\r\n               \r\n                {markers}\r\n                {PolyPath}\r\n        </GoogleMap>\r\n\r\n    )\r\n}\r\n// <Circle center={result.center} options={options}/>\r\nexport default ClusterMap;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\SelectandReview.js",["1153","1154","1155","1156","1157"],"import React, { useEffect, useState } from 'react'\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { orderBy,  remove} from 'lodash'; \r\nimport ReviewSelectionBtn from \"../Components/buttons/SetSelectedBtn\";\r\n\r\nimport SelectScanItems from \"./ScanSelectItems\";\r\nimport ReviewSelection from \"./ScanReviewSelectedItems\";\r\n\r\n\r\nconst SelectandReview = ()=>{\r\n\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n    useEffect(()=>{},[SCAN])\r\n \r\n        return(\r\n            <>\r\n                {\r\n                USERSCAN.SetSelectedDatabase ? <ReviewSelection />:<SelectScanItems />\r\n            } \r\n            </>\r\n        )\r\n}\r\nexport default SelectandReview;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanSelectItems.js",["1158","1159","1160"],"import React, { useEffect, useState } from 'react'\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { orderBy,findIndex,  remove} from 'lodash'; \r\nimport ReviewSelectionBtn from \"../Components/buttons/SetSelectedBtn\";\r\nimport {StoreSelected_Single} from \"actions/HandleScanProcess\";\r\nimport BtnBacktoScanOptions from \"../Components/buttons/BacktoScanType\";\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nconst ScanSelectItems=()=>{\r\n   \r\n   \r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const USERSCAN = SCAN.UserScanState;\r\n    const [nonSelected, setNonselected] = useState([])\r\n    const [Selected, setSelected] = useState([])\r\n\r\n\r\n    const handleAdd=(customer)=>{\r\n    \r\n        let Index= findIndex(Selected, function(o) { return o.id === customer.id; });\r\n        if(Index === -1){\r\n            let NewSelected = [...Selected, customer]; \r\n            setSelected(NewSelected)\r\n        }\r\n       \r\n        let RemoveSelected = remove(nonSelected, function(o) {return o.id != customer.id;});\r\n        setNonselected(RemoveSelected)\r\n        \r\n            \r\n    }\r\n\r\n    const handleRemove=(customer)=>{\r\n\r\n        let Index= findIndex(nonSelected, function(o) { return o.id === customer.id; });\r\n        if(Index === -1){\r\n            let NewSelected = [...nonSelected, customer];\r\n            setNonselected(NewSelected)\r\n        }\r\n        let RemoveSelected = remove( Selected, function(o) {return o.id != customer.id;});\r\n        setSelected(RemoveSelected);\r\n      \r\n    }\r\n\r\n    useEffect(()=>{\r\n        setNonselected(JSON.parse(JSON.stringify(STRAPI.UserData.Customers)));\r\n     \r\n        setSelected(USERSCAN.UserScanSingleDataSets)\r\n      \r\n    },[USERSCAN.ScanOptionSelected])\r\n\r\n    useEffect(()=>{\r\n        StoreSelected_Single(Selected)\r\n    },[Selected,nonSelected])\r\n\r\n    return(\r\n        <div>\r\n            <h2>Select Clients for Model</h2>\r\n            \r\n            <div className=\"ControlBar\">\r\n                <ReviewSelectionBtn />\r\n                <BtnBacktoScanOptions />\r\n            </div>\r\n            \r\n            <div className=\"Dataset_Selection\">\r\n                <div>\r\n                    <ul>\r\n                            {\r\n                                \r\n                                orderBy(nonSelected, ['name'], ['asc']).map((customer,i)=>{\r\n                                    return(\r\n                                        <li key={i} >\r\n                                            {customer.name}\r\n                                            <IconButton aria-label=\"add\" onClick={()=>{handleAdd(customer)}}>\r\n                                            <AddCircleIcon />\r\n                                                \r\n                                            </IconButton>\r\n                                            \r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                      </ul>\r\n                </div>\r\n                <div>\r\n                    <ul>\r\n                        {\r\n                            orderBy(Selected, ['name'], ['asc']).map((customer,i)=>{\r\n                                return(\r\n                                    <li key={i} >\r\n                                        {customer.name}\r\n                                        <IconButton aria-label=\"delete\"onClick={()=>{handleRemove(customer)}}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                  </ul>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScanSelectItems;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanReviewSelectedItems.js",["1161","1162","1163","1164","1165","1166"],"import React, { useEffect, useState } from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { orderBy,  remove} from 'lodash'; \r\n//import {FetchSelectedItems} from \"actions/HandleScanProcess\";\r\nimport BacktoSelectItems from \"../Components/buttons/BacktoAddItemsSingleScan\"\r\nimport ScanForm from \"../../../venders/MaterialUI/Forms/CreateScanoptions\";\r\nimport CreateNewModelBtn from \"../Components/buttons/CreateNewModel\";\r\n\r\nconst ReviewSelected = ()=>{\r\n\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    \r\n    const [Fetching, setFetching] = useState('Review items')\r\n\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n    useEffect(()=>{\r\n    \r\n        if(USERSCAN.UserWorkingDataSet_Single.length === 0){\r\n          //  FetchSelectedItems(USERSCAN.UserScanSingleDataSets)\r\n        }\r\n        \r\n        console.log(USERSCAN.processing)\r\n        \r\n    },[USERSCAN])\r\n    \r\n    return(\r\n        <>\r\n            {\r\n                USERSCAN.processing ? <ReviewSent />:<ReviewScanContnt />\r\n            }\r\n               \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ReviewSelected; \r\n\r\n\r\nconst ReviewScanContnt = ()=>{\r\n    \r\n    const SCAN = useContext_SCAN_FULL();\r\n    \r\n    const [Fetching, setFetching] = useState('Model Name and Description')\r\n\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n    useEffect(()=>{\r\n    \r\n        if(USERSCAN.UserWorkingDataSet_Single.length === 0){\r\n          //  FetchSelectedItems(USERSCAN.UserScanSingleDataSets)\r\n        }\r\n        \r\n        console.log(USERSCAN.processing)\r\n        \r\n    },[USERSCAN])\r\n    return(\r\n        <div>\r\n                <h2>Name and Save Model</h2>\r\n                \r\n                <div className=\"ControlBar\">\r\n                    <BacktoSelectItems />\r\n                </div>\r\n            \r\n\r\n                <div className=\"ModelReview\">\r\n                    <div>\r\n                        <h2>Model Name and Description</h2>\r\n                        <p>Add a clear and consis name and description for this model. This will be used later when comparing and anylisis models against each other.</p>\r\n                        <ScanForm  DataSet={USERSCAN.UserScanSingleDataSets} />\r\n                    </div>\r\n                    <div>\r\n                        <ul> \r\n                            {\r\n                                USERSCAN.UserScanSingleDataSets.map((item,i)=>{\r\n                                    return(\r\n                                        <li key={i}>\r\n                                            {item.name}\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n\r\n\r\n                   \r\n                </div>\r\n               \r\n\r\n               \r\n        </div>\r\n    )\r\n}\r\n\r\nconst ReviewSent=()=>{\r\n    return(\r\n        <>\r\n            <h2>Building new Model</h2>\r\n            <p>We are currently building the new model as requested.</p>\r\n            <p>You can check the progess of the model under the \"Resource Models\" page</p>\r\n            <p>Once the model status has changed to 'complete' your results will be viewable</p>\r\n            <CreateNewModelBtn />\r\n        </>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\RadialSIngleChart.js",[],["1167","1168"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_CLusterSpreadbyCLient.js",["1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {GroupArrayByOccurances} from \"actions/HandleUX\";\r\nimport {findClientName} from \"actions/ClusterAnalysis\";\r\n// Chart\r\nimport PieChart from \"venders/apexCharts/SimplePie\";\r\nimport RadialMultiChart from \"venders/apexCharts/RadialMultiChart\";\r\n\r\n\r\nimport {H3, P} from \"Pages/Auth/Components/Type\";\r\n\r\nimport {find, findIndex} from 'lodash'; \r\n\r\nconst HeaderLocations=()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const MODEL = SCAN.SelectedModel\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n\r\n    const gl=(data)=>{\r\n        return data.length\r\n    }\r\n\r\n    const extractResults=()=>{\r\n        let CategoryInt=[]\r\n           \r\n        SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((result,i)=>{\r\n                CategoryInt.push(result.scanCategory)\r\n                return true\r\n            })\r\n/* data = [\r\n  {\r\n    subject: 'Math', A: 120, B: 110, fullMark: 150,\r\n  },\r\n  {\r\n    subject: 'Chinese', A: 98, B: 130, fullMark: 150,\r\n  },\r\n  {\r\n    subject: 'English', A: 86, B: 130, fullMark: 150,\r\n  },\r\n  {\r\n    subject: 'Geography', A: 99, B: 100, fullMark: 150,\r\n  },\r\n  {\r\n    subject: 'Physics', A: 85, B: 90, fullMark: 150,\r\n  },\r\n  {\r\n    subject: 'History', A: 65, B: 85, fullMark: 150,\r\n  },\r\n];\r\n*/\r\n        let Data=[] \r\n        let ClientSpread=[]\r\n            console.log(GroupArrayByOccurances(CategoryInt));\r\n            let RegionArray=GroupArrayByOccurances(CategoryInt);\r\n           \r\n           \r\n            RegionArray[0].map((cat,i)=>{\r\n              \r\n                Data.push({ name: cat, value: RegionArray[1][i] })\r\n                let ClientPush=[]\r\n\r\n\r\n                SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((CP,i)=>{\r\n                        if(CP.scanCategory === cat)\r\n                        {\r\n                            \r\n                            // Check to see if Name exists\r\n                            let TierID = findIndex(ClientSpread, function(o) { return o.name === cat; })\r\n                            if(TierID === -1){ ClientSpread.push({name:cat}); }\r\n                            TierID = findIndex(ClientSpread, function(o) { return o.name === cat; })\r\n                        \r\n\r\n                            \r\n                           // console.log(ClientSpread[TierID], TierID, ClientSpread)\r\n                            CP.sites.map((client,i)=>{\r\n                                client.customers.map((name,i)=>{\r\n                                    if(ClientSpread[TierID][findClientName(name)] === undefined){\r\n                                        ClientSpread[TierID][findClientName(name)] = 1\r\n                                    }else{\r\n                                        ClientSpread[TierID][findClientName(name)] = ClientSpread[TierID][findClientName(name)]+1\r\n                                    }\r\n                                    //console.log()\r\n                                    //console.log(findClientName(name))\r\n                                })\r\n                            })\r\n                        }\r\n                       \r\n                })\r\n            });\r\n\r\n            console.log(ClientSpread)\r\n\r\n        setCategoryOccurance(ClientSpread)\r\n    }\r\n\r\n    const inScope=()=>{\r\n        return gl(MODEL.USERSELECTEDLIST)-gl(MODEL.STORERESIDUALMARKERS)\r\n    }\r\n\r\n    useEffect(()=>{ console.log(MODEL)  },[]) \r\n    useEffect(()=>{extractResults()},[SCAN])\r\n\r\n    return(\r\n        <> \r\n            <H3 Copy={`Cluster Spread by Client`} />\r\n            <div className=\"resultCharts\">\r\n                <div>\r\n                    <RadialMultiChart Data={CategoryOccurance} term={`Clusters`}/>\r\n                </div>\r\n               \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n//<PieChart Data={CategoryOccurance}/>\r\nexport default HeaderLocations;",["1180","1181"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\RadialMultiChart.js",["1182"],"import React from 'react';\r\nimport {\r\n  Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis,ResponsiveContainer,Legend, Tooltip\r\n} from 'recharts';\r\n\r\n\r\n\r\nconst SimpleRadial = (props)=>{\r\n    const {Data, term} = props\r\n    return(\r\n        <ResponsiveContainer width='100%' height={300}>\r\n        <RadarChart  outerRadius={100}  data={Data}>\r\n            <PolarGrid />\r\n            <PolarAngleAxis dataKey=\"name\" />\r\n            <PolarRadiusAxis />\r\n            \r\n            {\r\n                Data.map((tier,i)=>{\r\n                    console.log(tier )\r\n                    return(\r\n                        <Radar key={`cell-${i}`} name={tier.name} dataKey={tier} stroke=\"#030303\" fill=\"#030303\" fillOpacity={0.6} />\r\n                    )\r\n                })\r\n            }\r\n            \r\n            <Tooltip />\r\n            <Legend />\r\n        </RadarChart>\r\n      </ResponsiveContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default SimpleRadial;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapMainFilter.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_ResourceSpread.js",["1183"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\StackedBarChart.js",["1184"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByResourceType.js",["1185","1186"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { setMainMapLocation, SetMapClusterType,SetMapResourceType } from \"actions/HandleUX\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  /* ************************************************** */\r\nconst ByResourceType = ()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL()\r\n    const UX = useContext_UX_FULL()\r\n    const ResourceType=[\"HandyMan\",\"Electrician\",\"Plumber\",\"Specialized\"]\r\n    const [type,setType] = useState(UX.AreaSelectFilter.ByResourceType)\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleChange = (event) => { \r\n        //console.log(event.target.value.Center)\r\n        \r\n        setType(event.target.value)\r\n        SetMapResourceType(event.target.value)\r\n        //StoreCompareItem(event.target.value, pos)\r\n    };\r\n\r\n\r\n    useEffect(()=>{ console.log(SCAN) },[SCAN])\r\n    useEffect(()=>{ setType(UX.AreaSelectFilter.ByResourceType)},[UX])\r\n\r\n    return(\r\n        <FormControl variant=\"outlined\" className={`${classes.formControl} Map_Filters`}>\r\n        <InputLabel id=\"ByTier\">Resource Type</InputLabel>\r\n             <Select\r\n                labelId=\"ByTier\"\r\n                id=\"ByTier-outlined\"\r\n                value={type}\r\n                onChange={handleChange}\r\n                label=\"Select Resource Type\"\r\n                >\r\n                <MenuItem value={null}> <em>All</em> </MenuItem>\r\n\r\n                {\r\n                    ResourceType.map((Resource,i)=>{\r\n                        return(\r\n                            <MenuItem key={Resource}  value={Resource}>{Resource}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ByResourceType;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByClusterType.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByCapitalCities.js",["1187","1188"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport { setMainMapLocation } from \"actions/HandleUX\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nconst ByCapitalCities = ()=>{\r\n    const UX = useContext_UX_FULL()\r\n    const CapitalCities=[\r\n        {\r\n            Name:'Sydney',\r\n            Zoom:10,\r\n            Center: { lat:   -33.868820, lng: 151.209290}\r\n        },\r\n        {\r\n            Name:'Melbourne',\r\n            Zoom:8,\r\n            Center: { lat:   -37.813629, lng: 144.963058}\r\n        },\r\n        {\r\n            Name:'Brisbane',\r\n            Zoom:10,\r\n            Center: { lat:-27.4678, lng:153.0281}\r\n        },\r\n        {\r\n            Name:'Perth',\r\n            Zoom:10,\r\n            Center: { lat:-31.9522, lng:115.8589}\r\n        },\r\n        {\r\n            Name:'Adelaide',\r\n            Zoom:10,\r\n            Center: { lat:-34.9289, lng:138.6011}\r\n        },\r\n        {\r\n            Name:'Canberra',\r\n            Zoom:13,\r\n            Center: { lat:-35.2931, lng:149.1269}\r\n        },\r\n        {\r\n            Name:'Gold Coast',\r\n            Zoom:10,\r\n            Center: { lat:-28.0167, lng:153.4000}\r\n        },\r\n        {\r\n            Name:'Newcastle',\r\n            Zoom:10,\r\n            Center: { lat:-32.9167, lng:151.7500}\r\n        },\r\n        {\r\n            Name:'Hobart',\r\n            Zoom:10,\r\n            Center: { lat:-42.8806, lng:147.3250}\r\n        }\r\n]\r\n\r\n    const classes = useStyles();\r\n    const [city, setCity] = React.useState(UX.MapParameters.Location);\r\n\r\n    const handleChange = (event, key, payload) => { \r\n        console.log(CapitalCities[event.target.value])\r\n        \r\n        setMainMapLocation(CapitalCities[event.target.value]); \r\n        setCity(CapitalCities[event.target.value].Name)\r\n    \r\n    };\r\n\r\n    return(\r\n       <FormControl variant=\"outlined\" className={`${classes.formControl} Map_Filters`}>\r\n        <InputLabel id=\"MajorCities\">Major Cities</InputLabel>\r\n             <Select\r\n                labelId=\"MajorCities\"\r\n                id=\"MajorCities-outlined\"\r\n                value={city}\r\n                onChange={handleChange}\r\n                label=\"Select Major City\"\r\n                >\r\n          <MenuItem value=\"\"> <em>Select</em> </MenuItem>\r\n\r\n          {\r\n              CapitalCities.map((city,i)=>{\r\n                  return(\r\n                    <MenuItem key={i} value={i}>{city.Name}</MenuItem>\r\n                  )\r\n              })\r\n          }\r\n\r\n        </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ByCapitalCities;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectResourceType.js",["1189"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {SetMapResourceType } from \"actions/HandleUX\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  /* ************************************************** */\r\nconst ByResourceType = ()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL()\r\n    const UX = useContext_UX_FULL()\r\n    const ResourceType=[\"HandyMan\",\"Electrician\",\"Plumber\",\"Specialized\"]\r\n    const [type,setType] = useState(UX.AreaSelectFilter.ByResourceType)\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleChange = (event) => { \r\n        //console.log(event.target.value.Center)\r\n        \r\n        setType(event.target.value)\r\n        SetMapResourceType(event.target.value)\r\n        //StoreCompareItem(event.target.value, pos)\r\n    };\r\n\r\n  \r\n   \r\n\r\n    useEffect(()=>{ setType(UX.AreaSelectFilter.ByResourceType)},[UX])\r\n\r\n\r\n    return(\r\n        <FormControl variant=\"outlined\" className={`${classes.formControl} Map_Filters`}>\r\n        <InputLabel id=\"ByTier\">Resource Type</InputLabel>\r\n             <Select\r\n                labelId=\"ByTier\"\r\n                id=\"ByTier-outlined\"\r\n                value={type}\r\n                onChange={handleChange}\r\n                label=\"Select Resource Type\"\r\n                >\r\n                <MenuItem value={null}> <em>All</em> </MenuItem>\r\n\r\n                {\r\n                    ResourceType.map((Resource,i)=>{\r\n                        return(\r\n                            <MenuItem key={Resource}  value={Resource}>{Resource}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ByResourceType;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_WorkOrderSpread.js",["1190"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\ChartHeader.js",["1191","1192","1193","1194","1195"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\ReviewGlobalFilter.js",["1196","1197"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\FilterChips.js",["1198"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectClusterType.js",["1199"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { SetMapClusterType } from \"actions/HandleUX\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  /* ************************************************** */\r\nconst ByClusterType = ()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL()\r\n    const UX = useContext_UX_FULL()\r\n    const ClusterType=['SameBuilding','CBD','InnerCity','Metro','OuterMetro','Regional','Remote','ExtremeRemote' ]\r\n    const [type,setType] = useState(UX.AreaSelectFilter.ByClusterType)\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleChange = (event) => { \r\n        //console.log(event.target.value.Center)\r\n        \r\n        setType(event.target.value)\r\n        SetMapClusterType(event.target.value)\r\n        //StoreCompareItem(event.target.value, pos)\r\n    };\r\n\r\n\r\n    \r\n    useEffect(()=>{\r\n      \r\n        setType(UX.AreaSelectFilter.ByClusterType)},[UX])\r\n\r\n \r\n    return(\r\n        <FormControl variant=\"outlined\" className={`${classes.formControl} Map_Filters`}>\r\n        <InputLabel id=\"ByTier\">Cluster Type</InputLabel>\r\n             <Select\r\n                labelId=\"ByTier\"\r\n                id=\"ByTier-outlined\"\r\n                value={type}\r\n                onChange={handleChange}\r\n                label=\"Select Cluster Type\"\r\n                >\r\n                <MenuItem value={null}> <em>All</em> </MenuItem>\r\n\r\n                {\r\n                    ClusterType.map((city,i)=>{\r\n                        return(\r\n                            <MenuItem key={city}  value={city}>{city}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ByClusterType;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Radial_Charts.js",["1200","1201","1202"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\ModelSingleReview.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SINGLE.js",["1203"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_SINGLE_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_SINGLE_FULL = ()=>{\r\n    return useContext(Context_SINGLE_FULL)\r\n}\r\n\r\n\r\n \r\nexport const SINGLEContextProvider = ({children})=>{\r\n    const SINGLE = useSelector(state => state.SINGLE );\r\n\r\n    useMemo(()=>{  },[SINGLE]) \r\n\r\n    return(\r\n            <Context_SINGLE_FULL.Provider value={SINGLE}>\r\n                {children}            \r\n            </Context_SINGLE_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CreateSingleViewModel.js",["1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrder_Radial_Charts.js",["1250","1251","1252"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Radial_Clients.js",["1253","1254"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {OBJ_CLIENT_RESOURCES, fixNumber} from \"actions/CreateSingleViewModel\"\r\nimport {colorArray} from \"actions/HandleUX\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\n\r\nimport {partial,sumBy} from 'lodash';\r\nimport { Radar, RadarChart, PolarGrid,PieChart,Pie,Cell, PolarAngleAxis, PolarRadiusAxis,ResponsiveContainer,Legend, Tooltip} from 'recharts';\r\nimport NivoWaffle from \"venders/Nivo/NivoWaffle\"\r\nimport { H2 } from 'Pages/Auth/Components/Type';\r\n\r\nconst Chart1={\r\n    Icon:'radial',\r\n    Header:\"Resources Allocation to Clients\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:`The Graph shows the number of Resource Allocations by Cluster Type in a given model. \r\n            Use the 'Cluster Type' and 'Resource type' filters to find Resource Allocation numbers for specific Clients.`\r\n}\r\n\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n\r\n\r\n    const SingleValues = (category)=>{\r\n         let Total = sumBy([category], partial(sumBy, CategoryOccurance));\r\n         if(Total !== undefined)\r\n             return Total.toFixed(2)\r\n                return 0\r\n       }\r\n\r\n    useEffect(()=>{ \r\n        console.log()\r\n        setCategoryOccurance(OBJ_CLIENT_RESOURCES())  \r\n        \r\n    },[UX]) \r\n     \r\n\r\n    useEffect(()=>{\r\n        //console.log(CategoryOccurance)\r\n    },[CategoryOccurance])\r\n    return(\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <div>\r\n                    \r\n\r\n                <ChartHeader Icon={Chart1.Icon} Header={Chart1.Header} Tip={Chart1.Tip} Copy={Chart1.Copy} />\r\n                \r\n                    <div style={{height: 300}}>\r\n                        {\r\n                            UX.AreaSelectFilter.ByResourceType === null ? <SelectResource /> :<NivoWaffle data={CategoryOccurance} id={`name`} value={UX.AreaSelectFilter.ByResourceType} />\r\n                        }\r\n                        \r\n                    </div>\r\n                   \r\n                </div> \r\n            </div> \r\n\r\n\r\n            <ul className=\"Stat_Bar Column grouped\">\r\n                {\r\n                    CategoryOccurance.map((trade,i)=>{\r\n                        const {name, HandyMan, Electrician, Plumber, Specialized} = trade\r\n                        return(\r\n                            <li key={i}>\r\n                               \r\n                                <span> {name}</span>\r\n                                <span>{`HandyMan`} : {fixNumber(HandyMan)}</span>\r\n                                <span> {`Electrician`} : {fixNumber(Electrician)}</span>\r\n                                <span>{`Plumber`} : {fixNumber(Plumber)}</span>\r\n                                <span>{`Specialized`} : {fixNumber(Specialized)}</span>\r\n                                \r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                            <li>\r\n                                <span>Totals</span>\r\n                                <span>{SingleValues('HandyMan')}</span>\r\n                                <span>{SingleValues('Electrician')}</span>\r\n                                <span>{SingleValues('Plumber')}</span>\r\n                                <span>{SingleValues('Specialized')}</span>\r\n                            </li> \r\n                   \r\n            </ul>\r\n        </DiagramContainer>  \r\n    )\r\n}\r\nexport default Trade_Radial_Charts;\r\n\r\n\r\n\r\n\r\nconst SelectResource = ()=>{\r\n    return(\r\n        <div>\r\n            <H2 Copy={`Select a Resource Type to use this Graph`} />\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * \r\n *  {\r\n                       OBJ_CLIENT_RESOURCES().length>2 ? <Gtr2Radial CategoryOccurance={CategoryOccurance}/> : <Min2Pie  CategoryOccurance={CategoryOccurance}/>\r\n                    }\r\n */\r\n\r\nconst Min2Pie=(props)=>{\r\n    const {CategoryOccurance} = props\r\n\r\n    return(\r\n        <ResponsiveContainer width='100%' height={300}>\r\n        <PieChart >\r\n            <Pie dataKey=\"Sum\" isAnimationActive={false} data={CategoryOccurance}  outerRadius={80} fill=\"#ffbf00\" label >\r\n            {\r\n                CategoryOccurance.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={colorArray[index]}/>\r\n                ))\r\n            }   \r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend /> \r\n        </PieChart>\r\n        \r\n    </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nconst Gtr2Radial = (props)=>{\r\n    const {CategoryOccurance} = props\r\n    return(\r\n        <ResponsiveContainer width='100%' height={300}>\r\n        <RadarChart  outerRadius={100}  data={CategoryOccurance}>\r\n            <PolarGrid />\r\n            <PolarAngleAxis dataKey=\"name\" />\r\n            <PolarRadiusAxis />\r\n                <Radar name={`HandyMan`} dataKey=\"HandyMan\" stroke={colorArray[0]} fill={colorArray[0]} fillOpacity={0.6} />\r\n                <Radar name={`Electrician`} dataKey=\"Electrician\" stroke={colorArray[1]} fill={colorArray[1]} fillOpacity={0.6} />\r\n                <Radar name={`Plumber`} dataKey=\"Plumber\" stroke={colorArray[2]} fill={colorArray[2]} fillOpacity={0.6} />\r\n                <Radar name={`Specialized`} dataKey=\"Specialized\" stroke={colorArray[3]} fill={colorArray[3]} fillOpacity={0.6} /> \r\n            \r\n            <Tooltip />\r\n            <Legend />\r\n        </RadarChart>\r\n    </ResponsiveContainer>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_AllocationOverTime.js",["1255"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Specific_ClientBreakdown.js",["1256","1257","1258","1259"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Specific_Overview.js",["1260","1261","1262","1263","1264"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n// Actions\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\nimport {OBJ_RESOURCES_GLOBAL} from \"actions/CreateSingleViewModel\"\r\nimport {H1,H2,H4,P} from \"Pages/Auth/Components/Type\";\r\nimport {find} from 'lodash'\r\n\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const [tradeVolume, setTradeVolume] = useState(0)\r\n\r\n    useEffect(()=>{ \r\n  \r\n        let FindObj = find(OBJ_RESOURCES_GLOBAL(), function(o) { return o.name == UX.AreaSelectFilter.ByResourceType; });\r\n        setTradeVolume(FindObj)\r\n    },[UX]) \r\n     \r\n\r\n    return( \r\n        <DiagramContainer>\r\n            <div >\r\n                <H4 Copy={` Resource Type Selected : ${tradeVolume.name}`}/>\r\n                <H4 Copy={`Resource Allocation : ${tradeVolume.Resources}`}/>\r\n            </div>\r\n        </DiagramContainer>\r\n    )\r\n}\r\nexport default Trade_Radial_Charts;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_Basic_Differences.js",["1265","1266","1267"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clients_Site_Resource_StatsBar.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_WorkordersOverTime.js",["1268"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_OverTime.js",["1269"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_ResourceAllocationOverTime.js",["1270"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectClient.js",["1271"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {SetFilterClient , FindClientList} from \"actions/HandleUX\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport {findClientName} from \"actions/ClusterAnalysis\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  /* ************************************************** */\r\nconst ByResourceType = ()=>{\r\n\r\n    const MODEL = useContext_SCAN_FULL()\r\n    const UX = useContext_UX_FULL()\r\n    \r\n    const [type,setType] = useState(UX.AreaSelectFilter.ByClient) \r\n    const Clients = FindClientList()\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleChange = (event) => { \r\n        //console.log(event.target.value)\r\n        \r\n        setType(event.target.value)\r\n        SetFilterClient(event.target.value)\r\n        //StoreCompareItem(event.target.value, pos)\r\n    };\r\n\r\n  \r\n   \r\n\r\n    useEffect(()=>{ \r\n        \r\n        console.log(UX.AreaSelectFilter.ByClient)\r\n        setType(UX.AreaSelectFilter.ByResourceType)\r\n       \r\n    },[UX])\r\n\r\n  \r\n\r\n    return(\r\n        <FormControl variant=\"outlined\" className={`${classes.formControl} Map_Filters`}>\r\n        <InputLabel id=\"ByTier\">Select Client</InputLabel>\r\n             <Select\r\n                labelId=\"ByTier\"\r\n                id=\"ByTier-outlined\"\r\n                value={type}\r\n                onChange={handleChange}\r\n                label=\"Select Client\"\r\n            >\r\n                <MenuItem value={null}> <em>All</em> </MenuItem>\r\n\r\n                {\r\n                    Clients.map((client,i)=>{\r\n                        return(\r\n                            <MenuItem  value={client}>{findClientName(client)}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ByResourceType;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_ResourceDistribution.js",["1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284"],"import React, { useEffect, useState }  from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\nimport {\r\n    OBJ_CLIENT_GLOBAL_Filter,\r\n    OBJ_RESOURCES_GLOBAL\r\n} from \"actions/CreateSingleViewModel\"\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\nimport {H2,H3,H4, P} from \"Pages/Auth/Components/Type\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Chart\r\n//import PieChart from \"venders/apexCharts/SimplePie\";\r\nimport { ResponsiveContainer,PieChart, Pie,Legend, Tooltip,Cell} from 'recharts';\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\n// Nivo \r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={\r\n    Icon:'pie',\r\n    Header:\"Client Resource Allocation\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"Graph shows the Resource Allocation for the selected client\"\r\n}\r\n\r\nconst Chart2={\r\n    Icon:'pie',\r\n    Header:\"Resources Cluster Spread\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"Graph shows the Resource distribution for the selected client by Cluster\"\r\n}\r\n\r\n/* ************************************** */\r\n// CLient specific section\r\n// Move to own file\r\n\r\n\r\nconst ClientResourceSpread = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n\r\n    const [ClientSpread, setClientSpread] = useState([])\r\n    const [ClientClusterSpread, setClientClusterSpread] = useState([])\r\n    \r\n    useEffect(()=>{\r\n        setClientSpread(OBJ_RESOURCES_GLOBAL())\r\n        setClientClusterSpread(OBJ_CLIENT_GLOBAL_Filter())\r\n    },[UX])\r\n\r\n    return(\r\n        <>\r\n        <H3 Copy={`Resource Spread`}/>\r\n        <DiagramContainer>\r\n            \r\n        <div className=\"resultCharts\">\r\n            <div>\r\n                <ChartHeader Icon={Chart1.Icon} Header={Chart1.Header}  Copy={Chart1.Copy} Tip={Chart1.Tip} />\r\n                    <div style={{height: 300}}>\r\n                        <NivoPie data={ClientSpread} id={`name`} value={'Resources'} />\r\n                    </div>\r\n\r\n              \r\n            </div>\r\n\r\n            <div>\r\n                <ChartHeader Icon={Chart2.Icon} Header={Chart2.Header}  Copy={Chart2.Copy} Tip={Chart2.Tip} />\r\n                <div style={{height: 300}}>\r\n                        <NivoPie data={ClientClusterSpread} id={`name`} value={'Resources'} />\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n        </div>\r\n        { ClientSpread.length !== 0 ? <ClientStatBar ClientSpread={ClientSpread} ClientClusterSpread={ClientClusterSpread}/>: false }\r\n        </DiagramContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClientResourceSpread;\r\n\r\nconst ClientStatBar = (props)=>{\r\n    const {ClientClusterSpread, ClientSpread} = props\r\n    return(<>\r\n                <Stats_Bar data={ClientSpread} name={`name`} value={`Resources`}/>\r\n                <Stats_Bar data={ClientClusterSpread} name={`name`} value={`Resources`}/>\r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\n  <ResponsiveContainer width='100%' height={300}>\r\n                    <PieChart >\r\n                        <Pie dataKey=\"Resources\" isAnimationActive={false} data={ClientSpread}  outerRadius={80} fill=\"#ffbf00\" label >\r\n                            {\r\n                                ClientSpread.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={colorArray[index]}/>\r\n                                ))\r\n                            }   \r\n                        </Pie>\r\n                        <Tooltip /> \r\n                        <Legend /> \r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n\r\n                 <ResponsiveContainer width='100%' height={300}>\r\n                        <PieChart >\r\n                            <Pie dataKey=\"Resources\" isAnimationActive={false} data={ClientClusterSpread}  outerRadius={80} fill=\"#ffbf00\" label >\r\n                                {\r\n                                    ClientClusterSpread.map((entry, index) => (\r\n                                    <Cell key={`cell-${index}`} fill={colorArray[index]}/>\r\n                                    ))\r\n                                }   \r\n                            </Pie>\r\n                            <Tooltip />\r\n                            <Legend /> \r\n                        </PieChart>\r\n                    </ResponsiveContainer>\r\n\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_SingleSelectedComponents.js",["1285","1286","1287"],"import React, { useEffect, useState }  from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\nimport {findClientName} from \"actions/ClusterAnalysis\"\r\nimport {      \r\n    ClientOutOfScopeNum,\r\n    OBJ_CLIENT_GLOBAL_Filter\r\n} from \"actions/CreateSingleViewModel\"\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H2,H3,H4, P} from \"Pages/Auth/Components/Type\";\r\n\r\nimport ClientResourceDistribution from \"Pages/Auth/SingleModelResult/components/Client_ResourceDistribution\";\r\nimport Client_WorkOrderDistribution from \"Pages/Auth/SingleModelResult/components/Client_WorkOrderDistribution\";\r\nimport Client_Selected_ClusterSpread from \"Pages/Auth/SingleModelResult/components/Client_Selected_ClusterSpread\";\r\n\r\nimport {find} from 'lodash'\r\n\r\n/* ************************************** */\r\n// Client specific section\r\n// Move to own file\r\n\r\n\r\nconst ClientSpecificComponents = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n\r\n    return( \r\n        <Section className=\"SelectedItem\">\r\n             <H2 Copy={`Selected Client : ${findClientName(UX.AreaSelectFilter.ByClient)}`}/>\r\n             <P copy={`The following is a breakdown of how ${findClientName(UX.AreaSelectFilter.ByClient)} fits into the Model`} />\r\n\r\n                <ByClientBaseNumbers /> \r\n                <ClientResourceDistribution />\r\n                <Client_WorkOrderDistribution />\r\n                <Client_Selected_ClusterSpread /> \r\n                  \r\n        </Section>\r\n    )\r\n}\r\n \r\n\r\n\r\nconst ByClientBaseNumbers = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const [ClientResources,setClientResources ] = useState(null) \r\n\r\n    useEffect(()=>{\r\n        setClientResources(find(OBJ_CLIENT_GLOBAL_Filter(), function(o) { return o.name === findClientName(UX.AreaSelectFilter.ByClient)}));\r\n    },[UX])\r\n\r\n    return(\r\n        <> { ClientResources !== null ? <DisplayNumbers ClientResources={ClientResources}/>:false }</>\r\n    )\r\n}\r\n\r\nexport default ClientSpecificComponents;\r\n\r\nconst DisplayNumbers = (props)=>{\r\n\r\n    const {ClientResources} = props\r\n\r\n    useEffect(()=>{},[ClientResources])\r\n    return(\r\n        <ul className=\"Pod_List\">\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy= {ClientResources.Resources}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`Resources`}/></div>\r\n            </li>\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy={ClientResources['Work Orders']}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`Work Orders`}/></div>\r\n            </li>\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy={ClientResources.Clusters}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`found in Clusters`}/></div>\r\n            </li>\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy={ClientOutOfScopeNum()[0]}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`Sites Out of Scope`}/></div>\r\n            </li>\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy={ClientOutOfScopeNum()[1]}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`Uncounted Work Orders`}/></div>\r\n            </li>\r\n        </ul>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_Selected_ClusterSpread.js",["1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n// Actions\r\nimport { OBJ_CLUSTER_GLOBAL,} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\"; \r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport {H3} from \"Pages/Auth/Components/Type\";\r\n\r\n// Chart\r\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis,ResponsiveContainer,Legend, Tooltip, FunnelChart , Funnel,LabelList} from 'recharts';\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\nimport NivoRadial from \"venders/Nivo/NivoRadial\"\r\nimport NivoFunnel from \"venders/Nivo/NivoFunnel\"\r\n\r\nconst Chart1={\r\n    Icon:'radial',\r\n    Header:\"Cluster Spread for Selected Client\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"The Radial Graph shows the cluster spread for the selected client.\"\r\n}\r\n\r\nconst Chart2={\r\n    Icon:'funnel',\r\n    Header:\"Cluster Spread for Selected Client\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"The Radial Graph shows the cluster spread for the selected client.\"\r\n}\r\n\r\nconst Locations_Radial_Pie_Charts=()=>{\r\n    const UX = useContext_UX_FULL(); \r\n    const [ClientClusterSpread,setClientClusterSpread ] = useState([[]]) \r\n    \r\n    useEffect(()=>{ setClientClusterSpread(OBJ_CLUSTER_GLOBAL()) },[UX]) \r\n    useEffect(()=>{ },[ClientClusterSpread])\r\n \r\n    return(\r\n        <>\r\n        <H3 Copy={`Cluster distribution `}/>\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <div>\r\n                    <ChartHeader Icon={Chart1.Icon} Header={Chart1.Header}  Copy={Chart1.Copy} Tip={Chart1.Tip} />\r\n                   \r\n                     \r\n                    <div style={{height: 300}}>\r\n                    <NivoRadial \r\n                            data={ClientClusterSpread} \r\n                            id={`name`} \r\n                            value={'Sum'} \r\n                            Label={'Clusters'}\r\n                        />\r\n                        </div>\r\n                </div>\r\n                <div>\r\n                    <DisplayFunnel />\r\n                </div>\r\n        </div>\r\n            { ClientClusterSpread.length !== 0 ? <ClientStatBar ClientClusterSpread={ClientClusterSpread}/>: false }\r\n            </DiagramContainer>\r\n        </>\r\n    )\r\n} \r\nexport default Locations_Radial_Pie_Charts;\r\n\r\n\r\nconst DisplayFunnel=()=>{\r\n    const UX = useContext_UX_FULL(); \r\n    const [ClusterOccurances,setClusterOccurances ] = useState([[]]) \r\n\r\n    useEffect(()=>{  setClusterOccurances(OBJ_CLUSTER_GLOBAL())},[UX]) \r\n\r\n    useEffect(()=>{},[ClusterOccurances])\r\n\r\n    return(\r\n        <div>\r\n            <ChartHeader Icon={Chart2.Icon} Header={Chart2.Header}Tip={Chart2.Tip} Copy={Chart2.Copy} />\r\n                <div style={{height: 300}}>\r\n                    <NivoFunnel data={ClusterOccurances} id={`name`} value={'Sum'} />\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst ClientStatBar = (props)=>{\r\n    const {ClientClusterSpread} = props\r\n    return(\r\n       <>\r\n            <Stats_Bar data={ClientClusterSpread} name={`name`} value={`Sum`}/>\r\n       </>\r\n    )\r\n}\r\n\r\n/*\r\n\r\n<ResponsiveContainer width='100%' height={300}>\r\n                        <RadarChart  outerRadius={100}  data={ClientClusterSpread}>\r\n                            <PolarGrid />\r\n                            <PolarAngleAxis dataKey=\"name\" />\r\n                            <PolarRadiusAxis />\r\n                            <Radar name={'Clusters'} dataKey=\"Sum\" stroke={colorArray[0]} fill={colorArray[0]} fillOpacity={0.6} />\r\n                            <Tooltip />\r\n                            <Legend />\r\n                        </RadarChart>\r\n                    </ResponsiveContainer>\r\n <ResponsiveContainer width='100%' height={300}>\r\n            <FunnelChart >\r\n                <Tooltip />\r\n                <Funnel\r\n                    dataKey={`Sum`}\r\n                    data={ClusterOccurances}\r\n                    isAnimationActive\r\n                >\r\n                    <LabelList position=\"center\" fill={colorArray[0]} stroke=\"none\" dataKey=\"name\" />\r\n                </Funnel>\r\n                </FunnelChart>\r\n                </ResponsiveContainer>\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_WorkOrderDistribution.js",["1301","1302","1303","1304","1305","1306","1307","1308","1309"],"import React, { useEffect, useState }  from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\nimport {\r\n    OBJ_CLUSTER_GLOBAL,\r\n    OBJ_RESOURCES_GLOBAL\r\n    \r\n} from \"actions/CreateSingleViewModel\"\r\n// Template\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport {H3} from \"Pages/Auth/Components/Type\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Chart\r\n//import PieChart from \"venders/apexCharts/SimplePie\";\r\nimport { ResponsiveContainer,PieChart, Pie,Legend, Tooltip,Cell} from 'recharts';\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\n// Nivo \r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={\r\n    Icon:'pie',\r\n    Header:\"Work Order Spread\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"Graph shows the Work Order spread across resource type within the Model\"\r\n}\r\n\r\nconst Chart2={\r\n    Icon:'pie',\r\n    Header:\"Work Orders by Cluster\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"Graph shows the Work Order Spread across Cluster Type within the Model\"\r\n}\r\n\r\n/* ************************************** */\r\n// CLient specific section\r\n// Move to own file\r\n\r\n\r\nconst ClientWOrkOrderSpread = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n\r\n    const [ClientSpread, setClientSpread] = useState([])\r\n    const [ClientClusterSpread, setClientClusterSpread] = useState([])\r\n    useEffect(()=>{\r\n        setClientSpread(OBJ_RESOURCES_GLOBAL())\r\n        setClientClusterSpread(OBJ_CLUSTER_GLOBAL())\r\n    },[UX])\r\n\r\n    return(\r\n        <>\r\n        <H3 Copy={`Work Order Spread distribution `}/>\r\n        <DiagramContainer>\r\n        <div className=\"resultCharts\">\r\n            <div>\r\n                <ChartHeader Icon={Chart1.Icon} Header={Chart1.Header}  Copy={Chart1.Copy} Tip={Chart1.Tip} />\r\n                <div style={{height: 300}}>\r\n                        <NivoPie data={ClientSpread} id={`name`} value={'Work Orders'} />\r\n                    </div>\r\n\r\n                \r\n            </div>\r\n            <div>\r\n                <ChartHeader Icon={Chart2.Icon} Header={Chart2.Header}  Copy={Chart2.Copy} Tip={Chart2.Tip} />\r\n\r\n                <div style={{height: 300}}>\r\n                        <NivoPie data={ClientClusterSpread} id={`name`} value={'Work Orders'} />\r\n                    </div>\r\n                \r\n            </div>\r\n        </div>\r\n        { ClientSpread.length !== 0 ? <ClientStatBar ClientSpread={ClientSpread} ClientClusterSpread={ClientClusterSpread}/>: false }\r\n        </DiagramContainer>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ClientWOrkOrderSpread;\r\n\r\nconst ClientStatBar = (props)=>{\r\n    const {ClientClusterSpread, ClientSpread} = props\r\n    return(<>\r\n            <Stats_Bar data={ClientSpread} name={`name`} value={`Work Orders`}/>\r\n            <Stats_Bar data={ClientClusterSpread} name={`name`} value={`Work Orders`}/> \r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\n\r\n<ResponsiveContainer width='100%' height={300}>\r\n                    <PieChart >\r\n                        <Pie dataKey=\"Work Orders\" isAnimationActive={false} data={ClientSpread}  outerRadius={80} fill=\"#ffbf00\" label >\r\n                            {\r\n                            ClientSpread.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={colorArray[index]}/>\r\n                            ))\r\n                            }   \r\n                        </Pie>\r\n                        <Tooltip />\r\n                        <Legend /> \r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n<ResponsiveContainer width='100%' height={300}>\r\n                    <PieChart >\r\n                        <Pie dataKey=\"Work Orders\" isAnimationActive={false} data={ClientClusterSpread}  outerRadius={80} fill=\"#ffbf00\" label >\r\n                            {\r\n                                ClientClusterSpread.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={colorArray[index]}/>\r\n                                ))\r\n                            }   \r\n                        </Pie>\r\n                        <Tooltip />\r\n                        <Legend /> \r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\DiagramContainer.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Stats_Bar.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoPie.js",["1310","1311"],"import React, { useEffect }  from 'react'\r\nimport { ResponsivePie } from '@nivo/pie'\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\nconst NivoPie=(props)=>{\r\n\r\n    const {data,id,value} = props\r\n    const [NivoData, setNivoData] = useState([])\r\n    const CreateNivoData=()=>{\r\n            console.log(id,value)\r\n            let Nivo=[]\r\n            data.map((row,i)=>{\r\n                Nivo.push({\r\n                    \"id\": row[id],\r\n                    \"label\": row[id],\r\n                    \"value\": row[value],\r\n                })\r\n            }) \r\n            setNivoData(Nivo)\r\n    }\r\n\r\n    useEffect(()=>{ CreateNivoData() },[data])\r\n\r\n\r\n    return(\r\n        <ResponsivePie \r\n            data={NivoData}\r\n            margin={{ top: 50, right: 100, bottom: 50, left: 100 }}\r\n            innerRadius={0.4}\r\n            padAngle={3}\r\n            cornerRadius={3}\r\n            colors={colorArray}\r\n            sortByValue={true}\r\n            borderWidth={1}\r\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\r\n            radialLabelsSkipAngle={10}\r\n            radialLabelsTextColor=\"#2f2f2f\"\r\n            radialLabelsLinkColor={{ from: 'color' }}\r\n            sliceLabelsSkipAngle={10}\r\n            sliceLabelsTextColor=\"#ffc200\"\r\n            radialLabelsLinkStrokeWidth={1}\r\n            radialLabelsTextXOffset={1}\r\n            radialLabelsLinkHorizontalLength={15}    \r\n        />\r\n    )\r\n}\r\n\r\nexport default NivoPie;\r\n/*\r\n  legends={[\r\n                {\r\n                    anchor: 'bottom-left',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 56,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: '#999',\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 1,\r\n                    symbolSize: 18,\r\n                    symbolShape: 'circle',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemTextColor: '#000'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoRadial.js",["1312","1313","1314","1315"],"import React, { useEffect }  from 'react'\r\nimport { ResponsiveRadar } from '@nivo/radar'\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\nconst NivoPie=(props)=>{\r\n\r\n    const {data,id,value, Label} = props\r\n    const [NivoData, setNivoData] = useState([])\r\n    const [NivoRadialKeys, setNivoRadialKeys] = useState([])\r\n    const CreateNivoData=()=>{\r\n            //console.log(id,value)\r\n            let NivoRadialKeys=[]\r\n            let NivoRadialData=[]\r\n            data.map((row,i)=>{\r\n                NivoRadialKeys.push(row[id])\r\n\r\n                NivoRadialData.push({\r\n                    \"Name\":row[id],\r\n                    [Label]:row[value]=== undefined ? 0 : row[value],\r\n                }) \r\n            })\r\n           //console.log(NivoRadialData)\r\n            //console.log(NivoRadialKeys)\r\n            setNivoData(NivoRadialData)\r\n            setNivoRadialKeys(NivoRadialKeys)\r\n    }\r\n\r\n    useEffect(()=>{ \r\n        \r\n        //console.log(data)\r\n        CreateNivoData() },[data])\r\n\r\n\r\n    return(\r\n        <ResponsiveRadar\r\n        data={NivoData}\r\n        keys={[Label]}\r\n        indexBy={'Name'}\r\n        colors={colorArray}\r\n        maxValue=\"auto\"\r\n        margin={{ top: 70, right: 80, bottom: 40, left: 80 }}\r\n        curve=\"linearClosed\"\r\n        borderWidth={1}\r\n        borderColor=\"#ffc200\"\r\n        gridLevels={15}\r\n        gridShape=\"circular\"\r\n        gridLabelOffset={26}\r\n        enableDots={true}\r\n        dotSize={10}\r\n        dotColor=\"#ffc200\"\r\n        dotBorderWidth={2}\r\n        dotBorderColor=\"#ffc200\"\r\n        enableDotLabel={true}\r\n        dotLabel=\"value\"\r\n        dotLabelYOffset={-12}\r\n        colors={{ scheme: 'nivo' }}\r\n        fillOpacity={0.5}\r\n        blendMode=\"multiply\"\r\n        animate={true}\r\n        motionConfig=\"wobbly\"\r\n        isInteractive={true}\r\n       \r\n    />\r\n    )\r\n}\r\n\r\nexport default NivoPie;\r\n/*\r\n  legends={[\r\n                {\r\n                    anchor: 'bottom-left',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 56,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: '#999',\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 1,\r\n                    symbolSize: 18,\r\n                    symbolShape: 'circle',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemTextColor: '#000'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoWaffle.js",["1316","1317","1318"],"import React, { useEffect }  from 'react'\r\nimport { ResponsiveWaffle } from '@nivo/waffle'\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\nconst NivoPie=(props)=>{\r\n\r\n    const {data,id,value, Label} = props\r\n    const [NivoData, setNivoData] = useState([])\r\n    const [NivoWaffleTotal, setNivoWaffleTotal] = useState([])\r\n    const CreateNivoData=()=>{\r\n            console.log(id,value)\r\n            let NivoWaffleTotal=[]\r\n            let NivoWaffleData=[]\r\n            data.map((row,i)=>{\r\n                NivoWaffleTotal.push(row[value])\r\n                NivoWaffleData.push({\r\n                    \"id\": row[id],\r\n                    \"label\": row[id],\r\n                    \"value\": row[value],\r\n                })\r\n            })\r\n            console.log(NivoWaffleData)\r\n            //console.log(NivoRadialKeys)\r\n            setNivoData(NivoWaffleData)\r\n            setNivoWaffleTotal(NivoWaffleTotal.reduce((a, b) => a + b, 0))\r\n    }\r\n\r\n    useEffect(()=>{ \r\n        \r\n        console.log(data)\r\n        CreateNivoData() \r\n    },[data])\r\n\r\n\r\n    return(\r\n        <ResponsiveWaffle\r\n\r\n        data={NivoData}\r\n        total={NivoWaffleTotal}\r\n        rows={10}\r\n        columns={50}\r\n        fillDirection=\"left\"\r\n        margin={{ top: 60, right: 10, bottom: 10, left: 0 }}\r\n        colors={colorArray}\r\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.3 ] ] }}\r\n        animate={true}\r\n        motionStiffness={90}\r\n        motionDamping={11}\r\n        legends={[\r\n            {\r\n                anchor: 'top',\r\n                direction: 'row',\r\n                justify: false,\r\n                translateX: 0,\r\n                translateY: -50,\r\n                itemsSpacing: 4,\r\n                itemWidth: 300,\r\n                itemHeight: 20,\r\n                itemDirection: 'left-to-right',\r\n                itemOpacity: 1,\r\n                itemTextColor: '#777',\r\n                symbolSize: 20,\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemTextColor: '#000',\r\n                            itemBackground: '#f7fafb'\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n    />\r\n    )\r\n}\r\n\r\nexport default NivoPie;\r\n/*\r\n  legends={[\r\n                {\r\n                    anchor: 'bottom-left',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 56,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: '#999',\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 1,\r\n                    symbolSize: 18,\r\n                    symbolShape: 'circle',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemTextColor: '#000'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoFunnel.js",["1319","1320","1321","1322"],"import React, { useEffect }  from 'react'\r\nimport { ResponsiveFunnel } from '@nivo/funnel'\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\nconst NivoPie=(props)=>{\r\n\r\n    const {data,id,value, Label} = props\r\n    const [NivoData, setNivoData] = useState([])\r\n    const [NivoWaffleTotal, setNivoWaffleTotal] = useState([])\r\n    const CreateNivoData=()=>{\r\n            console.log(id,value)\r\n            let NivoWaffleTotal=[]\r\n            let NivoWaffleData=[]\r\n            data.map((row,i)=>{\r\n                NivoWaffleTotal.push(row[value])\r\n                console.log(row[value])\r\n                NivoWaffleData.push({\r\n                    \"id\": row[id],\r\n                    \"label\": row[id],\r\n                    \"value\": row[value]  === undefined ? 0 : row[value] ,\r\n                })\r\n            })\r\n            console.log(NivoWaffleData)\r\n            //console.log(NivoRadialKeys)\r\n            setNivoData(NivoWaffleData)\r\n            setNivoWaffleTotal(NivoWaffleTotal.reduce((a, b) => a + b, 0)) \r\n    }\r\n\r\n    useEffect(()=>{ \r\n        \r\n        console.log(data)\r\n        CreateNivoData() \r\n    },[data])\r\n\r\n\r\n    return(\r\n        <ResponsiveFunnel\r\n            data={NivoData}\r\n            margin={{ top: 0, right: 0, bottom: 20, left: 0 }}\r\n            valueFormat=\">-.4s\"\r\n            colors={colorArray}\r\n            borderWidth={40}\r\n            labelColor=\"#ffc200\"\r\n            beforeSeparatorLength={100}\r\n            beforeSeparatorOffset={20}\r\n            afterSeparatorLength={100}\r\n            afterSeparatorOffset={20}\r\n            currentPartSizeExtension={10}\r\n            currentBorderWidth={40}\r\n            motionConfig=\"wobbly\"\r\n    />\r\n    )\r\n}\r\n\r\nexport default NivoPie;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoLine.js",["1323","1324","1325"],"import React, { useEffect }  from 'react'\r\nimport { ResponsiveLine } from '@nivo/line'\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\nconst NivoPie=(props)=>{\r\n\r\n    const {data,Xaxis,value,Yaxis, label} = props\r\n    const [NivoData, setNivoData] = useState([])\r\n    \r\n    const CreateNivoData=()=>{\r\n            console.log(Xaxis,value)\r\n            let Nivo=[{ 'id':Yaxis, \"color\": \"#ffc200\", 'data':[]}]\r\n\r\n            data.map((row,i)=>{\r\n                \r\n                Nivo[0]['data'].push({\r\n                    \"x\": row[Xaxis],\r\n                    \"y\": row[value],\r\n                    \r\n                })\r\n            }) \r\n            console.log(Nivo)\r\n            setNivoData(Nivo)\r\n    }\r\n\r\n    useEffect(()=>{ \r\n        console.log(data);\r\n\r\n        CreateNivoData() },[data])\r\n\r\n\r\n    return(\r\n        <ResponsiveLine\r\n        data={NivoData}\r\n        margin={{ top: 10, right: 10, bottom: 80, left: 50 }}\r\n        xScale={{ type: 'point' }}\r\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n        yFormat=\" >-.2f\"\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n            orient: 'bottom',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: label,\r\n            legendOffset: 36,\r\n            legendPosition: 'middle'\r\n        }}\r\n        axisLeft={{\r\n            orient: 'left',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'count',\r\n            legendOffset: -40,\r\n            legendPosition: 'middle'\r\n        }}\r\n        pointSize={10}\r\n        pointColor=\"#ffc200\"\r\n        pointBorderWidth={2}\r\n        pointBorderColor=\"#ffc200\"\r\n        pointLabelYOffset={-12}\r\n        useMesh={true}\r\n        legends={[\r\n            {\r\n                anchor: 'bottom',\r\n                direction: 'column',\r\n                justify: false,\r\n                translateX: 0,\r\n                translateY: 70,\r\n                itemsSpacing: 0,\r\n                itemDirection: 'left-to-right',\r\n                itemWidth: 80,\r\n                itemHeight: 20,\r\n                itemOpacity: 0.75,\r\n                symbolSize: 12,\r\n                symbolShape: 'circle',\r\n                symbolBorderColor: '#ffc200',\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemBackground: 'rgba(0, 0, 0, .03)',\r\n                            itemOpacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n    />\r\n    )\r\n}\r\n\r\nexport default NivoPie;\r\n/*\r\n  legends={[\r\n                {\r\n                    anchor: 'bottom-left',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 56,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: '#999',\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 1,\r\n                    symbolSize: 18,\r\n                    symbolShape: 'circle',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemTextColor: '#000'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoSwarmPlot.js",["1326","1327","1328"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CreateCompareModelView.js",["1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\TableHeader.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Locations_CompareTotals.js",["1353","1354","1355","1356"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Locations_Main.js",["1357","1358","1359","1360","1361"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Clusters_Main.js",["1362","1363","1364"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Clusters_TotalsBreakdown.js",["1365","1366","1367"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Clusters_Totals.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\CLusters_ComparisionPie.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\ClusterComparisonRadial.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Cluster_ResourcesBar.js",["1368","1369"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Resources_Main.js",["1370","1371","1372","1373"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Resource_Totals.js",["1374","1375","1376","1377","1378","1379"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\WorkOrders_Main.js",["1380","1381","1382","1383","1384"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\WorkOrders_Totals.js",["1385","1386","1387","1388","1389"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\TableTradeTypes.js",["1390"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Clients_Main.js",["1391","1392","1393","1394","1395"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\SectionCharts.js",["1396","1397","1398"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompareModel.js",["1399","1400"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Location_Radial_Clusters.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Location_Pie_OutofScope.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Clusters_Pie_ClusterNumbers.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Clusters_SwarmPlot_Numbers.js",["1401"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cluster_Bar_ResourceAllocation.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cluster_Bar_Workorders.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resource_Radial_Resources.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Pie_ResourceAllocation.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Trade_Heatmap.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Location_Heatmap.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Pie_ClientsBreakdown.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Cluster_Funnel.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Line_Allocation_OverTime.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Radial_Workorders.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_pie_outofscope.js",["1402","1403"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_pie_Clients.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Radial_Cluster.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\WorkOrder_Heatmap.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Bar_Overtime.js",["1404"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_Resources.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_Sites.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_WorkOrders.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_line_WorkordersOvertime.js",["1405","1406","1407","1408","1409"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_line_ResourcesOvertime.js",["1410","1411","1412","1413","1414","1415"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\CompareGlobalFilter.js",["1416","1417"],{"ruleId":"1418","severity":1,"message":"1419","line":22,"column":7,"nodeType":"1420","messageId":"1421","endLine":22,"endColumn":15},{"ruleId":"1422","replacedBy":"1423"},{"ruleId":"1424","replacedBy":"1425"},{"ruleId":"1426","severity":1,"message":"1427","line":153,"column":42,"nodeType":"1428","messageId":"1429","endLine":153,"endColumn":44},{"ruleId":"1430","severity":1,"message":"1431","line":16,"column":15,"nodeType":"1432","messageId":"1433","endLine":16,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":16,"column":33,"nodeType":"1432","messageId":"1433","endLine":16,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":31,"column":17,"nodeType":"1432","messageId":"1433","endLine":31,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":32,"column":17,"nodeType":"1432","messageId":"1433","endLine":32,"endColumn":19},{"ruleId":"1418","severity":1,"message":"1434","line":287,"column":12,"nodeType":"1420","messageId":"1421","endLine":287,"endColumn":26},{"ruleId":"1426","severity":1,"message":"1427","line":290,"column":43,"nodeType":"1428","messageId":"1429","endLine":290,"endColumn":45},{"ruleId":"1426","severity":1,"message":"1435","line":332,"column":73,"nodeType":"1436","messageId":"1437","endLine":332,"endColumn":82},{"ruleId":"1426","severity":1,"message":"1427","line":342,"column":26,"nodeType":"1428","messageId":"1429","endLine":342,"endColumn":28},{"ruleId":"1438","severity":1,"message":"1439","line":26,"column":22,"nodeType":"1440","endLine":26,"endColumn":26,"suggestions":"1441"},{"ruleId":"1418","severity":1,"message":"1442","line":11,"column":8,"nodeType":"1420","messageId":"1421","endLine":11,"endColumn":20},{"ruleId":"1418","severity":1,"message":"1443","line":12,"column":8,"nodeType":"1420","messageId":"1421","endLine":12,"endColumn":24},{"ruleId":"1418","severity":1,"message":"1444","line":13,"column":8,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":20},{"ruleId":"1426","severity":1,"message":"1427","line":130,"column":33,"nodeType":"1428","messageId":"1429","endLine":130,"endColumn":35},{"ruleId":"1426","severity":1,"message":"1427","line":132,"column":44,"nodeType":"1428","messageId":"1429","endLine":132,"endColumn":46},{"ruleId":"1418","severity":1,"message":"1445","line":155,"column":17,"nodeType":"1420","messageId":"1421","endLine":155,"endColumn":30},{"ruleId":"1446","severity":1,"message":"1447","line":175,"column":11,"nodeType":"1448","messageId":"1449","endLine":175,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":178,"column":11,"nodeType":"1448","messageId":"1449","endLine":178,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":181,"column":11,"nodeType":"1448","messageId":"1449","endLine":181,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":184,"column":11,"nodeType":"1448","messageId":"1449","endLine":184,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":187,"column":11,"nodeType":"1448","messageId":"1449","endLine":187,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":190,"column":11,"nodeType":"1448","messageId":"1449","endLine":190,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":193,"column":11,"nodeType":"1448","messageId":"1449","endLine":193,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":196,"column":11,"nodeType":"1448","messageId":"1449","endLine":196,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":199,"column":11,"nodeType":"1448","messageId":"1449","endLine":199,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":202,"column":11,"nodeType":"1448","messageId":"1449","endLine":202,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":205,"column":11,"nodeType":"1448","messageId":"1449","endLine":205,"endColumn":17},{"ruleId":"1450","severity":1,"message":"1451","line":240,"column":3,"nodeType":"1452","messageId":"1453","endLine":266,"endColumn":4},{"ruleId":"1446","severity":1,"message":"1447","line":243,"column":13,"nodeType":"1448","messageId":"1449","endLine":243,"endColumn":19},{"ruleId":"1446","severity":1,"message":"1447","line":246,"column":9,"nodeType":"1448","messageId":"1449","endLine":246,"endColumn":15},{"ruleId":"1446","severity":1,"message":"1447","line":249,"column":11,"nodeType":"1448","messageId":"1449","endLine":249,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":252,"column":11,"nodeType":"1448","messageId":"1449","endLine":252,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":255,"column":11,"nodeType":"1448","messageId":"1449","endLine":255,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":258,"column":11,"nodeType":"1448","messageId":"1449","endLine":258,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":261,"column":11,"nodeType":"1448","messageId":"1449","endLine":261,"endColumn":17},{"ruleId":"1446","severity":1,"message":"1447","line":264,"column":11,"nodeType":"1448","messageId":"1449","endLine":264,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":333,"column":16,"nodeType":"1432","messageId":"1433","endLine":333,"endColumn":18},{"ruleId":"1430","severity":1,"message":"1454","line":333,"column":31,"nodeType":"1432","messageId":"1433","endLine":333,"endColumn":33},{"ruleId":"1430","severity":1,"message":"1431","line":337,"column":14,"nodeType":"1432","messageId":"1433","endLine":337,"endColumn":16},{"ruleId":"1430","severity":1,"message":"1454","line":337,"column":31,"nodeType":"1432","messageId":"1433","endLine":337,"endColumn":33},{"ruleId":"1430","severity":1,"message":"1454","line":344,"column":41,"nodeType":"1432","messageId":"1433","endLine":344,"endColumn":43},{"ruleId":"1426","severity":1,"message":"1427","line":383,"column":60,"nodeType":"1428","messageId":"1429","endLine":383,"endColumn":62},{"ruleId":"1426","severity":1,"message":"1455","line":384,"column":46,"nodeType":"1436","messageId":"1429","endLine":384,"endColumn":54},{"ruleId":"1426","severity":1,"message":"1427","line":385,"column":48,"nodeType":"1428","messageId":"1429","endLine":385,"endColumn":50},{"ruleId":"1438","severity":1,"message":"1456","line":24,"column":22,"nodeType":"1440","endLine":24,"endColumn":28,"suggestions":"1457"},{"ruleId":"1418","severity":1,"message":"1458","line":3,"column":18,"nodeType":"1420","messageId":"1421","endLine":3,"endColumn":22},{"ruleId":"1422","replacedBy":"1459"},{"ruleId":"1424","replacedBy":"1460"},{"ruleId":"1426","severity":1,"message":"1427","line":33,"column":26,"nodeType":"1428","messageId":"1429","endLine":33,"endColumn":28},{"ruleId":"1418","severity":1,"message":"1461","line":71,"column":11,"nodeType":"1420","messageId":"1421","endLine":71,"endColumn":30},{"ruleId":"1426","severity":1,"message":"1427","line":73,"column":29,"nodeType":"1428","messageId":"1429","endLine":73,"endColumn":31},{"ruleId":"1426","severity":1,"message":"1427","line":105,"column":24,"nodeType":"1428","messageId":"1429","endLine":105,"endColumn":26},{"ruleId":"1426","severity":1,"message":"1427","line":106,"column":35,"nodeType":"1428","messageId":"1429","endLine":106,"endColumn":37},{"ruleId":"1426","severity":1,"message":"1427","line":112,"column":53,"nodeType":"1428","messageId":"1429","endLine":112,"endColumn":55},{"ruleId":"1426","severity":1,"message":"1427","line":122,"column":26,"nodeType":"1428","messageId":"1429","endLine":122,"endColumn":28},{"ruleId":"1426","severity":1,"message":"1427","line":140,"column":29,"nodeType":"1428","messageId":"1429","endLine":140,"endColumn":31},{"ruleId":"1418","severity":1,"message":"1462","line":150,"column":7,"nodeType":"1420","messageId":"1421","endLine":150,"endColumn":22},{"ruleId":"1426","severity":1,"message":"1427","line":152,"column":24,"nodeType":"1428","messageId":"1429","endLine":152,"endColumn":26},{"ruleId":"1426","severity":1,"message":"1427","line":160,"column":40,"nodeType":"1428","messageId":"1429","endLine":160,"endColumn":42},{"ruleId":"1430","severity":1,"message":"1454","line":163,"column":19,"nodeType":"1432","messageId":"1433","endLine":163,"endColumn":21},{"ruleId":"1418","severity":1,"message":"1463","line":178,"column":9,"nodeType":"1420","messageId":"1421","endLine":178,"endColumn":17},{"ruleId":"1426","severity":1,"message":"1427","line":192,"column":34,"nodeType":"1428","messageId":"1429","endLine":192,"endColumn":36},{"ruleId":"1426","severity":1,"message":"1427","line":196,"column":37,"nodeType":"1428","messageId":"1429","endLine":196,"endColumn":39},{"ruleId":"1430","severity":1,"message":"1431","line":213,"column":94,"nodeType":"1432","messageId":"1433","endLine":213,"endColumn":96},{"ruleId":"1430","severity":1,"message":"1454","line":215,"column":30,"nodeType":"1432","messageId":"1433","endLine":215,"endColumn":32},{"ruleId":"1418","severity":1,"message":"1464","line":267,"column":9,"nodeType":"1420","messageId":"1421","endLine":267,"endColumn":27},{"ruleId":"1426","severity":1,"message":"1427","line":269,"column":28,"nodeType":"1428","messageId":"1429","endLine":269,"endColumn":30},{"ruleId":"1426","severity":1,"message":"1427","line":287,"column":27,"nodeType":"1428","messageId":"1429","endLine":287,"endColumn":29},{"ruleId":"1426","severity":1,"message":"1427","line":289,"column":37,"nodeType":"1428","messageId":"1429","endLine":289,"endColumn":39},{"ruleId":"1426","severity":1,"message":"1427","line":303,"column":25,"nodeType":"1428","messageId":"1429","endLine":303,"endColumn":27},{"ruleId":"1426","severity":1,"message":"1427","line":305,"column":35,"nodeType":"1428","messageId":"1429","endLine":305,"endColumn":37},{"ruleId":"1465","severity":1,"message":"1466","line":5,"column":13,"nodeType":"1467","endLine":5,"endColumn":73},{"ruleId":"1465","severity":1,"message":"1466","line":9,"column":13,"nodeType":"1467","endLine":9,"endColumn":79},{"ruleId":"1430","severity":1,"message":"1431","line":6,"column":15,"nodeType":"1432","messageId":"1433","endLine":6,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":6,"column":33,"nodeType":"1432","messageId":"1433","endLine":6,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":21,"column":17,"nodeType":"1432","messageId":"1433","endLine":21,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":22,"column":17,"nodeType":"1432","messageId":"1433","endLine":22,"endColumn":19},{"ruleId":"1426","severity":1,"message":"1427","line":59,"column":35,"nodeType":"1428","messageId":"1429","endLine":59,"endColumn":37},{"ruleId":"1468","severity":1,"message":"1469","line":108,"column":28,"nodeType":"1470","messageId":"1471","endLine":108,"endColumn":30},{"ruleId":"1468","severity":1,"message":"1469","line":108,"column":58,"nodeType":"1470","messageId":"1471","endLine":108,"endColumn":60},{"ruleId":"1426","severity":1,"message":"1427","line":119,"column":42,"nodeType":"1428","messageId":"1429","endLine":119,"endColumn":44},{"ruleId":"1426","severity":1,"message":"1427","line":145,"column":29,"nodeType":"1428","messageId":"1429","endLine":145,"endColumn":31},{"ruleId":"1426","severity":1,"message":"1427","line":146,"column":47,"nodeType":"1428","messageId":"1429","endLine":146,"endColumn":49},{"ruleId":"1426","severity":1,"message":"1472","line":231,"column":46,"nodeType":"1428","messageId":"1437","endLine":231,"endColumn":48},{"ruleId":"1430","severity":1,"message":"1431","line":245,"column":87,"nodeType":"1432","messageId":"1433","endLine":245,"endColumn":89},{"ruleId":"1426","severity":1,"message":"1427","line":295,"column":29,"nodeType":"1428","messageId":"1429","endLine":295,"endColumn":31},{"ruleId":"1430","severity":1,"message":"1431","line":297,"column":80,"nodeType":"1432","messageId":"1433","endLine":297,"endColumn":82},{"ruleId":"1426","severity":1,"message":"1427","line":50,"column":26,"nodeType":"1428","messageId":"1429","endLine":50,"endColumn":28},{"ruleId":"1418","severity":1,"message":"1473","line":183,"column":7,"nodeType":"1420","messageId":"1421","endLine":183,"endColumn":15},{"ruleId":"1438","severity":1,"message":"1474","line":15,"column":73,"nodeType":"1440","endLine":15,"endColumn":79,"suggestions":"1475"},{"ruleId":"1438","severity":1,"message":"1474","line":58,"column":8,"nodeType":"1440","endLine":58,"endColumn":14,"suggestions":"1476"},{"ruleId":"1426","severity":1,"message":"1455","line":63,"column":43,"nodeType":"1436","messageId":"1429","endLine":63,"endColumn":51},{"ruleId":"1438","severity":1,"message":"1477","line":71,"column":41,"nodeType":"1440","endLine":71,"endColumn":58,"suggestions":"1478"},{"ruleId":"1438","severity":1,"message":"1479","line":94,"column":7,"nodeType":"1440","endLine":94,"endColumn":9,"suggestions":"1480"},{"ruleId":"1418","severity":1,"message":"1481","line":136,"column":11,"nodeType":"1420","messageId":"1421","endLine":136,"endColumn":17},{"ruleId":"1418","severity":1,"message":"1482","line":138,"column":12,"nodeType":"1420","messageId":"1421","endLine":138,"endColumn":22},{"ruleId":"1418","severity":1,"message":"1483","line":138,"column":24,"nodeType":"1420","messageId":"1421","endLine":138,"endColumn":37},{"ruleId":"1438","severity":1,"message":"1474","line":149,"column":8,"nodeType":"1440","endLine":149,"endColumn":14,"suggestions":"1484"},{"ruleId":"1418","severity":1,"message":"1485","line":7,"column":8,"nodeType":"1420","messageId":"1421","endLine":7,"endColumn":22},{"ruleId":"1418","severity":1,"message":"1486","line":8,"column":8,"nodeType":"1420","messageId":"1421","endLine":8,"endColumn":24},{"ruleId":"1418","severity":1,"message":"1487","line":9,"column":8,"nodeType":"1420","messageId":"1421","endLine":9,"endColumn":24},{"ruleId":"1418","severity":1,"message":"1488","line":11,"column":8,"nodeType":"1420","messageId":"1421","endLine":11,"endColumn":23},{"ruleId":"1438","severity":1,"message":"1489","line":25,"column":22,"nodeType":"1440","endLine":25,"endColumn":28,"suggestions":"1490"},{"ruleId":"1418","severity":1,"message":"1491","line":8,"column":8,"nodeType":"1420","messageId":"1421","endLine":8,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1492","line":3,"column":8,"nodeType":"1420","messageId":"1421","endLine":3,"endColumn":14},{"ruleId":"1418","severity":1,"message":"1493","line":10,"column":8,"nodeType":"1420","messageId":"1421","endLine":10,"endColumn":24},{"ruleId":"1418","severity":1,"message":"1491","line":12,"column":8,"nodeType":"1420","messageId":"1421","endLine":12,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1494","line":56,"column":11,"nodeType":"1420","messageId":"1421","endLine":56,"endColumn":18},{"ruleId":"1418","severity":1,"message":"1495","line":1,"column":17,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":26},{"ruleId":"1418","severity":1,"message":"1496","line":4,"column":22,"nodeType":"1420","messageId":"1421","endLine":4,"endColumn":32},{"ruleId":"1438","severity":1,"message":"1474","line":11,"column":7,"nodeType":"1440","endLine":11,"endColumn":11,"suggestions":"1497"},{"ruleId":"1418","severity":1,"message":"1495","line":1,"column":17,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":26},{"ruleId":"1418","severity":1,"message":"1498","line":1,"column":28,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":36},{"ruleId":"1418","severity":1,"message":"1498","line":1,"column":27,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":35},{"ruleId":"1418","severity":1,"message":"1499","line":16,"column":11,"nodeType":"1420","messageId":"1421","endLine":16,"endColumn":13},{"ruleId":"1426","severity":1,"message":"1427","line":24,"column":32,"nodeType":"1428","messageId":"1429","endLine":24,"endColumn":34},{"ruleId":"1438","severity":1,"message":"1500","line":37,"column":47,"nodeType":"1440","endLine":37,"endColumn":60,"suggestions":"1501"},{"ruleId":"1418","severity":1,"message":"1498","line":1,"column":27,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":35},{"ruleId":"1418","severity":1,"message":"1502","line":15,"column":7,"nodeType":"1420","messageId":"1421","endLine":15,"endColumn":22},{"ruleId":"1418","severity":1,"message":"1503","line":11,"column":9,"nodeType":"1420","messageId":"1421","endLine":11,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1504","line":14,"column":7,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1481","line":23,"column":11,"nodeType":"1420","messageId":"1421","endLine":23,"endColumn":17},{"ruleId":"1418","severity":1,"message":"1499","line":24,"column":11,"nodeType":"1420","messageId":"1421","endLine":24,"endColumn":13},{"ruleId":"1418","severity":1,"message":"1505","line":34,"column":13,"nodeType":"1420","messageId":"1421","endLine":34,"endColumn":20},{"ruleId":"1418","severity":1,"message":"1506","line":39,"column":13,"nodeType":"1420","messageId":"1421","endLine":39,"endColumn":23},{"ruleId":"1426","severity":1,"message":"1427","line":43,"column":28,"nodeType":"1428","messageId":"1429","endLine":43,"endColumn":30},{"ruleId":"1426","severity":1,"message":"1427","line":60,"column":37,"nodeType":"1428","messageId":"1429","endLine":60,"endColumn":39},{"ruleId":"1438","severity":1,"message":"1507","line":91,"column":51,"nodeType":"1440","endLine":91,"endColumn":76,"suggestions":"1508"},{"ruleId":"1438","severity":1,"message":"1509","line":30,"column":7,"nodeType":"1440","endLine":30,"endColumn":13,"suggestions":"1510"},{"ruleId":"1418","severity":1,"message":"1503","line":10,"column":9,"nodeType":"1420","messageId":"1421","endLine":10,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1504","line":13,"column":7,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1499","line":23,"column":11,"nodeType":"1420","messageId":"1421","endLine":23,"endColumn":13},{"ruleId":"1418","severity":1,"message":"1505","line":33,"column":13,"nodeType":"1420","messageId":"1421","endLine":33,"endColumn":20},{"ruleId":"1418","severity":1,"message":"1506","line":38,"column":13,"nodeType":"1420","messageId":"1421","endLine":38,"endColumn":23},{"ruleId":"1426","severity":1,"message":"1427","line":42,"column":28,"nodeType":"1428","messageId":"1429","endLine":42,"endColumn":30},{"ruleId":"1426","severity":1,"message":"1427","line":59,"column":36,"nodeType":"1428","messageId":"1429","endLine":59,"endColumn":38},{"ruleId":"1426","severity":1,"message":"1427","line":61,"column":42,"nodeType":"1428","messageId":"1429","endLine":61,"endColumn":44},{"ruleId":"1430","severity":1,"message":"1454","line":104,"column":55,"nodeType":"1432","messageId":"1433","endLine":104,"endColumn":57},{"ruleId":"1438","severity":1,"message":"1507","line":106,"column":9,"nodeType":"1440","endLine":106,"endColumn":38,"suggestions":"1511"},{"ruleId":"1426","severity":1,"message":"1427","line":16,"column":51,"nodeType":"1428","messageId":"1429","endLine":16,"endColumn":53},{"ruleId":"1438","severity":1,"message":"1512","line":63,"column":45,"nodeType":"1440","endLine":63,"endColumn":74,"suggestions":"1513"},{"ruleId":"1418","severity":1,"message":"1514","line":15,"column":24,"nodeType":"1420","messageId":"1421","endLine":15,"endColumn":37},{"ruleId":"1418","severity":1,"message":"1515","line":16,"column":12,"nodeType":"1420","messageId":"1421","endLine":16,"endColumn":24},{"ruleId":"1418","severity":1,"message":"1516","line":19,"column":11,"nodeType":"1420","messageId":"1421","endLine":19,"endColumn":27},{"ruleId":"1426","severity":1,"message":"1427","line":21,"column":40,"nodeType":"1428","messageId":"1429","endLine":21,"endColumn":42},{"ruleId":"1418","severity":1,"message":"1517","line":96,"column":10,"nodeType":"1420","messageId":"1421","endLine":96,"endColumn":16},{"ruleId":"1418","severity":1,"message":"1518","line":19,"column":11,"nodeType":"1420","messageId":"1421","endLine":19,"endColumn":24},{"ruleId":"1418","severity":1,"message":"1495","line":2,"column":17,"nodeType":"1420","messageId":"1421","endLine":2,"endColumn":26},{"ruleId":"1418","severity":1,"message":"1519","line":12,"column":3,"nodeType":"1420","messageId":"1421","endLine":12,"endColumn":21},{"ruleId":"1418","severity":1,"message":"1520","line":41,"column":7,"nodeType":"1420","messageId":"1421","endLine":41,"endColumn":17},{"ruleId":"1418","severity":1,"message":"1494","line":75,"column":11,"nodeType":"1420","messageId":"1421","endLine":75,"endColumn":18},{"ruleId":"1418","severity":1,"message":"1521","line":2,"column":9,"nodeType":"1420","messageId":"1421","endLine":2,"endColumn":31},{"ruleId":"1418","severity":1,"message":"1522","line":3,"column":9,"nodeType":"1420","messageId":"1421","endLine":3,"endColumn":29},{"ruleId":"1418","severity":1,"message":"1523","line":5,"column":8,"nodeType":"1420","messageId":"1421","endLine":5,"endColumn":26},{"ruleId":"1418","severity":1,"message":"1524","line":8,"column":9,"nodeType":"1420","messageId":"1421","endLine":8,"endColumn":11},{"ruleId":"1418","severity":1,"message":"1525","line":8,"column":17,"nodeType":"1420","messageId":"1421","endLine":8,"endColumn":19},{"ruleId":"1418","severity":1,"message":"1526","line":8,"column":20,"nodeType":"1420","messageId":"1421","endLine":8,"endColumn":22},{"ruleId":"1426","severity":1,"message":"1427","line":17,"column":32,"nodeType":"1428","messageId":"1429","endLine":17,"endColumn":34},{"ruleId":"1438","severity":1,"message":"1527","line":25,"column":22,"nodeType":"1440","endLine":25,"endColumn":31,"suggestions":"1528"},{"ruleId":"1418","severity":1,"message":"1529","line":12,"column":24,"nodeType":"1420","messageId":"1421","endLine":12,"endColumn":32},{"ruleId":"1418","severity":1,"message":"1530","line":13,"column":28,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":45},{"ruleId":"1438","severity":1,"message":"1531","line":28,"column":7,"nodeType":"1440","endLine":28,"endColumn":23,"suggestions":"1532"},{"ruleId":"1418","severity":1,"message":"1533","line":11,"column":8,"nodeType":"1420","messageId":"1421","endLine":11,"endColumn":21},{"ruleId":"1418","severity":1,"message":"1534","line":51,"column":7,"nodeType":"1420","messageId":"1421","endLine":51,"endColumn":20},{"ruleId":"1535","severity":1,"message":"1536","line":63,"column":21,"nodeType":"1467","endLine":63,"endColumn":39},{"ruleId":"1535","severity":1,"message":"1537","line":65,"column":21,"nodeType":"1467","endLine":65,"endColumn":39},{"ruleId":"1535","severity":1,"message":"1538","line":67,"column":21,"nodeType":"1467","endLine":67,"endColumn":40},{"ruleId":"1535","severity":1,"message":"1539","line":68,"column":21,"nodeType":"1467","endLine":68,"endColumn":37},{"ruleId":"1418","severity":1,"message":"1540","line":3,"column":9,"nodeType":"1420","messageId":"1421","endLine":3,"endColumn":25},{"ruleId":"1418","severity":1,"message":"1540","line":3,"column":9,"nodeType":"1420","messageId":"1421","endLine":3,"endColumn":25},{"ruleId":"1418","severity":1,"message":"1540","line":12,"column":9,"nodeType":"1420","messageId":"1421","endLine":12,"endColumn":25},{"ruleId":"1418","severity":1,"message":"1541","line":13,"column":9,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":23},{"ruleId":"1535","severity":1,"message":"1542","line":27,"column":29,"nodeType":"1467","endLine":27,"endColumn":53},{"ruleId":"1535","severity":1,"message":"1543","line":31,"column":29,"nodeType":"1467","endLine":31,"endColumn":49},{"ruleId":"1535","severity":1,"message":"1544","line":35,"column":29,"nodeType":"1467","endLine":35,"endColumn":50},{"ruleId":"1535","severity":1,"message":"1545","line":40,"column":29,"nodeType":"1467","endLine":40,"endColumn":54},{"ruleId":"1535","severity":1,"message":"1546","line":44,"column":29,"nodeType":"1467","endLine":44,"endColumn":51},{"ruleId":"1535","severity":1,"message":"1547","line":48,"column":29,"nodeType":"1467","endLine":48,"endColumn":52},{"ruleId":"1418","severity":1,"message":"1548","line":5,"column":10,"nodeType":"1420","messageId":"1421","endLine":5,"endColumn":20},{"ruleId":"1418","severity":1,"message":"1549","line":198,"column":7,"nodeType":"1420","messageId":"1421","endLine":198,"endColumn":13},{"ruleId":"1535","severity":1,"message":"1550","line":22,"column":17,"nodeType":"1467","endLine":22,"endColumn":42},{"ruleId":"1535","severity":1,"message":"1551","line":23,"column":17,"nodeType":"1467","endLine":23,"endColumn":43},{"ruleId":"1535","severity":1,"message":"1552","line":26,"column":17,"nodeType":"1467","endLine":26,"endColumn":44},{"ruleId":"1535","severity":1,"message":"1553","line":27,"column":17,"nodeType":"1467","endLine":27,"endColumn":45},{"ruleId":"1418","severity":1,"message":"1554","line":7,"column":8,"nodeType":"1420","messageId":"1421","endLine":7,"endColumn":16},{"ruleId":"1418","severity":1,"message":"1555","line":8,"column":8,"nodeType":"1420","messageId":"1421","endLine":8,"endColumn":18},{"ruleId":"1418","severity":1,"message":"1556","line":9,"column":8,"nodeType":"1420","messageId":"1421","endLine":9,"endColumn":16},{"ruleId":"1535","severity":1,"message":"1557","line":13,"column":17,"nodeType":"1467","endLine":13,"endColumn":34},{"ruleId":"1418","severity":1,"message":"1558","line":9,"column":8,"nodeType":"1420","messageId":"1421","endLine":9,"endColumn":13},{"ruleId":"1418","severity":1,"message":"1559","line":9,"column":15,"nodeType":"1420","messageId":"1421","endLine":9,"endColumn":22},{"ruleId":"1418","severity":1,"message":"1560","line":9,"column":24,"nodeType":"1420","messageId":"1421","endLine":9,"endColumn":29},{"ruleId":"1418","severity":1,"message":"1499","line":13,"column":11,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":13},{"ruleId":"1438","severity":1,"message":"1561","line":18,"column":7,"nodeType":"1440","endLine":18,"endColumn":9,"suggestions":"1562"},{"ruleId":"1535","severity":1,"message":"1563","line":24,"column":17,"nodeType":"1467","endLine":24,"endColumn":41},{"ruleId":"1535","severity":1,"message":"1564","line":18,"column":13,"nodeType":"1467","endLine":18,"endColumn":34},{"ruleId":"1535","severity":1,"message":"1565","line":19,"column":13,"nodeType":"1467","endLine":19,"endColumn":40},{"ruleId":"1535","severity":1,"message":"1566","line":20,"column":13,"nodeType":"1467","endLine":20,"endColumn":39},{"ruleId":"1418","severity":1,"message":"1567","line":5,"column":12,"nodeType":"1420","messageId":"1421","endLine":5,"endColumn":14},{"ruleId":"1418","severity":1,"message":"1568","line":13,"column":8,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":20},{"ruleId":"1535","severity":1,"message":"1569","line":30,"column":13,"nodeType":"1467","endLine":30,"endColumn":41},{"ruleId":"1535","severity":1,"message":"1570","line":31,"column":13,"nodeType":"1467","endLine":31,"endColumn":36},{"ruleId":"1535","severity":1,"message":"1571","line":32,"column":13,"nodeType":"1467","endLine":32,"endColumn":37},{"ruleId":"1535","severity":1,"message":"1572","line":65,"column":17,"nodeType":"1467","endLine":65,"endColumn":43},{"ruleId":"1535","severity":1,"message":"1573","line":66,"column":17,"nodeType":"1467","endLine":66,"endColumn":50},{"ruleId":"1535","severity":1,"message":"1574","line":67,"column":17,"nodeType":"1467","endLine":67,"endColumn":53},{"ruleId":"1426","severity":1,"message":"1427","line":17,"column":52,"nodeType":"1428","messageId":"1429","endLine":17,"endColumn":54},{"ruleId":"1418","severity":1,"message":"1575","line":6,"column":9,"nodeType":"1420","messageId":"1421","endLine":6,"endColumn":24},{"ruleId":"1535","severity":1,"message":"1576","line":24,"column":17,"nodeType":"1467","endLine":24,"endColumn":46},{"ruleId":"1535","severity":1,"message":"1577","line":25,"column":17,"nodeType":"1467","endLine":25,"endColumn":41},{"ruleId":"1535","severity":1,"message":"1578","line":28,"column":13,"nodeType":"1467","endLine":28,"endColumn":87},{"ruleId":"1535","severity":1,"message":"1579","line":20,"column":17,"nodeType":"1467","endLine":20,"endColumn":42},{"ruleId":"1535","severity":1,"message":"1580","line":21,"column":16,"nodeType":"1467","endLine":21,"endColumn":44},{"ruleId":"1535","severity":1,"message":"1578","line":24,"column":13,"nodeType":"1467","endLine":24,"endColumn":91},{"ruleId":"1535","severity":1,"message":"1578","line":25,"column":13,"nodeType":"1467","endLine":25,"endColumn":89},{"ruleId":"1426","severity":1,"message":"1427","line":13,"column":52,"nodeType":"1428","messageId":"1429","endLine":13,"endColumn":54},{"ruleId":"1426","severity":1,"message":"1427","line":14,"column":37,"nodeType":"1428","messageId":"1429","endLine":14,"endColumn":39},{"ruleId":"1438","severity":1,"message":"1581","line":27,"column":32,"nodeType":"1440","endLine":27,"endColumn":38,"suggestions":"1582"},{"ruleId":"1422","replacedBy":"1583"},{"ruleId":"1424","replacedBy":"1584"},{"ruleId":"1438","severity":1,"message":"1585","line":21,"column":7,"nodeType":"1440","endLine":21,"endColumn":9,"suggestions":"1586"},{"ruleId":"1418","severity":1,"message":"1526","line":7,"column":9,"nodeType":"1420","messageId":"1421","endLine":7,"endColumn":11},{"ruleId":"1418","severity":1,"message":"1587","line":7,"column":16,"nodeType":"1420","messageId":"1421","endLine":7,"endColumn":17},{"ruleId":"1418","severity":1,"message":"1588","line":14,"column":28,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":46},{"ruleId":"1426","severity":1,"message":"1427","line":22,"column":80,"nodeType":"1428","messageId":"1429","endLine":22,"endColumn":82},{"ruleId":"1438","severity":1,"message":"1589","line":24,"column":7,"nodeType":"1440","endLine":24,"endColumn":9,"suggestions":"1590"},{"ruleId":"1535","severity":1,"message":"1591","line":15,"column":17,"nodeType":"1467","endLine":15,"endColumn":52},{"ruleId":"1418","severity":1,"message":"1592","line":1,"column":28,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":34},{"ruleId":"1418","severity":1,"message":"1504","line":13,"column":7,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1593","line":54,"column":12,"nodeType":"1420","messageId":"1421","endLine":54,"endColumn":26},{"ruleId":"1418","severity":1,"message":"1594","line":54,"column":27,"nodeType":"1420","messageId":"1421","endLine":54,"endColumn":44},{"ruleId":"1418","severity":1,"message":"1505","line":62,"column":13,"nodeType":"1420","messageId":"1421","endLine":62,"endColumn":20},{"ruleId":"1418","severity":1,"message":"1506","line":67,"column":13,"nodeType":"1420","messageId":"1421","endLine":67,"endColumn":23},{"ruleId":"1426","severity":1,"message":"1427","line":71,"column":28,"nodeType":"1428","messageId":"1429","endLine":71,"endColumn":30},{"ruleId":"1426","severity":1,"message":"1472","line":88,"column":36,"nodeType":"1428","messageId":"1437","endLine":88,"endColumn":38},{"ruleId":"1430","severity":1,"message":"1454","line":96,"column":41,"nodeType":"1432","messageId":"1433","endLine":96,"endColumn":43},{"ruleId":"1426","severity":1,"message":"1427","line":97,"column":15,"nodeType":"1595","messageId":"1596","endLine":97,"endColumn":21},{"ruleId":"1426","severity":1,"message":"1427","line":101,"column":15,"nodeType":"1595","messageId":"1596","endLine":101,"endColumn":21},{"ruleId":"1426","severity":1,"message":"1427","line":105,"column":42,"nodeType":"1428","messageId":"1429","endLine":105,"endColumn":44},{"ruleId":"1430","severity":1,"message":"1454","line":156,"column":70,"nodeType":"1432","messageId":"1433","endLine":156,"endColumn":72},{"ruleId":"1438","severity":1,"message":"1507","line":158,"column":9,"nodeType":"1440","endLine":158,"endColumn":29,"suggestions":"1597"},{"ruleId":"1418","severity":1,"message":"1503","line":11,"column":9,"nodeType":"1420","messageId":"1421","endLine":11,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1504","line":14,"column":7,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1481","line":23,"column":11,"nodeType":"1420","messageId":"1421","endLine":23,"endColumn":17},{"ruleId":"1418","severity":1,"message":"1499","line":24,"column":11,"nodeType":"1420","messageId":"1421","endLine":24,"endColumn":13},{"ruleId":"1418","severity":1,"message":"1505","line":34,"column":13,"nodeType":"1420","messageId":"1421","endLine":34,"endColumn":20},{"ruleId":"1418","severity":1,"message":"1506","line":39,"column":13,"nodeType":"1420","messageId":"1421","endLine":39,"endColumn":23},{"ruleId":"1426","severity":1,"message":"1427","line":43,"column":28,"nodeType":"1428","messageId":"1429","endLine":43,"endColumn":30},{"ruleId":"1426","severity":1,"message":"1427","line":60,"column":37,"nodeType":"1428","messageId":"1429","endLine":60,"endColumn":39},{"ruleId":"1438","severity":1,"message":"1507","line":90,"column":80,"nodeType":"1440","endLine":90,"endColumn":100,"suggestions":"1598"},{"ruleId":"1418","severity":1,"message":"1599","line":8,"column":7,"nodeType":"1420","messageId":"1421","endLine":8,"endColumn":14},{"ruleId":"1426","severity":1,"message":"1472","line":30,"column":71,"nodeType":"1428","messageId":"1437","endLine":30,"endColumn":73},{"ruleId":"1430","severity":1,"message":"1454","line":40,"column":41,"nodeType":"1432","messageId":"1433","endLine":40,"endColumn":43},{"ruleId":"1426","severity":1,"message":"1427","line":41,"column":17,"nodeType":"1595","messageId":"1596","endLine":41,"endColumn":23},{"ruleId":"1426","severity":1,"message":"1427","line":46,"column":18,"nodeType":"1595","messageId":"1596","endLine":46,"endColumn":24},{"ruleId":"1426","severity":1,"message":"1427","line":63,"column":50,"nodeType":"1428","messageId":"1429","endLine":63,"endColumn":52},{"ruleId":"1438","severity":1,"message":"1600","line":78,"column":41,"nodeType":"1440","endLine":78,"endColumn":61,"suggestions":"1601"},{"ruleId":"1438","severity":1,"message":"1600","line":80,"column":41,"nodeType":"1440","endLine":80,"endColumn":45,"suggestions":"1602"},{"ruleId":"1426","severity":1,"message":"1427","line":16,"column":66,"nodeType":"1428","messageId":"1429","endLine":16,"endColumn":68},{"ruleId":"1438","severity":1,"message":"1512","line":63,"column":45,"nodeType":"1440","endLine":63,"endColumn":65,"suggestions":"1603"},{"ruleId":"1422","replacedBy":"1604"},{"ruleId":"1424","replacedBy":"1605"},{"ruleId":"1438","severity":1,"message":"1509","line":45,"column":7,"nodeType":"1440","endLine":45,"endColumn":13,"suggestions":"1606"},{"ruleId":"1418","severity":1,"message":"1495","line":1,"column":16,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":25},{"ruleId":"1418","severity":1,"message":"1498","line":1,"column":27,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":35},{"ruleId":"1418","severity":1,"message":"1607","line":11,"column":12,"nodeType":"1420","messageId":"1421","endLine":11,"endColumn":19},{"ruleId":"1438","severity":1,"message":"1509","line":27,"column":7,"nodeType":"1440","endLine":27,"endColumn":13,"suggestions":"1608"},{"ruleId":"1418","severity":1,"message":"1609","line":2,"column":8,"nodeType":"1420","messageId":"1421","endLine":2,"endColumn":21},{"ruleId":"1426","severity":1,"message":"1427","line":15,"column":24,"nodeType":"1428","messageId":"1429","endLine":15,"endColumn":26},{"ruleId":"1610","severity":1,"message":"1611","line":56,"column":13,"nodeType":"1467","endLine":56,"endColumn":17},{"ruleId":"1426","severity":1,"message":"1427","line":88,"column":32,"nodeType":"1428","messageId":"1429","endLine":88,"endColumn":34},{"ruleId":"1438","severity":1,"message":"1612","line":90,"column":7,"nodeType":"1440","endLine":90,"endColumn":9,"suggestions":"1613"},{"ruleId":"1418","severity":1,"message":"1614","line":2,"column":21,"nodeType":"1420","messageId":"1421","endLine":2,"endColumn":27},{"ruleId":"1418","severity":1,"message":"1599","line":14,"column":9,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":16},{"ruleId":"1426","severity":1,"message":"1427","line":31,"column":37,"nodeType":"1428","messageId":"1429","endLine":31,"endColumn":39},{"ruleId":"1426","severity":1,"message":"1427","line":79,"column":43,"nodeType":"1428","messageId":"1429","endLine":79,"endColumn":45},{"ruleId":"1438","severity":1,"message":"1615","line":92,"column":9,"nodeType":"1440","endLine":92,"endColumn":11,"suggestions":"1616"},{"ruleId":"1418","severity":1,"message":"1498","line":1,"column":28,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":36},{"ruleId":"1418","severity":1,"message":"1617","line":4,"column":10,"nodeType":"1420","messageId":"1421","endLine":4,"endColumn":17},{"ruleId":"1418","severity":1,"message":"1618","line":4,"column":20,"nodeType":"1420","messageId":"1421","endLine":4,"endColumn":26},{"ruleId":"1418","severity":1,"message":"1619","line":5,"column":8,"nodeType":"1420","messageId":"1421","endLine":5,"endColumn":26},{"ruleId":"1418","severity":1,"message":"1481","line":13,"column":11,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1454","line":30,"column":75,"nodeType":"1432","messageId":"1433","endLine":30,"endColumn":77},{"ruleId":"1430","severity":1,"message":"1454","line":43,"column":73,"nodeType":"1432","messageId":"1433","endLine":43,"endColumn":75},{"ruleId":"1438","severity":1,"message":"1620","line":53,"column":7,"nodeType":"1440","endLine":53,"endColumn":36,"suggestions":"1621"},{"ruleId":"1418","severity":1,"message":"1617","line":3,"column":10,"nodeType":"1420","messageId":"1421","endLine":3,"endColumn":17},{"ruleId":"1418","severity":1,"message":"1618","line":3,"column":20,"nodeType":"1420","messageId":"1421","endLine":3,"endColumn":26},{"ruleId":"1418","severity":1,"message":"1622","line":14,"column":12,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":20},{"ruleId":"1418","severity":1,"message":"1623","line":14,"column":22,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":33},{"ruleId":"1418","severity":1,"message":"1622","line":46,"column":12,"nodeType":"1420","messageId":"1421","endLine":46,"endColumn":20},{"ruleId":"1418","severity":1,"message":"1623","line":46,"column":22,"nodeType":"1420","messageId":"1421","endLine":46,"endColumn":33},{"ruleId":"1422","replacedBy":"1624"},{"ruleId":"1424","replacedBy":"1625"},{"ruleId":"1418","severity":1,"message":"1626","line":6,"column":8,"nodeType":"1420","messageId":"1421","endLine":6,"endColumn":16},{"ruleId":"1418","severity":1,"message":"1587","line":10,"column":13,"nodeType":"1420","messageId":"1421","endLine":10,"endColumn":14},{"ruleId":"1418","severity":1,"message":"1627","line":12,"column":9,"nodeType":"1420","messageId":"1421","endLine":12,"endColumn":13},{"ruleId":"1426","severity":1,"message":"1427","line":58,"column":39,"nodeType":"1428","messageId":"1429","endLine":58,"endColumn":41},{"ruleId":"1418","severity":1,"message":"1628","line":61,"column":21,"nodeType":"1420","messageId":"1421","endLine":61,"endColumn":31},{"ruleId":"1426","severity":1,"message":"1427","line":64,"column":70,"nodeType":"1428","messageId":"1429","endLine":64,"endColumn":72},{"ruleId":"1426","severity":1,"message":"1427","line":76,"column":52,"nodeType":"1428","messageId":"1429","endLine":76,"endColumn":54},{"ruleId":"1426","severity":1,"message":"1427","line":77,"column":62,"nodeType":"1428","messageId":"1429","endLine":77,"endColumn":64},{"ruleId":"1418","severity":1,"message":"1629","line":97,"column":11,"nodeType":"1420","messageId":"1421","endLine":97,"endColumn":18},{"ruleId":"1438","severity":1,"message":"1630","line":101,"column":43,"nodeType":"1440","endLine":101,"endColumn":45,"suggestions":"1631"},{"ruleId":"1438","severity":1,"message":"1509","line":102,"column":38,"nodeType":"1440","endLine":102,"endColumn":44,"suggestions":"1632"},{"ruleId":"1422","replacedBy":"1633"},{"ruleId":"1424","replacedBy":"1634"},{"ruleId":"1418","severity":1,"message":"1635","line":9,"column":18,"nodeType":"1420","messageId":"1421","endLine":9,"endColumn":22},{"ruleId":"1535","severity":1,"message":"1636","line":23,"column":13,"nodeType":"1467","endLine":23,"endColumn":46},{"ruleId":"1418","severity":1,"message":"1458","line":3,"column":18,"nodeType":"1420","messageId":"1421","endLine":3,"endColumn":22},{"ruleId":"1418","severity":1,"message":"1637","line":4,"column":10,"nodeType":"1420","messageId":"1421","endLine":4,"endColumn":28},{"ruleId":"1418","severity":1,"message":"1638","line":4,"column":30,"nodeType":"1420","messageId":"1421","endLine":4,"endColumn":47},{"ruleId":"1418","severity":1,"message":"1495","line":1,"column":17,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":26},{"ruleId":"1418","severity":1,"message":"1498","line":1,"column":28,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":36},{"ruleId":"1418","severity":1,"message":"1639","line":24,"column":11,"nodeType":"1420","messageId":"1421","endLine":24,"endColumn":15},{"ruleId":"1535","severity":1,"message":"1640","line":13,"column":13,"nodeType":"1467","endLine":13,"endColumn":38},{"ruleId":"1418","severity":1,"message":"1641","line":3,"column":8,"nodeType":"1420","messageId":"1421","endLine":3,"endColumn":20},{"ruleId":"1418","severity":1,"message":"1642","line":4,"column":8,"nodeType":"1420","messageId":"1421","endLine":4,"endColumn":22},{"ruleId":"1418","severity":1,"message":"1643","line":5,"column":8,"nodeType":"1420","messageId":"1421","endLine":5,"endColumn":23},{"ruleId":"1418","severity":1,"message":"1644","line":9,"column":8,"nodeType":"1420","messageId":"1421","endLine":9,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1645","line":10,"column":8,"nodeType":"1420","messageId":"1421","endLine":10,"endColumn":22},{"ruleId":"1418","severity":1,"message":"1646","line":4,"column":8,"nodeType":"1420","messageId":"1421","endLine":4,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1587","line":5,"column":9,"nodeType":"1420","messageId":"1421","endLine":5,"endColumn":10},{"ruleId":"1418","severity":1,"message":"1647","line":46,"column":11,"nodeType":"1420","messageId":"1421","endLine":46,"endColumn":23},{"ruleId":"1418","severity":1,"message":"1639","line":24,"column":11,"nodeType":"1420","messageId":"1421","endLine":24,"endColumn":15},{"ruleId":"1535","severity":1,"message":"1648","line":20,"column":17,"nodeType":"1467","endLine":20,"endColumn":47},{"ruleId":"1535","severity":1,"message":"1649","line":21,"column":17,"nodeType":"1467","endLine":21,"endColumn":53},{"ruleId":"1535","severity":1,"message":"1578","line":24,"column":13,"nodeType":"1467","endLine":24,"endColumn":117},{"ruleId":"1438","severity":1,"message":"1650","line":24,"column":22,"nodeType":"1440","endLine":24,"endColumn":30,"suggestions":"1651"},{"ruleId":"1418","severity":1,"message":"1652","line":9,"column":9,"nodeType":"1420","messageId":"1421","endLine":9,"endColumn":31},{"ruleId":"1418","severity":1,"message":"1558","line":10,"column":19,"nodeType":"1420","messageId":"1421","endLine":10,"endColumn":24},{"ruleId":"1418","severity":1,"message":"1559","line":10,"column":33,"nodeType":"1420","messageId":"1421","endLine":10,"endColumn":40},{"ruleId":"1418","severity":1,"message":"1627","line":10,"column":41,"nodeType":"1420","messageId":"1421","endLine":10,"endColumn":45},{"ruleId":"1418","severity":1,"message":"1618","line":10,"column":47,"nodeType":"1420","messageId":"1421","endLine":10,"endColumn":53},{"ruleId":"1430","severity":1,"message":"1454","line":15,"column":16,"nodeType":"1432","messageId":"1433","endLine":15,"endColumn":18},{"ruleId":"1430","severity":1,"message":"1454","line":29,"column":23,"nodeType":"1432","messageId":"1433","endLine":29,"endColumn":25},{"ruleId":"1426","severity":1,"message":"1427","line":73,"column":62,"nodeType":"1428","messageId":"1429","endLine":73,"endColumn":64},{"ruleId":"1426","severity":1,"message":"1427","line":83,"column":60,"nodeType":"1428","messageId":"1429","endLine":83,"endColumn":62},{"ruleId":"1426","severity":1,"message":"1472","line":84,"column":54,"nodeType":"1428","messageId":"1437","endLine":84,"endColumn":56},{"ruleId":"1426","severity":1,"message":"1472","line":154,"column":62,"nodeType":"1428","messageId":"1437","endLine":154,"endColumn":64},{"ruleId":"1426","severity":1,"message":"1455","line":160,"column":55,"nodeType":"1436","messageId":"1429","endLine":160,"endColumn":63},{"ruleId":"1426","severity":1,"message":"1472","line":161,"column":57,"nodeType":"1428","messageId":"1437","endLine":161,"endColumn":59},{"ruleId":"1426","severity":1,"message":"1472","line":230,"column":62,"nodeType":"1428","messageId":"1437","endLine":230,"endColumn":64},{"ruleId":"1426","severity":1,"message":"1455","line":240,"column":51,"nodeType":"1436","messageId":"1429","endLine":240,"endColumn":59},{"ruleId":"1426","severity":1,"message":"1472","line":243,"column":53,"nodeType":"1428","messageId":"1437","endLine":243,"endColumn":55},{"ruleId":"1426","severity":1,"message":"1472","line":312,"column":62,"nodeType":"1428","messageId":"1437","endLine":312,"endColumn":64},{"ruleId":"1426","severity":1,"message":"1455","line":325,"column":51,"nodeType":"1436","messageId":"1429","endLine":325,"endColumn":59},{"ruleId":"1426","severity":1,"message":"1472","line":328,"column":53,"nodeType":"1428","messageId":"1437","endLine":328,"endColumn":55},{"ruleId":"1426","severity":1,"message":"1472","line":410,"column":62,"nodeType":"1428","messageId":"1437","endLine":410,"endColumn":64},{"ruleId":"1426","severity":1,"message":"1455","line":417,"column":56,"nodeType":"1436","messageId":"1429","endLine":417,"endColumn":64},{"ruleId":"1426","severity":1,"message":"1472","line":419,"column":58,"nodeType":"1428","messageId":"1437","endLine":419,"endColumn":60},{"ruleId":"1426","severity":1,"message":"1472","line":481,"column":62,"nodeType":"1428","messageId":"1437","endLine":481,"endColumn":64},{"ruleId":"1426","severity":1,"message":"1427","line":488,"column":38,"nodeType":"1428","messageId":"1429","endLine":488,"endColumn":40},{"ruleId":"1426","severity":1,"message":"1472","line":514,"column":61,"nodeType":"1428","messageId":"1437","endLine":514,"endColumn":63},{"ruleId":"1426","severity":1,"message":"1472","line":523,"column":42,"nodeType":"1428","messageId":"1437","endLine":523,"endColumn":44},{"ruleId":"1426","severity":1,"message":"1472","line":560,"column":61,"nodeType":"1428","messageId":"1437","endLine":560,"endColumn":63},{"ruleId":"1426","severity":1,"message":"1455","line":570,"column":46,"nodeType":"1436","messageId":"1429","endLine":570,"endColumn":54},{"ruleId":"1426","severity":1,"message":"1472","line":571,"column":49,"nodeType":"1428","messageId":"1437","endLine":571,"endColumn":51},{"ruleId":"1426","severity":1,"message":"1472","line":631,"column":62,"nodeType":"1428","messageId":"1437","endLine":631,"endColumn":64},{"ruleId":"1426","severity":1,"message":"1455","line":640,"column":51,"nodeType":"1436","messageId":"1429","endLine":640,"endColumn":59},{"ruleId":"1426","severity":1,"message":"1472","line":643,"column":53,"nodeType":"1428","messageId":"1437","endLine":643,"endColumn":55},{"ruleId":"1426","severity":1,"message":"1472","line":690,"column":62,"nodeType":"1428","messageId":"1437","endLine":690,"endColumn":64},{"ruleId":"1426","severity":1,"message":"1455","line":699,"column":48,"nodeType":"1436","messageId":"1429","endLine":699,"endColumn":56},{"ruleId":"1426","severity":1,"message":"1472","line":702,"column":50,"nodeType":"1428","messageId":"1437","endLine":702,"endColumn":52},{"ruleId":"1426","severity":1,"message":"1472","line":753,"column":62,"nodeType":"1428","messageId":"1437","endLine":753,"endColumn":64},{"ruleId":"1426","severity":1,"message":"1455","line":761,"column":48,"nodeType":"1436","messageId":"1429","endLine":761,"endColumn":56},{"ruleId":"1426","severity":1,"message":"1472","line":764,"column":50,"nodeType":"1428","messageId":"1437","endLine":764,"endColumn":52},{"ruleId":"1426","severity":1,"message":"1472","line":819,"column":62,"nodeType":"1428","messageId":"1437","endLine":819,"endColumn":64},{"ruleId":"1426","severity":1,"message":"1427","line":849,"column":57,"nodeType":"1428","messageId":"1429","endLine":849,"endColumn":59},{"ruleId":"1430","severity":1,"message":"1454","line":850,"column":63,"nodeType":"1432","messageId":"1433","endLine":850,"endColumn":65},{"ruleId":"1418","severity":1,"message":"1499","line":860,"column":11,"nodeType":"1420","messageId":"1421","endLine":860,"endColumn":13},{"ruleId":"1426","severity":1,"message":"1427","line":868,"column":48,"nodeType":"1428","messageId":"1429","endLine":868,"endColumn":50},{"ruleId":"1426","severity":1,"message":"1455","line":874,"column":51,"nodeType":"1436","messageId":"1429","endLine":874,"endColumn":59},{"ruleId":"1426","severity":1,"message":"1427","line":875,"column":53,"nodeType":"1428","messageId":"1429","endLine":875,"endColumn":55},{"ruleId":"1426","severity":1,"message":"1427","line":881,"column":45,"nodeType":"1428","messageId":"1429","endLine":881,"endColumn":47},{"ruleId":"1535","severity":1,"message":"1653","line":26,"column":17,"nodeType":"1467","endLine":26,"endColumn":49},{"ruleId":"1535","severity":1,"message":"1654","line":27,"column":17,"nodeType":"1467","endLine":27,"endColumn":45},{"ruleId":"1535","severity":1,"message":"1578","line":30,"column":13,"nodeType":"1467","endLine":30,"endColumn":108},{"ruleId":"1418","severity":1,"message":"1655","line":116,"column":7,"nodeType":"1420","messageId":"1421","endLine":116,"endColumn":14},{"ruleId":"1418","severity":1,"message":"1656","line":137,"column":7,"nodeType":"1420","messageId":"1421","endLine":137,"endColumn":17},{"ruleId":"1535","severity":1,"message":"1657","line":15,"column":17,"nodeType":"1467","endLine":15,"endColumn":55},{"ruleId":"1535","severity":1,"message":"1658","line":28,"column":21,"nodeType":"1467","endLine":28,"endColumn":54},{"ruleId":"1535","severity":1,"message":"1659","line":29,"column":21,"nodeType":"1467","endLine":29,"endColumn":48},{"ruleId":"1535","severity":1,"message":"1578","line":32,"column":17,"nodeType":"1467","endLine":32,"endColumn":87},{"ruleId":"1535","severity":1,"message":"1578","line":33,"column":17,"nodeType":"1467","endLine":33,"endColumn":134},{"ruleId":"1418","severity":1,"message":"1524","line":8,"column":9,"nodeType":"1420","messageId":"1421","endLine":8,"endColumn":11},{"ruleId":"1418","severity":1,"message":"1567","line":8,"column":12,"nodeType":"1420","messageId":"1421","endLine":8,"endColumn":14},{"ruleId":"1418","severity":1,"message":"1587","line":8,"column":18,"nodeType":"1420","messageId":"1421","endLine":8,"endColumn":19},{"ruleId":"1418","severity":1,"message":"1639","line":14,"column":11,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":15},{"ruleId":"1430","severity":1,"message":"1431","line":20,"column":80,"nodeType":"1432","messageId":"1433","endLine":20,"endColumn":82},{"ruleId":"1535","severity":1,"message":"1660","line":17,"column":17,"nodeType":"1467","endLine":17,"endColumn":41},{"ruleId":"1535","severity":1,"message":"1661","line":18,"column":17,"nodeType":"1467","endLine":18,"endColumn":37},{"ruleId":"1535","severity":1,"message":"1662","line":19,"column":17,"nodeType":"1467","endLine":19,"endColumn":42},{"ruleId":"1535","severity":1,"message":"1663","line":11,"column":17,"nodeType":"1467","endLine":11,"endColumn":43},{"ruleId":"1535","severity":1,"message":"1664","line":11,"column":17,"nodeType":"1467","endLine":11,"endColumn":43},{"ruleId":"1535","severity":1,"message":"1665","line":9,"column":17,"nodeType":"1467","endLine":9,"endColumn":50},{"ruleId":"1418","severity":1,"message":"1666","line":25,"column":11,"nodeType":"1420","messageId":"1421","endLine":25,"endColumn":16},{"ruleId":"1418","severity":1,"message":"1646","line":9,"column":8,"nodeType":"1420","messageId":"1421","endLine":9,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1567","line":11,"column":9,"nodeType":"1420","messageId":"1421","endLine":11,"endColumn":11},{"ruleId":"1418","severity":1,"message":"1526","line":11,"column":15,"nodeType":"1420","messageId":"1421","endLine":11,"endColumn":17},{"ruleId":"1418","severity":1,"message":"1587","line":11,"column":19,"nodeType":"1420","messageId":"1421","endLine":11,"endColumn":20},{"ruleId":"1418","severity":1,"message":"1667","line":17,"column":10,"nodeType":"1420","messageId":"1421","endLine":17,"endColumn":29},{"ruleId":"1418","severity":1,"message":"1626","line":17,"column":30,"nodeType":"1420","messageId":"1421","endLine":17,"endColumn":38},{"ruleId":"1418","severity":1,"message":"1668","line":17,"column":40,"nodeType":"1420","messageId":"1421","endLine":17,"endColumn":43},{"ruleId":"1418","severity":1,"message":"1669","line":17,"column":44,"nodeType":"1420","messageId":"1421","endLine":17,"endColumn":50},{"ruleId":"1418","severity":1,"message":"1670","line":17,"column":52,"nodeType":"1420","messageId":"1421","endLine":17,"endColumn":59},{"ruleId":"1418","severity":1,"message":"1458","line":17,"column":60,"nodeType":"1420","messageId":"1421","endLine":17,"endColumn":64},{"ruleId":"1418","severity":1,"message":"1671","line":18,"column":9,"nodeType":"1420","messageId":"1421","endLine":18,"endColumn":19},{"ruleId":"1535","severity":1,"message":"1578","line":88,"column":17,"nodeType":"1467","endLine":88,"endColumn":83},{"ruleId":"1535","severity":1,"message":"1578","line":89,"column":17,"nodeType":"1467","endLine":89,"endColumn":90},{"ruleId":"1418","severity":1,"message":"1525","line":11,"column":12,"nodeType":"1420","messageId":"1421","endLine":11,"endColumn":14},{"ruleId":"1535","severity":1,"message":"1672","line":34,"column":17,"nodeType":"1467","endLine":34,"endColumn":49},{"ruleId":"1535","severity":1,"message":"1673","line":35,"column":17,"nodeType":"1467","endLine":35,"endColumn":50},{"ruleId":"1418","severity":1,"message":"1674","line":14,"column":10,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1675","line":14,"column":17,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":27},{"ruleId":"1418","severity":1,"message":"1676","line":14,"column":29,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":38},{"ruleId":"1418","severity":1,"message":"1677","line":14,"column":40,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":54},{"ruleId":"1418","severity":1,"message":"1678","line":14,"column":56,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":71},{"ruleId":"1418","severity":1,"message":"1667","line":14,"column":72,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":91},{"ruleId":"1418","severity":1,"message":"1669","line":14,"column":92,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":98},{"ruleId":"1418","severity":1,"message":"1670","line":14,"column":100,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":107},{"ruleId":"1418","severity":1,"message":"1679","line":14,"column":109,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":120},{"ruleId":"1418","severity":1,"message":"1680","line":14,"column":123,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":129},{"ruleId":"1418","severity":1,"message":"1681","line":14,"column":130,"nodeType":"1420","messageId":"1421","endLine":14,"endColumn":139},{"ruleId":"1418","severity":1,"message":"1671","line":15,"column":9,"nodeType":"1420","messageId":"1421","endLine":15,"endColumn":19},{"ruleId":"1535","severity":1,"message":"1578","line":94,"column":13,"nodeType":"1467","endLine":94,"endColumn":80},{"ruleId":"1418","severity":1,"message":"1667","line":17,"column":10,"nodeType":"1420","messageId":"1421","endLine":17,"endColumn":29},{"ruleId":"1418","severity":1,"message":"1626","line":17,"column":30,"nodeType":"1420","messageId":"1421","endLine":17,"endColumn":38},{"ruleId":"1418","severity":1,"message":"1668","line":17,"column":40,"nodeType":"1420","messageId":"1421","endLine":17,"endColumn":43},{"ruleId":"1418","severity":1,"message":"1669","line":17,"column":44,"nodeType":"1420","messageId":"1421","endLine":17,"endColumn":50},{"ruleId":"1418","severity":1,"message":"1670","line":17,"column":52,"nodeType":"1420","messageId":"1421","endLine":17,"endColumn":59},{"ruleId":"1418","severity":1,"message":"1458","line":17,"column":60,"nodeType":"1420","messageId":"1421","endLine":17,"endColumn":64},{"ruleId":"1418","severity":1,"message":"1671","line":18,"column":9,"nodeType":"1420","messageId":"1421","endLine":18,"endColumn":19},{"ruleId":"1535","severity":1,"message":"1578","line":86,"column":13,"nodeType":"1467","endLine":86,"endColumn":81},{"ruleId":"1535","severity":1,"message":"1578","line":87,"column":13,"nodeType":"1467","endLine":87,"endColumn":88},{"ruleId":"1426","severity":1,"message":"1427","line":12,"column":29,"nodeType":"1428","messageId":"1429","endLine":12,"endColumn":31},{"ruleId":"1438","severity":1,"message":"1682","line":22,"column":40,"nodeType":"1440","endLine":22,"endColumn":46,"suggestions":"1683"},{"ruleId":"1418","severity":1,"message":"1684","line":9,"column":12,"nodeType":"1420","messageId":"1421","endLine":9,"endColumn":26},{"ruleId":"1426","severity":1,"message":"1427","line":14,"column":29,"nodeType":"1428","messageId":"1429","endLine":14,"endColumn":31},{"ruleId":"1438","severity":1,"message":"1682","line":31,"column":28,"nodeType":"1440","endLine":31,"endColumn":34,"suggestions":"1685"},{"ruleId":"1686","severity":1,"message":"1687","line":56,"column":9,"nodeType":"1688","endLine":56,"endColumn":36},{"ruleId":"1418","severity":1,"message":"1689","line":7,"column":27,"nodeType":"1420","messageId":"1421","endLine":7,"endColumn":32},{"ruleId":"1426","severity":1,"message":"1427","line":14,"column":29,"nodeType":"1428","messageId":"1429","endLine":14,"endColumn":31},{"ruleId":"1438","severity":1,"message":"1682","line":32,"column":7,"nodeType":"1440","endLine":32,"endColumn":13,"suggestions":"1690"},{"ruleId":"1418","severity":1,"message":"1689","line":7,"column":27,"nodeType":"1420","messageId":"1421","endLine":7,"endColumn":32},{"ruleId":"1418","severity":1,"message":"1691","line":9,"column":12,"nodeType":"1420","messageId":"1421","endLine":9,"endColumn":27},{"ruleId":"1426","severity":1,"message":"1427","line":14,"column":29,"nodeType":"1428","messageId":"1429","endLine":14,"endColumn":31},{"ruleId":"1438","severity":1,"message":"1682","line":33,"column":7,"nodeType":"1440","endLine":33,"endColumn":13,"suggestions":"1692"},{"ruleId":"1418","severity":1,"message":"1671","line":4,"column":9,"nodeType":"1420","messageId":"1421","endLine":4,"endColumn":19},{"ruleId":"1426","severity":1,"message":"1427","line":15,"column":29,"nodeType":"1428","messageId":"1429","endLine":15,"endColumn":31},{"ruleId":"1438","severity":1,"message":"1682","line":30,"column":28,"nodeType":"1440","endLine":30,"endColumn":34,"suggestions":"1693"},{"ruleId":"1418","severity":1,"message":"1671","line":4,"column":9,"nodeType":"1420","messageId":"1421","endLine":4,"endColumn":19},{"ruleId":"1426","severity":1,"message":"1427","line":20,"column":29,"nodeType":"1428","messageId":"1429","endLine":20,"endColumn":31},{"ruleId":"1438","severity":1,"message":"1682","line":49,"column":40,"nodeType":"1440","endLine":49,"endColumn":46,"suggestions":"1694"},{"ruleId":"1418","severity":1,"message":"1652","line":2,"column":9,"nodeType":"1420","messageId":"1421","endLine":2,"endColumn":31},{"ruleId":"1418","severity":1,"message":"1695","line":2,"column":33,"nodeType":"1420","messageId":"1421","endLine":2,"endColumn":53},{"ruleId":"1418","severity":1,"message":"1559","line":3,"column":33,"nodeType":"1420","messageId":"1421","endLine":3,"endColumn":40},{"ruleId":"1418","severity":1,"message":"1627","line":3,"column":41,"nodeType":"1420","messageId":"1421","endLine":3,"endColumn":45},{"ruleId":"1418","severity":1,"message":"1618","line":3,"column":47,"nodeType":"1420","messageId":"1421","endLine":3,"endColumn":53},{"ruleId":"1418","severity":1,"message":"1541","line":4,"column":9,"nodeType":"1420","messageId":"1421","endLine":4,"endColumn":23},{"ruleId":"1430","severity":1,"message":"1454","line":16,"column":16,"nodeType":"1432","messageId":"1433","endLine":16,"endColumn":18},{"ruleId":"1426","severity":1,"message":"1427","line":29,"column":28,"nodeType":"1428","messageId":"1429","endLine":29,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1454","line":62,"column":23,"nodeType":"1432","messageId":"1433","endLine":62,"endColumn":25},{"ruleId":"1418","severity":1,"message":"1666","line":96,"column":11,"nodeType":"1420","messageId":"1421","endLine":96,"endColumn":16},{"ruleId":"1426","severity":1,"message":"1427","line":101,"column":41,"nodeType":"1428","messageId":"1429","endLine":101,"endColumn":43},{"ruleId":"1426","severity":1,"message":"1427","line":104,"column":56,"nodeType":"1428","messageId":"1429","endLine":104,"endColumn":58},{"ruleId":"1426","severity":1,"message":"1427","line":114,"column":64,"nodeType":"1428","messageId":"1429","endLine":114,"endColumn":66},{"ruleId":"1426","severity":1,"message":"1472","line":115,"column":58,"nodeType":"1428","messageId":"1437","endLine":115,"endColumn":60},{"ruleId":"1426","severity":1,"message":"1427","line":197,"column":41,"nodeType":"1428","messageId":"1429","endLine":197,"endColumn":43},{"ruleId":"1426","severity":1,"message":"1472","line":199,"column":52,"nodeType":"1428","messageId":"1437","endLine":199,"endColumn":54},{"ruleId":"1426","severity":1,"message":"1455","line":212,"column":55,"nodeType":"1436","messageId":"1429","endLine":212,"endColumn":63},{"ruleId":"1426","severity":1,"message":"1472","line":215,"column":57,"nodeType":"1428","messageId":"1437","endLine":215,"endColumn":59},{"ruleId":"1418","severity":1,"message":"1499","line":284,"column":11,"nodeType":"1420","messageId":"1421","endLine":284,"endColumn":13},{"ruleId":"1418","severity":1,"message":"1666","line":285,"column":11,"nodeType":"1420","messageId":"1421","endLine":285,"endColumn":16},{"ruleId":"1426","severity":1,"message":"1427","line":292,"column":31,"nodeType":"1428","messageId":"1429","endLine":292,"endColumn":33},{"ruleId":"1426","severity":1,"message":"1455","line":298,"column":51,"nodeType":"1436","messageId":"1429","endLine":298,"endColumn":59},{"ruleId":"1426","severity":1,"message":"1427","line":299,"column":53,"nodeType":"1428","messageId":"1429","endLine":299,"endColumn":55},{"ruleId":"1426","severity":1,"message":"1427","line":305,"column":35,"nodeType":"1428","messageId":"1429","endLine":305,"endColumn":37},{"ruleId":"1426","severity":1,"message":"1427","line":14,"column":47,"nodeType":"1428","messageId":"1429","endLine":14,"endColumn":49},{"ruleId":"1426","severity":1,"message":"1427","line":16,"column":37,"nodeType":"1428","messageId":"1429","endLine":16,"endColumn":39},{"ruleId":"1426","severity":1,"message":"1427","line":25,"column":28,"nodeType":"1428","messageId":"1429","endLine":25,"endColumn":30},{"ruleId":"1438","severity":1,"message":"1696","line":29,"column":52,"nodeType":"1440","endLine":29,"endColumn":54,"suggestions":"1697"},{"ruleId":"1535","severity":1,"message":"1577","line":20,"column":12,"nodeType":"1467","endLine":20,"endColumn":36},{"ruleId":"1535","severity":1,"message":"1576","line":25,"column":12,"nodeType":"1467","endLine":25,"endColumn":41},{"ruleId":"1535","severity":1,"message":"1698","line":32,"column":12,"nodeType":"1467","endLine":32,"endColumn":43},{"ruleId":"1535","severity":1,"message":"1636","line":54,"column":12,"nodeType":"1467","endLine":54,"endColumn":45},{"ruleId":"1535","severity":1,"message":"1640","line":61,"column":12,"nodeType":"1467","endLine":61,"endColumn":37},{"ruleId":"1418","severity":1,"message":"1699","line":5,"column":8,"nodeType":"1420","messageId":"1421","endLine":5,"endColumn":28},{"ruleId":"1418","severity":1,"message":"1700","line":6,"column":8,"nodeType":"1420","messageId":"1421","endLine":6,"endColumn":31},{"ruleId":"1418","severity":1,"message":"1701","line":7,"column":8,"nodeType":"1420","messageId":"1421","endLine":7,"endColumn":37},{"ruleId":"1418","severity":1,"message":"1498","line":1,"column":27,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":35},{"ruleId":"1418","severity":1,"message":"1540","line":10,"column":9,"nodeType":"1420","messageId":"1421","endLine":10,"endColumn":25},{"ruleId":"1426","severity":1,"message":"1427","line":26,"column":28,"nodeType":"1428","messageId":"1429","endLine":26,"endColumn":30},{"ruleId":"1418","severity":1,"message":"1702","line":6,"column":8,"nodeType":"1420","messageId":"1421","endLine":6,"endColumn":19},{"ruleId":"1418","severity":1,"message":"1703","line":13,"column":7,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":13},{"ruleId":"1535","severity":1,"message":"1648","line":18,"column":12,"nodeType":"1467","endLine":18,"endColumn":42},{"ruleId":"1535","severity":1,"message":"1704","line":23,"column":12,"nodeType":"1467","endLine":23,"endColumn":48},{"ruleId":"1535","severity":1,"message":"1658","line":33,"column":12,"nodeType":"1467","endLine":33,"endColumn":45},{"ruleId":"1535","severity":1,"message":"1657","line":39,"column":12,"nodeType":"1467","endLine":39,"endColumn":50},{"ruleId":"1418","severity":1,"message":"1525","line":6,"column":13,"nodeType":"1420","messageId":"1421","endLine":6,"endColumn":15},{"ruleId":"1426","severity":1,"message":"1427","line":20,"column":53,"nodeType":"1428","messageId":"1429","endLine":20,"endColumn":55},{"ruleId":"1426","severity":1,"message":"1427","line":21,"column":30,"nodeType":"1428","messageId":"1429","endLine":21,"endColumn":32},{"ruleId":"1438","severity":1,"message":"1705","line":28,"column":36,"nodeType":"1440","endLine":28,"endColumn":38,"suggestions":"1706"},{"ruleId":"1426","severity":1,"message":"1427","line":89,"column":45,"nodeType":"1428","messageId":"1429","endLine":89,"endColumn":47},{"ruleId":"1426","severity":1,"message":"1427","line":92,"column":31,"nodeType":"1428","messageId":"1429","endLine":92,"endColumn":33},{"ruleId":"1535","severity":1,"message":"1653","line":15,"column":12,"nodeType":"1467","endLine":15,"endColumn":44},{"ruleId":"1535","severity":1,"message":"1654","line":20,"column":12,"nodeType":"1467","endLine":20,"endColumn":40},{"ruleId":"1535","severity":1,"message":"1579","line":25,"column":12,"nodeType":"1467","endLine":25,"endColumn":37},{"ruleId":"1535","severity":1,"message":"1580","line":30,"column":12,"nodeType":"1467","endLine":30,"endColumn":40},{"ruleId":"1535","severity":1,"message":"1664","line":40,"column":12,"nodeType":"1467","endLine":40,"endColumn":38},{"ruleId":"1426","severity":1,"message":"1427","line":18,"column":29,"nodeType":"1428","messageId":"1429","endLine":18,"endColumn":31},{"ruleId":"1438","severity":1,"message":"1707","line":34,"column":8,"nodeType":"1440","endLine":34,"endColumn":17,"suggestions":"1708"},{"ruleId":"1418","severity":1,"message":"1709","line":36,"column":12,"nodeType":"1420","messageId":"1421","endLine":36,"endColumn":15},{"ruleId":"1426","severity":1,"message":"1427","line":88,"column":45,"nodeType":"1428","messageId":"1429","endLine":88,"endColumn":47},{"ruleId":"1426","severity":1,"message":"1427","line":91,"column":31,"nodeType":"1428","messageId":"1429","endLine":91,"endColumn":33},{"ruleId":"1418","severity":1,"message":"1495","line":1,"column":16,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":25},{"ruleId":"1535","severity":1,"message":"1661","line":12,"column":12,"nodeType":"1467","endLine":12,"endColumn":32},{"ruleId":"1535","severity":1,"message":"1662","line":17,"column":12,"nodeType":"1467","endLine":17,"endColumn":37},{"ruleId":"1535","severity":1,"message":"1663","line":22,"column":12,"nodeType":"1467","endLine":22,"endColumn":38},{"ruleId":"1535","severity":1,"message":"1660","line":27,"column":12,"nodeType":"1467","endLine":27,"endColumn":36},{"ruleId":"1535","severity":1,"message":"1665","line":32,"column":12,"nodeType":"1467","endLine":32,"endColumn":45},{"ruleId":"1418","severity":1,"message":"1710","line":15,"column":8,"nodeType":"1420","messageId":"1421","endLine":15,"endColumn":19},{"ruleId":"1418","severity":1,"message":"1711","line":17,"column":7,"nodeType":"1420","messageId":"1421","endLine":17,"endColumn":16},{"ruleId":"1438","severity":1,"message":"1712","line":41,"column":7,"nodeType":"1440","endLine":41,"endColumn":9,"suggestions":"1713"},{"ruleId":"1426","severity":1,"message":"1427","line":46,"column":53,"nodeType":"1428","messageId":"1429","endLine":46,"endColumn":55},{"ruleId":"1438","severity":1,"message":"1714","line":54,"column":7,"nodeType":"1440","endLine":54,"endColumn":9,"suggestions":"1715"},{"ruleId":"1418","severity":1,"message":"1498","line":1,"column":27,"nodeType":"1420","messageId":"1421","endLine":1,"endColumn":35},{"ruleId":"1418","severity":1,"message":"1716","line":4,"column":9,"nodeType":"1420","messageId":"1421","endLine":4,"endColumn":29},{"ruleId":"1418","severity":1,"message":"1717","line":10,"column":8,"nodeType":"1420","messageId":"1421","endLine":10,"endColumn":18},{"ruleId":"1418","severity":1,"message":"1458","line":13,"column":20,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":24},{"ruleId":"1418","severity":1,"message":"1718","line":13,"column":26,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":30},{"ruleId":"1418","severity":1,"message":"1719","line":13,"column":32,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":40},{"ruleId":"1418","severity":1,"message":"1458","line":13,"column":47,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":51},{"ruleId":"1426","severity":1,"message":"1427","line":36,"column":39,"nodeType":"1428","messageId":"1429","endLine":36,"endColumn":41},{"ruleId":"1426","severity":1,"message":"1427","line":37,"column":43,"nodeType":"1428","messageId":"1429","endLine":37,"endColumn":45},{"ruleId":"1418","severity":1,"message":"1718","line":13,"column":26,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":30},{"ruleId":"1418","severity":1,"message":"1719","line":13,"column":32,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":40},{"ruleId":"1418","severity":1,"message":"1458","line":13,"column":47,"nodeType":"1420","messageId":"1421","endLine":13,"endColumn":51},{"ruleId":"1418","severity":1,"message":"1720","line":32,"column":11,"nodeType":"1420","messageId":"1421","endLine":32,"endColumn":17},{"ruleId":"1426","severity":1,"message":"1427","line":36,"column":39,"nodeType":"1428","messageId":"1429","endLine":36,"endColumn":41},{"ruleId":"1426","severity":1,"message":"1427","line":39,"column":43,"nodeType":"1428","messageId":"1429","endLine":39,"endColumn":45},{"ruleId":"1418","severity":1,"message":"1646","line":4,"column":8,"nodeType":"1420","messageId":"1421","endLine":4,"endColumn":15},{"ruleId":"1418","severity":1,"message":"1587","line":5,"column":9,"nodeType":"1420","messageId":"1421","endLine":5,"endColumn":10},"no-unused-vars","'JWTCHECK' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["1721"],"no-negated-in-lhs",["1722"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'WorkOrderCount' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'UX'. Either exclude it or remove the dependency array.","ArrayExpression",["1723"],"'LiveHelpIcon' is defined but never used.","'ErrorOutlineIcon' is defined but never used.","'TouchAppIcon' is defined but never used.","'MapParameters' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '!==' and instead saw '!='.","Array.prototype.map() expects a return value from function.","React Hook useMemo has an unnecessary dependency: 'SCAN'. Either exclude it or remove the dependency array.",["1724"],"'Cell' is defined but never used.",["1721"],["1722"],"'ChartGroupArrayData' is assigned a value but never used.","'Removeinteriors' is assigned a value but never used.","'JobTypes' is assigned a value but never used.","'checkResourceCount' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","Array.prototype.map() expects a value to be returned at the end of arrow function.","'GetSites' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Pushhistory'. Either include it or remove the dependency array.",["1725"],["1726"],"React Hook useEffect has a missing dependency: 'checkDataStatus'. Either include it or remove the dependency array.",["1727"],"React Hook useEffect has a missing dependency: 'Fetch'. Either include it or remove the dependency array.",["1728"],"'STRAPI' is assigned a value but never used.","'DataStatus' is assigned a value but never used.","'setDataStatus' is assigned a value but never used.",["1729"],"'ComponentAbout' is defined but never used.","'ComponentLanding' is defined but never used.","'ComponentContact' is defined but never used.","'ComponentUnAuth' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'AUTH'. Either exclude it or remove the dependency array.",["1730"],"'Divider' is defined but never used.","'Drawer' is defined but never used.","'PublicNavigation' is defined but never used.","'classes' is assigned a value but never used.","'useEffect' is defined but never used.","'withRouter' is defined but never used.",["1731"],"'useState' is defined but never used.","'UX' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Scan'. Either include it or remove the dependency array.",["1732"],"'RenderScamSites' is assigned a value but never used.","'uniqBy' is defined but never used.","'divStyle' is assigned a value but never used.","'ColorMe' is assigned a value but never used.","'FindMinMax' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateMarkers'. Either include it or remove the dependency array.",["1733"],"React Hook useEffect has a missing dependency: 'extractResults'. Either include it or remove the dependency array.",["1734"],["1735"],"React Hook useEffect has a missing dependency: 'CreateCenterpoints'. Either include it or remove the dependency array.",["1736"],"'setMultiplier' is assigned a value but never used.","'ClusterTotal' is assigned a value but never used.","'FindClusterTotal' is assigned a value but never used.","'scanID' is assigned a value but never used.","'HandleCompare' is assigned a value but never used.","'KeyboardTimePicker' is defined but never used.","'Processing' is assigned a value but never used.","'useContext_STRAPI_FULL' is defined but never used.","'useContext_SCAN_FULL' is defined but never used.","'FetchPreviousScans' is defined but never used.","'H1' is defined but never used.","'H3' is defined but never used.","'H4' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'COMPARE'. Either exclude it or remove the dependency array.",["1737"],"'setLimit' is assigned a value but never used.","'setModelsSelected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateSelects'. Either include it or remove the dependency array.",["1738"],"'Clusters_Main' is defined but never used.","'CompareModels' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Locations_Main must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Resources_Main must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component WorkOrders_Main must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Clients_Main must be in PascalCase or SCREAMING_SNAKE_CASE","'numberWithCommas' is defined but never used.","'findClientName' is defined but never used.","Imported JSX component SubSection_Locations must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_Trade must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_Client must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_Workorders must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_FullMap must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_Clusters must be in PascalCase or SCREAMING_SNAKE_CASE","'makeStyles' is defined but never used.","'ULList' is assigned a value but never used.","Imported JSX component Locations_Basic_Stats must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Locations_Basic_Charts must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Location_ResourceSpread must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Location_WorkorderSpread must be in PascalCase or SCREAMING_SNAKE_CASE","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'MoreIcon' is defined but never used.","Imported JSX component Map_Full_Main must be in PascalCase or SCREAMING_SNAKE_CASE","'sumBy' is defined but never used.","'groupBy' is defined but never used.","'chain' is defined but never used.","React Hook useEffect has a missing dependency: 'MODEL.SelectedModel.STOREMARKERCENTERPOINTS'. Either include it or remove the dependency array.",["1739"],"Imported JSX component Clusters_ResultsList must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component WorkOrders_Basics must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component WorkOrder_Radial_Charts must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component WorkOrder_Basic_Charts must be in PascalCase or SCREAMING_SNAKE_CASE","'H2' is defined but never used.","'Trade_Ratios' is defined but never used.","Imported JSX component Trade_ResourceAllocation must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Trade_Radial_Charts must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Trade_Radial_Clients must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component TradeSpecific_Overview must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component TradeSpecific_ClientBreakdown must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Trade_ResourceAllocationOverTime must be in PascalCase or SCREAMING_SNAKE_CASE","'OBJ_SITE_GLOBAL' is defined but never used.","Imported JSX component Locaction_Radial_Clusters must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Chart_Pie_OutofScope must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Stats_Bar must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Workorder_pie_Clients must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Workorder_Radial_Cluster must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'ByClient'. Either include it or remove the dependency array.",["1740"],["1721"],["1722"],"React Hook useEffect has missing dependencies: 'SCAN.SelectedModelMeta.DateEnd' and 'SCAN.SelectedModelMeta.DateStart'. Either include them or remove the dependency array.",["1741"],"'P' is defined but never used.","'setTradeAllocation' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Model.STOREMARKERCENTERPOINTS'. Either include it or remove the dependency array.",["1742"],"Imported JSX component Map_SingleModelReview_FULLModel must be in PascalCase or SCREAMING_SNAKE_CASE","'useRef' is defined but never used.","'DisplayMarkers' is assigned a value but never used.","'setDisplayMarkers' is assigned a value but never used.","ReturnStatement","expectedReturnValue",["1743"],["1744"],"'options' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreatePolygons'. Either include it or remove the dependency array.",["1745"],["1746"],["1747"],["1721"],["1722"],["1748"],"'Results' is assigned a value but never used.",["1749"],"'NumberReducer' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'Trades'. Either include it or remove the dependency array.",["1750"],"'Circle' is defined but never used.","React Hook useEffect has missing dependencies: 'CreateMarkers' and 'CreatePolygon'. Either include them or remove the dependency array.",["1751"],"'orderBy' is defined but never used.","'remove' is defined but never used.","'ReviewSelectionBtn' is defined but never used.","React Hook useEffect has missing dependencies: 'STRAPI.UserData.Customers' and 'USERSCAN.UserScanSingleDataSets'. Either include them or remove the dependency array.",["1752"],"'Fetching' is assigned a value but never used.","'setFetching' is assigned a value but never used.",["1721"],["1722"],"'PieChart' is defined but never used.","'find' is defined but never used.","'ClientPush' is assigned a value but never used.","'inScope' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'MODEL'. Either include it or remove the dependency array.",["1753"],["1754"],["1721"],["1722"],"'term' is assigned a value but never used.","Imported JSX component ClusterBar_ResourceAllocation must be in PascalCase or SCREAMING_SNAKE_CASE","'setMainMapLocation' is defined but never used.","'SetMapClusterType' is defined but never used.","'SCAN' is assigned a value but never used.","Imported JSX component ClusterBar_WorkOrders must be in PascalCase or SCREAMING_SNAKE_CASE","'PieChartIcon' is defined but never used.","'AssessmentIcon' is defined but never used.","'BubbleChartIcon' is defined but never used.","'MapIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'Section' is defined but never used.","'handleDelete' is assigned a value but never used.","Imported JSX component Resources_Radial_Resources must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Resources_Bar_ResourceAllocation must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useMemo has an unnecessary dependency: 'SINGLE'. Either exclude it or remove the dependency array.",["1755"],"'GroupArrayByOccurances' is defined but never used.","Imported JSX component Workorders_Radial_Workorders must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Workorder_pie_outofscope must be in PascalCase or SCREAMING_SNAKE_CASE","'Min2Pie' is assigned a value but never used.","'Gtr2Radial' is assigned a value but never used.","Imported JSX component Resources_Line_Allocation_OverTime must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Resources_Pie_ClientBreakdown must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Resource_Cluster_Funnel must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_Pie_Resources must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_Pie_Sites must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_Pie_WorkOrders must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_Line_Workorders must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Workorder_Bar_Overtime must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_line_ResourcesOvertime must be in PascalCase or SCREAMING_SNAKE_CASE","'MODEL' is assigned a value but never used.","'ResponsiveContainer' is defined but never used.","'Pie' is defined but never used.","'Legend' is defined but never used.","'Tooltip' is defined but never used.","'colorArray' is defined but never used.","Imported JSX component Client_WorkOrderDistribution must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_Selected_ClusterSpread must be in PascalCase or SCREAMING_SNAKE_CASE","'Radar' is defined but never used.","'RadarChart' is defined but never used.","'PolarGrid' is defined but never used.","'PolarAngleAxis' is defined but never used.","'PolarRadiusAxis' is defined but never used.","'FunnelChart' is defined but never used.","'Funnel' is defined but never used.","'LabelList' is defined but never used.","React Hook useEffect has a missing dependency: 'CreateNivoData'. Either include it or remove the dependency array.",["1756"],"'NivoRadialKeys' is assigned a value but never used.",["1757"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Label' is assigned a value but never used.",["1758"],"'NivoWaffleTotal' is assigned a value but never used.",["1759"],["1760"],["1761"],"'HandleResourceFilter' is defined but never used.","React Hook useEffect has a missing dependency: 'OOSTotals'. Either include it or remove the dependency array.",["1762"],"Imported JSX component Clusters_Pie_ClusterNumbers must be in PascalCase or SCREAMING_SNAKE_CASE","'ClusterComparisonPie' is defined but never used.","'ClusterComparisonRadial' is defined but never used.","'ClusterResourcesComparisonBar' is defined but never used.","'ChartHeader' is defined but never used.","'Chart1' is assigned a value but never used.","Imported JSX component Resources_Pie_ResourceAllocation must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'SetNumbers'. Either include it or remove the dependency array.",["1763"],"React Hook useEffect has missing dependencies: 'Calculate' and 'MODELS'. Either include them or remove the dependency array.",["1764"],"'RAW' is assigned a value but never used.","'ModelSelect' is defined but never used.","'useStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'MODEL.CompareData.UserSelected' and 'SCAN.SelectedModel'. Either include them or remove the dependency array.",["1765"],"React Hook useEffect has a missing dependency: 'CreateOptions'. Either include it or remove the dependency array.",["1766"],"'OBJ_RESOURCES_GLOBAL' is defined but never used.","'NivoRadial' is defined but never used.","'Area' is defined but never used.","'BarChart' is defined but never used.","'Ignore' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1767","fix":"1768"},{"desc":"1767","fix":"1769"},{"desc":"1770","fix":"1771"},{"desc":"1770","fix":"1772"},{"desc":"1773","fix":"1774"},{"desc":"1775","fix":"1776"},{"desc":"1770","fix":"1777"},{"desc":"1767","fix":"1778"},{"desc":"1779","fix":"1780"},{"desc":"1781","fix":"1782"},{"desc":"1783","fix":"1784"},{"desc":"1785","fix":"1786"},{"desc":"1787","fix":"1788"},{"desc":"1789","fix":"1790"},{"desc":"1767","fix":"1791"},{"desc":"1792","fix":"1793"},{"desc":"1794","fix":"1795"},{"desc":"1796","fix":"1797"},{"desc":"1798","fix":"1799"},{"desc":"1800","fix":"1801"},{"desc":"1802","fix":"1803"},{"desc":"1802","fix":"1804"},{"desc":"1805","fix":"1806"},{"desc":"1807","fix":"1808"},{"desc":"1809","fix":"1810"},{"desc":"1785","fix":"1811"},{"desc":"1785","fix":"1812"},{"desc":"1813","fix":"1814"},{"desc":"1815","fix":"1816"},{"desc":"1817","fix":"1818"},{"desc":"1819","fix":"1820"},{"desc":"1785","fix":"1821"},{"desc":"1767","fix":"1822"},{"desc":"1823","fix":"1824"},{"desc":"1823","fix":"1825"},{"desc":"1823","fix":"1826"},{"desc":"1823","fix":"1827"},{"desc":"1823","fix":"1828"},{"desc":"1823","fix":"1829"},{"desc":"1830","fix":"1831"},{"desc":"1832","fix":"1833"},{"desc":"1834","fix":"1835"},{"desc":"1836","fix":"1837"},{"desc":"1838","fix":"1839"},"Update the dependencies array to be: []",{"range":"1840","text":"1841"},{"range":"1842","text":"1841"},"Update the dependencies array to be: [AUTH, Pushhistory]",{"range":"1843","text":"1844"},{"range":"1845","text":"1844"},"Update the dependencies array to be: [STRAPI.UserData, checkDataStatus]",{"range":"1846","text":"1847"},"Update the dependencies array to be: [Fetch]",{"range":"1848","text":"1849"},{"range":"1850","text":"1844"},{"range":"1851","text":"1841"},"Update the dependencies array to be: [Pushhistory, UX]",{"range":"1852","text":"1853"},"Update the dependencies array to be: [SCAN.active, Scan]",{"range":"1854","text":"1855"},"Update the dependencies array to be: [CreateMarkers, SCAN.MarkerScanResidual]",{"range":"1856","text":"1857"},"Update the dependencies array to be: [SCAN, extractResults]",{"range":"1858","text":"1859"},"Update the dependencies array to be: [CreateMarkers, SCAN.MarkerScanCenterPoints]",{"range":"1860","text":"1861"},"Update the dependencies array to be: [CreateCenterpoints, SCAN.MarkerScanCenterPoints]",{"range":"1862","text":"1863"},{"range":"1864","text":"1841"},"Update the dependencies array to be: [CreateSelects, ModelsSelected]",{"range":"1865","text":"1866"},"Update the dependencies array to be: [MODEL.SelectedModel.STOREMARKERCENTERPOINTS]",{"range":"1867","text":"1868"},"Update the dependencies array to be: [ByClient, SCAN]",{"range":"1869","text":"1870"},"Update the dependencies array to be: [SCAN.SelectedModelMeta.DateEnd, SCAN.SelectedModelMeta.DateStart]",{"range":"1871","text":"1872"},"Update the dependencies array to be: [Model.STOREMARKERCENTERPOINTS]",{"range":"1873","text":"1874"},"Update the dependencies array to be: [CreateMarkers, SCAN.SelectedModel]",{"range":"1875","text":"1876"},{"range":"1877","text":"1876"},"Update the dependencies array to be: [CreatePolygons, SCAN.SelectedModel]",{"range":"1878","text":"1879"},"Update the dependencies array to be: [CreatePolygons, UX]",{"range":"1880","text":"1881"},"Update the dependencies array to be: [CreateCenterpoints, SCAN.SelectedModel]",{"range":"1882","text":"1883"},{"range":"1884","text":"1859"},{"range":"1885","text":"1859"},"Update the dependencies array to be: [Trades]",{"range":"1886","text":"1887"},"Update the dependencies array to be: [CreateMarkers, CreatePolygon]",{"range":"1888","text":"1889"},"Update the dependencies array to be: [STRAPI.UserData.Customers, USERSCAN.ScanOptionSelected, USERSCAN.UserScanSingleDataSets]",{"range":"1890","text":"1891"},"Update the dependencies array to be: [MODEL]",{"range":"1892","text":"1893"},{"range":"1894","text":"1859"},{"range":"1895","text":"1841"},"Update the dependencies array to be: [CreateNivoData, data]",{"range":"1896","text":"1897"},{"range":"1898","text":"1897"},{"range":"1899","text":"1897"},{"range":"1900","text":"1897"},{"range":"1901","text":"1897"},{"range":"1902","text":"1897"},"Update the dependencies array to be: [OOSTotals]",{"range":"1903","text":"1904"},"Update the dependencies array to be: [SetNumbers]",{"range":"1905","text":"1906"},"Update the dependencies array to be: [COMPARE, Calculate, MODELS]",{"range":"1907","text":"1908"},"Update the dependencies array to be: [MODEL.CompareData.UserSelected, SCAN.SelectedModel]",{"range":"1909","text":"1910"},"Update the dependencies array to be: [CreateOptions]",{"range":"1911","text":"1912"},[493,497],"[]",[485,491],[467,473],"[AUTH, Pushhistory]",[2137,2143],[2468,2485],"[STRAPI.UserData, checkDataStatus]",[2907,2909],"[Fetch]",[4407,4413],[478,484],[414,418],"[Pushhistory, UX]",[1108,1121],"[SCAN.active, Scan]",[3034,3059],"[CreateMarkers, SCAN.MarkerScanResidual]",[1037,1043],"[SCAN, extractResults]",[3343,3372],"[CreateMarkers, SCAN.MarkerScanCenterPoints]",[2070,2099],"[CreateCenterpoints, SCAN.MarkerScanCenterPoints]",[496,505],[815,831],"[CreateSelects, ModelsSelected]",[623,625],"[MODEL.SelectedModel.STOREMARKERCENTERPOINTS]",[886,892],"[ByClient, SCAN]",[784,786],"[SCAN.SelectedModelMeta.DateEnd, SCAN.SelectedModelMeta.DateStart]",[855,857],"[Model.STOREMARKERCENTERPOINTS]",[4783,4803],"[CreateMarkers, SCAN.SelectedModel]",[3087,3107],[2464,2484],"[CreatePolygons, SCAN.SelectedModel]",[2569,2573],"[CreatePolygons, UX]",[2062,2082],"[CreateCenterpoints, SCAN.SelectedModel]",[1552,1558],[952,958],[2834,2836],"[Trades]",[2777,2779],"[CreateMarkers, CreatePolygon]",[1902,1931],"[STRAPI.UserData.Customers, USERSCAN.ScanOptionSelected, USERSCAN.UserScanSingleDataSets]",[3456,3458],"[MODEL]",[3499,3505],[488,496],[666,672],"[CreateNivoData, data]",[1026,1032],[1071,1077],[1146,1152],[822,828],[1907,1913],[1023,1025],"[OOSTotals]",[1006,1008],"[SetNumbers]",[1371,1380],"[COMPARE, Calculate, MODELS]",[1233,1235],"[MODEL.CompareData.UserSelected, SCAN.SelectedModel]",[1757,1759],"[CreateOptions]"]