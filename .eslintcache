[{"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\index.js":"1","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\App.js":"2","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\reportWebVitals.js":"3","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\index.js":"4","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\index.js":"5","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\UX.js":"6","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\History.js":"7","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\PrototypeLoader.js":"8","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\index.js":"9","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\STRAPI.js":"10","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\SideBar.js":"11","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\GeoLocationActions.js":"12","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\STRAPI.js":"13","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\UX.js":"14","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\SCANSTATE.js":"15","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleUX.js":"16","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SCAN.js":"17","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\SimplePie.js":"18","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\BarChart.js":"19","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\ClusterAnalysis.js":"20","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Assets\\logo.js":"21","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleMarkerBasedScan.js":"22","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleScanProcess.js":"23","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\authUser.js":"24","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Landing\\index.js":"25","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\AuthLogin\\index.js":"26","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\index.js":"27","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\About\\about.js":"28","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Contact\\contact.js":"29","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\index.js":"30","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\unAuth\\UnAuth.js":"31","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\AUTH.js":"32","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\AUTH.js":"33","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\AuthDashboard.js":"34","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\PublicLayout.js":"35","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\Public\\Navigation.js":"36","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\input.js":"37","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\LoginForm.js":"38","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Landing.js":"39","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Loading\\Loading.js":"40","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\DataDump.js":"41","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan.js":"42","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Map.js":"43","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\ResidualLocationMarkers.js":"44","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkerBasedResults.js":"45","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\LocationMarkers.js":"46","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkersCenterpoints.js":"47","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ColorKey.js":"48","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ClusterResults.js":"49","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\HistoryRerfresh.js":"50","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ViewSingleResultBtn.js":"51","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateSingleScanBtn.js":"52","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoAddItemsSingleScan.js":"53","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoScanType.js":"54","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\SetSelectedBtn.js":"55","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\CreateScanoptions.js":"56","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateNewModel.js":"57","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompare.js":"58","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel.js":"59","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ViewModels.js":"60","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CompareModels.js":"61","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMPARE.js":"62","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleCompare.js":"63","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMPARE.js":"64","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ConfirmCompareBtn.js":"65","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SelectModels.js":"66","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareModels.js":"67","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetCompareModels.js":"68","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableHeader.js":"69","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableClusters.js":"70","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalWorkOrders.js":"71","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalLocations.js":"72","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsInScope.js":"73","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsUnaccomidated.js":"74","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalWorkOrdersCoveredInCluster.js":"75","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableWorkorders.js":"76","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableClusters.js":"77","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableLocations.js":"78","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableResourceAllocation.js":"79","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalResourceAllocation.js":"80","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableResourceAllocationPerResourceTotal.js":"81","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableClusterBreakDown.js":"82","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableWorkOrderByClient.js":"83","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableTradeTypes.js":"84","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTradeTypeBreakdown.js":"85","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableSitesByTier.js":"86","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult.js":"87","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ScanStateBtn.js":"88","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Footer.js":"89","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\UICompnents\\index.js":"90","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Type.js":"91","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Section.js":"92","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Locations.js":"93","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\HeaderTitle.js":"94","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\AppBar.js":"95","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_FullMap.js":"96","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Client.js":"97","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Clusters.js":"98","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Workorders.js":"99","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Trade.js":"100","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Stats.js":"101","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_ByTier.js":"102","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Charts.js":"103","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basics.js":"104","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basic_Charts.js":"105","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clients_Names.js":"106","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_ResourceAllocation.js":"107","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Ratios.js":"108","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\OLD_ResultHeader.js":"109","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Map_Full_MAin.js":"110","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Map_SingleModelReview_FULLModel.js":"111","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\LocationMarkers.js":"112","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ResidualLocationMarkers.js":"113","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Polygons.js":"114","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MarkersCenterpoints.js":"115","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MarkerBasedResults.js":"116","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapColorKey.js":"117","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\OLD_ResultMap.js":"118","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clusters_ResultsList.js":"119","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterResults.js":"120","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterMiniMap.js":"121","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\SelectandReview.js":"122","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanSelectItems.js":"123","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanReviewSelectedItems.js":"124","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\RadialSIngleChart.js":"125","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_CLusterSpreadbyCLient.js":"126"},{"size":1151,"mtime":1612231186768,"results":"127","hashOfConfig":"128"},{"size":517,"mtime":1610596234694,"results":"129","hashOfConfig":"128"},{"size":362,"mtime":499162500000,"results":"130","hashOfConfig":"128"},{"size":344,"mtime":1608627476978,"results":"131","hashOfConfig":"128"},{"size":339,"mtime":1611013880263,"results":"132","hashOfConfig":"128"},{"size":2039,"mtime":1609296641569,"results":"133","hashOfConfig":"128"},{"size":87,"mtime":1608627826907,"results":"134","hashOfConfig":"128"},{"size":8102,"mtime":1611874354935,"results":"135","hashOfConfig":"128"},{"size":1704,"mtime":1612224764452,"results":"136","hashOfConfig":"128"},{"size":3018,"mtime":1611208185346,"results":"137","hashOfConfig":"128"},{"size":2257,"mtime":1611879099636,"results":"138","hashOfConfig":"128"},{"size":12395,"mtime":1609822379196,"results":"139","hashOfConfig":"128"},{"size":1995,"mtime":1610967499605,"results":"140","hashOfConfig":"128"},{"size":698,"mtime":1609215777391,"results":"141","hashOfConfig":"128"},{"size":5027,"mtime":1611048016438,"results":"142","hashOfConfig":"128"},{"size":6252,"mtime":1611637611759,"results":"143","hashOfConfig":"128"},{"size":702,"mtime":1609226083528,"results":"144","hashOfConfig":"128"},{"size":1131,"mtime":1611904102311,"results":"145","hashOfConfig":"128"},{"size":959,"mtime":1609677692743,"results":"146","hashOfConfig":"128"},{"size":11507,"mtime":1611058588950,"results":"147","hashOfConfig":"128"},{"size":257,"mtime":1609657333309,"results":"148","hashOfConfig":"128"},{"size":11435,"mtime":1609916596721,"results":"149","hashOfConfig":"128"},{"size":2316,"mtime":1611874345430,"results":"150","hashOfConfig":"128"},{"size":6898,"mtime":1611874730684,"results":"151","hashOfConfig":"128"},{"size":405,"mtime":1610502856130,"results":"152","hashOfConfig":"128"},{"size":944,"mtime":1612224754193,"results":"153","hashOfConfig":"128"},{"size":4825,"mtime":1612224759452,"results":"154","hashOfConfig":"128"},{"size":149,"mtime":1610502909105,"results":"155","hashOfConfig":"128"},{"size":155,"mtime":1610502916347,"results":"156","hashOfConfig":"128"},{"size":1743,"mtime":1611184340847,"results":"157","hashOfConfig":"128"},{"size":160,"mtime":1610448527461,"results":"158","hashOfConfig":"128"},{"size":1396,"mtime":1610779434340,"results":"159","hashOfConfig":"128"},{"size":654,"mtime":1610861163069,"results":"160","hashOfConfig":"128"},{"size":1928,"mtime":1611901415553,"results":"161","hashOfConfig":"128"},{"size":1983,"mtime":1611184403823,"results":"162","hashOfConfig":"128"},{"size":1028,"mtime":1610585645670,"results":"163","hashOfConfig":"128"},{"size":882,"mtime":1610504872791,"results":"164","hashOfConfig":"128"},{"size":2511,"mtime":1612224754193,"results":"165","hashOfConfig":"128"},{"size":1438,"mtime":1611874750577,"results":"166","hashOfConfig":"128"},{"size":1266,"mtime":1612224754193,"results":"167","hashOfConfig":"128"},{"size":63525,"mtime":1612224759452,"results":"168","hashOfConfig":"128"},{"size":1279,"mtime":1612224759452,"results":"169","hashOfConfig":"128"},{"size":1572,"mtime":1612224754193,"results":"170","hashOfConfig":"128"},{"size":3152,"mtime":1612224749439,"results":"171","hashOfConfig":"128"},{"size":2014,"mtime":1612224749439,"results":"172","hashOfConfig":"128"},{"size":3461,"mtime":1612224749439,"results":"173","hashOfConfig":"128"},{"size":2229,"mtime":1612224749439,"results":"174","hashOfConfig":"128"},{"size":1561,"mtime":1612224691804,"results":"175","hashOfConfig":"128"},{"size":1596,"mtime":1612224691804,"results":"176","hashOfConfig":"128"},{"size":639,"mtime":1612224691804,"results":"177","hashOfConfig":"128"},{"size":2687,"mtime":1612228125937,"results":"178","hashOfConfig":"128"},{"size":758,"mtime":1612224691804,"results":"179","hashOfConfig":"128"},{"size":615,"mtime":1612224691803,"results":"180","hashOfConfig":"128"},{"size":602,"mtime":1612224691803,"results":"181","hashOfConfig":"128"},{"size":595,"mtime":1612224691804,"results":"182","hashOfConfig":"128"},{"size":4270,"mtime":1612224754193,"results":"183","hashOfConfig":"128"},{"size":613,"mtime":1612224691803,"results":"184","hashOfConfig":"128"},{"size":1706,"mtime":1612224749438,"results":"185","hashOfConfig":"128"},{"size":1368,"mtime":1612227529462,"results":"186","hashOfConfig":"128"},{"size":5669,"mtime":1612224759452,"results":"187","hashOfConfig":"128"},{"size":865,"mtime":1612224759452,"results":"188","hashOfConfig":"128"},{"size":1186,"mtime":1611016416902,"results":"189","hashOfConfig":"128"},{"size":2005,"mtime":1611017245122,"results":"190","hashOfConfig":"128"},{"size":684,"mtime":1611014353088,"results":"191","hashOfConfig":"128"},{"size":607,"mtime":1612224691803,"results":"192","hashOfConfig":"128"},{"size":2453,"mtime":1612224754629,"results":"193","hashOfConfig":"128"},{"size":1240,"mtime":1612224754193,"results":"194","hashOfConfig":"128"},{"size":605,"mtime":1612224691803,"results":"195","hashOfConfig":"128"},{"size":728,"mtime":1612224749438,"results":"196","hashOfConfig":"128"},{"size":858,"mtime":1612224749438,"results":"197","hashOfConfig":"128"},{"size":748,"mtime":1612224749438,"results":"198","hashOfConfig":"128"},{"size":750,"mtime":1612224749438,"results":"199","hashOfConfig":"128"},{"size":1260,"mtime":1612224749438,"results":"200","hashOfConfig":"128"},{"size":1307,"mtime":1612224749438,"results":"201","hashOfConfig":"128"},{"size":1199,"mtime":1612224749438,"results":"202","hashOfConfig":"128"},{"size":731,"mtime":1611028018431,"results":"203","hashOfConfig":"128"},{"size":516,"mtime":1611022938741,"results":"204","hashOfConfig":"128"},{"size":909,"mtime":1611029567080,"results":"205","hashOfConfig":"128"},{"size":687,"mtime":1611022041993,"results":"206","hashOfConfig":"128"},{"size":771,"mtime":1612224749438,"results":"207","hashOfConfig":"128"},{"size":814,"mtime":1612224749438,"results":"208","hashOfConfig":"128"},{"size":2599,"mtime":1612224749438,"results":"209","hashOfConfig":"128"},{"size":2392,"mtime":1612224749438,"results":"210","hashOfConfig":"128"},{"size":490,"mtime":1611028627460,"results":"211","hashOfConfig":"128"},{"size":1484,"mtime":1612224749438,"results":"212","hashOfConfig":"128"},{"size":2425,"mtime":1612224749438,"results":"213","hashOfConfig":"128"},{"size":2384,"mtime":1612228823177,"results":"214","hashOfConfig":"128"},{"size":1101,"mtime":1611033406310,"results":"215","hashOfConfig":"128"},{"size":177,"mtime":1611106241190,"results":"216","hashOfConfig":"128"},{"size":6481,"mtime":1611902389898,"results":"217","hashOfConfig":"128"},{"size":377,"mtime":1611879742123,"results":"218","hashOfConfig":"128"},{"size":191,"mtime":1611880708379,"results":"219","hashOfConfig":"128"},{"size":1030,"mtime":1612230213760,"results":"220","hashOfConfig":"128"},{"size":652,"mtime":1612224749438,"results":"221","hashOfConfig":"128"},{"size":2458,"mtime":1612222087223,"results":"222","hashOfConfig":"128"},{"size":474,"mtime":1612226514255,"results":"223","hashOfConfig":"128"},{"size":472,"mtime":1612225455149,"results":"224","hashOfConfig":"128"},{"size":493,"mtime":1612227778208,"results":"225","hashOfConfig":"128"},{"size":651,"mtime":1612225368489,"results":"226","hashOfConfig":"128"},{"size":617,"mtime":1612225736222,"results":"227","hashOfConfig":"128"},{"size":2116,"mtime":1612225295410,"results":"228","hashOfConfig":"128"},{"size":1157,"mtime":1612224749438,"results":"229","hashOfConfig":"128"},{"size":1848,"mtime":1612230005609,"results":"230","hashOfConfig":"128"},{"size":1925,"mtime":1612225265941,"results":"231","hashOfConfig":"128"},{"size":2265,"mtime":1612225348840,"results":"232","hashOfConfig":"128"},{"size":1490,"mtime":1612225407057,"results":"233","hashOfConfig":"128"},{"size":2286,"mtime":1612225662645,"results":"234","hashOfConfig":"128"},{"size":1519,"mtime":1612225700092,"results":"235","hashOfConfig":"128"},{"size":1357,"mtime":1612227661625,"results":"236","hashOfConfig":"128"},{"size":443,"mtime":1612226525568,"results":"237","hashOfConfig":"128"},{"size":1317,"mtime":1612226567073,"results":"238","hashOfConfig":"128"},{"size":4697,"mtime":1612226167065,"results":"239","hashOfConfig":"128"},{"size":3204,"mtime":1612226157675,"results":"240","hashOfConfig":"128"},{"size":1817,"mtime":1612226590387,"results":"241","hashOfConfig":"128"},{"size":2240,"mtime":1612226142973,"results":"242","hashOfConfig":"128"},{"size":4422,"mtime":1612226987862,"results":"243","hashOfConfig":"128"},{"size":1542,"mtime":1612226238109,"results":"244","hashOfConfig":"128"},{"size":484,"mtime":1612226692141,"results":"245","hashOfConfig":"128"},{"size":1181,"mtime":1612228157250,"results":"246","hashOfConfig":"128"},{"size":3567,"mtime":1612227841968,"results":"247","hashOfConfig":"128"},{"size":3220,"mtime":1612226943564,"results":"248","hashOfConfig":"128"},{"size":806,"mtime":1612227396905,"results":"249","hashOfConfig":"128"},{"size":4076,"mtime":1612227396856,"results":"250","hashOfConfig":"128"},{"size":3251,"mtime":1612227396697,"results":"251","hashOfConfig":"128"},{"size":706,"mtime":1612229987471,"results":"252","hashOfConfig":"128"},{"size":2870,"mtime":1612231158458,"results":"253","hashOfConfig":"128"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"i3jrvt",{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"258"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"258"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"258"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"258"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"258"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"258"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"258"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"258"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"258"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"258"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"258"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"258"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"258"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"258"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"258"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"258"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"258"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"258"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"258"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"258"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"258"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"258"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"258"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"258"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"258"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"258"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"258"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"258"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"258"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"258"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"258"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"258"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"258"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"258"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"258"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"258"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"258"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"258"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"469","messages":"470","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"258"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"484","messages":"485","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"258"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"489","messages":"490","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"491","messages":"492","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"493","messages":"494","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"495","messages":"496","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"499","messages":"500","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"258"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"504","messages":"505","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"508","messages":"509","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"510","messages":"511","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"522","messages":"523","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"524","messages":"525","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"526","messages":"527","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"534","messages":"535","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"536","messages":"537","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"538","messages":"539","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"540","messages":"541","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"542","messages":"543","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"544","messages":"545","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\index.js",["550"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\App.js",[],["551","552"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\reportWebVitals.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\UX.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\History.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\PrototypeLoader.js",["553"],"\r\n// Private Functions\r\nimport store from \"../store/index\"\r\nimport axios from 'axios';\r\nimport {useAPILOCATION} from \"./authUser\"\r\n\r\n\r\n/*\r\nexport function LoginSequence(arr){\r\n    let State = arr.map((Value,i)=>{\r\n       store.dispatch({ type:Value.Type, payload:Value.Value });\r\n       return true;\r\n    })\r\n    return State;\r\n} \r\n */\r\n\r\nexport function LoadPrototype(){\r\n\r\n    console.log(\"LOAD ME\")\r\n    this.API=useAPILOCATION()+'graphql'\r\n\r\n    this.Limit=100;\r\n\r\n   \r\n\r\n    this.RegionRequest= `\r\n         {name id combined long lat  \r\n          count{ WorkOrders JobTypes TradeTypes Customers} \r\n          sites{name id lat long delivery_model{name id} combined count{ WorkOrders JobTypes TradeTypes Customers} }\r\n          cities{name id }\r\n        }\r\n      `\r\n    this.LimitedRequest = `{ name id }`\r\n\r\n    \r\n    this.Store={customers:true,SmallFetch:true, sites:true}\r\n\r\n    this.SmallReturnsQuery = `query{ \r\n        states {name id combined long lat count{ WorkOrders } }\r\n        countries { country lat long combined count{ WorkOrders }}\r\n      }`\r\n    // THIS IS HORRIBLE FIX IT\r\n    this.SitesRequest =`{ name lat long combined siteweighting count{ WorkOrders}  region_type{name} postcode{name} }`\r\n    this.StoreSites=[]\r\n    this.SitesQuery =` query { sites (start: 0) ${ this.SitesRequest} }`;\r\n\r\n    this.StoreRegions=[]\r\n    this.RegionQuery = `query {regions (start: 0) ${this.RegionRequest}}`\r\n\r\n    this.StoreCustomers=[]\r\n    this.CustomerQuery = `query { customers (start: 0) ${this.LimitedRequest}}`;\r\n\r\n    \r\n    this.GraphQL=(Query, CallBack)=>{\r\n        axios({  url: this.API,  method: 'post', data: { query: Query} }).then((result) => { CallBack(result.data) });\r\n    }\r\n\r\n\r\n    this.Fetch = ()=>{\r\n        console.log(\"Prep App\");\r\n        // Large Data Fetch\r\n        \r\n        // commented out for dev\r\n        //this.GraphQL(this.SitesQuery, this.ProcessSites)\r\n        //this.GraphQL(this.RegionQuery, this.ProcessRegions)\r\n\r\n    //    this.GraphQL(this.CustomerQuery, this.ProcessCustomer)\r\n\r\n        // Small Data Fetch\r\n    //    this.GraphQL( this.SmallReturnsQuery, this.ProcessSmallReturns)\r\n    this.processCheck()\r\n    }\r\n\r\n\r\n\r\n    /* *************************************************************************************************** */\r\n    // Process Small\r\n    /* *************************************************************************************************** */       \r\n        this.ProcessSmallReturns = (Data)=>{\r\n            //console.log(Data.data)\r\n\r\n            store.dispatch({ type:'STORECOUNTRIES', payload:Data.data.countries});\r\n            store.dispatch({ type:'STORETRADETYPE', payload:Data.data.tradeTypes});\r\n            store.dispatch({ type:'STOREJOBTYPE', payload:Data.data.jobTypes});\r\n            store.dispatch({ type:'STOREINDUSTRYTYPE', payload:Data.data.industryTypes});\r\n            store.dispatch({ type:'STORERATIOMODELS', payload:Data.data.ratioModels});\r\n            store.dispatch({ type:'STORESTATES', payload:Data.data.states});\r\n\r\n            this.Store.SmallFetch=true;\r\n            this.processCheck()\r\n        }     \r\n\r\n        \r\n  /* *************************************************************************************************** */\r\n    // Sites\r\n     /* *************************************************************************************************** */\r\n     this.ProcessSites=(Data)=>{ \r\n        this.StoreSites = [...this.StoreSites,...Data.data.sites];\r\n\r\n      //  console.log(\"modulus\", this.StoreSites.length % this.Limit);\r\n\r\n        //console.log(this.StoreSites)\r\n\r\n        if((this.StoreSites.length % this.Limit) === 0){  \r\n            this.GraphQL(`query {sites (start: ${this.StoreSites.length}) ${this.SitesRequest}}`, this.ProcessSites)\r\n        }\r\n        else{ this.Store.sites=true}\r\n\r\n        store.dispatch({ type:'STORESITES', payload:this.StoreSites});\r\n\r\n        this.processCheck()\r\n    }\r\n\r\n  /* *************************************************************************************************** */\r\n    // Regions\r\n     /* *************************************************************************************************** */\r\n     this.ProcessRegions=(Data)=>{ \r\n        this.StoreRegions = [...this.StoreRegions,...Data.data.regions];\r\n\r\n           // console.log(\"modulus\", this.StoreRegions.length % this.Limit)\r\n        if((this.StoreRegions.length % this.Limit) === 0){  \r\n            this.GraphQL(`query {regions (start: ${this.StoreRegions.length}) ${this.RegionRequest}}`, this.ProcessRegions)\r\n        }\r\n        else{ this.Store.Region=true}\r\n\r\n        store.dispatch({ type:'STOREREGIONS', payload:this.StoreRegions});\r\n\r\n        this.processCheck()\r\n    }\r\n\r\n  /* *************************************************************************************************** */\r\n  // Customer\r\n   /* *************************************************************************************************** */\r\n   this.ProcessCustomer=(Data)=>{ \r\n    this.StoreCustomers = [...this.StoreCustomers,...Data.data.customers];\r\n\r\n    if(this.StoreCustomers.length === this.Limit){  \r\n        this.GraphQL(`query {customers (start: ${Data.data.customers.length}) ${this.LimitedRequest}}`, \r\n        this.ProcessCustomer)\r\n    }\r\n    else{ this.Store.customers=true}\r\n\r\n    store.dispatch({ type:'STORECUSTOMERS', payload:this.StoreCustomers});\r\n\r\n    this.processCheck()\r\n    }\r\n\r\n\r\n    /* Is Process Complete?  */\r\n    this.processCheck=()=>{ \r\n        let Load = true\r\n        Object.keys(this.Store).map((k,i)=>{\r\n            if(!this.Store[k])\r\n                Load=false\r\n        })\r\n        console.log(\"Load\", Load)\r\n            if(Load)\r\n                store.dispatch({ type:'DATARECEIVED', payload:true});\r\n            \r\n    }\r\n\r\n\r\n\r\n/*\r\n    this.Fetch = ()=>{\r\n            console.log(\"Prep App\");\r\n            const API='https://intact-analtyiq.herokuapp.com/'\r\n    \r\n            const FetchOrder=[\r\n                    axios.get(`${API}countries?_limit=-1`),\r\n                    axios.get(`${API}states?_limit=-1`),\r\n                    axios.get(`${API}regions?_limit=-1`),\r\n                    axios.get(`${API}customers?_limit=-1`),\r\n                    axios.get(`${API}job-types?_limit=-1`),\r\n                    axios.get(`${API}trade-types?_limit=-1`),\r\n                    axios.get(`${API}industry-types?_limit=-1`),\r\n                    axios.get(`${API}ratio-models`)\r\n                    \r\n                ]\r\n//\r\n            axios.all(FetchOrder)\r\n                        .then(axios.spread(function (countries, states, regions, customers,jobtype, tradeType, industryType, ratiomodels) {\r\n                                // Both requests are now complete\r\n                            \r\n                                store.dispatch({ type:'STORECUSTOMERS', payload:customers.data});\r\n                                store.dispatch({ type:'STORECOUNTRIES', payload:countries.data});\r\n                                store.dispatch({ type:'STORESTATES', payload:states.data});\r\n                                store.dispatch({ type:'STOREREGIONS', payload:regions.data});\r\n                                store.dispatch({ type:'STOREJOBTYPE', payload:jobtype.data});\r\n                                store.dispatch({ type:'STORETRADETYPE', payload:tradeType.data});\r\n                                store.dispatch({ type:'STOREINDUSTRYTYPE', payload:industryType.data});\r\n                                store.dispatch({ type:'STOREINDUSTRYTYPE', payload:industryType.data});\r\n                                store.dispatch({ type:'STORERATIOMODELS', payload:ratiomodels.data});\r\n                                \r\n                                \r\n                            }))\r\n                        .then(()=>{\r\n                                console.log(\"DATA LOAD COMPLETE\");\r\n                                store.dispatch({ type:'DATARECEIVED', payload:true});\r\n                        }).catch(error => {\r\n                            console.log(\"Error fetching Data\", error)\r\n                        });;    \r\n          \r\n        }\r\n        */\r\n} ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\STRAPI.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\SideBar.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\GeoLocationActions.js",["554","555","556","557","558","559","560","561"],"import { Circle } from '@react-google-maps/api';\r\nimport store from \"../store/index\"\r\nimport {ClusterAnalysis} from \"./ClusterAnalysis\";\r\n\r\n\r\n\r\n/*\r\n    This class should deal with Geolocation Processes ONLY\r\n    all result filtering to be handled in phase two\r\n\r\n*/\r\n\r\n\r\n// find the distance in KM from 1 point to another\r\nexport function distancetoPoint(lat1, lon1, lat2, lon2, unit) {\r\n    if ((lat1 == lat2) && (lon1 == lon2)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var radlat1 = Math.PI * lat1/180;\r\n        var radlat2 = Math.PI * lat2/180;\r\n        var theta = lon1-lon2;\r\n        var radtheta = Math.PI * theta/180;\r\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n        if (dist > 1) {\r\n            dist = 1;\r\n        }\r\n        dist = Math.acos(dist);\r\n        dist = dist * 180/Math.PI;\r\n        dist = dist * 60 * 1.1515;\r\n        if (unit==\"K\") { dist = dist * 1.609344 }\r\n        if (unit==\"N\") { dist = dist * 0.8684 }\r\n        return dist;\r\n    }\r\n}\r\n\r\n// use to find the scan box area.\r\n// this function return the corosponding lnglat to a given point\r\n\r\n\r\nexport  function llFromDistance(latitude, longitude, distance, bearing) {\r\n    // taken from: https://stackoverflow.com/a/46410871/13549 \r\n    // distance in KM, bearing in degrees\r\n  \r\n    const R = 6378.1; // Radius of the Earth\r\n    const brng = bearing * Math.PI / 180; // Convert bearing to radian\r\n    let lat = latitude * Math.PI / 180; // Current coords to radians\r\n    let lon = longitude * Math.PI / 180;\r\n  \r\n    // Do the math magic\r\n    lat = Math.asin(Math.sin(lat) * Math.cos(distance / R) + Math.cos(lat) * Math.sin(distance / R) * Math.cos(brng));\r\n    lon += Math.atan2(Math.sin(brng) * Math.sin(distance / R) * Math.cos(lat), Math.cos(distance / R) - Math.sin(lat) * Math.sin(lat));\r\n  \r\n    // Coords back to degrees and return\r\n    return [(lat * 180 / Math.PI), (lon * 180 / Math.PI)];\r\n  \r\n  }\r\n\r\n\r\n  export const TestBoundaries = (site, Area)=>{\r\n    let found=false;\r\n    if(site.lat <=  Area.north && site.lat >= Area.south && site.long >= Area.west && site.long <= Area.east ){found=true}\r\n    return found\r\n}\r\n\r\n\r\n\r\n\r\n\r\n \r\n// Main Scan Class\r\nexport function PreformScan(){\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /* Variables */\r\n    /* *************************************************************************************************************** */        \r\n    \r\n    //this.Area=.5\r\n    //this.ScanDistanceArea=this.Area;\r\n    //this.SearchRadius = .5\r\n    //this.minSites=2\r\n    //this.WorkOrderVariants = [500,1500];\r\n    this.FilterVariables=null\r\n\r\n\r\n    this.Boundaries=null;\r\n    this.setGridpoints=null;\r\n    this.setGridPointer=null;\r\n\r\n    this.TestAgainstSites=null;\r\n    this.ScanResults=[];\r\n    this.setScanResults=null\r\n    this.sleepFor=10;\r\n    this.NESW={ north: null, south: null, east: null,  west: null }\r\n    \r\n    \r\n    this.PointOptions={\r\n        strokeColor: '#FF0000',\r\n        strokeOpacity: 0.5,\r\n        strokeWeight: 1,\r\n        fillColor: '#FF0000',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 10,\r\n        zIndex: 1\r\n      }\r\n         \r\n     this.GridPointerOptions = {\r\n        strokeColor: '#00ff00',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 1,\r\n        fillColor: '#00ff00',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 100,\r\n        zIndex: 10\r\n      }\r\n\r\n      this.GridResultOptions={\r\n        strokeColor: '#00ff00',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 1,\r\n        fillColor: '#00ff00',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 1000,\r\n        zIndex: 10\r\n      }\r\n\r\n      this.recOptions={\r\n        strokeColor: '#6094ff',\r\n        strokeOpacity: 0.9,\r\n        strokeWeight: 1,\r\n        fillColor: '#6094ff',\r\n        fillOpacity: 0.15,\r\n      }\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /*  AUX Functions*/\r\n    /* *************************************************************************************************************** */        \r\n\r\n    this.sleep = ()=>{  return new Promise(resolve => setTimeout(resolve, this.sleepFor)) }\r\n    \r\n    this.BreakBoundaries=(Boundaries)=>{\r\n        this.NESW = {  north: Boundaries[1], south: Boundaries[0], east: Boundaries[3], west: Boundaries[2] }\r\n    }\r\n\r\n    this.arePointsNear = (checkPoint, centerPoint, km) => {\r\n                var ky = 40000 / 360;\r\n                var kx = Math.cos(Math.PI * centerPoint.lat / 180.0) * ky;\r\n                var dx = Math.abs(centerPoint.lng - checkPoint.lng) * kx;\r\n                var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\r\n                return Math.sqrt(dx * dx + dy * dy) <= km;\r\n            }\r\n\r\n    this.RemoveDuplicates =()=>{\r\n\r\n    }\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /* Process */\r\n    /* *************************************************************************************************************** */        \r\n\r\n    this.Scan=()=>{\r\n            console.log(\"START SCAN \")\r\n            console.log(\"Scan Filters\", this.FilterVariables)\r\n            \r\n            this.BreakBoundaries(this.Boundaries)\r\n            //console.log(this.NESW)\r\n            \r\n            \r\n            //console.log(this.FilterVariables.Area, this.FilterVariables);\r\n            let Xiterations = distancetoPoint(this.NESW.north,this.NESW.west, this.NESW.north, this.NESW.east,'K')/this.FilterVariables.GridSpacing;\r\n            let Yiterations = distancetoPoint(this.NESW.north,this.NESW.west, this.NESW.south, this.NESW.west,'K')/this.FilterVariables.GridSpacing;\r\n\r\n            //console.log( Xiterations, Yiterations);\r\n            //let ScanBoxStartingPosition = llFromDistance(this.NESW.north, this.NESW.west, Math.sqrt(2)*this.Area, 135)\r\n            \r\n            //let LargestSurfaceArea = Math.max(Math.ceil(Xiterations), Math.ceil(Yiterations))\r\n\r\n            this.setGridPointer(<Circle options={this.GridPointerOptions}  center={{ lat: this.NESW.north, lng: this.NESW.west }} />)\r\n            this.FindScanPoints(Math.ceil(Xiterations), Math.ceil(Yiterations))\r\n            \r\n        }\r\n\r\n\r\n\r\n    this.FindScanPoints = (Xiterations, Yiterations)=>{\r\n\r\n        //console.log(Xiterations, Yiterations);\r\n\r\n        let LargestSurfaceArea = Math.max(Xiterations, Yiterations)\r\n        let i=0;\r\n        let Points = []\r\n        let ReturnedLngLat;\r\n\r\n      \r\n        while( i < LargestSurfaceArea){\r\n           \r\n            ReturnedLngLat = llFromDistance(this.NESW.north, this.NESW.west, (Math.sqrt(2)*(i*this.FilterVariables.GridSpacing)), 135)\r\n            //console.log(ReturnedLngLat[0],ReturnedLngLat[1])\r\n            Points.push([ReturnedLngLat[0],ReturnedLngLat[1]]) \r\n            \r\n            i++\r\n        }\r\n\r\n        //console.log(Points);\r\n        this.MapScanPoints(Points, Xiterations, Yiterations)\r\n    }\r\n\r\n\r\n\r\n    this.MapScanPoints=(Points, Xiterations, Yiterations)=>{\r\n\r\n        let MapGrid=[]\r\n        let createCircles=[];\r\n\r\n\r\n        let ii=0;\r\n\r\n        while(ii < Yiterations){\r\n            let Row=0, Col=0, iii=0\r\n            while(iii < Xiterations){\r\n                Row=ii;\r\n                Col=iii\r\n                    //console.log([Row,Col])\r\n                    MapGrid.push([Points[Row][0], Points[Col][1]])\r\n                    createCircles.push(<Circle key={ii+iii} options={this.PointOptions}  center={{ lat: Points[Row][0], lng: Points[Col][1] }} />)\r\n                    iii++\r\n            }\r\n            ii++\r\n        }\r\n        //console.log(MapGrid);\r\n        this.setGridpoints(createCircles)\r\n        this.RunScanTest (MapGrid)\r\n    }\r\n\r\n\r\n    this.RunScanTest = async(MapGrid)=>{\r\n        \r\n        // Variables\r\n        this.setScanResults(null)\r\n        let i=0\r\n        // run loop to scan through Grid points\r\n        while(i<MapGrid.length){\r\n            // Hold scan point for FE show only\r\n            await this.sleep()\r\n            // find\r\n          //  let ScanBoxNewPosition = llFromDistance(MapGrid[i][0], MapGrid[i][1], Math.sqrt(2)*this.Area, 135)\r\n          //  south: ScanBoxNewPosition[0],east: ScanBoxNewPosition[1],\r\n            this.setGridPointer(<Circle options={this.GridPointerOptions}  center={{ lat: MapGrid[i][0], lng: MapGrid[i][1] }} />)\r\n            \r\n            // Create Circle Center point to scan in next function hand off.\r\n            let ScanBoundary = { north: MapGrid[i][0],  west: MapGrid[i][1] }\r\n            \r\n            this.scanTestDiameter(ScanBoundary)\r\n            \r\n            i++\r\n        }\r\n\r\n        this.setGridPointer(<Circle visible={false} options={this.GridPointerOptions}   />)\r\n        this.StoreResults()\r\n        ClusterAnalysis(this.ScanResults)\r\n        \r\n    }\r\n\r\n\r\n\r\n    this.scanTestDiameter = (ScanBoundary)=>{\r\n\r\n        // This function checks to see if a site is within the Radius of the center point in the scan\r\n        // it should check each site lng/lst. if true then store in array this.ScanResults;\r\n       \r\n        // Outer Global Variables\r\n        let CollectSites=[];\r\n        let long=[],lat=[],GroupedBoxBoundaryLimits=[];\r\n       // Variables\r\n       let WorkOrderCount = 0;\r\n\r\n        // Loop known sites in this area for matches\r\n        this.TestAgainstSites.map((site,i)=>{\r\n            \r\n            \r\n            if(this.arePointsNear({ lat: site.lat, lng: site.long}, { lat: ScanBoundary.north, lng: ScanBoundary.west }, this.FilterVariables.SearchRadius)){\r\n\r\n                //console.log(site)\r\n\r\n                // Push Values into Arrays\r\n                long.push(site.long);\r\n                lat.push(site.lat)\r\n                CollectSites.push(site);\r\n                \r\n                //console.log(site)\r\n                //if(site.count[0] !== null) WorkOrderCount = WorkOrderCount + site.count[0].WorkOrders;\r\n               \r\n              \r\n            } // close if true\r\n           \r\n          })  // close Map\r\n\r\n            // Limit Boundaries to outer most\r\n            GroupedBoxBoundaryLimits.push([Math.max(...long), Math.min(...long), Math.max(...lat), Math.min(...lat)])\r\n            // if work orders !0 ship it off for processing\r\n            /*\r\n            if( WorkOrderCount >= this.FilterVariables.MinWorkOrder \r\n                && WorkOrderCount <= this.FilterVariables.MaxOrderOrders \r\n                && CollectSites.length>=this.FilterVariables.minSites)\r\n                { }\r\n            */\r\n                this.ProcessGridBoundary(CollectSites, GroupedBoxBoundaryLimits, ScanBoundary)\r\n        }\r\n\r\n \r\n\r\n    this.ProcessGridBoundary=(Sites, GroupedBoxBoundaryLimits, ScanBoundary)=>{\r\n     \r\n        // Variables\r\n        let tmp = [];\r\n        let remove=[];\r\n        let removeDuplicateBoundaryLimits;\r\n        \r\n        // remove any dupliactes from arrays\r\n        removeDuplicateBoundaryLimits = GroupedBoxBoundaryLimits.filter(function (v, i) {\r\n            if (tmp.indexOf(v.toString()) < 0) \r\n                { \r\n                    tmp.push(v.toString());\r\n                    return v;\r\n                }else{\r\n                    remove.push(i)\r\n                }\r\n        });\r\n\r\n        remove.map((id,i)=>{ Sites.splice(id, 1);})\r\n\r\n        // only add items with a site count\r\n        if(Sites.length>0){\r\n            this.ScanResults.push({\r\n                Sites:Sites,\r\n                SiteCount:Sites.length,\r\n                Boundary:ScanBoundary,\r\n                //WorkOrderCount:WorkOrderCount,\r\n                GroupedBoxBoundaryLimits:removeDuplicateBoundaryLimits[0]\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    this.StoreResults = ()=>{\r\n\r\n\r\n        //console.log(\"Scan End Num\", this.ScanResults.length)\r\n        // Store Results\r\n        store.dispatch({ type:'SCANSTATE', payload:false}); \r\n        \r\n        \r\n        //store.dispatch({ type:'STORERESULTS', payload:this.ScanResults});        \r\n \r\n    }\r\n\r\n} ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\STRAPI.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\UX.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\SCANSTATE.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleUX.js",["562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583"],"// Private Functions\r\nimport store from \"../store/index\"\r\n//import axios from 'axios';\r\nimport {distancetoPoint} from \"./GeoLocationActions\"\r\nimport { findIndex} from 'lodash'; \r\n\r\n\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport function AreaFilter(type, value){\r\n    //console.log('AreaFilter', value)\r\n    store.dispatch({ type:type, payload:value});\r\n}\r\n\r\nexport function ScanState(value){\r\n    console.log('ScanState', value)\r\n    store.dispatch({ type:'SCANSTATE', payload:value});\r\n}\r\n\r\nexport function SelectedRegion(SelectedRegion){\r\n\r\n    console.log(SelectedRegion)\r\n    store.dispatch({ type:'STORESELECTEDAREA', payload:SelectedRegion});\r\n\r\n}\r\n\r\nexport function RemoveClusterItem(Haystack, Needle){ \r\n\r\n    console.log(\"Delete Cluster\");\r\n    console.log(Haystack, Needle);\r\n    let index = findIndex( Haystack, function(o) { return o.Boundary === Needle; })\r\n    console.log(index);\r\n\r\n    Haystack.splice(index, 1)\r\n    console.log(Haystack);\r\n    store.dispatch({ type:'STORERESULTS', payload:Haystack}); \r\n}\r\n\r\n \r\nexport function CreateMapParameters(DATA){\r\n\r\n            // USe this function to create ALL of the possible Map Data and Meta points.\r\n            // Try to limit the use on the UX.SelectedArea around the APP\r\n            // Instead focus on using UX.MapParameters\r\n\r\n            let centerLatArray = [];\r\n            let centerLngArray = [];\r\n            let Storesites=[]\r\n\r\n            //console.log(DATA)\r\n            DATA.map((Region, i)=>{\r\n                //console.log(\"Region\", Region)\r\n                Region.sites.map((marker,i)=>{\r\n                    Storesites.push(marker)\r\n                    if(!isNaN(parseFloat(marker.lat))){\r\n                        centerLatArray.push(parseFloat(marker.lat))\r\n                        centerLngArray.push(parseFloat(marker.long))\r\n                    }\r\n                })\r\n                //return false\r\n            })\r\n\r\n\r\n            let centerLat = ((Math.min(...centerLatArray) + Math.max(...centerLatArray))/2)\r\n            let centerLng = ((Math.min(...centerLngArray) + Math.max(...centerLngArray))/2)\r\n            let LatLngBoundaries = [Math.min(...centerLatArray),Math.max(...centerLatArray),Math.min(...centerLngArray),Math.max(...centerLngArray)]\r\n            \r\n            let distance = distancetoPoint(LatLngBoundaries[0],LatLngBoundaries[2], LatLngBoundaries[1],LatLngBoundaries[3],'K')\r\n           \r\n           // console.log('distance', (distance*1000), setZoomLevel((distance*1000).toFixed(0)));\r\n           \r\n            let zoom = setZoomLevel((distance*1000).toFixed(0))\r\n            let SetMap = true\r\n            //console.log('Storesites', Storesites)\r\n            \r\n            let MapParameters = {\r\n                LatLngBoundaries:LatLngBoundaries,\r\n                BoundaryCenterPoint:[centerLat, centerLng],\r\n                zoom:zoom,\r\n                SetMap:SetMap,\r\n                markers:Storesites\r\n            }\r\n\r\n            //console.log(\"MapParameters\", MapParameters)\r\n            store.dispatch({ type:'STOREMAPPARAMETERS', payload:MapParameters});\r\n}\r\n\r\n\r\n\r\nfunction setZoomLevel(meters) { \r\n    console.log(`Zoom level set meters: ${meters}`); \r\n\r\n    switch (meters) {\r\n        case (meters < 1128):\r\n            return 15;\r\n          break;\r\n        case ((meters > 1128) && (meters < 2256)):\r\n            return 14;\r\n          break;\r\n        case ((meters > 2256) && (meters < 4513)):\r\n            return 13;\r\n          break;\r\n        case ((meters > 4513) && (meters < 9027)):\r\n            return 12;\r\n          break; \r\n        case ((meters > 9027) && (meters < 18055)) :\r\n            return 11;\r\n          break;\r\n        case ((meters > 18055) && (meters < 36111)) :\r\n            return 10;\r\n          break; \r\n        case ((meters > 36111) && (meters < 72223)) :\r\n            return 9;\r\n          break;      \r\n        case ((meters > 72223) && (meters < 144447)) :\r\n            return 8;\r\n          break;   \r\n        case ((meters > 144447) && (meters < 288895)) :\r\n            return 7;\r\n          break;    \r\n        case ((meters > 288895) && (meters < 577790)) :\r\n            return 6;\r\n          break;  \r\n          case ((meters > 577790) && (meters < 1155581)) :\r\n            return 5;\r\n          break;     \r\n          default:\r\n            return 4;\r\n      }\r\n\r\n\r\n    //return zoomfactor;\r\n}\r\n\r\nexport function NumberReducer (labelValue) {\r\n\r\n    // Nine Zeroes for Billions\r\n    return Math.abs(Number(labelValue)) >= 1.0e+9\r\n\r\n    ? Math.abs(Number(labelValue)) / 1.0e+9 + \"B\"\r\n    // Six Zeroes for Millions \r\n    : Math.abs(Number(labelValue)) >= 1.0e+6\r\n\r\n    ? Math.abs(Number(labelValue)) / 1.0e+6 + \"M\"\r\n    // Three Zeroes for Thousands\r\n    : Math.abs(Number(labelValue)) >= 1.0e+3\r\n\r\n    ? Math.abs(Number(labelValue)) / 1.0e+3 + \"K\"\r\n\r\n    : Math.abs(Number(labelValue));\r\n\r\n}\r\n\r\n\r\nexport function HandleFilterChange(TYPE, VALUE){\r\n    console.log(TYPE, VALUE)\r\n    store.dispatch({ type:TYPE, payload:VALUE});\r\n}\r\n\r\nexport function RegionColor(region){\r\n  switch (region) {\r\n      case 'SameBuilding':\r\n            return '#B2007C' \r\n            break;\r\n      case 'CBD':\r\n              return '#DC000B'\r\n        break;\r\n      case 'InnerCity':\r\n              return '#04419B'\r\n          break;\r\n      case 'Metro':\r\n              return '#11B700'\r\n          break;\r\n      case 'OuterMetro':\r\n              return '#330193'\r\n          break;\r\n        case 'Regional':\r\n          return '#FF7400'\r\n          break;\r\n        case 'Remote':\r\n          return '#3D1324'\r\n          break; \r\n      case 'ExtremeRemote':\r\n            return '#111D2F'\r\n          break;   \r\n     \r\n  }\r\n}\r\n\r\nexport const GroupArrayByOccurances =(arr) =>{\r\n  var a = [],b = [],prev;\r\n  arr.sort();\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (arr[i] !== prev) {\r\n      a.push(arr[i]);\r\n      b.push(1);\r\n    } else {\r\n      b[b.length - 1]++;\r\n    }\r\n    prev = arr[i];\r\n  }\r\n  return [a, b];\r\n}\r\n\r\nexport const HandleTZDate = (DATE)=>{\r\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\" }\r\n  return new Date(DATE).toLocaleDateString(undefined, options)\r\n\r\n // let NewDate = DATE.split('T');\r\n\r\n // return NewDate[0]\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SCAN.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\SimplePie.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\BarChart.js",["584"],"import React  from 'react';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n} from 'recharts';\r\n\r\n/*\r\nexample\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n];\r\n*/\r\n\r\nconst SimpleBarChart = (props)=>{\r\n\r\n    const {Data} = props\r\n    return (\r\n      <div style={{ width: '100%', height: 400 }}>\r\n      <ResponsiveContainer>\r\n          <BarChart\r\n            width={600}\r\n            height={400}\r\n            data={Data}\r\n            margin={{\r\n              top: 5, right: 30, left: 20, bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"value\" fill=\"#ffbf00\" />\r\n          \r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default SimpleBarChart;\r\n",["585","586"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\ClusterAnalysis.js",["587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609"],"import store from \"../store/index\"\r\n//import axios from 'axios';\r\nimport {find, findIndex} from 'lodash'; \r\n\r\n\r\n/* **************************************************************************** */\r\n/*  Aux Functions */\r\n/* **************************************************************************** */\r\nconst GroupArray =(arr) =>{\r\n    var a = [],b = [],prev;\r\n    arr.sort();\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i] !== prev) {\r\n        a.push(arr[i]);\r\n        b.push(1);\r\n      } else {\r\n        b[b.length - 1]++;\r\n      }\r\n      prev = arr[i];\r\n    }\r\n    return [a, b];\r\n  }\r\n\r\n\r\n  const FindMultiplier=(int)=>{\r\n    const RM = store.getState().STRAPI.ratioModel\r\n    let Multiplier = find(RM, function(o) { return (o.Min <= int && o.max >= int) });\r\n    return Multiplier.multiplier\r\n  }\r\n\r\n\r\n  const FindInterior = (outer, inner)=>{\r\n    inner.map((cluster,i)=>{\r\n      let Inside = false\r\n      if(\r\n          cluster.GroupedBoxBoundaryLimits[0] > outer[0]\r\n        && cluster.GroupedBoxBoundaryLimits[1] < outer[1]\r\n        && cluster.GroupedBoxBoundaryLimits[2] > outer[2]\r\n        && cluster.GroupedBoxBoundaryLimits[3] < outer[3]\r\n      )\r\n      { Inside = true}\r\n      console.log(outer, cluster.GroupedBoxBoundaryLimits)\r\n        console.log(Inside)\r\n    })\r\n  }\r\n\r\n   export const findTradeTypeName = (id)=>{\r\n    \r\n    const TRADETYPE = store.getState().STRAPI.tradeType;\r\n    \r\n    let FoundType = find(TRADETYPE, function(o) { return o.id === id; })\r\n    return FoundType.name\r\n}\r\n\r\n\r\n  export const findClientName=(id)=>{\r\n    const Clients = store.getState().STRAPI.UserData.Customers;\r\n    let FoundClient = find(Clients, function(o) { return o.id === id; });\r\n\r\n    if(FoundClient !== undefined)\r\n      return FoundClient.name \r\n  \r\n    return false\r\n   }\r\n\r\n    const ResourcesRequired = (TradesUsed)=>{\r\n      //console.log(TradesUsed);\r\n      \r\n    }\r\n\r\n    const ChartGroupArrayData = (Compressed)=>{\r\n    let CompressedForPie=[]\r\n    Compressed[0].map((jt,i)=>{ CompressedForPie.push({ name: jt , value: Compressed[1][i] }) })\r\n    return (CompressedForPie);\r\n    }\r\n\r\n/* End Aux Functions **************************************************************************** */\r\n\r\n\r\n/* **************************************************************************** */\r\n/* Worker Functions  */\r\n/* **************************************************************************** */\r\n\r\n\r\n\r\nconst findTradeParent = (trade)=>{\r\n  const TRADETYPEALLOCATION = store.getState().STRAPI.UserData.tradetypes;\r\n\r\n  let FoundType = find(TRADETYPEALLOCATION, function(o) { return o.id === trade; })\r\n  if(FoundType === undefined){\r\n    //console.log(trade)\r\n    return 'undefined'\r\n  }else{\r\n   // console.log(trade, FoundType.trade_allocation_ratio.Name)\r\n    return FoundType.trade_allocation_ratio.Name;\r\n  }\r\n \r\n}\r\n\r\n// Find Allocation of trade type across cluster\r\n\r\n   export const FindTradeTypeAllocation = (data)=>{\r\n     let TotalChildTradesTradearr=[]\r\n     let ParentTradeName=[]\r\n      data.map((site,i)=>{\r\n          site.sites.map((count,i)=>{\r\n            let TradesJson = JSON.parse(count.count[0].TradeTypes);\r\n            TotalChildTradesTradearr=  [...TotalChildTradesTradearr, ...TradesJson]\r\n          })\r\n      })\r\n\r\n      TotalChildTradesTradearr.map((childTrades, i )=>{\r\n        ParentTradeName.push(findTradeParent(childTrades))\r\n      })\r\n      \r\n      return GroupArray(ParentTradeName)\r\n    }\r\n\r\n\r\nexport const SitesbyTier = (data)=>{\r\n    let tiers=[]\r\n    data.map((item,index)=>{\r\n        let ii=0\r\n       \r\n        while(ii<item.sites.length){\r\n           tiers.push(item.scanCategory)\r\n            ii++\r\n        }\r\n      \r\n      \r\n    })\r\n\r\n    console.log(GroupArray(tiers))\r\n    return GroupArray(tiers)\r\n}\r\n\r\n// Return the Total workordercount for a cluster\r\n    export const SumWorkOrderTotal = (sites)=>{\r\n        let total=[]\r\n          sites.map((item,i)=>{\r\n              if (!isNaN(item.SumWorkOrder))\r\n                total.push(item.SumWorkOrder)\r\n          })\r\n          return total.reduce((a, b) => a + b, 0)\r\n      }\r\n\r\n\r\n\r\n\r\nconst Removeinteriors = (Results)=>{\r\n  console.log(Results)\r\n  Results.map((results)=>{\r\n      FindInterior(results.GroupedBoxBoundaryLimits, Results)\r\n  })\r\n}\r\n\r\nconst ClusterCost=(ClusterAssetBreakdown)=>{\r\n    const TRADETYPE = store.getState().STRAPI.tradeType;\r\n    let ClusterCost=[]\r\n    ClusterAssetBreakdown[0].map((id,i)=>{\r\n        let Cost;\r\n        let TT = find(TRADETYPE, function(o) { return o.id === id; });\r\n        if(TT.cpj != undefined){\r\n                //console.log(TT.cpj, id, ClusterAssetBreakdown[1][i], FindMultiplier(ClusterAssetBreakdown[1][i]))\r\n               Cost = (ClusterAssetBreakdown[1][i]* TT.cpj)*FindMultiplier(ClusterAssetBreakdown[1][i])\r\n               ClusterCost.push([findTradeTypeName(id), parseFloat(Cost.toFixed(2))])\r\n        }else{\r\n            console.log(`${findTradeTypeName(id)} is missing a CPJ marker`)\r\n        }\r\n    })\r\n    return ClusterCost\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  const JobTypes =(JOBTYPES,result)=>{\r\n     \r\n       //console.log(JOBTYPES,result)\r\n\r\n        // JOb Type\r\n        let PUSHJobTypeName=[]\r\n        let PUSHJobTypeID=[]\r\n        let PUSHJobTypeWorkOrderCount=[]\r\n        let PUSHTradeType=[]\r\n        let PUSHSplitTradeTypeCount=[]\r\n        let PUSHTradeInt=[]\r\n        let PUSHWorkOrdersTrueNumber=[]\r\n        let WorkOrderValue;\r\n\r\n        result.Sites.map((site,i)=>{\r\n\r\n            //console.log(site)\r\n            // Breakdown Jobtypes\r\n            JOBTYPES.map((jobtype,i)=>{\r\n\r\n                //console.log(find(jobtype.work_orders, function(o) { return o.site === site.id; }))\r\n                let FindWorkOrder = find(jobtype.work_orders, function(o) { return o.site === site.id; })\r\n                if(FindWorkOrder!== undefined){\r\n                    \r\n                    // Store JT name\r\n                    PUSHJobTypeName.push(jobtype.name);\r\n                    PUSHJobTypeID.push(jobtype.id)\r\n\r\n                    //console.log(FindWorkOrder)\r\n                    //console.log(jobtype);\r\n                    \r\n                    PUSHWorkOrdersTrueNumber.push(FindWorkOrder.count)\r\n                    PUSHTradeType.push(findTradeTypeName(FindWorkOrder.trade_type))\r\n                    PUSHTradeInt.push(FindWorkOrder.trade_type)\r\n                   \r\n                    let Index = findIndex(PUSHSplitTradeTypeCount, function(o) { return o.id == FindWorkOrder.trade_type; });\r\n          \r\n                    if(Index != -1){\r\n                          PUSHSplitTradeTypeCount[Index].count = PUSHSplitTradeTypeCount[Index].count + FindWorkOrder.count\r\n                    }else{\r\n                      PUSHSplitTradeTypeCount.push({id:FindWorkOrder.trade_type, count:FindWorkOrder.count, name:findTradeTypeName(FindWorkOrder.trade_type)})\r\n                    }\r\n                    \r\n                    \r\n                     // I DONT THINK THIS IS CORRECT\r\n                    WorkOrderValue = PUSHWorkOrdersTrueNumber.reduce((a, b) => a + b, 0)\r\n                    console.log(\"PUSHWorkOrdersTrueNumber\", PUSHWorkOrdersTrueNumber)\r\n                    let IndexThis = findIndex(PUSHJobTypeWorkOrderCount, function(o) { return o.name === jobtype.name; })\r\n                    \r\n                    if(IndexThis === -1){ \r\n                        PUSHJobTypeWorkOrderCount.push({name:jobtype.name, value:WorkOrderValue})\r\n                    }\r\n                    else{\r\n                        PUSHJobTypeWorkOrderCount.splice(IndexThis, 1, {name:jobtype.name, value: (PUSHJobTypeWorkOrderCount[IndexThis].value+WorkOrderValue)});\r\n                    }\r\n                    \r\n                }\r\n            })\r\n           \r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // Create Analysis to hand off to Reducer\r\n\r\n        return {\r\n            JobTypeNameARR :GroupArray(PUSHJobTypeName),\r\n            JobTypeIDARR : GroupArray(PUSHJobTypeID),\r\n            TradeTypeARR : GroupArray(PUSHTradeType),\r\n            WorkOrdersTrueNumber:PUSHWorkOrdersTrueNumber.reduce((a, b) => a + b, 0),\r\n            JobTypeWorkOrderCount : PUSHJobTypeWorkOrderCount,\r\n            ClusterCost: ClusterCost(GroupArray(PUSHTradeInt)),\r\n            ResourcesRequired:ResourcesRequired(GroupArray(PUSHTradeType)),\r\n            SplitTradeTypeCount:PUSHSplitTradeTypeCount\r\n        }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const checkResourceCount = (Results)=>{\r\n\r\n    Results.map((cluster,i)=>{\r\n\r\n      console.log(cluster, cluster.SplitTradeTypeCount)\r\n    })\r\n      /*\r\n        minValueDay = 2\r\n        ResourceDay = 0.2\r\n        JobsPerDay = 4.4\r\n        MinRadius = 2000\r\n        WorkDays = 250\r\n      */\r\n\r\n  }\r\n\r\n  /* NEW FUNCTIONS */\r\n\r\n  const ExtractWorkOrderValues = (Results) => {\r\n    // Extracts the True workorder count\r\n      Results.map((result)=>{\r\n        let WorkOrderCount = [], WorkOrderNum=0\r\n          result.Sites.map((site, i)=>{\r\n              WorkOrderNum = WorkOrderNum + site.count[0].WorkOrders\r\n              WorkOrderCount.push(site.count[0].WorkOrders)\r\n          })\r\n          result.WorkOrders = WorkOrderCount.reduce((a, b) => a + b, 0);\r\n      })\r\n      return true;\r\n  }\r\n\r\n\r\n  const ExtractTradeTypes = (Results, STRAPI)=>{\r\n\r\n    //console.log(STRAPI)\r\n    \r\n    Results.map((result)=>{\r\n      let PUSHTradeType=[]\r\n        result.Sites.map((site, i)=>{\r\n          PUSHTradeType = [...PUSHTradeType,...JSON.parse(site.count[0].TradeTypes)]\r\n        })\r\n        result.TradeType = GroupArray(PUSHTradeType)\r\n        //console.log(GroupArray(PUSHTradeType));\r\n    })\r\n   \r\n    return true;\r\n  } \r\n\r\n\r\n\r\n/* **************************************************************************** */\r\n/*  Starter Function  ********************************************************* */\r\n/*                                                                               */\r\n/* **************************************************************************** */\r\n\r\n\r\nexport function ClusterAnalysis(Results){\r\n    const STRAPI = store.getState().STRAPI;\r\n    console.log(\"ClusterAnalysis\", Results);\r\n    \r\n    // Let group some of the Data points into Meta data\r\n    // Group by WO\r\n      ExtractWorkOrderValues(Results)\r\n    // Group by Trade type\r\n      ExtractTradeTypes(Results, STRAPI)\r\n    // Group by Resource Type\r\n      //checkResourceCount(Results)\r\n    \r\n    // Group by Cost\r\n    \r\n    // Group by Asset Type\r\n    // Group by Delivery Model\r\n    // Group by Customers\r\n\r\n\r\n\r\n\r\n    // OK time to filter through the results on Known restrictions\r\n    \r\n     // Run Resource Test Here\r\n    \r\n    // Removeinteriors(Results)\r\n\r\n\r\n    \r\n    // find the job types\r\n    /*\r\n     Results.map((result,i)=>{\r\n        \r\n        let TRADEOBJ = JobTypes(STRAPI.JobType,result);\r\n\r\n        //result.WorkOrdersTrueNumber = TRADEOBJ.WorkOrdersTrueNumber\r\n        result.SplitTradeTypeCount = TRADEOBJ.SplitTradeTypeCount\r\n        result.TradeTypeCount =TRADEOBJ.TradeTypeARR\r\n        result.ClusterCost = TRADEOBJ.ClusterCost\r\n        result.Charts={\r\n            JobTypeID:ChartGroupArrayData(TRADEOBJ.JobTypeIDARR),\r\n            JobTypeName:ChartGroupArrayData(TRADEOBJ.JobTypeNameARR),\r\n            TradeType:ChartGroupArrayData(TRADEOBJ.TradeTypeARR),\r\n            JobTypeSum:ChartGroupArrayData(TRADEOBJ.JobTypeNameARR),\r\n            JobTypeWorkOrderCount:TRADEOBJ.JobTypeWorkOrderCount\r\n        }\r\n    })\r\n\r\n    */\r\n   \r\n    console.log(\"FINAL RESULT \", Results)\r\n    \r\n    //store.dispatch({ type:'STORERESULTS', payload:Results}); \r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Assets\\logo.js",["610","611"],"\r\nimport React  from 'react'\r\n\r\nexport const LogoMain=()=>{\r\n    return( <img className=\"MainLogo\" src=\"/img/png/intact-group.png\" />)\r\n}\r\n\r\nexport const LogoMainWhite=()=>{\r\n    return( <img className=\"MainLogo\" src=\"/img/png/intact-group-white.png\" />)\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleMarkerBasedScan.js",["612","613","614","615","616","617","618","619","620","621","622","623","624","625"],"import store from \"../store/index\"\r\nimport { orderBy, findIndex, inRange} from 'lodash'; \r\n\r\n// find the distance in KM from 1 point to another\r\nfunction distancetoPoint(lat1, lon1, lat2, lon2, unit) {\r\n    if ((lat1 == lat2) && (lon1 == lon2)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var radlat1 = Math.PI * lat1/180;\r\n        var radlat2 = Math.PI * lat2/180;\r\n        var theta = lon1-lon2;\r\n        var radtheta = Math.PI * theta/180;\r\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n        if (dist > 1) {\r\n            dist = 1;\r\n        }\r\n        dist = Math.acos(dist);\r\n        dist = dist * 180/Math.PI;\r\n        dist = dist * 60 * 1.1515;\r\n        if (unit==\"K\") { dist = dist * 1.609344 }\r\n        if (unit==\"N\") { dist = dist * 0.8684 }\r\n        return dist;\r\n    }\r\n}\r\n\r\n\r\nexport function ScanSites(){\r\n\r\n    /* ***************************************************************************************** */\r\n    // Arrays and Variable set up\r\n    this.SiteList=null;\r\n    this.SearchThisList=null\r\n    this.GlobalCluster=[]\r\n    this.GlobalCenterpoints=[]\r\n    this.CatchNoLongLat=[]\r\n    this.clusterCount=0\r\n    this.ProcessPointer=0;\r\n\r\n    this.ScanAreas=[\r\n        { name:'SameBuilding',  range: [0,0.2], allocation:0.4, maxAllocation:null, feather:0.1,restrict:[] },\r\n        { name:'CBD',           range: [0,2],   allocation:0.4, maxAllocation:null, feather:10, restrict:[]   },\r\n        { name:'InnerCity',     range: [0,10],  allocation:0.4, maxAllocation:null, feather:5,  restrict:[]   },\r\n        { name:'Metro',         range: [0,50],  allocation:0.4, maxAllocation:1, feather:1 , restrict:[]  },\r\n        { name:'OuterMetro',    range: [0,100], allocation:0.4, maxAllocation:1, feather:0 , restrict:[]  },\r\n        { name:'Regional',      range: [0,200], allocation:0.4, maxAllocation:1, feather:0 , restrict:[[7000,7999]]  },\r\n        { name:'Remote',        range: [0,500], allocation:0.4, maxAllocation:1, feather:0 , restrict:[[7000,7999]]  },\r\n        { name:'ExtremeRemote', range: [0,2000],allocation:0.4, maxAllocation:1, feather:0 , restrict:[[7000,7999]] },\r\n    ]\r\n   \r\n\r\n\r\n\r\n    /* ***************************************************************************************** */\r\n    // AUX Functions\r\n    /* ***************************************************************************************** */\r\n    this.JSONparse = ()=>{\r\n    \r\n        this.SiteList.map((site,i)=>{\r\n            if(typeof site.siteweighting === 'string')\r\n                site.siteweighting = orderBy(JSON.parse(site.siteweighting), ['name'], ['asc', 'desc']); \r\n            else\r\n                site.siteweighting = orderBy(site.siteweighting, ['name'], ['asc', 'desc']);\r\n        })\r\n        this.SiteList = orderBy(this.SiteList, item => item.count[0].WorkOrders, ['desc']);\r\n        this.SearchThisList = JSON.parse(JSON.stringify(this.SiteList));\r\n    }\r\n\r\n\r\n    this.CheckGlobalKeys=(NameKey)=>{\r\n        if(this.GlobalCluster[NameKey] === undefined)\r\n            this.GlobalCluster[NameKey] = []\r\n    }\r\n\r\n\r\n\r\n\r\n    /* ***************************************************************************************** */\r\n    // Rules\r\n    /* ***************************************************************************************** */\r\n\r\n    this.ArrayState = ()=>{\r\n        if((this.ScanAreas.length-1) === this.ProcessPointer || this.SearchThisList.length  === 0){\r\n            console.log(\"SCAN COMPLETE\")\r\n            this.Global();\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n    this.PointerState=(int)=>{\r\n        if(int === (this.SearchThisList.length-1) && int > 0){\r\n            console.log(\"Int and Arr are the Same\")\r\n            this.ProcessPointer = this.ProcessPointer + 1\r\n            this.ProcessScan(this.ScanAreas[this.ProcessPointer], 0);\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    // Rule : is Site in radius Rule\r\n    this.IsInDistance=(SiteInFocus,site,Range)=>{\r\n        let Distance = distancetoPoint(SiteInFocus.lat, SiteInFocus.long, site.lat,site.long, \"K\")\r\n\r\n        if( Distance === 0 || Distance >= Range.range[0] && Distance <= Range.range[1] || (Distance-((Range.feather/100)*Distance)) <= Range.range[1]) \r\n            return true\r\n        else\r\n            return false\r\n    }\r\n\r\n\r\n    // Rule : Restrict Postcode if in restricted Category\r\n    this.sitePostCodeCheck = (postcode,region, int)=>{\r\n        let Retrict = false\r\n\r\n            region.restrict.map((range,i)=>{ Retrict = inRange(postcode, range[0], range[1])})\r\n        \r\n            if(!Retrict)\r\n                return Retrict;\r\n            else\r\n                this.ProcessScan(this.ScanAreas[this.ProcessPointer], (int+1));\r\n                return Retrict;\r\n        \r\n    }\r\n\r\n    // check cluster integity\r\n    this.clusterintegrity =(SiteCluster)=>{\r\n        // check to see if the cluster should be handed over to a quota\r\n        if(SiteCluster.length === 0)\r\n           return false\r\n        else\r\n            return true\r\n    }\r\n\r\n\r\n    // Cluster Rules\r\n\r\n\r\n    this.ClusterQuota = (cluster, int)=>{\r\n        let resourceQuota=[]\r\n        let MaxAllocation = this.ScanAreas[this.ProcessPointer].maxAllocation;\r\n        cluster.map((site,i)=>{\r\n            site.siteweighting.map((weight,ii)=>{  \r\n                \r\n                if(MaxAllocation === null){\r\n                    resourceQuota.push(weight[this.ScanAreas[this.ProcessPointer].name]) \r\n                }else{\r\n                    if(resourceQuota.reduce((a, b) => a + b, 0) < this.ScanAreas[this.ProcessPointer].maxAllocation){\r\n                        resourceQuota.push(weight[this.ScanAreas[this.ProcessPointer].name]) \r\n                    }\r\n                    else{\r\n                        console.log(\"Max Quota Hit for this cluster in this Category. remove the existing sites\")\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\r\n        if(resourceQuota.reduce((a, b) => a + b, 0) >=  this.ScanAreas[this.ProcessPointer].allocation){\r\n           //console.log(\"resourceQuota\", resourceQuota.reduce((a, b) => a + b, 0), this.ScanAreas[this.ProcessPointer].name, this.ScanAreas[this.ProcessPointer].allocation)\r\n            return resourceQuota.reduce((a, b) => a + b, 0)\r\n        }else{\r\n            //console.log(\"Cluster Failed to reach min resources\")\r\n            this.ProcessScan(this.ScanAreas[this.ProcessPointer], (int+1));\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /* ***************************************************************************************** */\r\n    // Power Functions \r\n    // Start Here\r\n    this.Search=()=>{\r\n        console.log(\"Begin Marker Search\")\r\n        // 1. OrderSites on site weighting\r\n        this.JSONparse();\r\n        // 2,\r\n        this.ProcessScan(this.ScanAreas[this.ProcessPointer], 0);\r\n        // 3 Rules\r\n            // Site Rules\r\n            // CLuster Rules\r\n            // State of Search Array\r\n    }\r\n    \r\n\r\n    this.ProcessScan = (Range, int)=>{\r\n\r\n        // Scan Function Variables\r\n        let SiteCluster=[]\r\n        let CenterPoints=[]\r\n        \r\n\r\n        // Scan State Rules\r\n        // If State Complete\r\n        if(this.ArrayState())   \r\n            return true\r\n        // If Pointer exhusted\r\n        if(this.PointerState(int))\r\n            return true\r\n      \r\n        // Data Collection House Keeping\r\n            // check to see if region exists in this.global\r\n            this.CheckGlobalKeys(Range.name);\r\n\r\n\r\n        let SiteInFocus = this.SearchThisList[int];\r\n       \r\n        if(SiteInFocus.combined != null){\r\n            \r\n            // Rule. Check if post code is restricted to the current scan category\r\n            if(this.sitePostCodeCheck(SiteInFocus.postcode.name, Range, int))\r\n                return false\r\n\r\n            // Create an instance of a cluster center point, should cluster exist\r\n            CenterPoints.push({\r\n                name:`${SiteInFocus.region.name}-${Range.name}-${SiteInFocus.name}`,\r\n                center:{ lat: SiteInFocus.lat, lng: SiteInFocus.long },\r\n                range:Range.range[1],\r\n                scanCategory:Range.name,\r\n                feather:Range.feather,\r\n                region:SiteInFocus.region.name,\r\n                postcode:SiteInFocus.postcode.name\r\n            })\r\n\r\n\r\n            this.SearchThisList.map((site,ii)=>{\r\n               \r\n                // 1 rule for sites.\r\n                // Do they fit into the Radius of the center point?\r\n                if(this.IsInDistance(SiteInFocus, site, Range))\r\n                    SiteCluster.push(site)\r\n                else\r\n                    return false\r\n            })\r\n\r\n\r\n        }\r\n        else{\r\n            // CATCH ALL SITES NOT INCLUDED IN SCAN\r\n            let NoLngLat = findIndex(this.CatchNoLongLat, function(o) { return o.name == SiteInFocus.name; });\r\n            if(NoLngLat === -1)\r\n                this.CatchNoLongLat.push(SiteInFocus)\r\n            \r\n            \r\n        }\r\n\r\n        // should i push to Quota or fail this cluster nad move on?\r\n        if(this.clusterintegrity(SiteCluster))\r\n            this.findResourceQuota(SiteCluster, CenterPoints, int);\r\n        else\r\n            this.ProcessScan(this.ScanAreas[this.ProcessPointer], (int+1));\r\n       \r\n    }\r\n\r\n\r\n\r\n    this.findResourceQuota=(cluster, CenterPoints, int)=>{\r\n            //let resourceQuota=[]\r\n\r\n             // is cluster Quote over the current threshold?\r\n             let QuoteThreshold  = this.ClusterQuota(cluster, int) \r\n            \r\n             if(QuoteThreshold)\r\n                {\r\n                \r\n                    CenterPoints[0].resourceQuota = QuoteThreshold;\r\n                    CenterPoints[0].sites = cluster;\r\n                    \r\n                    this.GlobalCluster[this.ScanAreas[this.ProcessPointer].name].push(cluster);\r\n                    this.GlobalCenterpoints.push(CenterPoints[0])\r\n                    \r\n                    this.removeSites(cluster)\r\n             }\r\n\r\n           return true;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    this.removeSites=(cluster)=>{\r\n        //console.log(\"Cluster REMOVAL\")\r\n        \r\n        \r\n        let Index;\r\n        cluster.map((site,i)=>{\r\n            //console.log(site);\r\n            Index = findIndex(this.SearchThisList, function(o) { return o.name == site.name; });\r\n            //console.log(\"Index\", Index, site.name)\r\n            this.SearchThisList.splice(Index , 1)\r\n        })\r\n        this.ProcessScan(this.ScanAreas[this.ProcessPointer], 0);\r\n        //console.log(this.GlobalCluster);\r\n        //console.log(this.SearchThisList.length);\r\n        \r\n    }\r\n\r\n    this.Global = ()=>{\r\n\r\n        console.log(\"this.GlobalCluster\", this.GlobalCluster.length);\r\n        console.log(\"this.CatchNoLongLat\", this.CatchNoLongLat.length);\r\n        console.log(\"this.SearchThisList\", this.SearchThisList.length);\r\n\r\n\r\n        store.dispatch({ type:'SCANSTATE', payload:false}); \r\n        store.dispatch({ type:'STOREMARKERRESULTS', payload:this.GlobalCluster});\r\n        store.dispatch({ type:'STOREMARKERCENTERPOINTS', payload:this.GlobalCenterpoints}); \r\n        store.dispatch({ type:'STORERESIDUALMARKERS', payload:this.SearchThisList});\r\n        store.dispatch({ type:'STORENOLONGLAT', payload:this.CatchNoLongLat}); \r\n        \r\n        \r\n        \r\n    }\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleScanProcess.js",["626"],"\r\n// Private Functions\r\nimport store from \"../store/index\"\r\nimport axios from 'axios';\r\nimport {useAPILOCATION} from \"./authUser\"\r\n\r\n\r\n\r\nexport const CreateNewScan = (value)=>{  store.dispatch({ type:'CREATENEWDATASET', payload:value});} \r\n\r\n\r\nexport const SetSelected = (value)=>{\r\n    store.dispatch({ type:'USERDATASETSELECTEDDATABASE', payload:value});\r\n    \r\n}\r\n\r\nexport const StoreSelected_Single =(Data)=>{\r\n\r\n    console.log(Data);\r\n    store.dispatch({ type:'USERSTORESINGLEDATASET', payload:Data});\r\n} \r\n\r\nexport const BacktoScanOptions = ()=>{\r\n        console.log(\"BACK\");\r\n        CreateNewScan(false)\r\n        SetSelected(false)\r\n        StoreSelected_Single([])    \r\n}\r\n\r\nexport const BacktoAddItemsSingle = ()=>{\r\n    console.log(\"BACK to Select\");\r\n    \r\n    SetSelected(false)\r\n   // StoreSelected_Single([]) \r\n}\r\n\r\n\r\nexport const ResetCreateNewModel = ()=>{\r\n\r\n  \r\n    store.dispatch({ type:'CREATENEWDATASET', payload:false})\r\n    store.dispatch({ type:'USERDATASETSELECTEDDATABASE', payload:false})\r\n    store.dispatch({ type:'USERSTORESINGLEDATASET', payload:[]})\r\n    store.dispatch({ type:'USERSCANPROCESSING', payload:false})\r\n}\r\n\r\nexport const FetchSelectedItems = async  (DATA, TITLE, DESCRIPTION, S,E)=>{\r\n\r\n    let IDStr=[];\r\n    DATA.map((customer,i)=>{\r\n            IDStr.push(customer.id)\r\n    })\r\n\r\n    const ENDPOINT=useAPILOCATION()+'sites/scan'\r\n    const JWTToken = store.getState().AUTH.jwt;\r\n    const AuthUSer = store.getState().AUTH.user\r\n    const axiosHeader = {Authorization: \"Bearer \" + JWTToken}\r\n\r\n    \r\n    \r\n\r\n    console.log(\"Items sent to Strapi \", IDStr.length)\r\n    console.log(AuthUSer.id,  TITLE, DESCRIPTION)\r\n    const ScanName=TITLE\r\n    const ScanDescription=DESCRIPTION\r\n    \r\n    \r\n    store.dispatch({ type:'USERSCANPROCESSING', payload:true}); \r\n\r\n    //await axios.get(ENDPOINT+IDStr.toString()) \r\n\r\n   await axios({ url: ENDPOINT+'/'+[S,E].toString()+'/'+ScanName+'/'+ScanDescription+'/'+AuthUSer.id+'/'+IDStr.toString(), method: 'get', headers: axiosHeader})\r\n        .then(function (res) {\r\n            console.log(\"Create Model Return Value from Server\", res.data);\r\n            \r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n        .then(function () {\r\n            // always executed\r\n        });\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\authUser.js",["627"],"// Private Functions\r\nimport store from \"../store/index\"\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\n// lazy testing only Fix this!\r\n\r\nexport const useAPILOCATION = () => {\r\n        let APILOCATION;\r\n        if (process.env.NODE_ENV !== 'production') {\r\n                APILOCATION = 'http://localhost:1337/'\r\n        }\r\n        else\r\n        {\r\n                APILOCATION = 'https://intact-analtyiq.herokuapp.com/'\r\n        }        \r\n        \r\n        return APILOCATION\r\n} \r\n\r\n\r\nexport const StrapiAuth = async (u,p)=>{\r\n        store.dispatch({ type:'PROCESSAUTH', payload:true});\r\n   \r\n        await axios.post(useAPILOCATION()+'auth/local', {\r\n        identifier: u,\r\n        password:p,\r\n        }).then((res)=>{\r\n              \r\n                store.dispatch({ type:'PROCESSAUTH', payload:false});\r\n                store.dispatch({ type:'AUTHUSERJWT', payload:res.data.jwt});\r\n                store.dispatch({ type:'AUTHUSER', payload:res.data.user});\r\n\r\n                // TODO\r\n                // for dev only, change this for production\r\n                localStorage.setItem('jwt', res.data.jwt);\r\n                localStorage.setItem('jwtid', res.data.user.id);\r\n\r\n\r\n        }).catch(function (thrown) {\r\n                if (axios.isCancel(thrown)) {\r\n                  console.log('Request canceled', thrown.message);\r\n                } else {\r\n                  // handle error\r\n                  console.log(\"ERROR\");\r\n                  store.dispatch({ type:'PROCESSAUTH', payload:false});\r\n                  store.dispatch({ type:'PROCESSAUTHERROR', payload:true});\r\n                }\r\n        });\r\n}\r\n\r\n\r\nexport const JWT=()=>{\r\n        \r\n        let JWT = localStorage.getItem('jwt');\r\n        let JWTID = localStorage.getItem('jwtid');\r\n        console.log(JWT);\r\n        if(JWT !== null){\r\n                store.dispatch({ type:'AUTHUSERJWT', payload:JWT});\r\n        }\r\n        if(JWTID !== null){\r\n                store.dispatch({ type:'AUTHUSER', payload:{id:JWTID} });\r\n        }\r\n        \r\n}\r\n\r\n\r\n\r\n/* ************************************************************************* */\r\n// Scan Related functions\r\nexport const FetchPreviousScans = ()=>{\r\n        \r\n        const axiosHeader = {Authorization: \"Bearer \" + store.getState().AUTH.jwt}\r\n        const APIFETCH = useAPILOCATION()+'scan-histories?UserID='+store.getState().AUTH.user.id+'&_sort=createdAt:DESC'\r\n        \r\n        // Tell UI whats going on;\r\n        store.dispatch({ type:'REFRESHSCANHISTORY', payload:true});\r\n        \r\n        // Send API Request\r\n        axios({ url: APIFETCH, method: 'get', headers: axiosHeader})\r\n        .then((result) => { \r\n\r\n                store.dispatch({ type:'AUTHSTORESCANHISTORY', payload:result.data});\r\n                store.dispatch({ type:'REFRESHSCANHISTORY', payload:false});\r\n                }).catch(function (thrown) {\r\n                        store.dispatch({ type:'REFRESHSCANHISTORY', payload:false});\r\n                        if (axios.isCancel(thrown)) { console.log('Request canceled', thrown.message);\r\n                        } else { console.log(\"ERROR\", thrown);}\r\n                });\r\n}\r\n\r\n\r\n\r\n\r\nexport const FetchSingleScanResult = (scanID, scan)=>{\r\n\r\n        store.dispatch({ type:'STORESELECTEDUI', payload:{active:false,processing:true,activeID:scanID} }); \r\n\r\n\r\n        console.log(\"scanID\", scanID)\r\n        const AWSURL=' https://intactanalytiq.s3-ap-southeast-2.amazonaws.com/';\r\n       // 6002d5ece940b655642d22df.json\r\n       // headers: axiosHeader\r\n       axios({ url: AWSURL+scanID+'.json', method: 'get'})\r\n        .then((result) => { \r\n        \r\n                //console.log(result.data);\r\n                //result.data.SCANSTATE\r\n                const UICHANGE={active:true,processing:false, activeID:scanID}   \r\n                store.dispatch({ type:'STORESELECTEDMODEL', payload:result.data}); \r\n                store.dispatch({ type:'STORESELECTEDMODELMETA', payload:scan}); \r\n                \r\n                store.dispatch({ type:'STORESELECTEDUI', payload:UICHANGE}); \r\n                //console.log(scan)\r\n                }).catch(function (thrown) {\r\n                        if (axios.isCancel(thrown)) { console.log('Request canceled', thrown.message);\r\n                        } else { console.log(\"ERROR\", thrown);}\r\n                });\r\n}\r\n\r\n\r\n\r\n\r\nconst FetchAPI = (Route, TYPE, i=0)=>{\r\n        const APIFETCH =useAPILOCATION()+Route\r\n        const JWTToken = store.getState().AUTH.jwt;\r\n        //console.log(JWTToken)\r\n        const axiosHeader = {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Authorization': \"Bearer \" + JWTToken\r\n       }\r\n      \r\n\r\n\r\n        axios({ url: APIFETCH, method: 'get', headers: axiosHeader})\r\n        .then((result) => { \r\n        \r\n                //console.log(result);\r\n                store.dispatch({ type:TYPE, payload:result.data});\r\n\r\n                }).catch(function (thrown) {\r\n                        if (axios.isCancel(thrown)) { console.log('Request canceled', thrown.message);\r\n                        } else { \r\n                                console.log(\"ERROR\", thrown);\r\n                                console.log(\"i = \", i)\r\n                                if(i<3){\r\n                                        \r\n                                        setTimeout(()=>{ FetchAPI(Route, TYPE, i=i+1) },3000)\r\n                                }\r\n                                else{\r\n                                        store.dispatch({ type:'DATAFETCHFAIL', payload:true}); \r\n                                }\r\n                                \r\n                        }\r\n                });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const FetchDataIntegrity=()=>{\r\n        // list out the items needed to fetch\r\n        // do a look up to see if these items are already in the reducer\r\n        \r\n     \r\n        GetTradeTypes();\r\n        // FOr testing purposes pause this one\r\n        setTimeout(()=>{ GetCustomers(); },3000)\r\n        \r\n       GetTradeAllocations();\r\n        FetchPreviousScans();\r\n}\r\n\r\n\r\nconst GetCustomers=()=>{\r\n        console.log(\"GetCustomers\")\r\n        if(store.getState().STRAPI.UserData.Customers === false)\r\n                FetchAPI('customers/intact', 'STORECUSTOMERS')        \r\n}\r\n\r\nconst GetSites=()=>{\r\n        console.log(\"GetSites\")\r\n        if(store.getState().STRAPI.sites === false)\r\n                FetchAPI('sites/intact', 'STORESITES')        \r\n}\r\n\r\nconst GetTradeTypes=()=>{\r\n        console.log(\"GetTradeTypes\")\r\n        if(store.getState().STRAPI.UserData.tradetypes === false)\r\n                FetchAPI('trade-types/intact', 'STORETRADETYPES')         \r\n}\r\n\r\nconst GetTradeAllocations=()=>{\r\n        console.log(\"GetTradeAllocations\")\r\n        if(store.getState().STRAPI.UserData.tradeAllocationRatio === false)\r\n                FetchAPI('trade-allocation-ratios', 'STORETRADEALLOCATION')        \r\n}\r\n\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Landing\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\AuthLogin\\index.js",["628"],"import React, { useEffect } from 'react';\r\nimport {useContext_AUTH_FULL} from \"../../../Context/AUTH\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {LogoMain} from \"../../../Assets/logo\"\r\nimport LoginForm from \"../../../venders/MaterialUI/Forms/LoginForm\"\r\n\r\n\r\nconst AuthLogin = ()=>{\r\n\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const Pushhistory = useHistory();\r\n    \r\n \r\n    \r\n    useEffect(()=>{ if(AUTH.jwt !== false){Pushhistory.push(\"/auth\");}},[AUTH])\r\n    return(\r\n        <div className=\"LoginForm\">\r\n             <LogoMain />\r\n            <h1>Intact AnalytiQ</h1>\r\n \r\n            <LoginForm />\r\n           <Disclaimer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthLogin;\r\n\r\n\r\nconst Disclaimer = ()=>{\r\n    return(\r\n          <div className=\"disclaimer\">\r\n              <p>This is a prototype build of Intact Analyiq alpha v0.1 </p>\r\n              <p>Please wait whilst we fire up the Dyno's</p>\r\n          </div>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\index.js",["629","630","631","632","633","634","635","636"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\About\\about.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Contact\\contact.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\index.js",["637","638","639","640"],"import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport PublicLayout from \"../../Template/PublicLayout\";\r\n// Components\r\nimport history from  '../../History'\r\n\r\nimport ComponentAbout from \"./About/about\";\r\nimport ComponentLanding from \"./Landing/index\"\r\nimport ComponentContact from \"./Contact/contact\";\r\nimport ComponentLogin from \"./AuthLogin/index\";\r\nimport ComponentUnAuth from \"./unAuth/UnAuth\";\r\n\r\nconst publicPath='demo'\r\nconst routes = [\r\n    { Rpath: `/${publicPath}/`, component: ComponentLogin, exact:true},\r\n   // { Rpath: `/${publicPath}/about`, component: ComponentAbout, exact:false},\r\n   // { Rpath: `/${publicPath}/contact`, component: ComponentContact, exact:false},\r\n   // { Rpath: `/${publicPath}/login`, component: ComponentLogin, exact:false},\r\n   // { Rpath: `/${publicPath}/unauthorized`, component: ComponentUnAuth, exact:false},\r\n  ];\r\n\r\n\r\nconst Landing = (props)=>{\r\n\r\n    return(\r\n\r\n                <Switch  history={history}>\r\n                    <PublicLayout>\r\n                    {\r\n                        routes.map((route, i) => (<Route key={i}  exact={route.exact} path={route.Rpath} render={()=> <route.component {... props}/> }/> ))\r\n                    }\r\n                    </PublicLayout>\r\n                </Switch> \r\n    )\r\n}\r\n\r\nexport default Landing\r\n\r\n// </Switch>\r\n/**\r\n * *\r\n *  <div className=\"InnerFrame\">\r\n            <h1>Landing Page</h1>\r\n            <h2>Asset Set List</h2>\r\n            <h3>Header 3</h3>\r\n            <p>Paragragh</p>\r\n            <ul>\r\n                <li>List item</li>\r\n                <li>List item</li>\r\n                <li>List item</li>\r\n            </ul>\r\n\r\n        <h2> For Testing </h2>\r\n            <Login />\r\n\r\n        </div>\r\n */","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\unAuth\\UnAuth.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\AUTH.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\AUTH.js",["641"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_AUTH_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_AUTH_FULL = ()=>{\r\n    return useContext(Context_AUTH_FULL)\r\n}\r\n\r\n\r\n \r\nexport const AUTHContextProvider = ({children})=>{\r\n    const AUTH = useSelector(state => state.AUTH );\r\n\r\n    useMemo(()=>{  },[AUTH]) \r\n\r\n    return(\r\n            <Context_AUTH_FULL.Provider value={AUTH}>\r\n                {children}            \r\n            </Context_AUTH_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\AuthDashboard.js",["642"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport SideBar from \"../Navigation/SideBar\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n   // width: `calc(100% - ${drawerWidth}px)`,\r\n    //marginLeft: drawerWidth,\r\n    zIndex:999\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    backgroundColor:'#ffc20e',\r\n    zIndex:99\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor:'#fff',\r\n    borderRight:'1px solid #ffc20e'\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: { \r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PermanentDrawerRight(props) {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <h1>Intact AnalytiQ </h1>\r\n            <p>Front end Portal</p>\r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n    \r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n      \r\n        <SideBar />\r\n       \r\n      </Drawer>\r\n      \r\n      <main className=\"Auth\">  \r\n         <div className={classes.toolbar} />\r\n          <div  className=\"InnerFrame\">\r\n            {props.children}\r\n          </div>\r\n      </main>\r\n\r\n \r\n    </div>\r\n  );\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\PublicLayout.js",["643","644","645"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n\r\n// Components\r\nimport PublicNavigation from \"./Public/Navigation\"\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n   // width: `calc(100% - ${drawerWidth}px)`,\r\n    //marginLeft: drawerWidth,\r\n    zIndex:999\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    backgroundColor:'#ffc20e',\r\n    zIndex:99\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor:'#ffc20e'\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PermanentDrawerRight(props) {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <h1>Intact AnalytiQ </h1>\r\n            <p>Front end Portal</p>\r\n         \r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n    \r\n    \r\n      \r\n      <main className=\"Public\">  \r\n        <div className={classes.toolbar} />\r\n         \r\n            <div  className=\"InnerFrame\">\r\n                {props.children}\r\n            </div>\r\n\r\n            \r\n      </main>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n//    <PublicNavigation />\r\n\r\n/*\r\n\r\n  <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n      \r\n      </Drawer>\r\n\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\Public\\Navigation.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\input.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\LoginForm.js",["646"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_AUTH_FULL} from \"Context/AUTH\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {StrapiAuth} from \"actions/authUser\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function BasicTextFields() {\r\n    const AUTH = useContext_AUTH_FULL();\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{},[AUTH])\r\n  return (\r\n        <>\r\n            {\r\n                AUTH.process ? <Processing />:<LoginForm />\r\n            }\r\n        </>\r\n  );\r\n}\r\n\r\n\r\nconst Processing = ()=>{\r\n   \r\n    return(\r\n        <><h3>Authenticating User ...</h3></>\r\n    )\r\n}\r\n\r\nconst Error = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const ErrorTrue='There was an Error in the Username or Password when processing your details'\r\n    const ErrorFalse=''\r\n    useEffect(()=>{},[AUTH])\r\n    return(\r\n        <>{\r\n            AUTH.error ? <h3>{ErrorTrue}</h3>:<h3>{ErrorFalse}</h3>\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nconst LoginForm = ()=>{\r\n    const classes = useStyles();\r\n    const [USERNAME, setUsername] = useState('')\r\n    const [PASSWORD, setPassword] = useState('')\r\n\r\n    const handleClick=()=>{\r\n\r\n        StrapiAuth(USERNAME,PASSWORD)\r\n    }\r\n\r\n    const handleEmail=(e)=>{setUsername(e.target.value)}\r\n    const handlePassword=(e)=>{setPassword(e.target.value)}\r\n\r\n    return(\r\n        <div className=\"LoginContainer\">\r\n            <Error />\r\n            <div className=\"loginInput\">\r\n                <TextField \r\n                    id=\"outlined-basic\" \r\n                    label=\"e-mail\" \r\n                    variant=\"outlined\" \r\n                    onChange={handleEmail}\r\n                />\r\n            </div>\r\n            <div className=\"loginInput\">\r\n                <TextField\r\n                    id=\"standard-password-input\"\r\n                    label=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    variant=\"outlined\"\r\n                    onChange={handlePassword}\r\n                />\r\n            </div>\r\n            <button className=\"SelectClientBtn\" onClick={()=>{handleClick()}}>Login</button>\r\n                \r\n        </div>\r\n        )\r\n}\r\n\r\n/*\r\n\r\n<TextField id=\"standard-basic\" label=\"Standard\" />\r\n      <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Landing.js",["647"],"import React, { useEffect } from 'react';\r\n\r\nimport Footer from \"./Components/Layout/Footer\";\r\n\r\nconst Profile = ()=>{    \r\n    return(\r\n        <div className=\"AuthLayout\">\r\n        <div className=\"Header\">\r\n            <h1>Profile</h1>\r\n            <h2>User</h2>\r\n        </div>\r\n\r\n        <div className=\"Content\">\r\n            <div>\r\n               <h2>What is a Model</h2>\r\n               <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n            </div>\r\n            <div>\r\n                <h2>Viewing saved Models</h2>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n            </div>\r\n            <div>\r\n                <h2>Comparing Models</h2>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n            </div>\r\n            </div>\r\n\r\n            <Footer />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Loading\\Loading.js",["648","649"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\DataDump.js",["650","651","652","653","654","655"],"import React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_UX_FULL} from \"../../Context/UX\";\r\nimport {useContext_STRAPI_FULL} from \"../../Context/STRAPI\";\r\nimport { Label } from '@material-ui/icons';\r\nimport {FetchDataIntegrity} from \"../../actions/authUser\";\r\n\r\nimport { GoogleMap, Polygon, Circle,Marker } from '@react-google-maps/api';\r\n\r\nlet classifyPoint = require(\"robust-point-in-polygon\");\r\n\r\nconst options = {\r\n    fillColor: \"lightblue\",\r\n    fillOpacity: .1,\r\n    strokeColor: \"red\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 1\r\n  }\r\n\r\n \r\n\r\nlet coordinates= \r\n    [\r\n        [\r\n            -38.20287888120297,\r\n            145.36076066919964\r\n        ],\r\n        [\r\n            -38.20264653157745,\r\n            145.35500987782163\r\n        ],\r\n        [\r\n            -38.202296857647667,\r\n            145.354647762099\r\n        ],\r\n        [\r\n            -38.202305412878751,\r\n            145.35463348535993\r\n        ],\r\n        [\r\n            -38.198232700381887,\r\n            145.35068167824556\r\n        ],\r\n        [\r\n            -38.19876103435984,\r\n            145.35007007957168\r\n        ],\r\n        [\r\n            -38.199838235120325,\r\n            145.34628309450679\r\n        ],\r\n        [\r\n            -38.198536335604921,\r\n            145.33471649944818\r\n        ],\r\n        [\r\n            -38.201417078584214,\r\n            145.33412249312326\r\n        ],\r\n        [\r\n            -38.204217855444192,\r\n            145.32920686786358\r\n        ],\r\n        [\r\n            -38.200338842255405,\r\n            145.32565779156207\r\n        ],\r\n        [\r\n            -38.199272132555535,\r\n            145.32587787506768\r\n        ],\r\n        [\r\n            -38.201134453004158,\r\n            145.31661470233047\r\n        ],\r\n        [\r\n            -38.214475206442238,\r\n            145.32226343389226\r\n        ],\r\n        [\r\n            -38.218431138769162,\r\n            145.315967848521\r\n        ],\r\n        [\r\n            -38.21547382140082,\r\n            145.30974238773044\r\n        ],\r\n        [\r\n            -38.214076302359281,\r\n            145.30878128090765\r\n        ],\r\n        [\r\n            -38.214340854096449,\r\n            145.30804743711764\r\n        ],\r\n        [\r\n            -38.210236133922869,\r\n            145.3028068714558\r\n        ],\r\n        [\r\n            -38.203207229449824,\r\n            145.30508501666245\r\n        ],\r\n        [\r\n            -38.205496343712426,\r\n            145.28497747301694\r\n        ],\r\n        [\r\n            -38.208844666297004,\r\n            145.28433771443778\r\n        ],\r\n        [\r\n            -38.208897476690623,\r\n            145.28467428888257\r\n        ],\r\n        [\r\n            -38.21287954708383,\r\n            145.28803545465016\r\n        ],\r\n        [\r\n            -38.215531515401246,\r\n            145.28298823474921\r\n        ],\r\n        [\r\n            -38.214849884462467,\r\n            145.27864454464441\r\n        ],\r\n        [\r\n            -38.211032380408426,\r\n            145.2752472396312\r\n        ],\r\n        [\r\n            -38.205934965510842,\r\n            145.27622184847118\r\n        ],\r\n        [\r\n            -38.205944305724778,\r\n            145.27518723347845\r\n        ],\r\n        [\r\n            -38.214720082574594,\r\n            145.27346916832732\r\n        ],\r\n        [\r\n            -38.217551706039849,\r\n            145.26858112298595\r\n        ],\r\n        [\r\n            -38.213695164989552,\r\n            145.26499229099571\r\n        ],\r\n        [\r\n            -38.206725558367658,\r\n            145.26635759823651\r\n        ],\r\n        [\r\n            -38.207964584423067,\r\n            145.25722421839609\r\n        ],\r\n        [\r\n            -38.210273555407106,\r\n            145.25671611357362\r\n        ],\r\n        [\r\n            -38.210456013083068,\r\n            145.25959169408486\r\n        ],\r\n        [\r\n            -38.214101301171553,\r\n            145.26351908956269\r\n        ],\r\n        [\r\n            -38.217199983956078,\r\n            145.2588986740038\r\n        ],\r\n        [\r\n            -38.216979286480438,\r\n            145.25542056674726\r\n        ],\r\n        [\r\n            -38.218260715832983,\r\n            145.25521241196955\r\n        ],\r\n        [\r\n            -38.219914492280822,\r\n            145.2475769362724\r\n        ],\r\n        [\r\n            -38.219528003039279,\r\n            145.24726687489255\r\n        ],\r\n        [\r\n            -38.220818247564083,\r\n            145.24591140463841\r\n        ],\r\n        [\r\n            -38.221825150503136,\r\n            145.24793064080239\r\n        ],\r\n        [\r\n            -38.227961981232518,\r\n            145.24665584241583\r\n        ],\r\n        [\r\n            -38.2279905295668,\r\n            145.24618087061361\r\n        ],\r\n        [\r\n            -38.229556079297943,\r\n            145.24771562069847\r\n        ],\r\n        [\r\n            -38.234043541200606,\r\n            145.24729800398887\r\n        ],\r\n        [\r\n            -38.23423449050015,\r\n            145.24159844513224\r\n        ],\r\n        [\r\n            -38.23271822723008,\r\n            145.23922639919857\r\n        ],\r\n        [\r\n            -38.238419313139381,\r\n            145.23810910271348\r\n        ],\r\n        [\r\n            -38.245228676247606,\r\n            145.23844602649794\r\n        ],\r\n        [\r\n            -38.244470081591494,\r\n            145.24739557667604\r\n        ],\r\n        [\r\n            -38.247319953738831,\r\n            145.25209818302761\r\n        ],\r\n        [\r\n            -38.251151207886977,\r\n            145.24869632106527\r\n        ],\r\n        [\r\n            -38.25570724338607,\r\n            145.21943425254597\r\n        ],\r\n        [\r\n            -38.2722179500131,\r\n            145.21976211337028\r\n        ],\r\n        [\r\n            -38.2756534067565,\r\n            145.21546171657522\r\n        ],\r\n        [\r\n            -38.275631128058464,\r\n            145.20307414288678\r\n        ],\r\n        [\r\n            -38.280518232585507,\r\n            145.2031361200151\r\n        ],\r\n        [\r\n            -38.281412948906727,\r\n            145.20739918754421\r\n        ],\r\n        [\r\n            -38.285216434680862,\r\n            145.21052421437429\r\n        ],\r\n        [\r\n            -38.285827041688904,\r\n            145.21024790418167\r\n        ],\r\n        [\r\n            -38.288848002552456,\r\n            145.21664334900825\r\n        ],\r\n        [\r\n            -38.295112530946483,\r\n            145.21403451105456\r\n        ],\r\n        [\r\n            -38.293819716461222,\r\n            145.19587265346826\r\n        ],\r\n        [\r\n            -38.306970115979574,\r\n            145.19880763790889\r\n        ],\r\n        [\r\n            -38.310765723115253,\r\n            145.19591689859274\r\n        ],\r\n        [\r\n            -38.309057832326467,\r\n            145.1907338120098\r\n        ],\r\n        [\r\n            -38.30686727404737,\r\n            145.18933980973719\r\n        ],\r\n        [\r\n            -38.309376963359327,\r\n            145.18740434524062\r\n        ],\r\n        [\r\n            -38.309336116292073,\r\n            145.18721629815\r\n        ],\r\n        [\r\n            -38.309570003147975,\r\n            145.18705973986283\r\n        ],\r\n        [\r\n            -38.311089497136649,\r\n            145.18350890798359\r\n        ],\r\n        [\r\n            -38.311161139726863,\r\n            145.17133146295285\r\n        ],\r\n        [\r\n            -38.328012479385968,\r\n            145.17132061488513\r\n        ],\r\n        [\r\n            -38.328012479147951,\r\n            145.1713200145588\r\n        ],\r\n        [\r\n            -38.328017594789145,\r\n            145.17132064098064\r\n        ],\r\n        [\r\n            -38.330397835583994,\r\n            145.16398287081878\r\n        ],\r\n        [\r\n            -38.328663765047644,\r\n            145.16281211472025\r\n        ],\r\n        [\r\n            -38.3280098899073,\r\n            145.16273212351575\r\n        ],\r\n        [\r\n            -38.328009889754178,\r\n            145.16273138472064\r\n        ],\r\n        [\r\n            -38.328003867228979,\r\n            145.16273138674404\r\n        ],\r\n        [\r\n            -38.328003647340267,\r\n            145.16273135984409\r\n        ],\r\n        [\r\n            -38.328003435618953,\r\n            145.16273138688905\r\n        ],\r\n        [\r\n            -38.327430227256343,\r\n            145.16273157945983\r\n        ],\r\n        [\r\n            -38.327454983649211,\r\n            145.14994913242276\r\n        ],\r\n        [\r\n            -38.335388541815682,\r\n            145.14995559339206\r\n        ],\r\n        [\r\n            -38.335371836806274,\r\n            145.16882553726896\r\n        ],\r\n        [\r\n            -38.338750552683358,\r\n            145.17312609166504\r\n        ],\r\n        [\r\n            -38.342137787087047,\r\n            145.16883615438772\r\n        ],\r\n        [\r\n            -38.342154497027551,\r\n            145.14996031688858\r\n        ],\r\n        [\r\n            -38.355992540447296,\r\n            145.14996836745044\r\n        ],\r\n        [\r\n            -38.359376966491268,\r\n            145.14567385418428\r\n        ],\r\n        [\r\n            -38.35599530278953,\r\n            145.14137583238679\r\n        ],\r\n        [\r\n            -38.342160678253549,\r\n            145.14136941824844\r\n        ],\r\n        [\r\n            -38.342166491146514,\r\n            145.13155509178586\r\n        ],\r\n        [\r\n            -38.347228271873092,\r\n            145.13155395411698\r\n        ],\r\n        [\r\n            -38.350353333143687,\r\n            145.12890132321624\r\n        ],\r\n        [\r\n            -38.350446046243555,\r\n            145.12851291720133\r\n        ],\r\n        [\r\n            -38.350686003803148,\r\n            145.12908438201018\r\n        ],\r\n        [\r\n            -38.356883666567306,\r\n            145.12670544100061\r\n        ],\r\n        [\r\n            -38.356891631511,\r\n            145.11570728065089\r\n        ],\r\n        [\r\n            -38.356991839752624,\r\n            145.11578261420175\r\n        ],\r\n        [\r\n            -38.361548450489806,\r\n            145.11440427979798\r\n        ],\r\n        [\r\n            -38.360652646065631,\r\n            145.10856494352984\r\n        ],\r\n        [\r\n            -38.355462006986237,\r\n            145.10388336835388\r\n        ],\r\n        [\r\n            -38.355446010189482,\r\n            145.1038938990549\r\n        ],\r\n        [\r\n            -38.355133994384609,\r\n            145.10362424850905\r\n        ],\r\n        [\r\n            -38.34219805173931,\r\n            145.09459096758883\r\n        ],\r\n        [\r\n            -38.342207113761752,\r\n            145.08012495746678\r\n        ],\r\n        [\r\n            -38.344991814794952,\r\n            145.080148525373\r\n        ],\r\n        [\r\n            -38.3449973615199,\r\n            145.08013919404769\r\n        ],\r\n        [\r\n            -38.345572577248653,\r\n            145.08008969699739\r\n        ],\r\n        [\r\n            -38.354207243550441,\r\n            145.0782392858134\r\n        ],\r\n        [\r\n            -38.3570030302851,\r\n            145.07344426922751\r\n        ],\r\n        [\r\n            -38.35332934573109,\r\n            145.06972516533389\r\n        ],\r\n        [\r\n            -38.34730441658256,\r\n            145.07045682590189\r\n        ],\r\n        [\r\n            -38.346796607681462,\r\n            145.06823279986915\r\n        ],\r\n        [\r\n            -38.341985033400192,\r\n            145.06562964455259\r\n        ],\r\n        [\r\n            -38.341556538730458,\r\n            145.06598530859986\r\n        ],\r\n        [\r\n            -38.341186592231793,\r\n            145.06053356721708\r\n        ],\r\n        [\r\n            -38.337523363462594,\r\n            145.05662639487176\r\n        ],\r\n        [\r\n            -38.334446040213855,\r\n            145.06127728918071\r\n        ],\r\n        [\r\n            -38.3352103436585,\r\n            145.07254466425712\r\n        ],\r\n        [\r\n            -38.313856029486374,\r\n            145.0794987232008\r\n        ],\r\n        [\r\n            -38.312532766649277,\r\n            145.06835500427383\r\n        ],\r\n        [\r\n            -38.320348952646469,\r\n            145.06692841902952\r\n        ],\r\n        [\r\n            -38.3213345352237,\r\n            145.05880559278711\r\n        ],\r\n        [\r\n            -38.321028406512006,\r\n            145.05866413759858\r\n        ],\r\n        [\r\n            -38.321356246800036,\r\n            145.05798434073418\r\n        ],\r\n        [\r\n            -38.321662915624415,\r\n            145.05552359182505\r\n        ],\r\n        [\r\n            -38.319565753908925,\r\n            145.03613244123622\r\n        ],\r\n        [\r\n            -38.319803291824265,\r\n            145.03646359983145\r\n        ],\r\n        [\r\n            -38.325447951871887,\r\n            145.03305466464869\r\n        ],\r\n        [\r\n            -38.3248135791294,\r\n            145.01729366755717\r\n        ],\r\n        [\r\n            -38.329401116101138,\r\n            145.01489389021688\r\n        ],\r\n        [\r\n            -38.331676234558493,\r\n            145.0350289529099\r\n        ],\r\n        [\r\n            -38.335508260014926,\r\n            145.03866547718022\r\n        ],\r\n        [\r\n            -38.338372611917535,\r\n            145.0338001657309\r\n        ],\r\n        [\r\n            -38.335974562018137,\r\n            145.01257807867188\r\n        ],\r\n        [\r\n            -38.347975361271075,\r\n            145.0108115021381\r\n        ],\r\n        [\r\n            -38.35095202581806,\r\n            145.00608007779311\r\n        ],\r\n        [\r\n            -38.347244976227422,\r\n            145.00227033865107\r\n        ],\r\n        [\r\n            -38.344220252659184,\r\n            145.00266609216024\r\n        ],\r\n        [\r\n            -38.344596383255109,\r\n            145.00208171158567\r\n        ],\r\n        [\r\n            -38.34416685412112,\r\n            144.99665884982838\r\n        ],\r\n        [\r\n            -38.341772672274111,\r\n            144.99540709964853\r\n        ],\r\n        [\r\n            -38.34126151335574,\r\n            144.99547240513368\r\n        ],\r\n        [\r\n            -38.3412597701498,\r\n            144.99545817751132\r\n        ],\r\n        [\r\n            -38.341255274084496,\r\n            144.9954590729815\r\n        ],\r\n        [\r\n            -38.341253321231939,\r\n            144.99545946192646\r\n        ],\r\n        [\r\n            -38.334555000661631,\r\n            144.99679342490992\r\n        ],\r\n        [\r\n            -38.334336191074186,\r\n            144.99437883189589\r\n        ],\r\n        [\r\n            -38.334607457881752,\r\n            144.9934987710752\r\n        ],\r\n        [\r\n            -38.34460445377767,\r\n            144.99165232675639\r\n        ],\r\n        [\r\n            -38.347503926540611,\r\n            144.9873409576623\r\n        ],\r\n        [\r\n            -38.344511015103691,\r\n            144.98313380720816\r\n        ],\r\n        [\r\n            -38.337182625889056,\r\n            144.98204596445873\r\n        ],\r\n        [\r\n            -38.3401101062904,\r\n            144.97477957375995\r\n        ],\r\n        [\r\n            -38.340363403521636,\r\n            144.9768237664091\r\n        ],\r\n        [\r\n            -38.344092897815273,\r\n            144.98041796782047\r\n        ],\r\n        [\r\n            -38.347078616897448,\r\n            144.97583835931744\r\n        ],\r\n        [\r\n            -38.346439669959871,\r\n            144.96463044806498\r\n        ],\r\n        [\r\n            -38.349170099402727,\r\n            144.96275413765471\r\n        ],\r\n        [\r\n            -38.349078129788161,\r\n            144.95512363707\r\n        ],\r\n        [\r\n            -38.347904914661171,\r\n            144.95437568599976\r\n        ],\r\n        [\r\n            -38.358389395008871,\r\n            144.93016206256794\r\n        ],\r\n        [\r\n            -38.357137176364255,\r\n            144.92436982120219\r\n        ],\r\n        [\r\n            -38.352549171607244,\r\n            144.92582815671977\r\n        ],\r\n        [\r\n            -38.339340977427888,\r\n            144.95330745297579\r\n        ],\r\n        [\r\n            -38.339787267261535,\r\n            144.95528923967743\r\n        ],\r\n        [\r\n            -38.339438015199931,\r\n            144.95609539984608\r\n        ],\r\n        [\r\n            -38.336376743131837,\r\n            144.95670180715987\r\n        ],\r\n        [\r\n            -38.335460260221986,\r\n            144.96483677768919\r\n        ],\r\n        [\r\n            -38.3358447905999,\r\n            144.96500922879648\r\n        ],\r\n        [\r\n            -38.331775568197187,\r\n            144.97516493931741\r\n        ],\r\n        [\r\n            -38.331663256066719,\r\n            144.97421543274345\r\n        ],\r\n        [\r\n            -38.327932578322063,\r\n            144.97059179906387\r\n        ],\r\n        [\r\n            -38.324945774856296,\r\n            144.97519423010561\r\n        ],\r\n        [\r\n            -38.325694431027394,\r\n            144.98742152995629\r\n        ],\r\n        [\r\n            -38.313119930198084,\r\n            145.01048704477412\r\n        ],\r\n        [\r\n            -38.312947656923029,\r\n            145.01071459611907\r\n        ],\r\n        [\r\n            -38.313406907878985,\r\n            145.00473534108764\r\n        ],\r\n        [\r\n            -38.310137569964127,\r\n            145.00217721170807\r\n        ],\r\n        [\r\n            -38.308367571127334,\r\n            145.00296650626589\r\n        ],\r\n        [\r\n            -38.308297739766488,\r\n            145.00250137432377\r\n        ],\r\n        [\r\n            -38.307927961928094,\r\n            145.00123102461609\r\n        ],\r\n        [\r\n            -38.308080507403922,\r\n            144.99800647752519\r\n        ],\r\n        [\r\n            -38.303250206138259,\r\n            144.99387037103432\r\n        ],\r\n        [\r\n            -38.30306606501513,\r\n            144.99400995645397\r\n        ],\r\n        [\r\n            -38.300987637034353,\r\n            144.98655346239107\r\n        ],\r\n        [\r\n            -38.297064437494711,\r\n            144.98380601456915\r\n        ],\r\n        [\r\n            -38.29443401084481,\r\n            144.98840924932284\r\n        ],\r\n        [\r\n            -38.2951802672228,\r\n            144.9982814121251\r\n        ],\r\n        [\r\n            -38.290273647911647,\r\n            145.00023659843566\r\n        ],\r\n        [\r\n            -38.286938646371347,\r\n            144.99639237141233\r\n        ],\r\n        [\r\n            -38.290940299747881,\r\n            144.99271761696949\r\n        ],\r\n        [\r\n            -38.291819421581188,\r\n            144.98692186900516\r\n        ],\r\n        [\r\n            -38.287306583280234,\r\n            144.98549130337474\r\n        ],\r\n        [\r\n            -38.269640808541347,\r\n            144.99822445101341\r\n        ],\r\n        [\r\n            -38.268131048261296,\r\n            145.00046540443392\r\n        ],\r\n        [\r\n            -38.265673115060366,\r\n            145.00890438892768\r\n        ],\r\n        [\r\n            -38.250557791805434,\r\n            145.02333309954855\r\n        ],\r\n        [\r\n            -38.229760266816733,\r\n            145.02198884706107\r\n        ],\r\n        [\r\n            -38.228548061796353,\r\n            145.02219164069422\r\n        ],\r\n        [\r\n            -38.211453005463056,\r\n            145.02926009425246\r\n        ],\r\n        [\r\n            -38.209138000264311,\r\n            145.03387995137797\r\n        ],\r\n        [\r\n            -38.210273147148655,\r\n            145.0453095861167\r\n        ],\r\n        [\r\n            -38.203335514481829,\r\n            145.05340268716233\r\n        ],\r\n        [\r\n            -38.205619718382565,\r\n            145.06085671254542\r\n        ],\r\n        [\r\n            -38.2096644306032,\r\n            145.06085145494322\r\n        ],\r\n        [\r\n            -38.210090080892734,\r\n            145.06362022072216\r\n        ],\r\n        [\r\n            -38.208420064419023,\r\n            145.06576111561822\r\n        ],\r\n        [\r\n            -38.201179953633158,\r\n            145.06015674807341\r\n        ],\r\n        [\r\n            -38.196533634857651,\r\n            145.06160245350026\r\n        ],\r\n        [\r\n            -38.197674331801991,\r\n            145.06749027648124\r\n        ],\r\n        [\r\n            -38.203535004233231,\r\n            145.07202734453597\r\n        ],\r\n        [\r\n            -38.20267581794495,\r\n            145.07312983090625\r\n        ],\r\n        [\r\n            -38.196108247902849,\r\n            145.06934017868571\r\n        ],\r\n        [\r\n            -38.191562797328764,\r\n            145.07169364615052\r\n        ],\r\n        [\r\n            -38.190575796103339,\r\n            145.07493677711082\r\n        ],\r\n        [\r\n            -38.180604650808839,\r\n            145.07276010723697\r\n        ],\r\n        [\r\n            -38.179502383961029,\r\n            145.07572500147657\r\n        ],\r\n        [\r\n            -38.177732455527313,\r\n            145.07462404110447\r\n        ],\r\n        [\r\n            -38.173693861326491,\r\n            145.07825335016713\r\n        ],\r\n        [\r\n            -38.172700185764782,\r\n            145.07786778531994\r\n        ],\r\n        [\r\n            -38.168346006384091,\r\n            145.08160352909439\r\n        ],\r\n        [\r\n            -38.168363933372355,\r\n            145.08184736316522\r\n        ],\r\n        [\r\n            -38.164271164940942,\r\n            145.08379925118072\r\n        ],\r\n        [\r\n            -38.162093446908514,\r\n            145.08830176156283\r\n        ],\r\n        [\r\n            -38.16272146199568,\r\n            145.09529873748104\r\n        ],\r\n        [\r\n            -38.160367860204623,\r\n            145.09579099608317\r\n        ],\r\n        [\r\n            -38.144591447049841,\r\n            145.11493795805166\r\n        ],\r\n        [\r\n            -38.128852136315409,\r\n            145.11986766823574\r\n        ],\r\n        [\r\n            -38.092176144436046,\r\n            145.12121471301873\r\n        ],\r\n        [\r\n            -38.061787019280231,\r\n            145.11504058202996\r\n        ],\r\n        [\r\n            -38.02572205430112,\r\n            145.09623833049167\r\n        ],\r\n        [\r\n            -38.0110975569593,\r\n            145.08483225398919\r\n        ],\r\n        [\r\n            -37.990504915937642,\r\n            145.05407432852837\r\n        ],\r\n        [\r\n            -37.997954541576583,\r\n            145.04068956319918\r\n        ],\r\n        [\r\n            -37.997960864246537,\r\n            145.04067820092564\r\n        ],\r\n        [\r\n            -37.998048690231606,\r\n            145.04052037118018\r\n        ],\r\n        [\r\n            -37.998423136528935,\r\n            145.03643789565288\r\n        ],\r\n        [\r\n            -37.996657261386119,\r\n            145.03090149768147\r\n        ],\r\n        [\r\n            -37.992603339554314,\r\n            145.02839729640306\r\n        ],\r\n        [\r\n            -37.990185642427051,\r\n            145.03321163215614\r\n        ],\r\n        [\r\n            -37.990258713518827,\r\n            145.03355610418069\r\n        ],\r\n        [\r\n            -37.987565074605783,\r\n            145.03515340348557\r\n        ],\r\n        [\r\n            -37.983672156303626,\r\n            145.04290338724974\r\n        ],\r\n        [\r\n            -37.980899887835434,\r\n            145.03951264723349\r\n        ],\r\n        [\r\n            -37.975173902067382,\r\n            145.04255084645112\r\n        ],\r\n        [\r\n            -37.975115401408523,\r\n            145.04957957263005\r\n        ],\r\n        [\r\n            -37.968952666776708,\r\n            145.0507148274296\r\n        ],\r\n        [\r\n            -37.967602013206488,\r\n            145.04622795139119\r\n        ],\r\n        [\r\n            -37.961103572112243,\r\n            145.0470736454794\r\n        ],\r\n        [\r\n            -37.960815874754957,\r\n            145.04933204501017\r\n        ],\r\n        [\r\n            -37.953744592402309,\r\n            145.04430284801441\r\n        ],\r\n        [\r\n            -37.949156414863339,\r\n            145.0459162705441\r\n        ],\r\n        [\r\n            -37.950392025166089,\r\n            145.05172506663453\r\n        ],\r\n        [\r\n            -37.961442104043059,\r\n            145.05992508223002\r\n        ],\r\n        [\r\n            -37.963195498332873,\r\n            145.06816440564768\r\n        ],\r\n        [\r\n            -37.955317998711344,\r\n            145.07209660370216\r\n        ],\r\n        [\r\n            -37.95428075685976,\r\n            145.07290851146755\r\n        ],\r\n        [\r\n            -37.9540726903427,\r\n            145.07325183446807\r\n        ],\r\n        [\r\n            -37.953929096933379,\r\n            145.07316460648374\r\n        ],\r\n        [\r\n            -37.947076305617422,\r\n            145.08138086835541\r\n        ],\r\n        [\r\n            -37.948658073354189,\r\n            145.08540718854519\r\n        ],\r\n        [\r\n            -37.947998887174855,\r\n            145.08653884459414\r\n        ],\r\n        [\r\n            -37.950626371684379,\r\n            145.09106060305393\r\n        ],\r\n        [\r\n            -37.9446881492553,\r\n            145.08646966459602\r\n        ],\r\n        [\r\n            -37.943539359270432,\r\n            145.0829233061435\r\n        ],\r\n        [\r\n            -37.944499592547963,\r\n            145.08209733431286\r\n        ],\r\n        [\r\n            -37.941743646393789,\r\n            145.07480211095648\r\n        ],\r\n        [\r\n            -37.938399043969092,\r\n            145.07529393724255\r\n        ],\r\n        [\r\n            -37.93764157972339,\r\n            145.07691786893812\r\n        ],\r\n        [\r\n            -37.937591304369349,\r\n            145.07694651825057\r\n        ],\r\n        [\r\n            -37.937506284196935,\r\n            145.07720792118988\r\n        ],\r\n        [\r\n            -37.935659578412782,\r\n            145.08116670754788\r\n        ],\r\n        [\r\n            -37.935938537668221,\r\n            145.08202768614856\r\n        ],\r\n        [\r\n            -37.935819765154974,\r\n            145.08239279865015\r\n        ],\r\n        [\r\n            -37.937441047042775,\r\n            145.08770624271429\r\n        ],\r\n        [\r\n            -37.937051308766769,\r\n            145.08825004929847\r\n        ],\r\n        [\r\n            -37.936421202865745,\r\n            145.09140693113312\r\n        ],\r\n        [\r\n            -37.936758897118267,\r\n            145.09437128319144\r\n        ],\r\n        [\r\n            -37.933556315626618,\r\n            145.09498825709841\r\n        ],\r\n        [\r\n            -37.930681492632935,\r\n            145.09905343079154\r\n        ],\r\n        [\r\n            -37.933309862892173,\r\n            145.1033763465079\r\n        ],\r\n        [\r\n            -37.942188838716568,\r\n            145.10595596905387\r\n        ],\r\n        [\r\n            -37.938681719198726,\r\n            145.10944126724192\r\n        ],\r\n        [\r\n            -37.93907258356694,\r\n            145.11267721370513\r\n        ],\r\n        [\r\n            -37.935627304730765,\r\n            145.1133681183926\r\n        ],\r\n        [\r\n            -37.934719384034842,\r\n            145.12145670739835\r\n        ],\r\n        [\r\n            -37.935155596447423,\r\n            145.12165140490208\r\n        ],\r\n        [\r\n            -37.935331717563479,\r\n            145.1230498307078\r\n        ],\r\n        [\r\n            -37.932793841172789,\r\n            145.12354255106894\r\n        ],\r\n        [\r\n            -37.931714490935484,\r\n            145.1221712170221\r\n        ],\r\n        [\r\n            -37.92865559338756,\r\n            145.12287934223329\r\n        ],\r\n        [\r\n            -37.928647722186447,\r\n            145.12287087710578\r\n        ],\r\n        [\r\n            -37.92625424451456,\r\n            145.12213247380217\r\n        ],\r\n        [\r\n            -37.923379826310104,\r\n            145.12262214860323\r\n        ],\r\n        [\r\n            -37.920875134722031,\r\n            145.1162899153781\r\n        ],\r\n        [\r\n            -37.919384470181718,\r\n            145.11655889924515\r\n        ],\r\n        [\r\n            -37.915516853759932,\r\n            145.10965792229169\r\n        ],\r\n        [\r\n            -37.909434347972429,\r\n            145.11137223276367\r\n        ],\r\n        [\r\n            -37.909422610205709,\r\n            145.11250463177115\r\n        ],\r\n        [\r\n            -37.898030324697054,\r\n            145.09342141686861\r\n        ],\r\n        [\r\n            -37.900091440241439,\r\n            145.09004362589641\r\n        ],\r\n        [\r\n            -37.896913071391246,\r\n            145.08320368415332\r\n        ],\r\n        [\r\n            -37.894815053792449,\r\n            145.08360768609788\r\n        ],\r\n        [\r\n            -37.891570385951994,\r\n            145.07904540159751\r\n        ],\r\n        [\r\n            -37.886622036426239,\r\n            145.07895263459434\r\n        ],\r\n        [\r\n            -37.884239532385465,\r\n            145.08210828524179\r\n        ],\r\n        [\r\n            -37.8803549503775,\r\n            145.07056024358019\r\n        ],\r\n        [\r\n            -37.880229647622251,\r\n            145.06936696217716\r\n        ],\r\n        [\r\n            -37.879584638850332,\r\n            145.06827081312855\r\n        ],\r\n        [\r\n            -37.879479968093648,\r\n            145.06795973672536\r\n        ],\r\n        [\r\n            -37.878773814767037,\r\n            145.06586116999648\r\n        ],\r\n        [\r\n            -37.876893427850739,\r\n            145.06356472712295\r\n        ],\r\n        [\r\n            -37.857038665322555,\r\n            145.05371198622808\r\n        ],\r\n        [\r\n            -37.84701274193619,\r\n            145.03685431347145\r\n        ],\r\n        [\r\n            -37.843461332082704,\r\n            145.03529984484109\r\n        ],\r\n        [\r\n            -37.8416163581904,\r\n            145.04200219664241\r\n        ],\r\n        [\r\n            -37.852208893445585,\r\n            145.05981356435109\r\n        ],\r\n        [\r\n            -37.852333999158425,\r\n            145.05998443737209\r\n        ],\r\n        [\r\n            -37.852451956057067,\r\n            145.06017528478361\r\n        ],\r\n        [\r\n            -37.852562424970024,\r\n            145.06029643035421\r\n        ],\r\n        [\r\n            -37.852658829377347,\r\n            145.06042810421343\r\n        ],\r\n        [\r\n            -37.852803578318692,\r\n            145.06056089255384\r\n        ],\r\n        [\r\n            -37.852943813436177,\r\n            145.06071468329171\r\n        ],\r\n        [\r\n            -37.853075720653706,\r\n            145.06081054955715\r\n        ],\r\n        [\r\n            -37.85319517860821,\r\n            145.06092013822143\r\n        ],\r\n        [\r\n            -37.853352749068264,\r\n            145.0610118869194\r\n        ],\r\n        [\r\n            -37.853508554566396,\r\n            145.06112512325453\r\n        ],\r\n        [\r\n            -37.873767720328168,\r\n            145.07283041972127\r\n        ],\r\n        [\r\n            -37.875222731609178,\r\n            145.08669680576793\r\n        ],\r\n        [\r\n            -37.873674658788843,\r\n            145.08790806124506\r\n        ],\r\n        [\r\n            -37.874353018831115,\r\n            145.09296402711072\r\n        ],\r\n        [\r\n            -37.871313513590906,\r\n            145.09538682736871\r\n        ],\r\n        [\r\n            -37.869729520681609,\r\n            145.09918233967718\r\n        ],\r\n        [\r\n            -37.869744198893081,\r\n            145.09962783790442\r\n        ],\r\n        [\r\n            -37.869283407600442,\r\n            145.1003196503741\r\n        ],\r\n        [\r\n            -37.8691832478841,\r\n            145.10066237091479\r\n        ],\r\n        [\r\n            -37.868984279493979,\r\n            145.10040674122598\r\n        ],\r\n        [\r\n            -37.863700291432529,\r\n            145.10475598623987\r\n        ],\r\n        [\r\n            -37.864256360616714,\r\n            145.10810017701493\r\n        ],\r\n        [\r\n            -37.864019243993333,\r\n            145.10814559003509\r\n        ],\r\n        [\r\n            -37.8624250730591,\r\n            145.11571369140231\r\n        ],\r\n        [\r\n            -37.866335654002292,\r\n            145.11964535427495\r\n        ],\r\n        [\r\n            -37.87065827661624,\r\n            145.11951262270389\r\n        ],\r\n        [\r\n            -37.8717326007157,\r\n            145.11831984360597\r\n        ],\r\n        [\r\n            -37.872051622684758,\r\n            145.11970347624788\r\n        ],\r\n        [\r\n            -37.874257051871737,\r\n            145.12185744234711\r\n        ],\r\n        [\r\n            -37.871262779935911,\r\n            145.12670685007802\r\n        ],\r\n        [\r\n            -37.871113507154824,\r\n            145.13172076502968\r\n        ],\r\n        [\r\n            -37.87147339705357,\r\n            145.13240339516159\r\n        ],\r\n        [\r\n            -37.870961042057758,\r\n            145.13230835162454\r\n        ],\r\n        [\r\n            -37.867452388536513,\r\n            145.13719778254597\r\n        ],\r\n        [\r\n            -37.868111358727482,\r\n            145.14284863144297\r\n        ],\r\n        [\r\n            -37.868121011269537,\r\n            145.14285432493062\r\n        ],\r\n        [\r\n            -37.868185471515154,\r\n            145.14339978582498\r\n        ],\r\n        [\r\n            -37.861973148724047,\r\n            145.14610655361724\r\n        ],\r\n        [\r\n            -37.859779805314673,\r\n            145.15114101670554\r\n        ],\r\n        [\r\n            -37.863547371857962,\r\n            145.15436849189251\r\n        ],\r\n        [\r\n            -37.869235270077361,\r\n            145.15333606589309\r\n        ],\r\n        [\r\n            -37.869981813928725,\r\n            145.15887973073703\r\n        ],\r\n        [\r\n            -37.870166301047142,\r\n            145.15955315485624\r\n        ],\r\n        [\r\n            -37.870160927210378,\r\n            145.15960539005488\r\n        ],\r\n        [\r\n            -37.870204659147156,\r\n            145.16043609784958\r\n        ],\r\n        [\r\n            -37.870451338648138,\r\n            145.16233227819421\r\n        ],\r\n        [\r\n            -37.864874169189427,\r\n            145.16430045662941\r\n        ],\r\n        [\r\n            -37.864492805904675,\r\n            145.1644843166471\r\n        ],\r\n        [\r\n            -37.858740788818587,\r\n            145.16469847732006\r\n        ],\r\n        [\r\n            -37.8585148501712,\r\n            145.16543430699781\r\n        ],\r\n        [\r\n            -37.8579540120035,\r\n            145.16552072684675\r\n        ],\r\n        [\r\n            -37.85705751406892,\r\n            145.15826776729077\r\n        ],\r\n        [\r\n            -37.857057302215622,\r\n            145.15826603403536\r\n        ],\r\n        [\r\n            -37.8570563886849,\r\n            145.15825866494069\r\n        ],\r\n        [\r\n            -37.853191524576559,\r\n            145.15470578754335\r\n        ],\r\n        [\r\n            -37.85037109224892,\r\n            145.15957690689362\r\n        ],\r\n        [\r\n            -37.851099767748245,\r\n            145.16553977955854\r\n        ],\r\n        [\r\n            -37.850895225301095,\r\n            145.16557547997417\r\n        ],\r\n        [\r\n            -37.849038434180521,\r\n            145.17231932456181\r\n        ],\r\n        [\r\n            -37.848808653312567,\r\n            145.17237094358305\r\n        ],\r\n        [\r\n            -37.8475228621535,\r\n            145.18012473268323\r\n        ],\r\n        [\r\n            -37.847902934398043,\r\n            145.18044636699886\r\n        ],\r\n        [\r\n            -37.847512583230312,\r\n            145.18086194675539\r\n        ],\r\n        [\r\n            -37.847527403532979,\r\n            145.18459160394997\r\n        ],\r\n        [\r\n            -37.845575417997125,\r\n            145.18509929170298\r\n        ],\r\n        [\r\n            -37.843197776088076,\r\n            145.18744728094941\r\n        ],\r\n        [\r\n            -37.843080763386453,\r\n            145.18784989465459\r\n        ],\r\n        [\r\n            -37.841834778037722,\r\n            145.18758667957863\r\n        ],\r\n        [\r\n            -37.841717673119632,\r\n            145.18729274284783\r\n        ],\r\n        [\r\n            -37.842489753232492,\r\n            145.18256269243895\r\n        ],\r\n        [\r\n            -37.838108798593467,\r\n            145.17577891211033\r\n        ],\r\n        [\r\n            -37.832113297480284,\r\n            145.17864582919029\r\n        ],\r\n        [\r\n            -37.832323793090822,\r\n            145.18580490110884\r\n        ],\r\n        [\r\n            -37.831542437216683,\r\n            145.18627945463788\r\n        ],\r\n        [\r\n            -37.83011753282981,\r\n            145.18996350248588\r\n        ],\r\n        [\r\n            -37.830139224686782,\r\n            145.19054471745943\r\n        ],\r\n        [\r\n            -37.827326241559156,\r\n            145.19031649667664\r\n        ],\r\n        [\r\n            -37.82732584142834,\r\n            145.19031646378934\r\n        ],\r\n        [\r\n            -37.827323030385386,\r\n            145.19031623616004\r\n        ],\r\n        [\r\n            -37.827322106586607,\r\n            145.19033448786678\r\n        ],\r\n        [\r\n            -37.827100351538839,\r\n            145.19030755437814\r\n        ],\r\n        [\r\n            -37.82472014979956,\r\n            145.1975953323134\r\n        ],\r\n        [\r\n            -37.826454323342084,\r\n            145.198758188921\r\n        ],\r\n        [\r\n            -37.826889948325977,\r\n            145.19881114811395\r\n        ],\r\n        [\r\n            -37.82688900538443,\r\n            145.19882951117148\r\n        ],\r\n        [\r\n            -37.828639199480421,\r\n            145.19897356588666\r\n        ],\r\n        [\r\n            -37.825858637893852,\r\n            145.20231903787831\r\n        ],\r\n        [\r\n            -37.825925589552511,\r\n            145.20324907470689\r\n        ],\r\n        [\r\n            -37.824631040341451,\r\n            145.20339027375098\r\n        ],\r\n        [\r\n            -37.823075878545062,\r\n            145.20605838848007\r\n        ],\r\n        [\r\n            -37.82232852347056,\r\n            145.20472562718535\r\n        ],\r\n        [\r\n            -37.820306223726476,\r\n            145.20491908579669\r\n        ],\r\n        [\r\n            -37.819806799693453,\r\n            145.19344481946914\r\n        ],\r\n        [\r\n            -37.816288908042495,\r\n            145.18941953895794\r\n        ],\r\n        [\r\n            -37.81304667887494,\r\n            145.19379703607018\r\n        ],\r\n        [\r\n            -37.813303411420016,\r\n            145.20578427973084\r\n        ],\r\n        [\r\n            -37.812390064529311,\r\n            145.2067581942398\r\n        ],\r\n        [\r\n            -37.803975321644735,\r\n            145.19244867872297\r\n        ],\r\n        [\r\n            -37.806768309620978,\r\n            145.1698829564086\r\n        ],\r\n        [\r\n            -37.803972727818788,\r\n            145.16501278309528\r\n        ],\r\n        [\r\n            -37.800090817648,\r\n            145.16850479035057\r\n        ],\r\n        [\r\n            -37.796964797859374,\r\n            145.19180944090959\r\n        ],\r\n        [\r\n            -37.797207094213441,\r\n            145.19425501891769\r\n        ],\r\n        [\r\n            -37.7973853242726,\r\n            145.19476578920506\r\n        ],\r\n        [\r\n            -37.7975118484664,\r\n            145.19512838656669\r\n        ],\r\n        [\r\n            -37.797704243892547,\r\n            145.19610705728053\r\n        ],\r\n        [\r\n            -37.79807076838663,\r\n            145.19673021136651\r\n        ],\r\n        [\r\n            -37.802370078898981,\r\n            145.20905461946657\r\n        ],\r\n        [\r\n            -37.803197685549733,\r\n            145.21049368747842\r\n        ],\r\n        [\r\n            -37.808502019311554,\r\n            145.21657219225389\r\n        ],\r\n        [\r\n            -37.808330383422657,\r\n            145.21679460226514\r\n        ],\r\n        [\r\n            -37.807971912902445,\r\n            145.21748871544168\r\n        ],\r\n        [\r\n            -37.8077897420681,\r\n            145.21805941062917\r\n        ],\r\n        [\r\n            -37.807605529857447,\r\n            145.2179661920957\r\n        ],\r\n        [\r\n            -37.802614717361308,\r\n            145.22392346243961\r\n        ],\r\n        [\r\n            -37.80374911727106,\r\n            145.2310274461405\r\n        ],\r\n        [\r\n            -37.8060781697875,\r\n            145.23213086116795\r\n        ],\r\n        [\r\n            -37.803922864912629,\r\n            145.24071805252464\r\n        ],\r\n        [\r\n            -37.806073537608661,\r\n            145.24605852693603\r\n        ],\r\n        [\r\n            -37.810339859175464,\r\n            145.24342131158096\r\n        ],\r\n        [\r\n            -37.813574345365858,\r\n            145.23165703766321\r\n        ],\r\n        [\r\n            -37.814885249125076,\r\n            145.23161921577253\r\n        ],\r\n        [\r\n            -37.81760998700728,\r\n            145.22496462366746\r\n        ],\r\n        [\r\n            -37.817457876256931,\r\n            145.22473351159624\r\n        ],\r\n        [\r\n            -37.8201936448072,\r\n            145.22396287029747\r\n        ],\r\n        [\r\n            -37.820319001056951,\r\n            145.2211178816172\r\n        ],\r\n        [\r\n            -37.8289209397028,\r\n            145.22157835046502\r\n        ],\r\n        [\r\n            -37.828920785368304,\r\n            145.22163707744292\r\n        ],\r\n        [\r\n            -37.824422249999863,\r\n            145.22321144492071\r\n        ],\r\n        [\r\n            -37.82198286479499,\r\n            145.2280251687348\r\n        ],\r\n        [\r\n            -37.82552897080533,\r\n            145.23158099479784\r\n        ],\r\n        [\r\n            -37.828904424069044,\r\n            145.23131562323962\r\n        ],\r\n        [\r\n            -37.8289160354719,\r\n            145.23870025827955\r\n        ],\r\n        [\r\n            -37.8289161058624,\r\n            145.23870025810552\r\n        ],\r\n        [\r\n            -37.828916063358044,\r\n            145.23870081411349\r\n        ],\r\n        [\r\n            -37.829911951195491,\r\n            145.24171444318472\r\n        ],\r\n        [\r\n            -37.835618903125855,\r\n            145.23951540011745\r\n        ],\r\n        [\r\n            -37.835682235984336,\r\n            145.23868689379313\r\n        ],\r\n        [\r\n            -37.8356825667444,\r\n            145.23868689330351\r\n        ],\r\n        [\r\n            -37.835677325479224,\r\n            145.23314929812872\r\n        ],\r\n        [\r\n            -37.841750331334687,\r\n            145.23551184595388\r\n        ],\r\n        [\r\n            -37.842514414842931,\r\n            145.23536793715078\r\n        ],\r\n        [\r\n            -37.8413226525023,\r\n            145.24183443783494\r\n        ],\r\n        [\r\n            -37.843735399978982,\r\n            145.2469272068318\r\n        ],\r\n        [\r\n            -37.847852024859272,\r\n            145.24405565011202\r\n        ],\r\n        [\r\n            -37.8481399487317,\r\n            145.24285817880011\r\n        ],\r\n        [\r\n            -37.849944286471292,\r\n            145.24607633420212\r\n        ],\r\n        [\r\n            -37.853160990073427,\r\n            145.24782615501286\r\n        ],\r\n        [\r\n            -37.85337479148054,\r\n            145.24773728788153\r\n        ],\r\n        [\r\n            -37.853450395725567,\r\n            145.24772888099392\r\n        ],\r\n        [\r\n            -37.854085945664593,\r\n            145.24749496086656\r\n        ],\r\n        [\r\n            -37.854103385593952,\r\n            145.24748605201808\r\n        ],\r\n        [\r\n            -37.854103786080941,\r\n            145.2474858474371\r\n        ],\r\n        [\r\n            -37.866473271727131,\r\n            145.2411659880778\r\n        ],\r\n        [\r\n            -37.870630286004108,\r\n            145.2518935114359\r\n        ],\r\n        [\r\n            -37.876829765080124,\r\n            145.25151539655405\r\n        ],\r\n        [\r\n            -37.876993365119795,\r\n            145.25096461993365\r\n        ],\r\n        [\r\n            -37.883271076081932,\r\n            145.2489911840301\r\n        ],\r\n        [\r\n            -37.884252547134594,\r\n            145.25331829491554\r\n        ],\r\n        [\r\n            -37.883838714670155,\r\n            145.25331607589763\r\n        ],\r\n        [\r\n            -37.880478155728767,\r\n            145.25695501639106\r\n        ],\r\n        [\r\n            -37.882850821851449,\r\n            145.26167283922251\r\n        ],\r\n        [\r\n            -37.884394373704836,\r\n            145.26226298347186\r\n        ],\r\n        [\r\n            -37.883621020709342,\r\n            145.26353742118133\r\n        ],\r\n        [\r\n            -37.884224319328453,\r\n            145.26951825474876\r\n        ],\r\n        [\r\n            -37.888966035336217,\r\n            145.26877269400211\r\n        ],\r\n        [\r\n            -37.88897675273094,\r\n            145.26875522119647\r\n        ],\r\n        [\r\n            -37.888976773126,\r\n            145.26875524106808\r\n        ],\r\n        [\r\n            -37.8889798063641,\r\n            145.26875024278883\r\n        ],\r\n        [\r\n            -37.8949122846699,\r\n            145.25907696350157\r\n        ],\r\n        [\r\n            -37.901037918314032,\r\n            145.25785122710997\r\n        ],\r\n        [\r\n            -37.90122659714941,\r\n            145.257768067345\r\n        ],\r\n        [\r\n            -37.90121887402767,\r\n            145.25781438722944\r\n        ],\r\n        [\r\n            -37.905731916402075,\r\n            145.26231893922704\r\n        ],\r\n        [\r\n            -37.9060066386407,\r\n            145.2621557393586\r\n        ],\r\n        [\r\n            -37.90584966741897,\r\n            145.26270220954933\r\n        ],\r\n        [\r\n            -37.908704026792051,\r\n            145.26775999786767\r\n        ],\r\n        [\r\n            -37.905910210853293,\r\n            145.27524279778191\r\n        ],\r\n        [\r\n            -37.910427980881195,\r\n            145.28092654838392\r\n        ],\r\n        [\r\n            -37.915098375680863,\r\n            145.27807783485582\r\n        ],\r\n        [\r\n            -37.915496699682286,\r\n            145.27903540622103\r\n        ],\r\n        [\r\n            -37.916303886673411,\r\n            145.27999888314329\r\n        ],\r\n        [\r\n            -37.917285555786961,\r\n            145.28056359198078\r\n        ],\r\n        [\r\n            -37.917350851217485,\r\n            145.28108600783378\r\n        ],\r\n        [\r\n            -37.917875474098068,\r\n            145.28251339443494\r\n        ],\r\n        [\r\n            -37.926657421010908,\r\n            145.2981860224746\r\n        ],\r\n        [\r\n            -37.93123108374072,\r\n            145.29930722878106\r\n        ],\r\n        [\r\n            -37.932354611034626,\r\n            145.29359842647651\r\n        ],\r\n        [\r\n            -37.9288957757067,\r\n            145.28583634880047\r\n        ],\r\n        [\r\n            -37.934681223578231,\r\n            145.272664194353\r\n        ],\r\n        [\r\n            -37.934786395167137,\r\n            145.26899291935214\r\n        ],\r\n        [\r\n            -37.936971211387686,\r\n            145.26986443338888\r\n        ],\r\n        [\r\n            -37.940367840617029,\r\n            145.26275841039842\r\n        ],\r\n        [\r\n            -37.93755029219173,\r\n            145.25919225409018\r\n        ],\r\n        [\r\n            -37.940012774837861,\r\n            145.25754139743688\r\n        ],\r\n        [\r\n            -37.941458781002083,\r\n            145.25295249378885\r\n        ],\r\n        [\r\n            -37.943534107489462,\r\n            145.25315292192141\r\n        ],\r\n        [\r\n            -37.945363907706572,\r\n            145.24929314054486\r\n        ],\r\n        [\r\n            -37.9461881820575,\r\n            145.24930277760441\r\n        ],\r\n        [\r\n            -37.955558810226457,\r\n            145.26661659899835\r\n        ],\r\n        [\r\n            -37.960612253687991,\r\n            145.26736310305452\r\n        ],\r\n        [\r\n            -37.960691299574876,\r\n            145.2672541274647\r\n        ],\r\n        [\r\n            -37.960642358319916,\r\n            145.26811716274034\r\n        ],\r\n        [\r\n            -37.968876048843754,\r\n            145.27348909388297\r\n        ],\r\n        [\r\n            -37.9685046992401,\r\n            145.27647692713313\r\n        ],\r\n        [\r\n            -37.969031082651377,\r\n            145.27706141187093\r\n        ],\r\n        [\r\n            -37.968903447005545,\r\n            145.27720115519293\r\n        ],\r\n        [\r\n            -37.972012717972653,\r\n            145.28433665895884\r\n        ],\r\n        [\r\n            -37.974606972687759,\r\n            145.28368358363036\r\n        ],\r\n        [\r\n            -37.975161031471629,\r\n            145.28734869808255\r\n        ],\r\n        [\r\n            -37.9751613822234,\r\n            145.28735104361363\r\n        ],\r\n        [\r\n            -37.975162644303737,\r\n            145.28735936818987\r\n        ],\r\n        [\r\n            -37.979121138744432,\r\n            145.2907491007546\r\n        ],\r\n        [\r\n            -37.981808210477588,\r\n            145.28575128439792\r\n        ],\r\n        [\r\n            -37.981313646591296,\r\n            145.28244439989805\r\n        ],\r\n        [\r\n            -37.986751223653819,\r\n            145.28131603832645\r\n        ],\r\n        [\r\n            -37.986687881161906,\r\n            145.28512352166209\r\n        ],\r\n        [\r\n            -37.989995099958563,\r\n            145.28948798151137\r\n        ],\r\n        [\r\n            -37.993452567712175,\r\n            145.28531336923149\r\n        ],\r\n        [\r\n            -37.993490632833982,\r\n            145.28322211021927\r\n        ],\r\n        [\r\n            -37.994981954633545,\r\n            145.28306351650536\r\n        ],\r\n        [\r\n            -37.996370093659536,\r\n            145.29227552887426\r\n        ],\r\n        [\r\n            -37.993081419869988,\r\n            145.2989083814976\r\n        ],\r\n        [\r\n            -37.993982719605526,\r\n            145.30467766013084\r\n        ],\r\n        [\r\n            -37.998590306467143,\r\n            145.30385162120737\r\n        ],\r\n        [\r\n            -38.001202857700207,\r\n            145.29966160563231\r\n        ],\r\n        [\r\n            -38.016481475119271,\r\n            145.31321925656184\r\n        ],\r\n        [\r\n            -38.02116915470782,\r\n            145.31219304386855\r\n        ],\r\n        [\r\n            -38.020409971916052,\r\n            145.30625615628563\r\n        ],\r\n        [\r\n            -38.010692652024581,\r\n            145.29721265415481\r\n        ],\r\n        [\r\n            -38.018942630651459,\r\n            145.30258088571276\r\n        ],\r\n        [\r\n            -38.023152727525833,\r\n            145.29614842475189\r\n        ],\r\n        [\r\n            -38.016994980814864,\r\n            145.2860453582029\r\n        ],\r\n        [\r\n            -38.017264445835316,\r\n            145.28318720752992\r\n        ],\r\n        [\r\n            -38.017786491908588,\r\n            145.28250389381054\r\n        ],\r\n        [\r\n            -38.018270243103011,\r\n            145.28691240147575\r\n        ],\r\n        [\r\n            -38.022733941664313,\r\n            145.29035867881706\r\n        ],\r\n        [\r\n            -38.022841641551672,\r\n            145.29029567305892\r\n        ],\r\n        [\r\n            -38.02287439924573,\r\n            145.29054540413225\r\n        ],\r\n        [\r\n            -38.026365245867517,\r\n            145.293703149791\r\n        ],\r\n        [\r\n            -38.026986916756933,\r\n            145.29357284403622\r\n        ],\r\n        [\r\n            -38.027230250383539,\r\n            145.29926501360282\r\n        ],\r\n        [\r\n            -38.03064033771696,\r\n            145.30330940490597\r\n        ],\r\n        [\r\n            -38.033989424717845,\r\n            145.29918415703941\r\n        ],\r\n        [\r\n            -38.034134155067868,\r\n            145.29398273439656\r\n        ],\r\n        [\r\n            -38.036679956266177,\r\n            145.29560169386704\r\n        ],\r\n        [\r\n            -38.041704815497624,\r\n            145.29572896033892\r\n        ],\r\n        [\r\n            -38.042387030998377,\r\n            145.29417951190527\r\n        ],\r\n        [\r\n            -38.042352376939547,\r\n            145.29490887690565\r\n        ],\r\n        [\r\n            -38.0450973607552,\r\n            145.29895630400236\r\n        ],\r\n        [\r\n            -38.045432726881607,\r\n            145.29899586204218\r\n        ],\r\n        [\r\n            -38.045055694800887,\r\n            145.2992359771863\r\n        ],\r\n        [\r\n            -38.043697923709431,\r\n            145.30435691838363\r\n        ],\r\n        [\r\n            -38.047387572652013,\r\n            145.30707793196171\r\n        ],\r\n        [\r\n            -38.059818610979107,\r\n            145.30459772247602\r\n        ],\r\n        [\r\n            -38.060343537315994,\r\n            145.30782594714555\r\n        ],\r\n        [\r\n            -38.066763820095986,\r\n            145.30864857188689\r\n        ],\r\n        [\r\n            -38.068381497971728,\r\n            145.30385346493168\r\n        ],\r\n        [\r\n            -38.07734845252471,\r\n            145.30164657421091\r\n        ],\r\n        [\r\n            -38.077322897397991,\r\n            145.30544487851944\r\n        ],\r\n        [\r\n            -38.082148709603182,\r\n            145.30935310481806\r\n        ],\r\n        [\r\n            -38.082725685939096,\r\n            145.30884410164222\r\n        ],\r\n        [\r\n            -38.083111843229361,\r\n            145.31186974875612\r\n        ],\r\n        [\r\n            -38.079304520089181,\r\n            145.3118993008371\r\n        ],\r\n        [\r\n            -38.079156828662605,\r\n            145.31076718062059\r\n        ],\r\n        [\r\n            -38.073421165362731,\r\n            145.30845141904916\r\n        ],\r\n        [\r\n            -38.070231404660866,\r\n            145.31254130249192\r\n        ],\r\n        [\r\n            -38.071072874973574,\r\n            145.31935921383868\r\n        ],\r\n        [\r\n            -38.077884248374438,\r\n            145.32386328613083\r\n        ],\r\n        [\r\n            -38.077349514201963,\r\n            145.32425076141283\r\n        ],\r\n        [\r\n            -38.077077243815793,\r\n            145.33055282430163\r\n        ],\r\n        [\r\n            -38.076541297965328,\r\n            145.33065137863812\r\n        ],\r\n        [\r\n            -38.073674990230593,\r\n            145.33549451890312\r\n        ],\r\n        [\r\n            -38.077500989713229,\r\n            145.33912463179578\r\n        ],\r\n        [\r\n            -38.077506384040149,\r\n            145.33912365178261\r\n        ],\r\n        [\r\n            -38.07750758971325,\r\n            145.33912343274179\r\n        ],\r\n        [\r\n            -38.086386467073879,\r\n            145.33751016631041\r\n        ],\r\n        [\r\n            -38.087307535019406,\r\n            145.34526486552252\r\n        ],\r\n        [\r\n            -38.09115221528311,\r\n            145.34885742983732\r\n        ],\r\n        [\r\n            -38.093999512722149,\r\n            145.34400001903472\r\n        ],\r\n        [\r\n            -38.0935840495515,\r\n            145.34040076292729\r\n        ],\r\n        [\r\n            -38.100397026343906,\r\n            145.33493088950522\r\n        ],\r\n        [\r\n            -38.101770571611347,\r\n            145.32983026760414\r\n        ],\r\n        [\r\n            -38.098113606567566,\r\n            145.32706985842097\r\n        ],\r\n        [\r\n            -38.092410027708269,\r\n            145.32811662655308\r\n        ],\r\n        [\r\n            -38.0910604662793,\r\n            145.31772414965809\r\n        ],\r\n        [\r\n            -38.091483199199018,\r\n            145.31770995206213\r\n        ],\r\n        [\r\n            -38.094776044027469,\r\n            145.31331785389776\r\n        ],\r\n        [\r\n            -38.091304845622432,\r\n            145.3091514583144\r\n        ],\r\n        [\r\n            -38.089971480023245,\r\n            145.30919639465094\r\n        ],\r\n        [\r\n            -38.088722509494396,\r\n            145.29919259983248\r\n        ],\r\n        [\r\n            -38.089422687409566,\r\n            145.29902958866214\r\n        ],\r\n        [\r\n            -38.0895121041767,\r\n            145.30197965537013\r\n        ],\r\n        [\r\n            -38.093393749770456,\r\n            145.30604792707103\r\n        ],\r\n        [\r\n            -38.094813166492912,\r\n            145.30577674423989\r\n        ],\r\n        [\r\n            -38.094226719094458,\r\n            145.30839994289357\r\n        ],\r\n        [\r\n            -38.097230650794017,\r\n            145.31384381004841\r\n        ],\r\n        [\r\n            -38.098091863346426,\r\n            145.31373040771314\r\n        ],\r\n        [\r\n            -38.098257991646157,\r\n            145.3145989189357\r\n        ],\r\n        [\r\n            -38.102278603504566,\r\n            145.31740819742512\r\n        ],\r\n        [\r\n            -38.102450524291619,\r\n            145.31774788567566\r\n        ],\r\n        [\r\n            -38.104377143374371,\r\n            145.31909341945232\r\n        ],\r\n        [\r\n            -38.105208482039068,\r\n            145.31910119778308\r\n        ],\r\n        [\r\n            -38.105193802285655,\r\n            145.32010993512054\r\n        ],\r\n        [\r\n            -38.109280126747905,\r\n            145.32473814450421\r\n        ],\r\n        [\r\n            -38.109216781354931,\r\n            145.32477763785243\r\n        ],\r\n        [\r\n            -38.107835163311691,\r\n            145.32992117752053\r\n        ],\r\n        [\r\n            -38.11155145321586,\r\n            145.33263984476133\r\n        ],\r\n        [\r\n            -38.115794259305751,\r\n            145.33174864473656\r\n        ],\r\n        [\r\n            -38.116219129410936,\r\n            145.33497547360631\r\n        ],\r\n        [\r\n            -38.120106640889581,\r\n            145.3384910125817\r\n        ],\r\n        [\r\n            -38.12289487751621,\r\n            145.3335798562513\r\n        ],\r\n        [\r\n            -38.1225311827787,\r\n            145.33071945117354\r\n        ],\r\n        [\r\n            -38.125685524808496,\r\n            145.33011358218891\r\n        ],\r\n        [\r\n            -38.126327091458634,\r\n            145.32990853416285\r\n        ],\r\n        [\r\n            -38.126717561222272,\r\n            145.32967388190139\r\n        ],\r\n        [\r\n            -38.127085236721065,\r\n            145.32974113917879\r\n        ],\r\n        [\r\n            -38.127747510502942,\r\n            145.32969678811094\r\n        ],\r\n        [\r\n            -38.130669327276756,\r\n            145.32912921431068\r\n        ],\r\n        [\r\n            -38.130864495072622,\r\n            145.33070468619246\r\n        ],\r\n        [\r\n            -38.1347344143318,\r\n            145.33426636810151\r\n        ],\r\n        [\r\n            -38.137547634909417,\r\n            145.32936660340937\r\n        ],\r\n        [\r\n            -38.137352897766391,\r\n            145.32779461065402\r\n        ],\r\n        [\r\n            -38.139876091629773,\r\n            145.32727702584214\r\n        ],\r\n        [\r\n            -38.141113493881029,\r\n            145.32669504295603\r\n        ],\r\n        [\r\n            -38.141127106661656,\r\n            145.326681934614\r\n        ],\r\n        [\r\n            -38.141521325723787,\r\n            145.3267794019803\r\n        ],\r\n        [\r\n            -38.142158856894987,\r\n            145.32678271482146\r\n        ],\r\n        [\r\n            -38.159571329185191,\r\n            145.3247704533382\r\n        ],\r\n        [\r\n            -38.162246695615281,\r\n            145.34575796839829\r\n        ],\r\n        [\r\n            -38.166129030574183,\r\n            145.34929940632648\r\n        ],\r\n        [\r\n            -38.168925047218387,\r\n            145.34438178748078\r\n        ],\r\n        [\r\n            -38.16715137593188,\r\n            145.33046440537086\r\n        ],\r\n        [\r\n            -38.184032153221835,\r\n            145.3476513914288\r\n        ],\r\n        [\r\n            -38.185746617465355,\r\n            145.36211844367938\r\n        ],\r\n        [\r\n            -38.189597687690238,\r\n            145.36571535740993\r\n        ],\r\n        [\r\n            -38.192436582311736,\r\n            145.36083575745275\r\n        ],\r\n        [\r\n            -38.191772346621114,\r\n            145.35522893131491\r\n        ],\r\n        [\r\n            -38.198204262918019,\r\n            145.36145304841975\r\n        ],\r\n        [\r\n            -38.198213209830755,\r\n            145.36146173118709\r\n        ],\r\n        [\r\n            -38.198213218903987,\r\n            145.36146171604864\r\n        ],\r\n        [\r\n            -38.198216790050715,\r\n            145.36146517221513\r\n        ],\r\n        [\r\n            -38.198225233002667,\r\n            145.36145104687057\r\n        ],\r\n        [\r\n            -38.198385618629679,\r\n            145.36161715411819\r\n        ],\r\n        [\r\n            -38.20287888120297,\r\n            145.36076066919964\r\n        ]\r\n    ]\r\n\r\nconst Prototype = ()=>{\r\n     const STRAPI = useContext_STRAPI_FULL();\r\n     const UX = useContext_UX_FULL();\r\n\r\n     useEffect(()=>{\r\n         console.log(STRAPI)\r\n     },[STRAPI])\r\n\r\n     useEffect(()=>{\r\n        //FetchDataIntegrity()\r\n     \r\n        \r\n        \r\n     },[]) \r\n  \r\n    return(\r\n        <>\r\n               <IntroText />\r\n               { \r\n                    STRAPI.UserData.Customers ? <DisplayData Data={STRAPI.UserData.Customers} Label=\"by Customer\"/>:false\r\n               }\r\n                { \r\n                    STRAPI.sites ? <DisplayData Data={STRAPI.sites} Label=\"by site\"/>:false\r\n               }\r\n               \r\n               \r\n               \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Prototype \r\n\r\n// \r\n\r\nconst containerStyle = { height: \"500px\", width: \"auto\" };\r\n\r\nconst IntroText = ()=>{ \r\n    \r\n    const [path,setPath] = useState([])\r\n    let points=[[-38.102144,145.188240],[-38.238180,145.622208],[-38.042684,145.194773],[-38.152917,145.538663],[-37.945280,145.225428],[-38.045387,145.122987]]\r\n        \r\n    useEffect(()=>{\r\n    \r\n        let CreatePath=[]\r\n        coordinates.map((point,i)=>{\r\n            //console.log(point)\r\n            CreatePath.push({ lat: point[0], lng: point[1]})\r\n        })\r\n\r\n       \r\n        \r\n        points.map((point,i)=>(\r\n            console.log(classifyPoint(coordinates,point))\r\n        ))\r\n\r\n        setPath(CreatePath)\r\n    },[])\r\n\r\n    return(\r\n            <div className=\"DataCollection \">\r\n                <div className=\"Copy\">\r\n                    <h1>Intact AnalytiQ Prototype</h1>\r\n                    <p>The following is a list of Parent Data collections pulled from strapi</p>\r\n                    <p>This data is spread is just for Admins to check the Datas integrity.</p>\r\n                </div>\r\n\r\n                <GoogleMap \r\n                mapContainerStyle={containerStyle}\r\n                center={ {\r\n                    lat: -38.1399556,\r\n                    lng: 145.1248234 \r\n                  }}\r\n                zoom={15}\r\n            >\r\n                { /* Child components, such as markers, info windows, etc. */ }\r\n                <Polygon\r\n                    paths={path}\r\n                    options={options}\r\n                    />\r\n\r\n                    {\r\n                        points.map((point)=>{\r\n                            return(<Marker\r\n                                  \r\n                                    position={{\r\n                                        lat: point[0],\r\n                                        lng: point[1]\r\n                                      }}\r\n                                />)\r\n                        })\r\n                    }\r\n\r\n        </GoogleMap>\r\n\r\n      </div>\r\n    ) \r\n}\r\n\r\n \r\nconst DisplayData = (props)=>{\r\n    \r\n    const {Data, Label} = props\r\n    \r\n    useEffect(()=>{  console.log(Data) },[Data])\r\n  \r\n    return(\r\n      <div className=\"DataCollection\">\r\n         <h3>{Label}</h3>  \r\n        <div className=\"FlexTable\">\r\n            <div className=\"FlexTableRow head\">\r\n                <div>Name </div>\r\n                <div>Work Orders</div>\r\n              \r\n            </div>\r\n                {  \r\n                Data.map((state,i)=>{\r\n     \r\n                    return(\r\n                        <div key={i} className=\"FlexTableRow\">\r\n                            <div>{state.name}</div>  \r\n                            <div>{state.count}</div>\r\n                        </div> \r\n                        )\r\n                }) } \r\n        </div>\r\n      </div>\r\n    )\r\n  }","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan.js",["656","657","658","659"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_STRAPI_FULL} from \"../../Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"../../Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"../../Context/SCAN\";\r\nimport {ScanSites} from \"../../actions/HandleMarkerBasedScan\";\r\n\r\n// Components\r\nimport ResourceAllocationMap from \"./ResourceAllocationScan/Map\";\r\n\r\nconst RenderScamSites = new ScanSites();\r\n\r\nconst RecourseAllocationScan = ()=>{\r\n\r\n    \r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n\r\n\r\n    const Scan = ()=>{\r\n        //console.log(STRAPI.sites);\r\n        // Pass only fully loaded sites\r\n        let SiteList=[]\r\n        STRAPI.sites.map((site)=>{\r\n                console.log(site.count)\r\n    \r\n                // Add any new rules if required\r\n                if(site.count.length!== 0){\r\n                    SiteList.push(site)\r\n                }\r\n        })\r\n        RenderScamSites.SiteList=SiteList;\r\n        RenderScamSites.Search();\r\n    }\r\n\r\n\r\n    useEffect(()=>{ if(SCAN.active){Scan() }},[SCAN.active])\r\n\r\n    return(\r\n        <>\r\n            {SCAN.MarkerScanResults ?  <ResourceAllocationMap />: false}\r\n        </>\r\n    )\r\n}\r\n//  <ScanBtn />\r\nexport default RecourseAllocationScan;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Map.js",["660","661"],"import React, {useEffect, useState} from 'react'\r\n//import {useContext_STRAPI_FULL} from \"../../../Context/STRAPI\";\r\n//import {useContext_UX_FULL} from \"../../../Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"../../../Context/SCAN\";\r\nimport {ScanSites} from \"../../../actions/HandleMarkerBasedScan\";\r\nimport { GoogleMap,} from '@react-google-maps/api';\r\n\r\n// Components\r\nimport Markers from \"./MapComponents/LocationMarkers\";\r\nimport ResidualMarkers from \"./MapComponents/ResidualLocationMarkers\";\r\nimport CenterPoints from \"./MapComponents/MarkersCenterpoints\";\r\nimport MarkerBasedResults from \"./MapComponents/MarkerBasedResults\";\r\nimport ColorKey from \"./Results/ColorKey\"\r\n\r\nconst RenderScamSites = new ScanSites();\r\n\r\nconst containerStyle = { height: \"600px\", width: \"auto\" };\r\n\r\n\r\nconst ResourceAllocationMap=()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    useEffect(()=>{\r\n        console.log(SCAN.MarkerScanResults)\r\n    },[SCAN])\r\nreturn(\r\n    <div className=\"ScanMapMain\" id=\"MainMap\">\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={{\r\n                    lat: -37.813629,\r\n                    lng: 144.963058\r\n                  }}\r\n                zoom={14}\r\n               \r\n            >\r\n            { /* Child components, such as markers, info windows, etc. */ }\r\n            \r\n                <Markers />\r\n                <CenterPoints />\r\n                <ResidualMarkers />\r\n            </GoogleMap>\r\n\r\n            <ColorKey />\r\n            <MarkerBasedResults />\r\n        </div>\r\n)\r\n}\r\n\r\nexport default ResourceAllocationMap;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\ResidualLocationMarkers.js",["662","663","664","665","666","667","668","669","670"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_STRAPI_FULL} from \"../../../../Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"../../../../Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\n\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkersALL = ()=>{\r\n\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name)=>{console.log(\"Marker Clicked\", name) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n        console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n\r\n        console.log(\"markers\", markers)\r\n        \r\n        let StoreMarkers=[]         \r\n                markers.map((site,i)=>{\r\n                    Targeticon = {\r\n                        path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                        fillColor: '#fff',\r\n                        fillOpacity: .9,\r\n                        anchor: new window.google.maps.Point(0,0),\r\n                        strokeWeight: 0,\r\n                        scale: 1,\r\n                        zIndex:10\r\n                    };\r\n                    StoreMarkers.push( \r\n                        \r\n                            <Marker\r\n                                key={i}\r\n                                onLoad={onLoadMarker}\r\n                                title={site.name}\r\n                                label={site.name}\r\n                                icon={Targeticon}\r\n                                onClick={()=>{OnMarkerClick(site.name)}}\r\n                                position={{\r\n                                        lat: parseFloat(site.lat),\r\n                                        lng: parseFloat(site.long)\r\n                                    }}\r\n                            />\r\n                    )\r\n                })\r\n        setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{ \r\n         \r\n          CreateMarkers(SCAN.MarkerScanResidual)},[SCAN.MarkerScanResidual])\r\n\r\n      return(  <>{DisplayMarkers}</>) \r\n\r\n}\r\n\r\nexport default MarkerBasedLocationMarkersALL;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkerBasedResults.js",["671"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\nimport ClusterResults from \"../Results/ClusterResults\";\r\nimport {GroupArrayByOccurances} from \"../../../../actions/HandleUX\";\r\n\r\nconst MarkerBasedResults = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n\r\n    const [Results, setResults] = useState(null)\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]])\r\n    const extractResults=()=>{\r\n        console.log(SCAN.MarkerScanCenterPoints);\r\n\r\n        let ResultArr=[];\r\n        let CategoryInt=[]\r\n            SCAN.MarkerScanCenterPoints.map((result,i)=>{\r\n                ResultArr.push( <li key={i}> <ClusterResults  result={result} i={i}/></li>)\r\n                CategoryInt.push(result.scanCategory)\r\n                return true\r\n            })\r\n            setResults(ResultArr);\r\n            setCategoryOccurance(GroupArrayByOccurances(CategoryInt))\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        if(SCAN.MarkerScanCenterPoints !==null)\r\n            extractResults()\r\n\r\n    },[SCAN]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"ResultsHeader\">\r\n            <h2>Results</h2>\r\n            <h3>Clusters : <strong>{SCAN.MarkerScanCenterPoints.length}</strong></h3>\r\n            <h4>By Category:</h4>\r\n            <ul className=\"ClustersbyCategory\">\r\n            {\r\n                CategoryOccurance[0].map((cat,i)=>{\r\n                    return(\r\n                        <li key={i}>\r\n                                {cat} : {CategoryOccurance[1][i]}\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n            <h3>Sites were not allocated a Cluster : <strong>{SCAN.MarkerScanResidual.length} </strong></h3>\r\n            <h3>Sites were not included in this scan : <strong>{SCAN.NoLongLat.length} </strong></h3>\r\n            </div>\r\n\r\n            <ul className=\"ListResults\">\r\n                    {Results}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerBasedResults;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\LocationMarkers.js",["672","673","674","675","676","677","678","679","680","681"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_UX_FULL} from \"../../../../Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\nimport {RegionColor} from \"../../../../actions/HandleUX\"\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkers = ()=>{\r\n\r\n    //const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name, Region)=>{console.log(\"Marker Clicked\", name, Region) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n        console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n\r\n        console.log(\"markers\", markers)\r\n        let StoreMarkers=[];\r\n\r\n        markers.map((centerPoint,i)=>{\r\n          console.log(centerPoint.sites)\r\n          centerPoint.sites.map((site,ii)=>{\r\n\r\n              Targeticon = {\r\n                path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                fillColor: RegionColor(centerPoint.scanCategory),\r\n                fillOpacity: .9,\r\n                anchor: new window.google.maps.Point(0,0),\r\n                strokeWeight: 0,\r\n                scale: 1\r\n            }; \r\n          \r\n            StoreMarkers.push( \r\n                \r\n                    <Marker\r\n                        key={site.name}\r\n                        onLoad={onLoadMarker}\r\n                        title={site.name}\r\n                        label={site.name}\r\n                        icon={Targeticon}\r\n                        onClick={()=>{OnMarkerClick(site.name, centerPoint.scanCategory)}}\r\n                        position={{\r\n                                lat: parseFloat(site.lat),\r\n                                lng: parseFloat(site.long)\r\n                            }}\r\n                    />\r\n                \r\n            )\r\n            })\r\n        })\r\n        /*\r\n        Object.keys(markers).map((key, value)=>{\r\n            //console.log(markers[key], value)\r\n              markers[key].map((sites,i)=>{\r\n                  sites.map((site,ii)=>{\r\n\r\n                  \r\n                  })\r\n              })\r\n          })*/\r\n        setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{ \r\n        if(CreateMarkers(SCAN.MarkerScanCenterPoints) != undefined)\r\n          CreateMarkers(SCAN.MarkerScanCenterPoints)\r\n      },[SCAN.MarkerScanCenterPoints])\r\n\r\n      return(  <>{DisplayMarkers}</>)\r\n\r\n}\r\n\r\n\r\nexport default MarkerBasedLocationMarkers;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkersCenterpoints.js",["682","683"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Circle } from '@react-google-maps/api';\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\n\r\nimport {RegionColor} from \"../../../../actions/HandleUX\"\r\n\r\n\r\n\r\nconst MarkerCenterpoints = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [Centerpoints, setCenterpoints] = useState(null)\r\n    \r\n    const CreateCenterpoints = ()=>{\r\n        let StorePoints=[]       \r\n        SCAN.MarkerScanCenterPoints.map((center,i)=>{\r\n        \r\n/*\r\n                        {\r\n                            name:site.name,\r\n                            center:{\r\n                                lat: site.lat,\r\n                                lng: site.long\r\n                              },\r\n                            range:Range.range[1]\r\n                        }\r\n            */\r\n           //console.log(center.center, center.range)\r\n           \r\n           \r\n\r\n           let options = {\r\n               strokeColor: RegionColor(center.scanCategory),\r\n               strokeOpacity: 0.9,\r\n               strokeWeight: 1,\r\n               fillColor: RegionColor(center.scanCategory),\r\n               fillOpacity: 0.2,\r\n               radius: ((center.range*1000)),\r\n               zIndex: 1\r\n             }\r\n            let Featheroptions = {\r\n                strokeColor: RegionColor(center.scanCategory),\r\n                strokeOpacity: 0.7,\r\n                strokeWeight: 3,\r\n                fillColor: RegionColor(center.scanCategory),\r\n                fillOpacity: 0.01,\r\n                radius: (( (center.range+((center.feather/100)*center.range)) *1000)),  \r\n                zIndex: 1\r\n              }\r\n           StorePoints.push(\r\n                <span key={i}>\r\n                    <Circle center={center.center} options={options}/>\r\n                    <Circle center={center.center} options={Featheroptions}/>\r\n                </span>\r\n           )\r\n            \r\n        })\r\n        setCenterpoints(StorePoints)\r\n        \r\n    }\r\n    \r\n    \r\n    useEffect(()=>{  CreateCenterpoints() },[SCAN.MarkerScanCenterPoints])\r\n\r\n    useEffect(()=>{},[ Centerpoints])\r\n\r\n    return(\r\n        <>\r\n        {Centerpoints}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerCenterpoints;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ColorKey.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ClusterResults.js",["684","685","686","687"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport{NumberReducer} from \"../../../../actions/HandleUX\";\r\n\r\n//import DeleteClusterBtn from \"../Controls/buttons/DeleteClusterBtn\";\r\n//import BacktoMap from \"../Controls/buttons/BacktoMapBtn\";\r\n//import ClusterMap from \"../../Prototype/Components/Map/clusterMap/clustermap\"\r\n//import MoreInfo from \"./MoreInfo\";\r\n\r\n\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nconst ClusterResult = (props)=>{\r\n\r\n    const {result, i} = props;\r\n    const [Multiplier, setMultiplier]= useState(1000)\r\n    const [ClusterTotal, setClusterTotal] = useState(0)\r\n\r\n\r\n    const FindClusterTotal = (result)=>{\r\n        let total=0;\r\n        result.ClusterCost.map((type,i)=>{ total = total + type[1] })\r\n        \r\n        setClusterTotal(NumberReducer(parseFloat((total*Multiplier).toFixed(2))))\r\n    }\r\n\r\n\r\n    useEffect(()=>{ \r\n        //FindClusterTotal(result) \r\n        //console.log(result)\r\n    },[result])\r\n\r\n    return(\r\n        <>\r\n            <h3><LocationCityIcon /> Cluster { (i+1) }  - <strong>{result.scanCategory}</strong></h3>\r\n            <h3>Cluster Resource Quota : <strong>{result.resourceQuota.toFixed(2)}</strong></h3> \r\n            <h3>est Cluster Cost : <strong>${0}</strong></h3>\r\n            <div className=\"ListResultContainer\">\r\n                <div className=\"Title\">\r\n                <h3> {result.name}</h3>\r\n                </div>\r\n                Add Map and Cluster Details once Data dump has been completed\r\n\r\n            </div>\r\n                \r\n               \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClusterResult;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\HistoryRerfresh.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ViewSingleResultBtn.js",["688"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateSingleScanBtn.js",["689"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoAddItemsSingleScan.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoScanType.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\SetSelectedBtn.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\CreateScanoptions.js",["690","691","692","693"],"import 'date-fns';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useContext_SCAN_FULL} from \"../../../Context/SCAN\";\r\n\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nimport {FetchSelectedItems} from \"../../../actions/HandleScanProcess\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\n/* Handle Scna Form*/\r\nexport default function CreateNewScanForm() {\r\n  return (<ScanForm />);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Processing = ()=>{\r\n   \r\n    return(\r\n        <>\r\n            processing\r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\nconst Error = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const ErrorTrue='There was an Error in the Username or Password when processing your details'\r\n    const ErrorFalse=''\r\n    useEffect(()=>{},[AUTH])\r\n    return(\r\n        <>{\r\n            AUTH.error ? <h3>{ErrorTrue}</h3>:<h3>{ErrorFalse}</h3>\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n\r\n\r\n\r\nconst ScanForm = ()=>{\r\n    \r\n    const SCAN = useContext_SCAN_FULL();\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n\r\n    const classes = useStyles();\r\n    const [TITLE, setTITLE] = useState('')\r\n    const [DESCRIPTION, setDESCRIPTION] = useState('')\r\n    const[Start, setStart] = useState()\r\n    const[End, setEnd] = useState()\r\n\r\n    const handleClick=()=>{\r\n        FetchSelectedItems(USERSCAN.UserScanSingleDataSets, TITLE, DESCRIPTION, Start, End)\r\n    }\r\n\r\n    const handleTitle=(e)=>{setTITLE(e.target.value)}\r\n    const handleDescription=(e)=>{setDESCRIPTION(e.target.value)}\r\n    const SetStartDate=(START)=>{\r\n        setStart(new Date(`${START}`).getTime() / 1000)\r\n    }\r\n    const SetEndDate=(END)=>{\r\n        setEnd(new Date(`${END}`).getTime() / 1000)\r\n    }\r\n    \r\n    return(\r\n        <div className=\"LoginContainer\">\r\n            {Start}{End}\r\n            <MaterialUIPickers  SetEndDate={SetEndDate} SetStartDate={SetStartDate}/>\r\n\r\n            <TextField \r\n                id=\"outlined-basic\" \r\n                label=\"Model Name\" \r\n                variant=\"outlined\" \r\n                onChange={handleTitle}\r\n            />\r\n            \r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Model Description\"\r\n                multiline\r\n                rows={6}\r\n                onChange={handleDescription}\r\n                variant=\"outlined\"\r\n                />\r\n\r\n            \r\n            <Button variant=\"contained\" onClick={()=>{handleClick()} } className=\"btn-Confirm\">\r\n                Create Model\r\n            </Button>\r\n                \r\n        </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nfunction MaterialUIPickers(props) {\r\n    const{SetStartDate, SetEndDate} = props\r\n    // The first commit of Material-UI\r\n    const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\r\n    const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\r\n  \r\n    const handleDateChange = (date) => {\r\n        setSelectedStartDate(date);\r\n      SetStartDate(date)\r\n     \r\n    };\r\n\r\n    const handleEndDateChange = (date) => {\r\n        setSelectedEndDate(date);\r\n    \r\n        SetEndDate(date)\r\n      };\r\n  \r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Start Date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={selectedStartDate}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"End Date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={selectedEndDate}\r\n            onChange={handleEndDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n  ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateNewModel.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompare.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ViewModels.js",["694","695","696","697","698","699"],"import React, { useEffect } from 'react';\r\nimport {useContext_STRAPI_FULL} from \"../../Context/STRAPI\";\r\nimport {useContext_SCAN_FULL} from \"../../Context/SCAN\";\r\nimport {useContext_AUTH_FULL} from \"../../Context/AUTH\";\r\nimport{FetchPreviousScans} from \"../../actions/authUser\"\r\n\r\n// Layout\r\nimport {H1, H2, H3,H4, P, S} from \"./Components/Type\";\r\nimport Section from \"./Components/Layout/Section\"\r\n\r\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\r\nimport LocationDisabledIcon from '@material-ui/icons/LocationDisabled';\r\nimport LocationSearchingIcon from '@material-ui/icons/LocationSearching';\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\n\r\nimport {HandleTZDate} from \"../../actions/HandleUX\";\r\nimport ScanHistoryRefreshBtn from \"./Components/buttons/HistoryRerfresh\";\r\nimport ViewSingleResultBtn from \"./Components/buttons/ViewSingleResultBtn\";\r\nimport Footer from \"./Components/Layout/Footer\"\r\n\r\nconst Profile = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n    return(\r\n        <div className=\"AuthLayout\">\r\n                <div className=\"Header\">\r\n                    <H2 Copy={`View Models`} />\r\n                </div>\r\n\r\n                <div className=\"Content\">\r\n        \r\n                        <div className=\"ControlBar\">\r\n                            {  AUTH.RefreshScanHistory ? <Refreshloading />: <ScanHistoryRefreshBtn /> }\r\n                        </div> \r\n                    \r\n                    <Section>\r\n                        <ModelHistory />\r\n                    </Section>\r\n                \r\n                </div>\r\n            \r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\nconst ModelHistory = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n\r\n    const HandleDate=(timestamp)=>{\r\n        var a = new Date(timestamp * 1000);\r\n        var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n        var year = a.getFullYear();\r\n        var month = months[a.getMonth()];\r\n        var date = a.getDate();\r\n        var time = date + ' ' + month + ' ' + year;\r\n        return time;\r\n        \r\n    }\r\n    useEffect(()=>{\r\n        console.log(AUTH.ScanHistory);\r\n    },[AUTH.ScanHistory])\r\n    return(\r\n        <div className=\"ModelHistory\">\r\n            <ul className=\"Card_List\">\r\n                    \r\n\r\n            {\r\n                AUTH.ScanHistory.map((scan,i)=>{\r\n                    //console.log(scan);\r\n                    return(\r\n                        <li key={i} className=\"Card\">\r\n\r\n                             <div className=\"Card_Header\">\r\n                                <div><H2 Copy={scan.Name}/></div>\r\n                                <p><strong>{HandleDate(scan.DateStart)} - {HandleDate(scan.DateEnd) }</strong></p>\r\n                              \r\n                                { scan.ScanState=== 'Complete'? <CTA scan={scan}/>: <ProcessingStatus scan={scan} />  }\r\n                             </div>\r\n                            \r\n\r\n                             <div className=\"Card_Body\">\r\n                               \r\n                                <div className=\"description\">\r\n                                    <P Copy={scan.Description}/>    \r\n                                </div>\r\n\r\n                                <div className=\"ResultStats\">\r\n                                    <ul> \r\n                                        <li><span>{scan.IntClients}</span><PersonPinIcon />Clients</li>\r\n                                        <li><span>{scan.IntCluster}</span><GroupWorkIcon />Clusters</li>\r\n                                        <li><span>{scan.IntSites}</span><LocationCityIcon />Locations</li>\r\n                                        <li><span>{(scan.IntSites-scan.IntLocationsunaccommodated)}</span><LocationSearchingIcon />Inscope</li>\r\n                                        <li><span>{scan.IntLocationsunaccommodated}</span><LocationDisabledIcon />Out of Scope</li>\r\n                            \r\n                                    </ul>\r\n                                </div>\r\n                               \r\n                             </div>\r\n                             <div className=\"Card_Footer\">\r\n                                <CreatedAt scan={scan}/>\r\n                                { scan.ScanState=== 'Complete'? <ProcessingStatus scan={scan} />: false }\r\n                             </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Refreshloading=()=>{\r\n    return(\r\n        <div className=\"loader\"><div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>\r\n    )\r\n}\r\n\r\n\r\nconst CreatedAt=(props)=>{\r\n    const {scan} = props\r\n    return(\r\n        <div className=\"ModelDateCreated\">\r\n            <S Copy={`Created : ${HandleTZDate(scan.createdAt)}`}/>                        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ProcessingStatus=(props)=>{\r\n    const {scan} = props\r\n    return(<>\r\n            <div className={`${scan.ScanState} status`}>\r\n                \r\n                {\r\n                    scan.ScanState=== 'Complete' ? `Processing Time ${scan.CreateModel_TimeTaken}`:`ETA: ${scan.CreateModel_RemainingTime} `\r\n                }\r\n                <br />\r\n                {scan.ScanState}\r\n             \r\n            </div>\r\n    </>\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst CTA = (props)=>{\r\n    const {scan} = props\r\n    return(\r\n        <div className=\"cta\">\r\n            <div><ViewSingleResultBtn scanID={scan.id} scan={scan}/></div>\r\n            <div>Delete</div>\r\n        </div>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CompareModels.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMPARE.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleCompare.js",["700"],"\r\n// Private Functions\r\nimport store from \"../store/index\"\r\nimport axios from 'axios';\r\n\r\nexport const StoreCompareItem = (scan,i)=>{\r\n    const UserSelected = store.getState().COMPARE.CompareData.UserSelected;\r\n    UserSelected[i] = scan\r\n    console.log(scan,i, UserSelected)\r\n    store.dispatch({ type:'STOREUSERSELECTED', payload:UserSelected});\r\n}\r\n\r\nexport const ConfirmCompare = (bool)=>{\r\n    store.dispatch({ type:'COMPAREPROCESSING', payload:true}); \r\n\r\n    const UserSelected = store.getState().COMPARE.CompareData.UserSelected;\r\n    UserSelected.map((models,i)=>{\r\n        FetchCompareModel(models.id, i, UserSelected.length)\r\n    })\r\n\r\n   \r\n    store.dispatch({ type:'COMPARESTATUS', payload:true}); \r\n}\r\n\r\n\r\nexport const ResetCompare = ()=>{\r\n\r\n    store.dispatch({ type:'COMPARESTATUS', payload:false}); \r\n    store.dispatch({ type:'COMPAREPROCESSING', payload:false}); \r\n    store.dispatch({ type:'STOREUSERSELECTED', payload:[]});\r\n    store.dispatch({ type:'STOREMODELS', payload:[]});\r\n}\r\n\r\n\r\nexport const FetchCompareModel = (scanID, int, total)=>{\r\n\r\n\r\n    console.log(\"scanID\", scanID, int)\r\n    const AWSURL=' https://intactanalytiq.s3-ap-southeast-2.amazonaws.com/';\r\n   // 6002d5ece940b655642d22df.json\r\n   // headers: axiosHeader\r\n   axios({ url: AWSURL+scanID+'.json', method: 'get'})\r\n    .then((result) => { \r\n    \r\n            console.log(result.data);\r\n            //result.data.SCANSTATE\r\n            const FetchedModels = store.getState().COMPARE.CompareData.FetchedModels;\r\n\r\n            \r\n            FetchedModels[int] = result.data\r\n            store.dispatch({ type:'STOREMODELS', payload:FetchedModels}); \r\n\r\n            if(FetchedModels.length === total)\r\n                store.dispatch({ type:'COMPAREPROCESSING', payload:false}); \r\n        \r\n            }).catch(function (thrown) {\r\n                    if (axios.isCancel(thrown)) { console.log('Request canceled', thrown.message);\r\n                    } else { console.log(\"ERROR\", thrown);}\r\n            });\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMPARE.js",["701"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_COMPARE_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_COMPARE_FULL = ()=>{\r\n    return useContext(Context_COMPARE_FULL)\r\n}\r\n\r\n\r\n \r\nexport const COMPAREContextProvider = ({children})=>{\r\n    const COMPARE = useSelector(state => state.COMPARE );\r\n\r\n    useMemo(()=>{  },[COMPARE]) \r\n\r\n    return(\r\n            <Context_COMPARE_FULL.Provider value={COMPARE}>\r\n                {children}            \r\n            </Context_COMPARE_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ConfirmCompareBtn.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SelectModels.js",["702","703","704"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../Context/COMPARE\";\r\n\r\n\r\nimport SelectCompare from \"../Components/selects/SelectCompare\"\r\nimport ConfirmCompareBtn from \"../Components/buttons/ConfirmCompareBtn\";\r\n\r\n const CompareModels=()=>{\r\n\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    // useContext_COMPARE_FULL\r\n    const [ModelLimit, setLimit] = useState(2)\r\n    const [ModelsSelected, setModelsSelected] = useState(2)\r\n    const [ModelSelects, setModelSelects] = useState([])\r\n\r\n    const CreateSelects = ()=>{\r\n        let i=0\r\n        let temp=[]\r\n        while(i<ModelLimit){\r\n            \r\n            temp.push(<SelectCompare pos={i}/>)\r\n            i++;\r\n        }\r\n        setModelSelects(temp)\r\n    }\r\n    useEffect(()=>{\r\n        CreateSelects()\r\n    },[ModelsSelected])\r\n\r\n    useEffect(()=>{ console.log(COMPARE) },[COMPARE])\r\n    return(\r\n        <>\r\n            <div className=\"SectionHeaderWithControls\">\r\n            <h1>Compare Models</h1>\r\n                <div className=\"controls\">\r\n                {ModelSelects }\r\n                    <ConfirmCompareBtn />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"ComparedSelectedItems\">\r\n\r\n                <ul className=\"ComparableItem\">\r\n                                        <li>Model Name</li>\r\n                                        <li>Clients</li>\r\n                                        <li>Clusters</li>\r\n                                        <li>Sites</li>\r\n                                        <li>Description</li>\r\n                                </ul>   \r\n\r\n\r\n                    {\r\n                        COMPARE.CompareData.UserSelected.map((model,i)=>{\r\n                            return(\r\n                                <ul key={i} className=\"ComparableItem\">\r\n                                        <li>{model.Name}</li>\r\n                                        <li>{model.IntClients}</li>\r\n                                        <li>{model.IntCluster}</li>\r\n                                        <li>{model.IntSites}</li>\r\n                                        \r\n                                        <li>{model.Description}</li>\r\n                                </ul>    \r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompareModels","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareModels.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetCompareModels.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableHeader.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableClusters.js",["705","706"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\nimport { runInContext } from 'lodash';\r\nconst Title='Clusters';\r\n\r\nconst TableWorkOrders = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n    const [Values, setValues] = useState([])\r\n   \r\n    useEffect(()=>{},[COMPARE])\r\n\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n            <div>{Title}</div>\r\n            {Values}\r\n            {\r\n                MODELS.map((model,i)=>{\r\n                    return(\r\n                        <div key={i}> {numberWithCommas(model.CLUSTERSTATS.clusters)} </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default TableWorkOrders;\r\n\r\n\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalWorkOrders.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalLocations.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsInScope.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsUnaccomidated.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalWorkOrdersCoveredInCluster.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableWorkorders.js",["707"],"import React, {useEffect} from 'react'\r\n\r\nimport CompareTableTotalWorkOrdersCoveredInCluster from \"./CompareTable/TableTotalWorkOrdersCoveredInCluster\";\r\nimport CompareTableTotalWorkOrders from \"./CompareTable/TableTotalWorkOrders\"\r\nimport WorkorderByClient from \"./CompareTable/TableWorkOrderByClient\";\r\nconst TableSectionWorkorders = ()=>{\r\n    return(\r\n        <>\r\n        \r\n          <div className=\"TableSection\">\r\n            <div className=\"SectionHeader\"><h2>Work Orders</h2></div>\r\n                <CompareTableTotalWorkOrders />\r\n                <WorkorderByClient />\r\n                <CompareTableTotalWorkOrdersCoveredInCluster />\r\n            </div>\r\n        </>\r\n    )\r\n}    \r\n\r\nexport default TableSectionWorkorders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableClusters.js",["708"],"import React, {useEffect} from 'react'\r\n\r\nimport CompareClusters from \"./CompareTable/TableClusters\"\r\nimport ClusterBreakdown from \"./CompareTable/TableClusterBreakDown\";\r\n\r\nconst TableSectionWorkorders = ()=>{\r\n    return(\r\n        <>\r\n            <div className=\"TableSection\">\r\n                <div className=\"SectionHeader\"><h2>Clusters</h2></div>\r\n                <CompareClusters />\r\n                <ClusterBreakdown />\r\n            </div> \r\n        </>\r\n    ) \r\n}   \r\n\r\nexport default TableSectionWorkorders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableLocations.js",["709"],"import React, {useEffect} from 'react'\r\n\r\n    // Locations\r\n    import CompareTableTotalLocations from \"./CompareTable/TableTotalLocations\"\r\n    import CompareTableLocationsInscope from \"./CompareTable/TableLocationsInScope\";\r\n    import CompareTableLocationsUnaccomidated from \"./CompareTable/TableLocationsUnaccomidated\";\r\n    import LocationSitesByTier from \"./CompareTable/TableSitesByTier\";\r\n\r\nconst TableSectionWorkorders = ()=>{\r\n    return(\r\n        <>\r\n          <div className=\"TableSection\">\r\n              <div className=\"SectionHeader\">\r\n                  <h2>Locations</h2>\r\n               </div>\r\n\r\n                    <CompareTableTotalLocations />\r\n                    <CompareTableLocationsInscope />\r\n                    <LocationSitesByTier />\r\n                    <CompareTableLocationsUnaccomidated />\r\n        </div>  \r\n        </>\r\n    )\r\n}   \r\n\r\nexport default TableSectionWorkorders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableResourceAllocation.js",["710"],"import React, {useEffect} from 'react'\r\n\r\n    // Locations\r\n    import TotalResourceAllocation from \"./CompareTable/TableTotalResourceAllocation\"\r\n    import TableResourceAllocationPerResourceTotal from \"./CompareTable/TableResourceAllocationPerResourceTotal\"\r\nconst TableSectionWorkorders = ()=>{\r\n    return(\r\n        <>\r\n          <div className=\"TableSection\">\r\n              <div className=\"SectionHeader\">\r\n                  <h2>Resource Allocations</h2>\r\n               </div>\r\n            <TotalResourceAllocation />\r\n            <TableResourceAllocationPerResourceTotal/>\r\n                   \r\n        </div>  \r\n        </>\r\n    )\r\n}   \r\n\r\nexport default TableSectionWorkorders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalResourceAllocation.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableResourceAllocationPerResourceTotal.js",["711"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\n\r\nconst Title='Avg WO Completed per resource';\r\n\r\nconst TableWorkOrders = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n    \r\n    useEffect(()=>{ },[COMPARE])\r\n\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n            <div>{Title}</div>\r\n            {\r\n                MODELS.map((model,i)=>{\r\n                    return( \r\n                        <div key={i}> {((model.CLUSTERSTATS.WorkOrdersCoveredInModel/model.CLUSTERSTATS.ResourceAllocation)/250).toFixed(2)} </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableWorkOrders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableClusterBreakDown.js",["712","713","714"],"import React, {useEffect, useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\nimport {numberWithCommas, GroupArrayByOccurances} from \"../../../../actions/HandleUX\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n  }));\r\n\r\nconst Title='Tier Breakdown';\r\n\r\nconst TableClusterBreakdown = ()=>{\r\n    const classes = useStyles();\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n    const extractResults=(data)=>{\r\n        let CategoryInt=[]\r\n        data.map((result,i)=>{ CategoryInt.push(result.scanCategory) })\r\n        //console.log(GroupArrayByOccurances(CategoryInt))\r\n            return GroupArrayByOccurances(CategoryInt)\r\n    }\r\n\r\n\r\n    useEffect(()=>{ },[COMPARE])\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <Accordion className=\"ComparisonAccordion\">\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    {Title}\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails className=\"ComparisonRow\">\r\n                    <div>&nbsp;</div>\r\n                        {\r\n                            MODELS.map((model,i)=>{\r\n                                let Breakdown = extractResults(model.STOREMARKERCENTERPOINTS);\r\n                                return(\r\n                                    <div key={i}>\r\n                                        <DisplayBreakdown Breakdown={Breakdown}/>\r\n                                    </div>\r\n                                )\r\n                                    \r\n                            })\r\n                        }\r\n                </AccordionDetails>\r\n\r\n            </Accordion>\r\n            </div>\r\n\r\n      \r\n    )\r\n}\r\n\r\nexport default TableClusterBreakdown;\r\n\r\nconst DisplayBreakdown = (props)=>{\r\n    const {Breakdown} = props\r\n    return(\r\n        Breakdown[0].map((cat,i)=>{\r\n            return(\r\n                <div key={i} className=\"AccordionData\">\r\n                    <div>{cat}</div>\r\n                    <div>{Breakdown[1][i]}</div>\r\n                </div>\r\n            )\r\n        })\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableWorkOrderByClient.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\TableTradeTypes.js",["715"],"import React, {useEffect} from 'react'\r\n\r\n    // Trade TYpes\r\nimport TradetypeBreakDown from \"./CompareTable/TableTradeTypeBreakdown\";\r\nconst TableSectionTradeTypes = ()=>{\r\n    return(\r\n        <>\r\n          <div className=\"TableSection\">\r\n              <div className=\"SectionHeader\">\r\n                  <h2>Trade Types</h2>\r\n               </div>\r\n          \r\n                   <TradetypeBreakDown />\r\n        </div>  \r\n        </>\r\n    )\r\n}   \r\n\r\nexport default TableSectionTradeTypes;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTradeTypeBreakdown.js",["716"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\nimport {FindTradeTypeAllocation} from \"../../../../actions/ClusterAnalysis\";\r\nconst Title='Model Trades';\r\n\r\nconst TableWorkOrders = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n    \r\n    useEffect(()=>{},[COMPARE])\r\n\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n            <div>{Title}</div>\r\n            {\r\n                        MODELS.map((model,i)=>{\r\n                           let  Breakdown= FindTradeTypeAllocation(model.STOREMARKERCENTERPOINTS)\r\n                            return(\r\n                                <div key={i}>\r\n                                    <DisplayBreakdown Breakdown={Breakdown}/>\r\n                                </div>\r\n                            )\r\n                                \r\n                        })\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableWorkOrders;\r\n\r\nconst DisplayBreakdown = (props)=>{\r\n    const {Breakdown} = props\r\n    return(\r\n        <>\r\n        {\r\n              Breakdown[0].map((cat,i)=>{\r\n                return(\r\n                    <div key={i} className=\"AccordionData\">\r\n                        <div>{cat}</div>\r\n                        <div>{Breakdown[1][i]}</div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        </>       \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableSitesByTier.js",["717","718"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\n\r\nimport {SitesbyTier} from \"../../../../actions/ClusterAnalysis\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\nimport {findClientName} from \"../../../../actions/ClusterAnalysis\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n  }));\r\n\r\nconst Title='Locations allocation by Tier';\r\n\r\nconst WorkordersByClient = ()=>{\r\n    const classes = useStyles();\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n\r\n    useEffect(()=>{ },[COMPARE])\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n        <Accordion className=\"ComparisonAccordion\">\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n                {Title}\r\n            </AccordionSummary>\r\n\r\n            <AccordionDetails className=\"ComparisonRow\">\r\n                <div>&nbsp;</div>\r\n                   \r\n\r\n                    {\r\n                        MODELS.map((model,i)=>{\r\n                            let Breakdown = SitesbyTier(model.STOREMARKERCENTERPOINTS)\r\n                            return(\r\n                                <div key={i}>\r\n                                    <DisplayBreakdown Breakdown={Breakdown}/>\r\n                                </div>\r\n                            )\r\n                                \r\n                        })\r\n                    }\r\n            </AccordionDetails>\r\n\r\n        </Accordion>\r\n        </div>\r\n    )\r\n} \r\nexport default WorkordersByClient;\r\n\r\n\r\nconst DisplayBreakdown = (props)=>{\r\n    const {Breakdown} = props\r\n    return(\r\n        <>\r\n        {\r\n              Breakdown[0].map((cat,i)=>{\r\n                return(\r\n                    <div key={i} className=\"AccordionData\">\r\n                        <div>{cat}</div>\r\n                        <div>{Breakdown[1][i]}</div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        </>        \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult.js",["719","720","721","722","723","724"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ScanStateBtn.js",["725"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Footer.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\UICompnents\\index.js",["726"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n// Type\r\nimport {H1, H2, H3,H4, P, S} from \"../Components/Type\";\r\nimport Section from \"../Components/Layout/Section\"\r\nconst UIComponentList = ()=>{\r\n    return(\r\n        <>\r\n        <H1 Copy={`UI COMPONENTS`}/>\r\n            <Section><BasicTypeOptions /></Section>            \r\n            <Section><ColorPallete /></Section>\r\n            <Section><Cards /></Section>\r\n            <Section><Pods /></Section>\r\n            <Section><StatBar /></Section>\r\n            <Section><Buttons /></Section>\r\n            <Section><ControlBar /></Section>\r\n            \r\n\r\n            <Section>\r\n               \r\n             Controls\r\n            charts\r\n            </Section>\r\n           \r\n\r\n\r\n        </> \r\n    )\r\n}\r\n\r\nexport default UIComponentList; \r\n\r\n\r\nconst ControlBar=()=>{\r\n    return(\r\n        <div className=\"ControlBar\">\r\n            Icon\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Buttons=()=>{\r\n    return(\r\n        <>\r\n             <H2 Copy={`Buttons`}/>\r\n             <Button variant=\"contained\" className=\"btn-Back\"> Back </Button>\r\n             <Button variant=\"contained\" className=\"btn-Select\"> Select </Button>\r\n             <Button variant=\"contained\" className=\"btn-Next\"> Next </Button>\r\n             <Button variant=\"contained\" className=\"btn-Confirm\"> Confirm </Button>\r\n             <Button variant=\"contained\" className=\"btn-Create\"> Create </Button>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst StatBar=()=>{\r\n\r\n        return(\r\n            <>\r\n             <H2 Copy={`Stat/Data Bar`}/>\r\n                <ul className=\"Stat_Bar\">\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                </ul>\r\n            </>\r\n        )\r\n}\r\n\r\nconst Pods =()=>{\r\n    return(\r\n        <>\r\n            <H2 Copy={`Data Pods`}/>\r\n\r\n            <ul className=\"Pod_List\">\r\n                <li className=\"Pod\">\r\n                    \r\n                    <div className=\"Data\"><P Copy={`Pod Data`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Pod Title`}/></div>\r\n                    <div className=\"Data Strong\"><P Copy={`Secondary  Data`}/></div>\r\n                </li>\r\n                <li className=\"Pod\">\r\n                    <div className=\"Data\"><P Copy={`Pod Data`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Pod Title`}/></div>\r\n                    \r\n                </li>\r\n                <li className=\"Pod\">\r\n                    \r\n                    <div className=\"Data\"><P Copy={`Pod Data`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Pod Title`}/></div>\r\n                    <div className=\"Data Strong\"><P Copy={`Secondary  Data`}/></div>\r\n                </li>\r\n                <li className=\"Pod\">\r\n                    <div className=\"Data\"><P Copy={`Pod Data`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Pod Title`}/></div>\r\n                    \r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst Cards = ()=>{\r\n    return(\r\n        <>\r\n        <H2 Copy={`Cards`}/>\r\n\r\n        <ul className=\"Card_List\">\r\n            <li className=\"Card\">\r\n                    <div className=\"Card_Header\">\r\n                            <H2 Copy={`Card Header`}/>\r\n                    </div>\r\n                    <div className=\"Card_Body\">\r\n                            <P Copy={`Card Body`}/>\r\n                    </div>\r\n                    <div className=\"Card_Footer\">\r\n                            <H4 Copy={`Card Footer`}/>\r\n                    </div>\r\n            </li>\r\n\r\n            <li className=\"Card\">\r\n                    <div className=\"Card_Header\">\r\n                            <H2 Copy={`Card Header`}/>\r\n                    </div>\r\n                    <div className=\"Card_Body\">\r\n                            <P Copy={`Card Body`}/>\r\n                    </div>\r\n                    <div className=\"Card_Footer\">\r\n                            <H4 Copy={`Card Footer`}/>\r\n                    </div>\r\n            </li>\r\n        </ul>\r\n\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst ColorPallete=()=>{\r\n    return(\r\n        <>\r\n        <H2 Copy={`Color palettes`}/>\r\n        <H3 Copy={`Baseline Colors`}/>\r\n            <ul className=\"ColorPalette\">\r\n                <li>\r\n                    <span className=\"color1\"></span>\r\n                    <H4 Copy={`Color 1`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"color2\"></span>\r\n                    <H4 Copy={`Color 2`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"color3\"></span>\r\n                    <H4 Copy={`Color 3`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"color4\"></span>\r\n                    <H4 Copy={`Color 4`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"color5\"></span>\r\n                    <H4 Copy={`Color 5`}/>\r\n                </li>\r\n            </ul>\r\n        <H3 Copy={`Accent Colors`}/>\r\n            <ul className=\"ColorPalette\">\r\n                <li>\r\n                    <span className=\"true\"></span>\r\n                    <H4 Copy={`Accent True`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"false\"></span>\r\n                    <H4 Copy={`Accent False`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"Link\"></span>\r\n                    <H4 Copy={`Link`}/>\r\n                </li>\r\n               \r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst ULList = ()=>{\r\n    return(\r\n        <ul>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst BasicTypeOptions=()=>{\r\n    return(\r\n        <>\r\n            \r\n            \r\n            <H1 Copy={`Header H1. Font : Roboto`}/>\r\n            <H2 Copy={`Header H2. Font : Roboto`}/>\r\n            <H3 Copy={`Header H3. Font : Roboto`}/>\r\n            <H4 Copy={`Header H4. Font : Roboto`}/>\r\n            \r\n            <P Copy={`Paragraph Font : Montserrat`}/>\r\n            <S Copy={`Small Copy Font : Montserrat`}/>\r\n        </>\r\n    )\r\n}\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Type.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Section.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Locations.js",["727","728","729","730","731","732"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\HeaderTitle.js",["733"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\AppBar.js",["734","735","736"],"import React from 'react';\r\nimport { Link} from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport BlurCircularIcon from '@material-ui/icons/BlurCircular';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n}));\r\n\r\nexport default function BottomAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n  \r\n      <AppBar position=\"fixed\" className={`ModelSingleResultBottom ${classes.appBar} `}>\r\n            <Toolbar className=\"ModelSingleResultAppBar\">\r\n         \r\n            <IconButton edge=\"end\" color=\"inherit\" component={Link} to={`/results/locations`} >\r\n                <LocationCityIcon />\r\n                <p>locations</p>\r\n            </IconButton>\r\n            <IconButton edge=\"end\" color=\"inherit\" component={Link} to={`/results/trades`} >\r\n                <BuildIcon />\r\n                <p>Trades</p>\r\n            </IconButton>\r\n            \r\n            <IconButton edge=\"end\" color=\"inherit\" component={Link} to={`/results/clients`} >\r\n                <PeopleIcon />\r\n                <p>clients</p>\r\n            </IconButton>\r\n\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\"  component={Link} to={`/results/workorders`} >\r\n                <AssignmentIcon />\r\n                <p>Work Orders</p>\r\n            </IconButton>\r\n\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" component={Link} to={`/results/map`} >\r\n                <MapIcon />\r\n                <p>Map</p>\r\n            </IconButton>\r\n            <IconButton color=\"inherit\" component={Link} to={`/results/cluster`} >\r\n                <BlurCircularIcon />\r\n                <p>Clusters</p>\r\n            </IconButton>\r\n            \r\n         \r\n           \r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_FullMap.js",["737"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Client.js",["738","739"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Clusters.js",["740"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Workorders.js",["741","742","743","744"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Trade.js",["745","746","747","748"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Stats.js",["749"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_ByTier.js",["750"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\nimport {GroupArrayByOccurances} from \"../../../../actions/HandleUX\";\r\n\r\nconst ClusterByCategory = () =>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n\r\n    const extractResults=()=>{\r\n        let CategoryInt=[]\r\n            SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((result,i)=>{\r\n                CategoryInt.push(result.scanCategory)\r\n                return true\r\n            })\r\n        setCategoryOccurance(GroupArrayByOccurances(CategoryInt))\r\n    }\r\n\r\n    useEffect(()=>{extractResults()},[SCAN])\r\n\r\n    return(\r\n                <ul className=\"Stat_Bar\">\r\n                    {\r\n                        CategoryOccurance[0].map((cat,i)=>{\r\n                            return(\r\n                                <li key={i}>\r\n                                        {cat} : {CategoryOccurance[1][i]}\r\n                                </li>\r\n                            ) \r\n                        })\r\n                    }\r\n                </ul>\r\n    )\r\n}\r\n\r\nexport default ClusterByCategory;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Charts.js",["751","752","753"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basics.js",["754","755","756"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basic_Charts.js",["757","758","759","760","761","762","763"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clients_Names.js",["764","765","766"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_ResourceAllocation.js",["767","768","769","770"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Ratios.js",["771","772","773","774","775"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\OLD_ResultHeader.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Map_Full_MAin.js",["776"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Map_SingleModelReview_FULLModel.js",["777","778"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\LocationMarkers.js",["779","780","781","782","783","784","785","786","787","788","789","790"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ResidualLocationMarkers.js",["791","792","793","794","795","796","797","798","799"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Polygons.js",["800","801","802","803"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MarkersCenterpoints.js",["804","805"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MarkerBasedResults.js",["806"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapColorKey.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\OLD_ResultMap.js",["807","808"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clusters_ResultsList.js",["809","810"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterResults.js",["811","812","813","814","815"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterMiniMap.js",["816","817","818","819","820"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\SelectandReview.js",["821","822","823","824","825"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanSelectItems.js",["826","827","828"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanReviewSelectedItems.js",["829","830","831","832","833","834"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\RadialSIngleChart.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_CLusterSpreadbyCLient.js",["835","836","837","838","839","840","841","842","843","844"],{"ruleId":"845","severity":1,"message":"846","line":21,"column":7,"nodeType":"847","messageId":"848","endLine":21,"endColumn":15},{"ruleId":"849","replacedBy":"850"},{"ruleId":"851","replacedBy":"852"},{"ruleId":"853","severity":1,"message":"854","line":153,"column":42,"nodeType":"855","messageId":"856","endLine":153,"endColumn":44},{"ruleId":"857","severity":1,"message":"858","line":16,"column":15,"nodeType":"859","messageId":"860","endLine":16,"endColumn":17},{"ruleId":"857","severity":1,"message":"858","line":16,"column":33,"nodeType":"859","messageId":"860","endLine":16,"endColumn":35},{"ruleId":"857","severity":1,"message":"858","line":31,"column":17,"nodeType":"859","messageId":"860","endLine":31,"endColumn":19},{"ruleId":"857","severity":1,"message":"858","line":32,"column":17,"nodeType":"859","messageId":"860","endLine":32,"endColumn":19},{"ruleId":"845","severity":1,"message":"861","line":287,"column":12,"nodeType":"847","messageId":"848","endLine":287,"endColumn":26},{"ruleId":"853","severity":1,"message":"854","line":290,"column":43,"nodeType":"855","messageId":"856","endLine":290,"endColumn":45},{"ruleId":"853","severity":1,"message":"862","line":332,"column":73,"nodeType":"863","messageId":"864","endLine":332,"endColumn":82},{"ruleId":"853","severity":1,"message":"854","line":342,"column":26,"nodeType":"855","messageId":"856","endLine":342,"endColumn":28},{"ruleId":"853","severity":1,"message":"854","line":53,"column":33,"nodeType":"855","messageId":"856","endLine":53,"endColumn":35},{"ruleId":"853","severity":1,"message":"854","line":55,"column":44,"nodeType":"855","messageId":"856","endLine":55,"endColumn":46},{"ruleId":"865","severity":1,"message":"866","line":98,"column":11,"nodeType":"867","messageId":"868","endLine":98,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":101,"column":11,"nodeType":"867","messageId":"868","endLine":101,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":104,"column":11,"nodeType":"867","messageId":"868","endLine":104,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":107,"column":11,"nodeType":"867","messageId":"868","endLine":107,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":110,"column":11,"nodeType":"867","messageId":"868","endLine":110,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":113,"column":11,"nodeType":"867","messageId":"868","endLine":113,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":116,"column":11,"nodeType":"867","messageId":"868","endLine":116,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":119,"column":11,"nodeType":"867","messageId":"868","endLine":119,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":122,"column":11,"nodeType":"867","messageId":"868","endLine":122,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":125,"column":11,"nodeType":"867","messageId":"868","endLine":125,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":128,"column":11,"nodeType":"867","messageId":"868","endLine":128,"endColumn":17},{"ruleId":"869","severity":1,"message":"870","line":163,"column":3,"nodeType":"871","messageId":"872","endLine":189,"endColumn":4},{"ruleId":"865","severity":1,"message":"866","line":166,"column":13,"nodeType":"867","messageId":"868","endLine":166,"endColumn":19},{"ruleId":"865","severity":1,"message":"866","line":169,"column":9,"nodeType":"867","messageId":"868","endLine":169,"endColumn":15},{"ruleId":"865","severity":1,"message":"866","line":172,"column":11,"nodeType":"867","messageId":"868","endLine":172,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":175,"column":11,"nodeType":"867","messageId":"868","endLine":175,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":178,"column":11,"nodeType":"867","messageId":"868","endLine":178,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":181,"column":11,"nodeType":"867","messageId":"868","endLine":181,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":184,"column":11,"nodeType":"867","messageId":"868","endLine":184,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":187,"column":11,"nodeType":"867","messageId":"868","endLine":187,"endColumn":17},{"ruleId":"845","severity":1,"message":"873","line":3,"column":18,"nodeType":"847","messageId":"848","endLine":3,"endColumn":22},{"ruleId":"849","replacedBy":"874"},{"ruleId":"851","replacedBy":"875"},{"ruleId":"853","severity":1,"message":"854","line":33,"column":26,"nodeType":"855","messageId":"856","endLine":33,"endColumn":28},{"ruleId":"845","severity":1,"message":"876","line":71,"column":11,"nodeType":"847","messageId":"848","endLine":71,"endColumn":30},{"ruleId":"853","severity":1,"message":"854","line":73,"column":29,"nodeType":"855","messageId":"856","endLine":73,"endColumn":31},{"ruleId":"853","severity":1,"message":"854","line":105,"column":24,"nodeType":"855","messageId":"856","endLine":105,"endColumn":26},{"ruleId":"853","severity":1,"message":"854","line":106,"column":35,"nodeType":"855","messageId":"856","endLine":106,"endColumn":37},{"ruleId":"853","severity":1,"message":"854","line":112,"column":53,"nodeType":"855","messageId":"856","endLine":112,"endColumn":55},{"ruleId":"853","severity":1,"message":"854","line":122,"column":26,"nodeType":"855","messageId":"856","endLine":122,"endColumn":28},{"ruleId":"853","severity":1,"message":"854","line":140,"column":29,"nodeType":"855","messageId":"856","endLine":140,"endColumn":31},{"ruleId":"845","severity":1,"message":"877","line":150,"column":7,"nodeType":"847","messageId":"848","endLine":150,"endColumn":22},{"ruleId":"853","severity":1,"message":"854","line":152,"column":24,"nodeType":"855","messageId":"856","endLine":152,"endColumn":26},{"ruleId":"853","severity":1,"message":"854","line":160,"column":40,"nodeType":"855","messageId":"856","endLine":160,"endColumn":42},{"ruleId":"857","severity":1,"message":"878","line":163,"column":19,"nodeType":"859","messageId":"860","endLine":163,"endColumn":21},{"ruleId":"845","severity":1,"message":"879","line":178,"column":9,"nodeType":"847","messageId":"848","endLine":178,"endColumn":17},{"ruleId":"853","severity":1,"message":"854","line":192,"column":34,"nodeType":"855","messageId":"856","endLine":192,"endColumn":36},{"ruleId":"853","severity":1,"message":"854","line":196,"column":37,"nodeType":"855","messageId":"856","endLine":196,"endColumn":39},{"ruleId":"857","severity":1,"message":"858","line":213,"column":94,"nodeType":"859","messageId":"860","endLine":213,"endColumn":96},{"ruleId":"857","severity":1,"message":"878","line":215,"column":30,"nodeType":"859","messageId":"860","endLine":215,"endColumn":32},{"ruleId":"845","severity":1,"message":"880","line":267,"column":9,"nodeType":"847","messageId":"848","endLine":267,"endColumn":27},{"ruleId":"853","severity":1,"message":"854","line":269,"column":28,"nodeType":"855","messageId":"856","endLine":269,"endColumn":30},{"ruleId":"853","severity":1,"message":"854","line":287,"column":27,"nodeType":"855","messageId":"856","endLine":287,"endColumn":29},{"ruleId":"853","severity":1,"message":"854","line":289,"column":37,"nodeType":"855","messageId":"856","endLine":289,"endColumn":39},{"ruleId":"853","severity":1,"message":"854","line":303,"column":25,"nodeType":"855","messageId":"856","endLine":303,"endColumn":27},{"ruleId":"853","severity":1,"message":"854","line":305,"column":35,"nodeType":"855","messageId":"856","endLine":305,"endColumn":37},{"ruleId":"881","severity":1,"message":"882","line":5,"column":13,"nodeType":"883","endLine":5,"endColumn":73},{"ruleId":"881","severity":1,"message":"882","line":9,"column":13,"nodeType":"883","endLine":9,"endColumn":79},{"ruleId":"857","severity":1,"message":"858","line":6,"column":15,"nodeType":"859","messageId":"860","endLine":6,"endColumn":17},{"ruleId":"857","severity":1,"message":"858","line":6,"column":33,"nodeType":"859","messageId":"860","endLine":6,"endColumn":35},{"ruleId":"857","severity":1,"message":"858","line":21,"column":17,"nodeType":"859","messageId":"860","endLine":21,"endColumn":19},{"ruleId":"857","severity":1,"message":"858","line":22,"column":17,"nodeType":"859","messageId":"860","endLine":22,"endColumn":19},{"ruleId":"853","severity":1,"message":"854","line":59,"column":35,"nodeType":"855","messageId":"856","endLine":59,"endColumn":37},{"ruleId":"884","severity":1,"message":"885","line":108,"column":28,"nodeType":"886","messageId":"887","endLine":108,"endColumn":30},{"ruleId":"884","severity":1,"message":"885","line":108,"column":58,"nodeType":"886","messageId":"887","endLine":108,"endColumn":60},{"ruleId":"853","severity":1,"message":"854","line":119,"column":42,"nodeType":"855","messageId":"856","endLine":119,"endColumn":44},{"ruleId":"853","severity":1,"message":"854","line":145,"column":29,"nodeType":"855","messageId":"856","endLine":145,"endColumn":31},{"ruleId":"853","severity":1,"message":"854","line":146,"column":47,"nodeType":"855","messageId":"856","endLine":146,"endColumn":49},{"ruleId":"853","severity":1,"message":"888","line":231,"column":46,"nodeType":"855","messageId":"864","endLine":231,"endColumn":48},{"ruleId":"857","severity":1,"message":"858","line":245,"column":87,"nodeType":"859","messageId":"860","endLine":245,"endColumn":89},{"ruleId":"853","severity":1,"message":"854","line":295,"column":29,"nodeType":"855","messageId":"856","endLine":295,"endColumn":31},{"ruleId":"857","severity":1,"message":"858","line":297,"column":80,"nodeType":"859","messageId":"860","endLine":297,"endColumn":82},{"ruleId":"853","severity":1,"message":"854","line":50,"column":26,"nodeType":"855","messageId":"856","endLine":50,"endColumn":28},{"ruleId":"845","severity":1,"message":"889","line":185,"column":7,"nodeType":"847","messageId":"848","endLine":185,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":15,"column":73,"nodeType":"892","endLine":15,"endColumn":79,"suggestions":"893"},{"ruleId":"890","severity":1,"message":"891","line":58,"column":8,"nodeType":"892","endLine":58,"endColumn":14,"suggestions":"894"},{"ruleId":"853","severity":1,"message":"895","line":63,"column":43,"nodeType":"863","messageId":"856","endLine":63,"endColumn":51},{"ruleId":"890","severity":1,"message":"896","line":71,"column":41,"nodeType":"892","endLine":71,"endColumn":58,"suggestions":"897"},{"ruleId":"890","severity":1,"message":"898","line":94,"column":7,"nodeType":"892","endLine":94,"endColumn":9,"suggestions":"899"},{"ruleId":"845","severity":1,"message":"900","line":136,"column":11,"nodeType":"847","messageId":"848","endLine":136,"endColumn":17},{"ruleId":"845","severity":1,"message":"901","line":138,"column":12,"nodeType":"847","messageId":"848","endLine":138,"endColumn":22},{"ruleId":"845","severity":1,"message":"902","line":138,"column":24,"nodeType":"847","messageId":"848","endLine":138,"endColumn":37},{"ruleId":"890","severity":1,"message":"891","line":149,"column":8,"nodeType":"892","endLine":149,"endColumn":14,"suggestions":"903"},{"ruleId":"845","severity":1,"message":"904","line":7,"column":8,"nodeType":"847","messageId":"848","endLine":7,"endColumn":22},{"ruleId":"845","severity":1,"message":"905","line":8,"column":8,"nodeType":"847","messageId":"848","endLine":8,"endColumn":24},{"ruleId":"845","severity":1,"message":"906","line":9,"column":8,"nodeType":"847","messageId":"848","endLine":9,"endColumn":24},{"ruleId":"845","severity":1,"message":"907","line":11,"column":8,"nodeType":"847","messageId":"848","endLine":11,"endColumn":23},{"ruleId":"890","severity":1,"message":"908","line":25,"column":22,"nodeType":"892","endLine":25,"endColumn":28,"suggestions":"909"},{"ruleId":"845","severity":1,"message":"910","line":8,"column":8,"nodeType":"847","messageId":"848","endLine":8,"endColumn":15},{"ruleId":"845","severity":1,"message":"911","line":3,"column":8,"nodeType":"847","messageId":"848","endLine":3,"endColumn":14},{"ruleId":"845","severity":1,"message":"912","line":10,"column":8,"nodeType":"847","messageId":"848","endLine":10,"endColumn":24},{"ruleId":"845","severity":1,"message":"910","line":12,"column":8,"nodeType":"847","messageId":"848","endLine":12,"endColumn":15},{"ruleId":"845","severity":1,"message":"913","line":56,"column":11,"nodeType":"847","messageId":"848","endLine":56,"endColumn":18},{"ruleId":"845","severity":1,"message":"914","line":1,"column":17,"nodeType":"847","messageId":"848","endLine":1,"endColumn":26},{"ruleId":"845","severity":1,"message":"915","line":4,"column":22,"nodeType":"847","messageId":"848","endLine":4,"endColumn":32},{"ruleId":"890","severity":1,"message":"891","line":11,"column":7,"nodeType":"892","endLine":11,"endColumn":11,"suggestions":"916"},{"ruleId":"845","severity":1,"message":"917","line":5,"column":10,"nodeType":"847","messageId":"848","endLine":5,"endColumn":15},{"ruleId":"845","severity":1,"message":"918","line":6,"column":9,"nodeType":"847","messageId":"848","endLine":6,"endColumn":27},{"ruleId":"845","severity":1,"message":"919","line":8,"column":30,"nodeType":"847","messageId":"848","endLine":8,"endColumn":36},{"ruleId":"845","severity":1,"message":"920","line":2709,"column":12,"nodeType":"847","messageId":"848","endLine":2709,"endColumn":14},{"ruleId":"853","severity":1,"message":"854","line":2752,"column":34,"nodeType":"855","messageId":"856","endLine":2752,"endColumn":36},{"ruleId":"890","severity":1,"message":"921","line":2764,"column":7,"nodeType":"892","endLine":2764,"endColumn":9,"suggestions":"922"},{"ruleId":"845","severity":1,"message":"923","line":1,"column":27,"nodeType":"847","messageId":"848","endLine":1,"endColumn":35},{"ruleId":"845","severity":1,"message":"920","line":16,"column":11,"nodeType":"847","messageId":"848","endLine":16,"endColumn":13},{"ruleId":"853","severity":1,"message":"854","line":24,"column":32,"nodeType":"855","messageId":"856","endLine":24,"endColumn":34},{"ruleId":"890","severity":1,"message":"924","line":37,"column":47,"nodeType":"892","endLine":37,"endColumn":60,"suggestions":"925"},{"ruleId":"845","severity":1,"message":"923","line":1,"column":27,"nodeType":"847","messageId":"848","endLine":1,"endColumn":35},{"ruleId":"845","severity":1,"message":"926","line":15,"column":7,"nodeType":"847","messageId":"848","endLine":15,"endColumn":22},{"ruleId":"845","severity":1,"message":"927","line":11,"column":9,"nodeType":"847","messageId":"848","endLine":11,"endColumn":15},{"ruleId":"845","severity":1,"message":"928","line":14,"column":7,"nodeType":"847","messageId":"848","endLine":14,"endColumn":15},{"ruleId":"845","severity":1,"message":"900","line":23,"column":11,"nodeType":"847","messageId":"848","endLine":23,"endColumn":17},{"ruleId":"845","severity":1,"message":"920","line":24,"column":11,"nodeType":"847","messageId":"848","endLine":24,"endColumn":13},{"ruleId":"845","severity":1,"message":"929","line":34,"column":13,"nodeType":"847","messageId":"848","endLine":34,"endColumn":20},{"ruleId":"845","severity":1,"message":"930","line":39,"column":13,"nodeType":"847","messageId":"848","endLine":39,"endColumn":23},{"ruleId":"853","severity":1,"message":"854","line":43,"column":28,"nodeType":"855","messageId":"856","endLine":43,"endColumn":30},{"ruleId":"853","severity":1,"message":"854","line":60,"column":37,"nodeType":"855","messageId":"856","endLine":60,"endColumn":39},{"ruleId":"890","severity":1,"message":"931","line":91,"column":51,"nodeType":"892","endLine":91,"endColumn":76,"suggestions":"932"},{"ruleId":"890","severity":1,"message":"933","line":30,"column":7,"nodeType":"892","endLine":30,"endColumn":13,"suggestions":"934"},{"ruleId":"845","severity":1,"message":"927","line":10,"column":9,"nodeType":"847","messageId":"848","endLine":10,"endColumn":15},{"ruleId":"845","severity":1,"message":"928","line":13,"column":7,"nodeType":"847","messageId":"848","endLine":13,"endColumn":15},{"ruleId":"845","severity":1,"message":"920","line":23,"column":11,"nodeType":"847","messageId":"848","endLine":23,"endColumn":13},{"ruleId":"845","severity":1,"message":"929","line":33,"column":13,"nodeType":"847","messageId":"848","endLine":33,"endColumn":20},{"ruleId":"845","severity":1,"message":"930","line":38,"column":13,"nodeType":"847","messageId":"848","endLine":38,"endColumn":23},{"ruleId":"853","severity":1,"message":"854","line":42,"column":28,"nodeType":"855","messageId":"856","endLine":42,"endColumn":30},{"ruleId":"853","severity":1,"message":"854","line":59,"column":36,"nodeType":"855","messageId":"856","endLine":59,"endColumn":38},{"ruleId":"853","severity":1,"message":"854","line":61,"column":42,"nodeType":"855","messageId":"856","endLine":61,"endColumn":44},{"ruleId":"857","severity":1,"message":"878","line":104,"column":55,"nodeType":"859","messageId":"860","endLine":104,"endColumn":57},{"ruleId":"890","severity":1,"message":"931","line":106,"column":9,"nodeType":"892","endLine":106,"endColumn":38,"suggestions":"935"},{"ruleId":"853","severity":1,"message":"854","line":16,"column":51,"nodeType":"855","messageId":"856","endLine":16,"endColumn":53},{"ruleId":"890","severity":1,"message":"936","line":63,"column":45,"nodeType":"892","endLine":63,"endColumn":74,"suggestions":"937"},{"ruleId":"845","severity":1,"message":"938","line":15,"column":24,"nodeType":"847","messageId":"848","endLine":15,"endColumn":37},{"ruleId":"845","severity":1,"message":"939","line":16,"column":12,"nodeType":"847","messageId":"848","endLine":16,"endColumn":24},{"ruleId":"845","severity":1,"message":"940","line":19,"column":11,"nodeType":"847","messageId":"848","endLine":19,"endColumn":27},{"ruleId":"853","severity":1,"message":"854","line":21,"column":40,"nodeType":"855","messageId":"856","endLine":21,"endColumn":42},{"ruleId":"845","severity":1,"message":"941","line":95,"column":10,"nodeType":"847","messageId":"848","endLine":95,"endColumn":16},{"ruleId":"845","severity":1,"message":"942","line":19,"column":11,"nodeType":"847","messageId":"848","endLine":19,"endColumn":24},{"ruleId":"845","severity":1,"message":"914","line":2,"column":17,"nodeType":"847","messageId":"848","endLine":2,"endColumn":26},{"ruleId":"845","severity":1,"message":"943","line":12,"column":3,"nodeType":"847","messageId":"848","endLine":12,"endColumn":21},{"ruleId":"845","severity":1,"message":"944","line":41,"column":7,"nodeType":"847","messageId":"848","endLine":41,"endColumn":17},{"ruleId":"845","severity":1,"message":"913","line":75,"column":11,"nodeType":"847","messageId":"848","endLine":75,"endColumn":18},{"ruleId":"845","severity":1,"message":"945","line":2,"column":9,"nodeType":"847","messageId":"848","endLine":2,"endColumn":31},{"ruleId":"845","severity":1,"message":"946","line":3,"column":9,"nodeType":"847","messageId":"848","endLine":3,"endColumn":29},{"ruleId":"845","severity":1,"message":"947","line":5,"column":8,"nodeType":"847","messageId":"848","endLine":5,"endColumn":26},{"ruleId":"845","severity":1,"message":"948","line":8,"column":9,"nodeType":"847","messageId":"848","endLine":8,"endColumn":11},{"ruleId":"845","severity":1,"message":"949","line":8,"column":17,"nodeType":"847","messageId":"848","endLine":8,"endColumn":19},{"ruleId":"845","severity":1,"message":"950","line":8,"column":20,"nodeType":"847","messageId":"848","endLine":8,"endColumn":22},{"ruleId":"853","severity":1,"message":"854","line":17,"column":32,"nodeType":"855","messageId":"856","endLine":17,"endColumn":34},{"ruleId":"890","severity":1,"message":"951","line":25,"column":22,"nodeType":"892","endLine":25,"endColumn":31,"suggestions":"952"},{"ruleId":"845","severity":1,"message":"953","line":12,"column":24,"nodeType":"847","messageId":"848","endLine":12,"endColumn":32},{"ruleId":"845","severity":1,"message":"954","line":13,"column":28,"nodeType":"847","messageId":"848","endLine":13,"endColumn":45},{"ruleId":"890","severity":1,"message":"955","line":28,"column":7,"nodeType":"892","endLine":28,"endColumn":23,"suggestions":"956"},{"ruleId":"845","severity":1,"message":"957","line":4,"column":10,"nodeType":"847","messageId":"848","endLine":4,"endColumn":22},{"ruleId":"845","severity":1,"message":"958","line":10,"column":20,"nodeType":"847","messageId":"848","endLine":10,"endColumn":29},{"ruleId":"845","severity":1,"message":"914","line":1,"column":16,"nodeType":"847","messageId":"848","endLine":1,"endColumn":25},{"ruleId":"845","severity":1,"message":"914","line":1,"column":16,"nodeType":"847","messageId":"848","endLine":1,"endColumn":25},{"ruleId":"845","severity":1,"message":"914","line":1,"column":16,"nodeType":"847","messageId":"848","endLine":1,"endColumn":25},{"ruleId":"845","severity":1,"message":"914","line":1,"column":16,"nodeType":"847","messageId":"848","endLine":1,"endColumn":25},{"ruleId":"845","severity":1,"message":"959","line":3,"column":9,"nodeType":"847","messageId":"848","endLine":3,"endColumn":25},{"ruleId":"845","severity":1,"message":"923","line":1,"column":27,"nodeType":"847","messageId":"848","endLine":1,"endColumn":35},{"ruleId":"845","severity":1,"message":"959","line":10,"column":9,"nodeType":"847","messageId":"848","endLine":10,"endColumn":25},{"ruleId":"853","severity":1,"message":"854","line":26,"column":28,"nodeType":"855","messageId":"856","endLine":26,"endColumn":30},{"ruleId":"845","severity":1,"message":"914","line":1,"column":16,"nodeType":"847","messageId":"848","endLine":1,"endColumn":25},{"ruleId":"845","severity":1,"message":"959","line":3,"column":9,"nodeType":"847","messageId":"848","endLine":3,"endColumn":25},{"ruleId":"845","severity":1,"message":"959","line":12,"column":9,"nodeType":"847","messageId":"848","endLine":12,"endColumn":25},{"ruleId":"845","severity":1,"message":"960","line":13,"column":9,"nodeType":"847","messageId":"848","endLine":13,"endColumn":23},{"ruleId":"961","severity":1,"message":"962","line":28,"column":29,"nodeType":"883","endLine":28,"endColumn":53},{"ruleId":"961","severity":1,"message":"963","line":32,"column":29,"nodeType":"883","endLine":32,"endColumn":50},{"ruleId":"961","severity":1,"message":"964","line":36,"column":29,"nodeType":"883","endLine":36,"endColumn":49},{"ruleId":"961","severity":1,"message":"965","line":40,"column":29,"nodeType":"883","endLine":40,"endColumn":54},{"ruleId":"961","severity":1,"message":"966","line":44,"column":29,"nodeType":"883","endLine":44,"endColumn":51},{"ruleId":"961","severity":1,"message":"967","line":48,"column":29,"nodeType":"883","endLine":48,"endColumn":52},{"ruleId":"845","severity":1,"message":"968","line":5,"column":10,"nodeType":"847","messageId":"848","endLine":5,"endColumn":20},{"ruleId":"845","severity":1,"message":"969","line":198,"column":7,"nodeType":"847","messageId":"848","endLine":198,"endColumn":13},{"ruleId":"845","severity":1,"message":"970","line":5,"column":12,"nodeType":"847","messageId":"848","endLine":5,"endColumn":14},{"ruleId":"845","severity":1,"message":"971","line":5,"column":16,"nodeType":"847","messageId":"848","endLine":5,"endColumn":17},{"ruleId":"961","severity":1,"message":"972","line":25,"column":17,"nodeType":"883","endLine":25,"endColumn":42},{"ruleId":"961","severity":1,"message":"973","line":26,"column":17,"nodeType":"883","endLine":26,"endColumn":37},{"ruleId":"961","severity":1,"message":"974","line":27,"column":17,"nodeType":"883","endLine":27,"endColumn":43},{"ruleId":"961","severity":1,"message":"975","line":28,"column":17,"nodeType":"883","endLine":28,"endColumn":51},{"ruleId":"890","severity":1,"message":"976","line":12,"column":7,"nodeType":"892","endLine":12,"endColumn":9,"suggestions":"977"},{"ruleId":"845","severity":1,"message":"978","line":7,"column":8,"nodeType":"847","messageId":"848","endLine":7,"endColumn":16},{"ruleId":"845","severity":1,"message":"979","line":8,"column":8,"nodeType":"847","messageId":"848","endLine":8,"endColumn":18},{"ruleId":"845","severity":1,"message":"980","line":9,"column":8,"nodeType":"847","messageId":"848","endLine":9,"endColumn":16},{"ruleId":"961","severity":1,"message":"981","line":13,"column":17,"nodeType":"883","endLine":13,"endColumn":34},{"ruleId":"845","severity":1,"message":"970","line":4,"column":12,"nodeType":"847","messageId":"848","endLine":4,"endColumn":14},{"ruleId":"845","severity":1,"message":"971","line":4,"column":16,"nodeType":"847","messageId":"848","endLine":4,"endColumn":17},{"ruleId":"961","severity":1,"message":"982","line":13,"column":17,"nodeType":"883","endLine":13,"endColumn":41},{"ruleId":"845","severity":1,"message":"970","line":4,"column":12,"nodeType":"847","messageId":"848","endLine":4,"endColumn":14},{"ruleId":"845","severity":1,"message":"971","line":4,"column":16,"nodeType":"847","messageId":"848","endLine":4,"endColumn":17},{"ruleId":"961","severity":1,"message":"983","line":14,"column":13,"nodeType":"883","endLine":14,"endColumn":34},{"ruleId":"961","severity":1,"message":"984","line":15,"column":13,"nodeType":"883","endLine":15,"endColumn":41},{"ruleId":"845","severity":1,"message":"970","line":4,"column":12,"nodeType":"847","messageId":"848","endLine":4,"endColumn":14},{"ruleId":"845","severity":1,"message":"971","line":4,"column":16,"nodeType":"847","messageId":"848","endLine":4,"endColumn":17},{"ruleId":"961","severity":1,"message":"985","line":15,"column":13,"nodeType":"883","endLine":15,"endColumn":29},{"ruleId":"961","severity":1,"message":"986","line":16,"column":12,"nodeType":"883","endLine":16,"endColumn":40},{"ruleId":"890","severity":1,"message":"987","line":21,"column":43,"nodeType":"892","endLine":21,"endColumn":45,"suggestions":"988"},{"ruleId":"890","severity":1,"message":"933","line":18,"column":38,"nodeType":"892","endLine":18,"endColumn":44,"suggestions":"989"},{"ruleId":"853","severity":1,"message":"854","line":27,"column":39,"nodeType":"855","messageId":"856","endLine":27,"endColumn":41},{"ruleId":"890","severity":1,"message":"987","line":40,"column":43,"nodeType":"892","endLine":40,"endColumn":45,"suggestions":"990"},{"ruleId":"890","severity":1,"message":"933","line":41,"column":38,"nodeType":"892","endLine":41,"endColumn":44,"suggestions":"991"},{"ruleId":"845","severity":1,"message":"992","line":6,"column":8,"nodeType":"847","messageId":"848","endLine":6,"endColumn":15},{"ruleId":"853","severity":1,"message":"854","line":16,"column":26,"nodeType":"855","messageId":"856","endLine":16,"endColumn":28},{"ruleId":"853","severity":1,"message":"854","line":25,"column":53,"nodeType":"855","messageId":"856","endLine":25,"endColumn":55},{"ruleId":"853","severity":1,"message":"854","line":16,"column":26,"nodeType":"855","messageId":"856","endLine":16,"endColumn":28},{"ruleId":"853","severity":1,"message":"854","line":25,"column":49,"nodeType":"855","messageId":"856","endLine":25,"endColumn":51},{"ruleId":"853","severity":1,"message":"854","line":34,"column":52,"nodeType":"855","messageId":"856","endLine":34,"endColumn":54},{"ruleId":"853","severity":1,"message":"854","line":35,"column":37,"nodeType":"855","messageId":"856","endLine":35,"endColumn":39},{"ruleId":"853","severity":1,"message":"895","line":46,"column":37,"nodeType":"863","messageId":"856","endLine":46,"endColumn":45},{"ruleId":"890","severity":1,"message":"987","line":55,"column":43,"nodeType":"892","endLine":55,"endColumn":45,"suggestions":"993"},{"ruleId":"890","severity":1,"message":"994","line":56,"column":32,"nodeType":"892","endLine":56,"endColumn":39,"suggestions":"995"},{"ruleId":"853","severity":1,"message":"854","line":13,"column":52,"nodeType":"855","messageId":"856","endLine":13,"endColumn":54},{"ruleId":"853","severity":1,"message":"854","line":14,"column":37,"nodeType":"855","messageId":"856","endLine":14,"endColumn":39},{"ruleId":"890","severity":1,"message":"994","line":27,"column":32,"nodeType":"892","endLine":27,"endColumn":38,"suggestions":"996"},{"ruleId":"853","severity":1,"message":"854","line":16,"column":52,"nodeType":"855","messageId":"856","endLine":16,"endColumn":54},{"ruleId":"853","severity":1,"message":"854","line":17,"column":49,"nodeType":"855","messageId":"856","endLine":17,"endColumn":51},{"ruleId":"853","severity":1,"message":"854","line":27,"column":26,"nodeType":"855","messageId":"856","endLine":27,"endColumn":28},{"ruleId":"853","severity":1,"message":"854","line":36,"column":49,"nodeType":"855","messageId":"856","endLine":36,"endColumn":51},{"ruleId":"845","severity":1,"message":"950","line":7,"column":9,"nodeType":"847","messageId":"848","endLine":7,"endColumn":11},{"ruleId":"845","severity":1,"message":"971","line":7,"column":16,"nodeType":"847","messageId":"848","endLine":7,"endColumn":17},{"ruleId":"845","severity":1,"message":"997","line":14,"column":28,"nodeType":"847","messageId":"848","endLine":14,"endColumn":46},{"ruleId":"853","severity":1,"message":"854","line":22,"column":80,"nodeType":"855","messageId":"856","endLine":22,"endColumn":82},{"ruleId":"890","severity":1,"message":"998","line":24,"column":7,"nodeType":"892","endLine":24,"endColumn":9,"suggestions":"999"},{"ruleId":"961","severity":1,"message":"1000","line":11,"column":13,"nodeType":"883","endLine":11,"endColumn":48},{"ruleId":"845","severity":1,"message":"1001","line":8,"column":8,"nodeType":"847","messageId":"848","endLine":8,"endColumn":20},{"ruleId":"845","severity":1,"message":"1002","line":9,"column":8,"nodeType":"847","messageId":"848","endLine":9,"endColumn":26},{"ruleId":"845","severity":1,"message":"927","line":10,"column":9,"nodeType":"847","messageId":"848","endLine":10,"endColumn":15},{"ruleId":"845","severity":1,"message":"928","line":13,"column":7,"nodeType":"847","messageId":"848","endLine":13,"endColumn":15},{"ruleId":"845","severity":1,"message":"920","line":52,"column":11,"nodeType":"847","messageId":"848","endLine":52,"endColumn":13},{"ruleId":"845","severity":1,"message":"1003","line":54,"column":12,"nodeType":"847","messageId":"848","endLine":54,"endColumn":26},{"ruleId":"845","severity":1,"message":"1004","line":54,"column":27,"nodeType":"847","messageId":"848","endLine":54,"endColumn":44},{"ruleId":"845","severity":1,"message":"929","line":62,"column":13,"nodeType":"847","messageId":"848","endLine":62,"endColumn":20},{"ruleId":"845","severity":1,"message":"930","line":67,"column":13,"nodeType":"847","messageId":"848","endLine":67,"endColumn":23},{"ruleId":"853","severity":1,"message":"854","line":71,"column":28,"nodeType":"855","messageId":"856","endLine":71,"endColumn":30},{"ruleId":"853","severity":1,"message":"854","line":88,"column":36,"nodeType":"855","messageId":"856","endLine":88,"endColumn":38},{"ruleId":"853","severity":1,"message":"854","line":90,"column":42,"nodeType":"855","messageId":"856","endLine":90,"endColumn":44},{"ruleId":"857","severity":1,"message":"878","line":141,"column":70,"nodeType":"859","messageId":"860","endLine":141,"endColumn":72},{"ruleId":"890","severity":1,"message":"931","line":143,"column":9,"nodeType":"892","endLine":143,"endColumn":29,"suggestions":"1005"},{"ruleId":"845","severity":1,"message":"927","line":11,"column":9,"nodeType":"847","messageId":"848","endLine":11,"endColumn":15},{"ruleId":"845","severity":1,"message":"928","line":14,"column":7,"nodeType":"847","messageId":"848","endLine":14,"endColumn":15},{"ruleId":"845","severity":1,"message":"900","line":23,"column":11,"nodeType":"847","messageId":"848","endLine":23,"endColumn":17},{"ruleId":"845","severity":1,"message":"920","line":24,"column":11,"nodeType":"847","messageId":"848","endLine":24,"endColumn":13},{"ruleId":"845","severity":1,"message":"929","line":34,"column":13,"nodeType":"847","messageId":"848","endLine":34,"endColumn":20},{"ruleId":"845","severity":1,"message":"930","line":39,"column":13,"nodeType":"847","messageId":"848","endLine":39,"endColumn":23},{"ruleId":"853","severity":1,"message":"854","line":43,"column":28,"nodeType":"855","messageId":"856","endLine":43,"endColumn":30},{"ruleId":"853","severity":1,"message":"854","line":60,"column":37,"nodeType":"855","messageId":"856","endLine":60,"endColumn":39},{"ruleId":"890","severity":1,"message":"931","line":90,"column":80,"nodeType":"892","endLine":90,"endColumn":100,"suggestions":"1006"},{"ruleId":"845","severity":1,"message":"1007","line":7,"column":7,"nodeType":"847","messageId":"848","endLine":7,"endColumn":14},{"ruleId":"853","severity":1,"message":"854","line":28,"column":71,"nodeType":"855","messageId":"856","endLine":28,"endColumn":73},{"ruleId":"853","severity":1,"message":"854","line":42,"column":50,"nodeType":"855","messageId":"856","endLine":42,"endColumn":52},{"ruleId":"890","severity":1,"message":"1008","line":60,"column":8,"nodeType":"892","endLine":60,"endColumn":28,"suggestions":"1009"},{"ruleId":"853","severity":1,"message":"854","line":16,"column":66,"nodeType":"855","messageId":"856","endLine":16,"endColumn":68},{"ruleId":"890","severity":1,"message":"936","line":63,"column":45,"nodeType":"892","endLine":63,"endColumn":65,"suggestions":"1010"},{"ruleId":"890","severity":1,"message":"933","line":45,"column":7,"nodeType":"892","endLine":45,"endColumn":13,"suggestions":"1011"},{"ruleId":"845","severity":1,"message":"914","line":1,"column":16,"nodeType":"847","messageId":"848","endLine":1,"endColumn":25},{"ruleId":"845","severity":1,"message":"923","line":1,"column":27,"nodeType":"847","messageId":"848","endLine":1,"endColumn":35},{"ruleId":"845","severity":1,"message":"1012","line":11,"column":12,"nodeType":"847","messageId":"848","endLine":11,"endColumn":19},{"ruleId":"890","severity":1,"message":"933","line":27,"column":7,"nodeType":"892","endLine":27,"endColumn":13,"suggestions":"1013"},{"ruleId":"845","severity":1,"message":"1014","line":2,"column":8,"nodeType":"847","messageId":"848","endLine":2,"endColumn":21},{"ruleId":"853","severity":1,"message":"854","line":15,"column":24,"nodeType":"855","messageId":"856","endLine":15,"endColumn":26},{"ruleId":"1015","severity":1,"message":"1016","line":56,"column":13,"nodeType":"883","endLine":56,"endColumn":17},{"ruleId":"853","severity":1,"message":"854","line":88,"column":32,"nodeType":"855","messageId":"856","endLine":88,"endColumn":34},{"ruleId":"890","severity":1,"message":"1017","line":90,"column":7,"nodeType":"892","endLine":90,"endColumn":9,"suggestions":"1018"},{"ruleId":"845","severity":1,"message":"919","line":2,"column":21,"nodeType":"847","messageId":"848","endLine":2,"endColumn":27},{"ruleId":"845","severity":1,"message":"1007","line":14,"column":9,"nodeType":"847","messageId":"848","endLine":14,"endColumn":16},{"ruleId":"853","severity":1,"message":"854","line":31,"column":37,"nodeType":"855","messageId":"856","endLine":31,"endColumn":39},{"ruleId":"853","severity":1,"message":"854","line":79,"column":43,"nodeType":"855","messageId":"856","endLine":79,"endColumn":45},{"ruleId":"890","severity":1,"message":"1019","line":92,"column":9,"nodeType":"892","endLine":92,"endColumn":11,"suggestions":"1020"},{"ruleId":"845","severity":1,"message":"923","line":1,"column":28,"nodeType":"847","messageId":"848","endLine":1,"endColumn":36},{"ruleId":"845","severity":1,"message":"1021","line":4,"column":10,"nodeType":"847","messageId":"848","endLine":4,"endColumn":17},{"ruleId":"845","severity":1,"message":"1022","line":4,"column":20,"nodeType":"847","messageId":"848","endLine":4,"endColumn":26},{"ruleId":"845","severity":1,"message":"1023","line":5,"column":8,"nodeType":"847","messageId":"848","endLine":5,"endColumn":26},{"ruleId":"845","severity":1,"message":"900","line":13,"column":11,"nodeType":"847","messageId":"848","endLine":13,"endColumn":17},{"ruleId":"857","severity":1,"message":"878","line":31,"column":75,"nodeType":"859","messageId":"860","endLine":31,"endColumn":77},{"ruleId":"857","severity":1,"message":"878","line":44,"column":73,"nodeType":"859","messageId":"860","endLine":44,"endColumn":75},{"ruleId":"890","severity":1,"message":"1024","line":54,"column":7,"nodeType":"892","endLine":54,"endColumn":36,"suggestions":"1025"},{"ruleId":"845","severity":1,"message":"1021","line":3,"column":10,"nodeType":"847","messageId":"848","endLine":3,"endColumn":17},{"ruleId":"845","severity":1,"message":"1022","line":3,"column":20,"nodeType":"847","messageId":"848","endLine":3,"endColumn":26},{"ruleId":"845","severity":1,"message":"1026","line":14,"column":12,"nodeType":"847","messageId":"848","endLine":14,"endColumn":20},{"ruleId":"845","severity":1,"message":"1027","line":14,"column":22,"nodeType":"847","messageId":"848","endLine":14,"endColumn":33},{"ruleId":"845","severity":1,"message":"1026","line":46,"column":12,"nodeType":"847","messageId":"848","endLine":46,"endColumn":20},{"ruleId":"845","severity":1,"message":"1027","line":46,"column":22,"nodeType":"847","messageId":"848","endLine":46,"endColumn":33},{"ruleId":"845","severity":1,"message":"1028","line":5,"column":8,"nodeType":"847","messageId":"848","endLine":5,"endColumn":16},{"ruleId":"845","severity":1,"message":"971","line":8,"column":13,"nodeType":"847","messageId":"848","endLine":8,"endColumn":14},{"ruleId":"845","severity":1,"message":"927","line":10,"column":9,"nodeType":"847","messageId":"848","endLine":10,"endColumn":15},{"ruleId":"845","severity":1,"message":"1029","line":51,"column":13,"nodeType":"847","messageId":"848","endLine":51,"endColumn":25},{"ruleId":"853","severity":1,"message":"854","line":56,"column":39,"nodeType":"855","messageId":"856","endLine":56,"endColumn":41},{"ruleId":"853","severity":1,"message":"854","line":62,"column":70,"nodeType":"855","messageId":"856","endLine":62,"endColumn":72},{"ruleId":"853","severity":1,"message":"854","line":65,"column":52,"nodeType":"855","messageId":"856","endLine":65,"endColumn":54},{"ruleId":"845","severity":1,"message":"1030","line":79,"column":11,"nodeType":"847","messageId":"848","endLine":79,"endColumn":18},{"ruleId":"890","severity":1,"message":"987","line":83,"column":43,"nodeType":"892","endLine":83,"endColumn":45,"suggestions":"1031"},{"ruleId":"890","severity":1,"message":"933","line":84,"column":38,"nodeType":"892","endLine":84,"endColumn":44,"suggestions":"1032"},"no-unused-vars","'JWTCHECK' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["1033"],"no-negated-in-lhs",["1034"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'WorkOrderCount' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Cell' is defined but never used.",["1033"],["1034"],"'ChartGroupArrayData' is assigned a value but never used.","'Removeinteriors' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'JobTypes' is assigned a value but never used.","'checkResourceCount' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","Array.prototype.map() expects a value to be returned at the end of arrow function.","'GetSites' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Pushhistory'. Either include it or remove the dependency array.","ArrayExpression",["1035"],["1036"],"Array.prototype.map() expects a return value from function.","React Hook useEffect has a missing dependency: 'checkDataStatus'. Either include it or remove the dependency array.",["1037"],"React Hook useEffect has a missing dependency: 'Fetch'. Either include it or remove the dependency array.",["1038"],"'STRAPI' is assigned a value but never used.","'DataStatus' is assigned a value but never used.","'setDataStatus' is assigned a value but never used.",["1039"],"'ComponentAbout' is defined but never used.","'ComponentLanding' is defined but never used.","'ComponentContact' is defined but never used.","'ComponentUnAuth' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'AUTH'. Either exclude it or remove the dependency array.",["1040"],"'Divider' is defined but never used.","'Drawer' is defined but never used.","'PublicNavigation' is defined but never used.","'classes' is assigned a value but never used.","'useEffect' is defined but never used.","'withRouter' is defined but never used.",["1041"],"'Label' is defined but never used.","'FetchDataIntegrity' is defined but never used.","'Circle' is defined but never used.","'UX' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'points'. Either include it or remove the dependency array.",["1042"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'Scan'. Either include it or remove the dependency array.",["1043"],"'RenderScamSites' is assigned a value but never used.","'uniqBy' is defined but never used.","'divStyle' is assigned a value but never used.","'ColorMe' is assigned a value but never used.","'FindMinMax' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateMarkers'. Either include it or remove the dependency array.",["1044"],"React Hook useEffect has a missing dependency: 'extractResults'. Either include it or remove the dependency array.",["1045"],["1046"],"React Hook useEffect has a missing dependency: 'CreateCenterpoints'. Either include it or remove the dependency array.",["1047"],"'setMultiplier' is assigned a value but never used.","'ClusterTotal' is assigned a value but never used.","'FindClusterTotal' is assigned a value but never used.","'scanID' is assigned a value but never used.","'HandleCompare' is assigned a value but never used.","'KeyboardTimePicker' is defined but never used.","'Processing' is assigned a value but never used.","'useContext_STRAPI_FULL' is defined but never used.","'useContext_SCAN_FULL' is defined but never used.","'FetchPreviousScans' is defined but never used.","'H1' is defined but never used.","'H3' is defined but never used.","'H4' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'COMPARE'. Either exclude it or remove the dependency array.",["1048"],"'setLimit' is assigned a value but never used.","'setModelsSelected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateSelects'. Either include it or remove the dependency array.",["1049"],"'runInContext' is defined but never used.","'setValues' is assigned a value but never used.","'numberWithCommas' is defined but never used.","'findClientName' is defined but never used.","react/jsx-pascal-case","Imported JSX component SubSection_Locations must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_Client must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_Trade must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_Workorders must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_FullMap must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_Clusters must be in PascalCase or SCREAMING_SNAKE_CASE","'makeStyles' is defined but never used.","'ULList' is assigned a value but never used.","'H2' is defined but never used.","'P' is defined but never used.","Imported JSX component Locations_Basic_Stats must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Locations_ByTier must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Locations_Basic_Charts must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Location_CLusterSpreadbyClient must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'SCAN'. Either include it or remove the dependency array.",["1050"],"'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'MoreIcon' is defined but never used.","Imported JSX component Map_Full_Main must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Clusters_ResultsList must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component WorkOrders_Basics must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component WorkOrders_Basics_Charts must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Trade_Ratios must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Trade_ResourceAllocation must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'MODEL'. Either include it or remove the dependency array.",["1051"],["1052"],["1053"],["1054"],"'Section' is defined but never used.",["1055"],"React Hook useEffect has a missing dependency: 'ByClient'. Either include it or remove the dependency array.",["1056"],["1057"],"'setTradeAllocation' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Model.STOREMARKERCENTERPOINTS'. Either include it or remove the dependency array.",["1058"],"Imported JSX component Map_SingleModelReview_FULLModel must be in PascalCase or SCREAMING_SNAKE_CASE","'CenterPoints' is defined but never used.","'MarkerBasedResults' is defined but never used.","'DisplayMarkers' is assigned a value but never used.","'setDisplayMarkers' is assigned a value but never used.",["1059"],["1060"],"'options' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreatePolygons'. Either include it or remove the dependency array.",["1061"],["1062"],["1063"],"'Results' is assigned a value but never used.",["1064"],"'NumberReducer' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'Trades'. Either include it or remove the dependency array.",["1065"],"React Hook useEffect has missing dependencies: 'CreateMarkers' and 'CreatePolygon'. Either include them or remove the dependency array.",["1066"],"'orderBy' is defined but never used.","'remove' is defined but never used.","'ReviewSelectionBtn' is defined but never used.","React Hook useEffect has missing dependencies: 'STRAPI.UserData.Customers' and 'USERSCAN.UserScanSingleDataSets'. Either include them or remove the dependency array.",["1067"],"'Fetching' is assigned a value but never used.","'setFetching' is assigned a value but never used.","'PieChart' is defined but never used.","'ClientSpread' is assigned a value but never used.","'inScope' is assigned a value but never used.",["1068"],["1069"],"no-global-assign","no-unsafe-negation",{"desc":"1070","fix":"1071"},{"desc":"1070","fix":"1072"},{"desc":"1073","fix":"1074"},{"desc":"1075","fix":"1076"},{"desc":"1070","fix":"1077"},{"desc":"1078","fix":"1079"},{"desc":"1080","fix":"1081"},{"desc":"1082","fix":"1083"},{"desc":"1084","fix":"1085"},{"desc":"1086","fix":"1087"},{"desc":"1088","fix":"1089"},{"desc":"1090","fix":"1091"},{"desc":"1092","fix":"1093"},{"desc":"1078","fix":"1094"},{"desc":"1095","fix":"1096"},{"desc":"1097","fix":"1098"},{"desc":"1099","fix":"1100"},{"desc":"1088","fix":"1101"},{"desc":"1099","fix":"1102"},{"desc":"1088","fix":"1103"},{"desc":"1099","fix":"1104"},{"desc":"1105","fix":"1106"},{"desc":"1107","fix":"1108"},{"desc":"1109","fix":"1110"},{"desc":"1111","fix":"1112"},{"desc":"1111","fix":"1113"},{"desc":"1114","fix":"1115"},{"desc":"1116","fix":"1117"},{"desc":"1088","fix":"1118"},{"desc":"1088","fix":"1119"},{"desc":"1120","fix":"1121"},{"desc":"1122","fix":"1123"},{"desc":"1124","fix":"1125"},{"desc":"1099","fix":"1126"},{"desc":"1088","fix":"1127"},"Update the dependencies array to be: [AUTH, Pushhistory]",{"range":"1128","text":"1129"},{"range":"1130","text":"1129"},"Update the dependencies array to be: [STRAPI.UserData, checkDataStatus]",{"range":"1131","text":"1132"},"Update the dependencies array to be: [Fetch]",{"range":"1133","text":"1134"},{"range":"1135","text":"1129"},"Update the dependencies array to be: []",{"range":"1136","text":"1137"},"Update the dependencies array to be: [Pushhistory, UX]",{"range":"1138","text":"1139"},"Update the dependencies array to be: [points]",{"range":"1140","text":"1141"},"Update the dependencies array to be: [SCAN.active, Scan]",{"range":"1142","text":"1143"},"Update the dependencies array to be: [CreateMarkers, SCAN.MarkerScanResidual]",{"range":"1144","text":"1145"},"Update the dependencies array to be: [SCAN, extractResults]",{"range":"1146","text":"1147"},"Update the dependencies array to be: [CreateMarkers, SCAN.MarkerScanCenterPoints]",{"range":"1148","text":"1149"},"Update the dependencies array to be: [CreateCenterpoints, SCAN.MarkerScanCenterPoints]",{"range":"1150","text":"1151"},{"range":"1152","text":"1137"},"Update the dependencies array to be: [CreateSelects, ModelsSelected]",{"range":"1153","text":"1154"},"Update the dependencies array to be: [SCAN]",{"range":"1155","text":"1156"},"Update the dependencies array to be: [MODEL]",{"range":"1157","text":"1158"},{"range":"1159","text":"1147"},{"range":"1160","text":"1158"},{"range":"1161","text":"1147"},{"range":"1162","text":"1158"},"Update the dependencies array to be: [ByClient, MODEL]",{"range":"1163","text":"1164"},"Update the dependencies array to be: [ByClient, SCAN]",{"range":"1165","text":"1166"},"Update the dependencies array to be: [Model.STOREMARKERCENTERPOINTS]",{"range":"1167","text":"1168"},"Update the dependencies array to be: [CreateMarkers, SCAN.SelectedModel]",{"range":"1169","text":"1170"},{"range":"1171","text":"1170"},"Update the dependencies array to be: [CreatePolygons, SCAN.SelectedModel]",{"range":"1172","text":"1173"},"Update the dependencies array to be: [CreateCenterpoints, SCAN.SelectedModel]",{"range":"1174","text":"1175"},{"range":"1176","text":"1147"},{"range":"1177","text":"1147"},"Update the dependencies array to be: [Trades]",{"range":"1178","text":"1179"},"Update the dependencies array to be: [CreateMarkers, CreatePolygon]",{"range":"1180","text":"1181"},"Update the dependencies array to be: [STRAPI.UserData.Customers, USERSCAN.ScanOptionSelected, USERSCAN.UserScanSingleDataSets]",{"range":"1182","text":"1183"},{"range":"1184","text":"1158"},{"range":"1185","text":"1147"},[467,473],"[AUTH, Pushhistory]",[2137,2143],[2468,2485],"[STRAPI.UserData, checkDataStatus]",[2907,2909],"[Fetch]",[4407,4413],[478,484],"[]",[412,416],"[Pushhistory, UX]",[61405,61407],"[points]",[1108,1121],"[SCAN.active, Scan]",[3066,3091],"[CreateMarkers, SCAN.MarkerScanResidual]",[1059,1065],"[SCAN, extractResults]",[3373,3402],"[CreateMarkers, SCAN.MarkerScanCenterPoints]",[2070,2099],"[CreateCenterpoints, SCAN.MarkerScanCenterPoints]",[496,505],[824,840],"[CreateSelects, ModelsSelected]",[322,324],"[SCAN]",[599,601],"[MODEL]",[682,688],[1285,1287],[1328,1334],[1716,1718],[1753,1760],"[ByClient, MODEL]",[886,892],"[ByClient, SCAN]",[855,857],"[Model.STOREMARKERCENTERPOINTS]",[4068,4088],"[CreateMarkers, SCAN.SelectedModel]",[3087,3107],[1644,1664],"[CreatePolygons, SCAN.SelectedModel]",[2062,2082],"[CreateCenterpoints, SCAN.SelectedModel]",[1552,1558],[950,956],[2834,2836],"[Trades]",[2777,2779],"[CreateMarkers, CreatePolygon]",[1930,1959],"[STRAPI.UserData.Customers, USERSCAN.ScanOptionSelected, USERSCAN.UserScanSingleDataSets]",[2429,2431],[2472,2478]]