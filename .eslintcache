[{"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\index.js":"1","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\App.js":"2","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\reportWebVitals.js":"3","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\index.js":"4","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\index.js":"5","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\UX.js":"6","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\History.js":"7","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\PrototypeLoader.js":"8","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\index.js":"9","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\STRAPI.js":"10","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\SideBar.js":"11","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\GeoLocationActions.js":"12","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\STRAPI.js":"13","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\UX.js":"14","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\SCANSTATE.js":"15","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleUX.js":"16","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SCAN.js":"17","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\SimplePie.js":"18","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\BarChart.js":"19","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\ClusterAnalysis.js":"20","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Assets\\logo.js":"21","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleMarkerBasedScan.js":"22","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleScanProcess.js":"23","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\authUser.js":"24","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Landing\\index.js":"25","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\AuthLogin\\index.js":"26","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\index.js":"27","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\About\\about.js":"28","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Contact\\contact.js":"29","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\index.js":"30","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\unAuth\\UnAuth.js":"31","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\AUTH.js":"32","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\AUTH.js":"33","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\AuthDashboard.js":"34","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\PublicLayout.js":"35","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\Public\\Navigation.js":"36","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\input.js":"37","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\LoginForm.js":"38","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Landing.js":"39","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Loading\\Loading.js":"40","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\DataDump.js":"41","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan.js":"42","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Map.js":"43","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\ResidualLocationMarkers.js":"44","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkerBasedResults.js":"45","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\LocationMarkers.js":"46","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkersCenterpoints.js":"47","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ColorKey.js":"48","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ClusterResults.js":"49","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\HistoryRerfresh.js":"50","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ViewSingleResultBtn.js":"51","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateSingleScanBtn.js":"52","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoAddItemsSingleScan.js":"53","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoScanType.js":"54","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\SetSelectedBtn.js":"55","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\CreateScanoptions.js":"56","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateNewModel.js":"57","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompare.js":"58","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel.js":"59","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ViewModels.js":"60","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CompareModels.js":"61","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMPARE.js":"62","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleCompare.js":"63","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMPARE.js":"64","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ConfirmCompareBtn.js":"65","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SelectModels.js":"66","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareModels.js":"67","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetCompareModels.js":"68","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsInScope.js":"69","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsUnaccomidated.js":"70","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalWorkOrdersCoveredInCluster.js":"71","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableResourceAllocationPerResourceTotal.js":"72","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableWorkOrderByClient.js":"73","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTradeTypeBreakdown.js":"74","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableSitesByTier.js":"75","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult.js":"76","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ScanStateBtn.js":"77","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Footer.js":"78","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\UICompnents\\index.js":"79","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Type.js":"80","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Section.js":"81","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Locations.js":"82","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\HeaderTitle.js":"83","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\AppBar.js":"84","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_FullMap.js":"85","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Client.js":"86","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Clusters.js":"87","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Workorders.js":"88","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Trade.js":"89","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Stats.js":"90","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_ByTier.js":"91","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Charts.js":"92","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basics.js":"93","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basic_Charts.js":"94","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clients_Names.js":"95","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_ResourceAllocation.js":"96","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Ratios.js":"97","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\OLD_ResultHeader.js":"98","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Map_Full_MAin.js":"99","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Map_SingleModelReview_FULLModel.js":"100","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\LocationMarkers.js":"101","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ResidualLocationMarkers.js":"102","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Polygons.js":"103","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MarkersCenterpoints.js":"104","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MarkerBasedResults.js":"105","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapColorKey.js":"106","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\OLD_ResultMap.js":"107","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clusters_ResultsList.js":"108","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterResults.js":"109","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterMiniMap.js":"110","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\SelectandReview.js":"111","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanSelectItems.js":"112","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanReviewSelectedItems.js":"113","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\RadialSIngleChart.js":"114","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_CLusterSpreadbyCLient.js":"115","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\RadialMultiChart.js":"116","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapMainFilter.js":"117","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_ResourceSpread.js":"118","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\StackedBarChart.js":"119","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByResourceType.js":"120","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByClusterType.js":"121","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByCapitalCities.js":"122","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectResourceType.js":"123","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_WorkOrderSpread.js":"124","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\ChartHeader.js":"125","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\ReviewGlobalFilter.js":"126","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\FilterChips.js":"127","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectClusterType.js":"128","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Radial_Charts.js":"129","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\ModelSingleReview.js":"130","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SINGLE.js":"131","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CreateSingleViewModel.js":"132","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrder_Radial_Charts.js":"133","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Radial_Clients.js":"134","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_AllocationOverTime.js":"135","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Specific_ClientBreakdown.js":"136","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Specific_Overview.js":"137","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_Basic_Differences.js":"138","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clients_Site_Resource_StatsBar.js":"139","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_WorkordersOverTime.js":"140","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_OverTime.js":"141","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_ResourceAllocationOverTime.js":"142","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectClient.js":"143","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_ResourceDistribution.js":"144","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_SingleSelectedComponents.js":"145","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_Selected_ClusterSpread.js":"146","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_WorkOrderDistribution.js":"147","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\DiagramContainer.js":"148","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Stats_Bar.js":"149","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoPie.js":"150","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoRadial.js":"151","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoWaffle.js":"152","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoFunnel.js":"153","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoLine.js":"154","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoSwarmPlot.js":"155","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CreateCompareModelView.js":"156","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\TableHeader.js":"157","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Locations_CompareTotals.js":"158","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Locations_Main.js":"159","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Clusters_Main.js":"160","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Clusters_TotalsBreakdown.js":"161","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Clusters_Totals.js":"162","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\CLusters_ComparisionPie.js":"163","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\ClusterComparisonRadial.js":"164","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Cluster_ResourcesBar.js":"165","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Resources_Main.js":"166","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Resource_Totals.js":"167","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\WorkOrders_Main.js":"168","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\WorkOrders_Totals.js":"169","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\TableTradeTypes.js":"170","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Clients_Main.js":"171","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\SectionCharts.js":"172","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompareModel.js":"173","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Location_Radial_Clusters.js":"174","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Location_Pie_OutofScope.js":"175","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Clusters_Pie_ClusterNumbers.js":"176","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Clusters_SwarmPlot_Numbers.js":"177","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cluster_Bar_ResourceAllocation.js":"178","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cluster_Bar_Workorders.js":"179","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resource_Radial_Resources.js":"180","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Pie_ResourceAllocation.js":"181","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Trade_Heatmap.js":"182","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Location_Heatmap.js":"183","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Pie_ClientsBreakdown.js":"184","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Cluster_Funnel.js":"185","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Line_Allocation_OverTime.js":"186","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Radial_Workorders.js":"187","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_pie_outofscope.js":"188","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_pie_Clients.js":"189","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Radial_Cluster.js":"190","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\WorkOrder_Heatmap.js":"191","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Bar_Overtime.js":"192","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_Resources.js":"193","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_Sites.js":"194","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_WorkOrders.js":"195","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_line_WorkordersOvertime.js":"196","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_line_ResourcesOvertime.js":"197","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\CompareGlobalFilter.js":"198","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByMarkerType.js":"199","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clusters_List.js":"200","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\Select_CreateModelFilter.js":"201","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\ModelMeta.js":"202","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ReleaseNotes.js":"203","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Pipeline.js":"204","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMMUNICATION.js":"205","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMMS.js":"206","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoNetwork.js":"207","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Network.js":"208","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CostsandPricings.js":"209","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_CostAnalysis.js":"210","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Cost_Resources.js":"211","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Cost_Resource_PieCharts.js":"212","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cost_Pie_ResourceAllocationCost.js":"213","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Cost_Resource_OverTime.js":"214","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cost_Resources_OverTime.js":"215","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Cost_Trade_Heatmap.js":"216","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Sunburst.js":"217","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoSunburst.js":"218","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetMapBtn.js":"219","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\index.js":"220","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\reportWebVitals.js":"221","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\App.js":"222","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\UX.js":"223","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\PrototypeLoader.js":"224","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\authUser.js":"225","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\index.js":"226","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\index.js":"227","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Landing\\index.js":"228","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\index.js":"229","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\History.js":"230","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\index.js":"231","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Loading\\Loading.js":"232","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\index.js":"233","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\UX.js":"234","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMMUNICATION.js":"235","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SCAN.js":"236","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMMS.js":"237","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\SCANSTATE.js":"238","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\AUTH.js":"239","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SINGLE.js":"240","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\ModelSingleReview.js":"241","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMPARE.js":"242","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\AUTH.js":"243","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMPARE.js":"244","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\STRAPI.js":"245","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\STRAPI.js":"246","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel.js":"247","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan.js":"248","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Landing.js":"249","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ViewModels.js":"250","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\DataDump.js":"251","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\About\\about.js":"252","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\unAuth\\UnAuth.js":"253","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Contact\\contact.js":"254","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\AuthLogin\\index.js":"255","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CompareModels.js":"256","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\PublicLayout.js":"257","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ReleaseNotes.js":"258","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Pipeline.js":"259","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Assets\\logo.js":"260","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult.js":"261","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\AuthDashboard.js":"262","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\UICompnents\\index.js":"263","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Map.js":"264","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\SideBar.js":"265","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Type.js":"266","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\HistoryRerfresh.js":"267","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ViewSingleResultBtn.js":"268","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\Public\\Navigation.js":"269","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SelectModels.js":"270","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Section.js":"271","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Footer.js":"272","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareModels.js":"273","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleMarkerBasedScan.js":"274","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetCompareModels.js":"275","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateSingleScanBtn.js":"276","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleUX.js":"277","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\SelectandReview.js":"278","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\HeaderTitle.js":"279","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Workorders.js":"280","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\FilterChips.js":"281","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\AppBar.js":"282","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Clusters.js":"283","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_CostAnalysis.js":"284","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Locations.js":"285","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Client.js":"286","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_FullMap.js":"287","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\LocationMarkers.js":"288","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Trade.js":"289","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ColorKey.js":"290","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkersCenterpoints.js":"291","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkerBasedResults.js":"292","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\ResidualLocationMarkers.js":"293","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoRadial.js":"294","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\LoginForm.js":"295","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ConfirmCompareBtn.js":"296","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompare.js":"297","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\GeoLocationActions.js":"298","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanReviewSelectedItems.js":"299","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoNetwork.js":"300","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\CompareGlobalFilter.js":"301","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Resources_Main.js":"302","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Clients_Main.js":"303","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Clusters_Main.js":"304","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\WorkOrders_Main.js":"305","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Network.js":"306","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Locations_Main.js":"307","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\TableHeader.js":"308","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ClusterResults.js":"309","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleScanProcess.js":"310","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleCompare.js":"311","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_WorkOrderSpread.js":"312","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Charts.js":"313","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\ReviewGlobalFilter.js":"314","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\ClusterAnalysis.js":"315","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_ResourceSpread.js":"316","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_SingleSelectedComponents.js":"317","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\ModelMeta.js":"318","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Stats.js":"319","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_ResourceAllocationOverTime.js":"320","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Cost_Trade_Heatmap.js":"321","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_WorkordersOverTime.js":"322","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_Basic_Differences.js":"323","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Location_Heatmap.js":"324","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateNewModel.js":"325","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_ResourceAllocation.js":"326","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Specific_ClientBreakdown.js":"327","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Ratios.js":"328","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Cost_Resource_OverTime.js":"329","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Radial_Clients.js":"330","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_AllocationOverTime.js":"331","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Specific_Overview.js":"332","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Radial_Charts.js":"333","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Trade_Heatmap.js":"334","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\WorkOrder_Heatmap.js":"335","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Cost_Resource_PieCharts.js":"336","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\SectionCharts.js":"337","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Pie_ResourceAllocation.js":"338","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_line_ResourcesOvertime.js":"339","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Pie_ClientsBreakdown.js":"340","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_WorkOrders.js":"341","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Map_Full_MAin.js":"342","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_line_WorkordersOvertime.js":"343","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Cost_Resources.js":"344","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CreateSingleViewModel.js":"345","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompareModel.js":"346","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectClusterType.js":"347","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectResourceType.js":"348","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cluster_Bar_Workorders.js":"349","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cluster_Bar_ResourceAllocation.js":"350","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Clusters_SwarmPlot_Numbers.js":"351","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Location_Pie_OutofScope.js":"352","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Location_Radial_Clusters.js":"353","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Clusters_Pie_ClusterNumbers.js":"354","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\ChartHeader.js":"355","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Radial_Cluster.js":"356","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_pie_outofscope.js":"357","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Bar_Overtime.js":"358","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Radial_Workorders.js":"359","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Clusters_Totals.js":"360","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Locations_CompareTotals.js":"361","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectClient.js":"362","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_Selected_ClusterSpread.js":"363","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_WorkOrderDistribution.js":"364","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clients_Site_Resource_StatsBar.js":"365","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\DiagramContainer.js":"366","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_Sites.js":"367","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_Resources.js":"368","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Sunburst.js":"369","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetMapBtn.js":"370","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_ResourceDistribution.js":"371","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByCapitalCities.js":"372","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Cluster_Funnel.js":"373","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Line_Allocation_OverTime.js":"374","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoWaffle.js":"375","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resource_Radial_Resources.js":"376","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cost_Resources_OverTime.js":"377","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Stats_Bar.js":"378","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cost_Pie_ResourceAllocationCost.js":"379","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoPie.js":"380","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapMainFilter.js":"381","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapColorKey.js":"382","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Map_SingleModelReview_FULLModel.js":"383","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CostsandPricings.js":"384","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoSwarmPlot.js":"385","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CreateCompareModelView.js":"386","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\WorkOrders_Totals.js":"387","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoFunnel.js":"388","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\CreateScanoptions.js":"389","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoSunburst.js":"390","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoLine.js":"391","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Cluster_ResourcesBar.js":"392","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_pie_Clients.js":"393","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\ClusterComparisonRadial.js":"394","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByMarkerType.js":"395","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Polygons.js":"396","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ResidualLocationMarkers.js":"397","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByClusterType.js":"398","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\LocationMarkers.js":"399","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\CLusters_ComparisionPie.js":"400","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Resource_Totals.js":"401","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByResourceType.js":"402","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoAddItemsSingleScan.js":"403","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanSelectItems.js":"404","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\SetSelectedBtn.js":"405","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clusters_List.js":"406","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clusters_ResultsList.js":"407","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basic_Charts.js":"408","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrder_Radial_Charts.js":"409","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_OverTime.js":"410","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basics.js":"411","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\Select_CreateModelFilter.js":"412","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoScanType.js":"413","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterResults.js":"414","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterMiniMap.js":"415","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\LocationDeepDive.js":"416","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ClientDeepDive.js":"417","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByColorScheme.js":"418","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\MapClusterResults.js":"419","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\ViewSelectedClusterSites.js":"420"},{"size":1249,"mtime":1612394991365,"results":"421","hashOfConfig":"422"},{"size":517,"mtime":1610596234694,"results":"423","hashOfConfig":"422"},{"size":362,"mtime":499162500000,"results":"424","hashOfConfig":"422"},{"size":344,"mtime":1608627476978,"results":"425","hashOfConfig":"422"},{"size":476,"mtime":1614747823917,"results":"426","hashOfConfig":"422"},{"size":4247,"mtime":1614737205000,"results":"427","hashOfConfig":"422"},{"size":87,"mtime":1608627826907,"results":"428","hashOfConfig":"422"},{"size":5761,"mtime":1613957012681,"results":"429","hashOfConfig":"422"},{"size":1980,"mtime":1614748014269,"results":"430","hashOfConfig":"422"},{"size":2823,"mtime":1614212033740,"results":"431","hashOfConfig":"422"},{"size":3054,"mtime":1614917946391,"results":"432","hashOfConfig":"422"},{"size":12399,"mtime":1612412785866,"results":"433","hashOfConfig":"422"},{"size":1995,"mtime":1610967499605,"results":"434","hashOfConfig":"422"},{"size":661,"mtime":1612412633952,"results":"435","hashOfConfig":"422"},{"size":2854,"mtime":1612400872747,"results":"436","hashOfConfig":"422"},{"size":13251,"mtime":1615441123264,"results":"437","hashOfConfig":"422"},{"size":661,"mtime":1612392447468,"results":"438","hashOfConfig":"422"},{"size":802,"mtime":1612497021993,"results":"439","hashOfConfig":"422"},{"size":959,"mtime":1609677692743,"results":"440","hashOfConfig":"422"},{"size":11524,"mtime":1615441184907,"results":"441","hashOfConfig":"422"},{"size":590,"mtime":1615177877131,"results":"442","hashOfConfig":"422"},{"size":11449,"mtime":1612831915819,"results":"443","hashOfConfig":"422"},{"size":2328,"mtime":1612412785866,"results":"444","hashOfConfig":"422"},{"size":9819,"mtime":1615441234159,"results":"445","hashOfConfig":"422"},{"size":405,"mtime":1610502856130,"results":"446","hashOfConfig":"422"},{"size":2843,"mtime":1615178413940,"results":"447","hashOfConfig":"422"},{"size":5466,"mtime":1615441098126,"results":"448","hashOfConfig":"422"},{"size":149,"mtime":1610502909105,"results":"449","hashOfConfig":"422"},{"size":155,"mtime":1610502916347,"results":"450","hashOfConfig":"422"},{"size":1743,"mtime":1614296733102,"results":"451","hashOfConfig":"422"},{"size":160,"mtime":1610448527461,"results":"452","hashOfConfig":"422"},{"size":1396,"mtime":1610779434340,"results":"453","hashOfConfig":"422"},{"size":654,"mtime":1610861163069,"results":"454","hashOfConfig":"422"},{"size":2031,"mtime":1615179032650,"results":"455","hashOfConfig":"422"},{"size":1931,"mtime":1614296793582,"results":"456","hashOfConfig":"422"},{"size":1028,"mtime":1610585645670,"results":"457","hashOfConfig":"422"},{"size":882,"mtime":1610504872791,"results":"458","hashOfConfig":"422"},{"size":2918,"mtime":1614300900293,"results":"459","hashOfConfig":"422"},{"size":3095,"mtime":1615441084780,"results":"460","hashOfConfig":"422"},{"size":1268,"mtime":1612412274048,"results":"461","hashOfConfig":"422"},{"size":178,"mtime":1612412855636,"results":"462","hashOfConfig":"422"},{"size":1281,"mtime":1612412785866,"results":"463","hashOfConfig":"422"},{"size":1574,"mtime":1612412358680,"results":"464","hashOfConfig":"422"},{"size":3156,"mtime":1612412342861,"results":"465","hashOfConfig":"422"},{"size":2016,"mtime":1612412346359,"results":"466","hashOfConfig":"422"},{"size":3467,"mtime":1612412353984,"results":"467","hashOfConfig":"422"},{"size":2229,"mtime":1612224749439,"results":"468","hashOfConfig":"422"},{"size":1561,"mtime":1612224691804,"results":"469","hashOfConfig":"422"},{"size":1596,"mtime":1612224691804,"results":"470","hashOfConfig":"422"},{"size":639,"mtime":1612224691804,"results":"471","hashOfConfig":"422"},{"size":2899,"mtime":1612412785866,"results":"472","hashOfConfig":"422"},{"size":758,"mtime":1612421792565,"results":"473","hashOfConfig":"422"},{"size":615,"mtime":1612224691803,"results":"474","hashOfConfig":"422"},{"size":602,"mtime":1612224691803,"results":"475","hashOfConfig":"422"},{"size":595,"mtime":1612224691804,"results":"476","hashOfConfig":"422"},{"size":4355,"mtime":1615440915815,"results":"477","hashOfConfig":"422"},{"size":613,"mtime":1612224691803,"results":"478","hashOfConfig":"422"},{"size":2190,"mtime":1615440963007,"results":"479","hashOfConfig":"422"},{"size":1388,"mtime":1615441103250,"results":"480","hashOfConfig":"422"},{"size":5659,"mtime":1615441076199,"results":"481","hashOfConfig":"422"},{"size":845,"mtime":1614294110453,"results":"482","hashOfConfig":"422"},{"size":1184,"mtime":1613613636377,"results":"483","hashOfConfig":"422"},{"size":2741,"mtime":1615441136495,"results":"484","hashOfConfig":"422"},{"size":684,"mtime":1611014353088,"results":"485","hashOfConfig":"422"},{"size":607,"mtime":1615437590691,"results":"486","hashOfConfig":"422"},{"size":3839,"mtime":1615441068913,"results":"487","hashOfConfig":"422"},{"size":2231,"mtime":1615441846271,"results":"488","hashOfConfig":"422"},{"size":605,"mtime":1612224691803,"results":"489","hashOfConfig":"422"},{"size":1260,"mtime":1612224749438,"results":"490","hashOfConfig":"422"},{"size":1307,"mtime":1612224749438,"results":"491","hashOfConfig":"422"},{"size":1199,"mtime":1612224749438,"results":"492","hashOfConfig":"422"},{"size":814,"mtime":1612224749438,"results":"493","hashOfConfig":"422"},{"size":2392,"mtime":1612224749438,"results":"494","hashOfConfig":"422"},{"size":1484,"mtime":1612224749438,"results":"495","hashOfConfig":"422"},{"size":2425,"mtime":1612224749438,"results":"496","hashOfConfig":"422"},{"size":3126,"mtime":1615441080943,"results":"497","hashOfConfig":"422"},{"size":1101,"mtime":1611033406310,"results":"498","hashOfConfig":"422"},{"size":494,"mtime":1615178549154,"results":"499","hashOfConfig":"422"},{"size":6537,"mtime":1614296019654,"results":"500","hashOfConfig":"422"},{"size":377,"mtime":1611879742123,"results":"501","hashOfConfig":"422"},{"size":212,"mtime":1613104480890,"results":"502","hashOfConfig":"422"},{"size":1647,"mtime":1614827504468,"results":"503","hashOfConfig":"422"},{"size":1649,"mtime":1614229556225,"results":"504","hashOfConfig":"422"},{"size":3902,"mtime":1614918011272,"results":"505","hashOfConfig":"422"},{"size":3176,"mtime":1615440920166,"results":"506","hashOfConfig":"422"},{"size":2112,"mtime":1615440927294,"results":"507","hashOfConfig":"422"},{"size":1362,"mtime":1615440923895,"results":"508","hashOfConfig":"422"},{"size":1516,"mtime":1614236579044,"results":"509","hashOfConfig":"422"},{"size":2862,"mtime":1614837509019,"results":"510","hashOfConfig":"422"},{"size":3242,"mtime":1614751146386,"results":"511","hashOfConfig":"422"},{"size":531,"mtime":1613102989347,"results":"512","hashOfConfig":"422"},{"size":1092,"mtime":1613628301310,"results":"513","hashOfConfig":"422"},{"size":1785,"mtime":1614837052828,"results":"514","hashOfConfig":"422"},{"size":1024,"mtime":1613528263204,"results":"515","hashOfConfig":"422"},{"size":1490,"mtime":1612225407057,"results":"516","hashOfConfig":"422"},{"size":2189,"mtime":1614920129455,"results":"517","hashOfConfig":"422"},{"size":1491,"mtime":1613102891710,"results":"518","hashOfConfig":"422"},{"size":1357,"mtime":1612227661625,"results":"519","hashOfConfig":"422"},{"size":614,"mtime":1615417122557,"results":"520","hashOfConfig":"422"},{"size":5282,"mtime":1615711001348,"results":"521","hashOfConfig":"422"},{"size":8972,"mtime":1615711381423,"results":"522","hashOfConfig":"422"},{"size":3203,"mtime":1612412785866,"results":"523","hashOfConfig":"422"},{"size":3232,"mtime":1615711210915,"results":"524","hashOfConfig":"422"},{"size":2240,"mtime":1612226142973,"results":"525","hashOfConfig":"422"},{"size":4422,"mtime":1612226987862,"results":"526","hashOfConfig":"422"},{"size":2067,"mtime":1614673246068,"results":"527","hashOfConfig":"422"},{"size":484,"mtime":1612226692141,"results":"528","hashOfConfig":"422"},{"size":1150,"mtime":1614747167447,"results":"529","hashOfConfig":"422"},{"size":3569,"mtime":1612412785866,"results":"530","hashOfConfig":"422"},{"size":3220,"mtime":1612226943564,"results":"531","hashOfConfig":"422"},{"size":806,"mtime":1612227396905,"results":"532","hashOfConfig":"422"},{"size":5205,"mtime":1614295392695,"results":"533","hashOfConfig":"422"},{"size":3120,"mtime":1614295583727,"results":"534","hashOfConfig":"422"},{"size":757,"mtime":1612497273344,"results":"535","hashOfConfig":"422"},{"size":3896,"mtime":1612232478939,"results":"536","hashOfConfig":"422"},{"size":948,"mtime":1612239028885,"results":"537","hashOfConfig":"422"},{"size":700,"mtime":1613618369642,"results":"538","hashOfConfig":"422"},{"size":917,"mtime":1614232967108,"results":"539","hashOfConfig":"422"},{"size":1162,"mtime":1612269527076,"results":"540","hashOfConfig":"422"},{"size":2210,"mtime":1615440967647,"results":"541","hashOfConfig":"422"},{"size":2227,"mtime":1615418562154,"results":"542","hashOfConfig":"422"},{"size":3402,"mtime":1615419147787,"results":"543","hashOfConfig":"422"},{"size":2178,"mtime":1615418485980,"results":"544","hashOfConfig":"422"},{"size":455,"mtime":1613457942264,"results":"545","hashOfConfig":"422"},{"size":2510,"mtime":1614061527154,"results":"546","hashOfConfig":"422"},{"size":939,"mtime":1615419300385,"results":"547","hashOfConfig":"422"},{"size":3366,"mtime":1615442441644,"results":"548","hashOfConfig":"422"},{"size":2217,"mtime":1615418583202,"results":"549","hashOfConfig":"422"},{"size":974,"mtime":1613520593717,"results":"550","hashOfConfig":"422"},{"size":923,"mtime":1612398332279,"results":"551","hashOfConfig":"422"},{"size":672,"mtime":1612392440875,"results":"552","hashOfConfig":"422"},{"size":45608,"mtime":1615441154099,"results":"553","hashOfConfig":"422"},{"size":1154,"mtime":1613527916940,"results":"554","hashOfConfig":"422"},{"size":5622,"mtime":1614736745005,"results":"555","hashOfConfig":"422"},{"size":581,"mtime":1613520912562,"results":"556","hashOfConfig":"422"},{"size":1399,"mtime":1613520581811,"results":"557","hashOfConfig":"422"},{"size":1202,"mtime":1615440930911,"results":"558","hashOfConfig":"422"},{"size":1041,"mtime":1615267577297,"results":"559","hashOfConfig":"422"},{"size":2079,"mtime":1613535338537,"results":"560","hashOfConfig":"422"},{"size":500,"mtime":1613532785576,"results":"561","hashOfConfig":"422"},{"size":467,"mtime":1613529049481,"results":"562","hashOfConfig":"422"},{"size":524,"mtime":1613533216041,"results":"563","hashOfConfig":"422"},{"size":2189,"mtime":1614737691156,"results":"564","hashOfConfig":"422"},{"size":3100,"mtime":1615440946575,"results":"565","hashOfConfig":"422"},{"size":3246,"mtime":1614736290425,"results":"566","hashOfConfig":"422"},{"size":4327,"mtime":1613197911963,"results":"567","hashOfConfig":"422"},{"size":4267,"mtime":1613190190222,"results":"568","hashOfConfig":"422"},{"size":218,"mtime":1613452038810,"results":"569","hashOfConfig":"422"},{"size":469,"mtime":1613103116605,"results":"570","hashOfConfig":"422"},{"size":2387,"mtime":1614735376749,"results":"571","hashOfConfig":"422"},{"size":2888,"mtime":1614231530966,"results":"572","hashOfConfig":"422"},{"size":3198,"mtime":1614213690940,"results":"573","hashOfConfig":"422"},{"size":1750,"mtime":1614213697882,"results":"574","hashOfConfig":"422"},{"size":3600,"mtime":1614213659885,"results":"575","hashOfConfig":"422"},{"size":4030,"mtime":1615440898172,"results":"576","hashOfConfig":"422"},{"size":12315,"mtime":1615442814347,"results":"577","hashOfConfig":"422"},{"size":738,"mtime":1613440232736,"results":"578","hashOfConfig":"422"},{"size":2238,"mtime":1615441775364,"results":"579","hashOfConfig":"422"},{"size":2563,"mtime":1615441910248,"results":"580","hashOfConfig":"422"},{"size":1136,"mtime":1613458706480,"results":"581","hashOfConfig":"422"},{"size":2622,"mtime":1613432065714,"results":"582","hashOfConfig":"422"},{"size":1186,"mtime":1615441904932,"results":"583","hashOfConfig":"422"},{"size":1209,"mtime":1614298198878,"results":"584","hashOfConfig":"422"},{"size":1452,"mtime":1613432348128,"results":"585","hashOfConfig":"422"},{"size":2350,"mtime":1613432509856,"results":"586","hashOfConfig":"422"},{"size":1933,"mtime":1615442063727,"results":"587","hashOfConfig":"422"},{"size":4225,"mtime":1615441978981,"results":"588","hashOfConfig":"422"},{"size":1824,"mtime":1615442457286,"results":"589","hashOfConfig":"422"},{"size":4613,"mtime":1615442546791,"results":"590","hashOfConfig":"422"},{"size":491,"mtime":1613434863728,"results":"591","hashOfConfig":"422"},{"size":1488,"mtime":1613535358987,"results":"592","hashOfConfig":"422"},{"size":2516,"mtime":1614052212013,"results":"593","hashOfConfig":"422"},{"size":2674,"mtime":1615440954880,"results":"594","hashOfConfig":"422"},{"size":1227,"mtime":1614061228356,"results":"595","hashOfConfig":"422"},{"size":1424,"mtime":1614061198770,"results":"596","hashOfConfig":"422"},{"size":1148,"mtime":1614061089933,"results":"597","hashOfConfig":"422"},{"size":1083,"mtime":1614061137002,"results":"598","hashOfConfig":"422"},{"size":2269,"mtime":1614060957774,"results":"599","hashOfConfig":"422"},{"size":1996,"mtime":1614060963448,"results":"600","hashOfConfig":"422"},{"size":1470,"mtime":1614061660453,"results":"601","hashOfConfig":"422"},{"size":1139,"mtime":1614061647233,"results":"602","hashOfConfig":"422"},{"size":1957,"mtime":1614674515965,"results":"603","hashOfConfig":"422"},{"size":1989,"mtime":1615418798450,"results":"604","hashOfConfig":"422"},{"size":1253,"mtime":1614061582049,"results":"605","hashOfConfig":"422"},{"size":1102,"mtime":1614061356497,"results":"606","hashOfConfig":"422"},{"size":1654,"mtime":1614061544062,"results":"607","hashOfConfig":"422"},{"size":1403,"mtime":1614061885753,"results":"608","hashOfConfig":"422"},{"size":1354,"mtime":1614061781017,"results":"609","hashOfConfig":"422"},{"size":1013,"mtime":1614061731785,"results":"610","hashOfConfig":"422"},{"size":1128,"mtime":1614061827125,"results":"611","hashOfConfig":"422"},{"size":1820,"mtime":1614830962716,"results":"612","hashOfConfig":"422"},{"size":2311,"mtime":1614061696594,"results":"613","hashOfConfig":"422"},{"size":1167,"mtime":1615440697186,"results":"614","hashOfConfig":"422"},{"size":1181,"mtime":1614060879411,"results":"615","hashOfConfig":"422"},{"size":1176,"mtime":1614060919450,"results":"616","hashOfConfig":"422"},{"size":3030,"mtime":1614060465715,"results":"617","hashOfConfig":"422"},{"size":3242,"mtime":1614060480019,"results":"618","hashOfConfig":"422"},{"size":807,"mtime":1613604724024,"results":"619","hashOfConfig":"422"},{"size":1824,"mtime":1613618713246,"results":"620","hashOfConfig":"422"},{"size":3617,"mtime":1615440942820,"results":"621","hashOfConfig":"422"},{"size":680,"mtime":1613980033745,"results":"622","hashOfConfig":"422"},{"size":1614,"mtime":1614234680020,"results":"623","hashOfConfig":"422"},{"size":1030,"mtime":1614673249906,"results":"624","hashOfConfig":"422"},{"size":3823,"mtime":1614669703381,"results":"625","hashOfConfig":"422"},{"size":883,"mtime":1614748531954,"results":"626","hashOfConfig":"422"},{"size":662,"mtime":1614747940433,"results":"627","hashOfConfig":"422"},{"size":1034,"mtime":1615440907748,"results":"628","hashOfConfig":"422"},{"size":733,"mtime":1615440530013,"results":"629","hashOfConfig":"422"},{"size":1348,"mtime":1615441180175,"results":"630","hashOfConfig":"422"},{"size":1797,"mtime":1614924086191,"results":"631","hashOfConfig":"422"},{"size":3311,"mtime":1615440935514,"results":"632","hashOfConfig":"422"},{"size":925,"mtime":1614921412982,"results":"633","hashOfConfig":"422"},{"size":1133,"mtime":1614921408263,"results":"634","hashOfConfig":"422"},{"size":794,"mtime":1614921540266,"results":"635","hashOfConfig":"422"},{"size":2989,"mtime":1615440951255,"results":"636","hashOfConfig":"422"},{"size":1924,"mtime":1614923886647,"results":"637","hashOfConfig":"422"},{"size":1280,"mtime":1615267944278,"results":"638","hashOfConfig":"422"},{"size":1062,"mtime":1615440897515,"results":"639","hashOfConfig":"422"},{"size":718,"mtime":1615419057618,"results":"640","hashOfConfig":"422"},{"size":1249,"mtime":1612394991365,"results":"641","hashOfConfig":"642"},{"size":362,"mtime":499162500000,"results":"643","hashOfConfig":"642"},{"size":517,"mtime":1610596234694,"results":"644","hashOfConfig":"642"},{"size":661,"mtime":1612412633952,"results":"645","hashOfConfig":"642"},{"size":5761,"mtime":1613957012681,"results":"646","hashOfConfig":"642"},{"size":9819,"mtime":1615441234159,"results":"647","hashOfConfig":"642"},{"size":344,"mtime":1608627476978,"results":"648","hashOfConfig":"642"},{"size":1980,"mtime":1614748014269,"results":"649","hashOfConfig":"642"},{"size":405,"mtime":1610502856130,"results":"650","hashOfConfig":"642"},{"size":476,"mtime":1614747823917,"results":"651","hashOfConfig":"642"},{"size":87,"mtime":1608627826907,"results":"652","hashOfConfig":"642"},{"size":1743,"mtime":1614296733102,"results":"653","hashOfConfig":"642"},{"size":1268,"mtime":1612412274048,"results":"654","hashOfConfig":"642"},{"size":5721,"mtime":1616123543201,"results":"655","hashOfConfig":"642"},{"size":4520,"mtime":1616290874645,"results":"656","hashOfConfig":"642"},{"size":10225,"mtime":1616286933136,"results":"657","hashOfConfig":"642"},{"size":661,"mtime":1612392447468,"results":"658","hashOfConfig":"642"},{"size":662,"mtime":1614747940433,"results":"659","hashOfConfig":"642"},{"size":2854,"mtime":1612400872747,"results":"660","hashOfConfig":"642"},{"size":1396,"mtime":1610779434340,"results":"661","hashOfConfig":"642"},{"size":672,"mtime":1612392440875,"results":"662","hashOfConfig":"642"},{"size":923,"mtime":1612398332279,"results":"663","hashOfConfig":"642"},{"size":684,"mtime":1611014353088,"results":"664","hashOfConfig":"642"},{"size":654,"mtime":1610861163069,"results":"665","hashOfConfig":"642"},{"size":1184,"mtime":1613613636377,"results":"666","hashOfConfig":"642"},{"size":2823,"mtime":1614212033740,"results":"667","hashOfConfig":"642"},{"size":1995,"mtime":1610967499605,"results":"668","hashOfConfig":"642"},{"size":1388,"mtime":1615441103250,"results":"669","hashOfConfig":"642"},{"size":1281,"mtime":1612412785866,"results":"670","hashOfConfig":"642"},{"size":3105,"mtime":1616133836010,"results":"671","hashOfConfig":"642"},{"size":5659,"mtime":1615441076199,"results":"672","hashOfConfig":"642"},{"size":178,"mtime":1612412855636,"results":"673","hashOfConfig":"642"},{"size":149,"mtime":1610502909105,"results":"674","hashOfConfig":"642"},{"size":160,"mtime":1610448527461,"results":"675","hashOfConfig":"642"},{"size":155,"mtime":1610502916347,"results":"676","hashOfConfig":"642"},{"size":2843,"mtime":1615178413940,"results":"677","hashOfConfig":"642"},{"size":912,"mtime":1616134000805,"results":"678","hashOfConfig":"642"},{"size":1931,"mtime":1614296793582,"results":"679","hashOfConfig":"642"},{"size":1030,"mtime":1614673249906,"results":"680","hashOfConfig":"642"},{"size":3823,"mtime":1614669703381,"results":"681","hashOfConfig":"642"},{"size":590,"mtime":1615177877131,"results":"682","hashOfConfig":"642"},{"size":3244,"mtime":1616203192357,"results":"683","hashOfConfig":"642"},{"size":2031,"mtime":1615179032650,"results":"684","hashOfConfig":"642"},{"size":6537,"mtime":1614296019654,"results":"685","hashOfConfig":"642"},{"size":1574,"mtime":1612412358680,"results":"686","hashOfConfig":"642"},{"size":2872,"mtime":1616137026330,"results":"687","hashOfConfig":"642"},{"size":377,"mtime":1611879742123,"results":"688","hashOfConfig":"642"},{"size":639,"mtime":1612224691804,"results":"689","hashOfConfig":"642"},{"size":2899,"mtime":1612412785866,"results":"690","hashOfConfig":"642"},{"size":1028,"mtime":1610585645670,"results":"691","hashOfConfig":"642"},{"size":3940,"mtime":1616133942004,"results":"692","hashOfConfig":"642"},{"size":212,"mtime":1613104480890,"results":"693","hashOfConfig":"642"},{"size":494,"mtime":1615178549154,"results":"694","hashOfConfig":"642"},{"size":2348,"mtime":1616133952931,"results":"695","hashOfConfig":"642"},{"size":11449,"mtime":1612831915819,"results":"696","hashOfConfig":"642"},{"size":605,"mtime":1612224691803,"results":"697","hashOfConfig":"642"},{"size":758,"mtime":1612421792565,"results":"698","hashOfConfig":"642"},{"size":13870,"mtime":1616301270773,"results":"699","hashOfConfig":"642"},{"size":806,"mtime":1612227396905,"results":"700","hashOfConfig":"642"},{"size":1649,"mtime":1614229556225,"results":"701","hashOfConfig":"642"},{"size":1517,"mtime":1616204385765,"results":"702","hashOfConfig":"642"},{"size":3366,"mtime":1615442441644,"results":"703","hashOfConfig":"642"},{"size":3902,"mtime":1614918011272,"results":"704","hashOfConfig":"642"},{"size":1362,"mtime":1615440923895,"results":"705","hashOfConfig":"642"},{"size":1798,"mtime":1616205700389,"results":"706","hashOfConfig":"642"},{"size":1649,"mtime":1616130651173,"results":"707","hashOfConfig":"642"},{"size":2112,"mtime":1615440927294,"results":"708","hashOfConfig":"642"},{"size":3408,"mtime":1616316347879,"results":"709","hashOfConfig":"642"},{"size":3467,"mtime":1612412353984,"results":"710","hashOfConfig":"642"},{"size":2864,"mtime":1616132785310,"results":"711","hashOfConfig":"642"},{"size":1561,"mtime":1612224691804,"results":"712","hashOfConfig":"642"},{"size":2229,"mtime":1612224749439,"results":"713","hashOfConfig":"642"},{"size":2016,"mtime":1612412346359,"results":"714","hashOfConfig":"642"},{"size":3156,"mtime":1612412342861,"results":"715","hashOfConfig":"642"},{"size":2888,"mtime":1614231530966,"results":"716","hashOfConfig":"642"},{"size":2918,"mtime":1614300900293,"results":"717","hashOfConfig":"642"},{"size":607,"mtime":1615437590691,"results":"718","hashOfConfig":"642"},{"size":2190,"mtime":1615440963007,"results":"719","hashOfConfig":"642"},{"size":12399,"mtime":1612412785866,"results":"720","hashOfConfig":"642"},{"size":3120,"mtime":1614295583727,"results":"721","hashOfConfig":"642"},{"size":1034,"mtime":1615440907748,"results":"722","hashOfConfig":"642"},{"size":807,"mtime":1613604724024,"results":"723","hashOfConfig":"642"},{"size":1933,"mtime":1615442063727,"results":"724","hashOfConfig":"642"},{"size":1488,"mtime":1613535358987,"results":"725","hashOfConfig":"642"},{"size":1136,"mtime":1613458706480,"results":"726","hashOfConfig":"642"},{"size":1824,"mtime":1615442457286,"results":"727","hashOfConfig":"642"},{"size":610,"mtime":1616131035499,"results":"728","hashOfConfig":"642"},{"size":2563,"mtime":1616123959730,"results":"729","hashOfConfig":"642"},{"size":738,"mtime":1613440232736,"results":"730","hashOfConfig":"642"},{"size":1596,"mtime":1612224691804,"results":"731","hashOfConfig":"642"},{"size":2328,"mtime":1612412785866,"results":"732","hashOfConfig":"642"},{"size":2741,"mtime":1615441136495,"results":"733","hashOfConfig":"642"},{"size":455,"mtime":1613457942264,"results":"734","hashOfConfig":"642"},{"size":1093,"mtime":1616129130709,"results":"735","hashOfConfig":"642"},{"size":939,"mtime":1615419300385,"results":"736","hashOfConfig":"642"},{"size":11524,"mtime":1615441184907,"results":"737","hashOfConfig":"642"},{"size":918,"mtime":1616130377189,"results":"738","hashOfConfig":"642"},{"size":3247,"mtime":1616203578112,"results":"739","hashOfConfig":"642"},{"size":1614,"mtime":1614234680020,"results":"740","hashOfConfig":"642"},{"size":3660,"mtime":1616109520361,"results":"741","hashOfConfig":"642"},{"size":524,"mtime":1613533216041,"results":"742","hashOfConfig":"642"},{"size":1762,"mtime":1616205935742,"results":"743","hashOfConfig":"642"},{"size":500,"mtime":1613532785576,"results":"744","hashOfConfig":"642"},{"size":1042,"mtime":1616202861394,"results":"745","hashOfConfig":"642"},{"size":1747,"mtime":1616131079510,"results":"746","hashOfConfig":"642"},{"size":613,"mtime":1612224691803,"results":"747","hashOfConfig":"642"},{"size":2189,"mtime":1614920129455,"results":"748","hashOfConfig":"642"},{"size":1399,"mtime":1613520581811,"results":"749","hashOfConfig":"642"},{"size":1491,"mtime":1613102891710,"results":"750","hashOfConfig":"642"},{"size":794,"mtime":1614921540266,"results":"751","hashOfConfig":"642"},{"size":5594,"mtime":1616132335772,"results":"752","hashOfConfig":"642"},{"size":581,"mtime":1613520912562,"results":"753","hashOfConfig":"642"},{"size":1202,"mtime":1615440930911,"results":"754","hashOfConfig":"642"},{"size":975,"mtime":1616131954555,"results":"755","hashOfConfig":"642"},{"size":1727,"mtime":1616132710083,"results":"756","hashOfConfig":"642"},{"size":1609,"mtime":1616205659977,"results":"757","hashOfConfig":"642"},{"size":925,"mtime":1614921412982,"results":"758","hashOfConfig":"642"},{"size":3685,"mtime":1616316205020,"results":"759","hashOfConfig":"642"},{"size":1181,"mtime":1616132138630,"results":"760","hashOfConfig":"642"},{"size":2925,"mtime":1616203440856,"results":"761","hashOfConfig":"642"},{"size":1154,"mtime":1616133080771,"results":"762","hashOfConfig":"642"},{"size":1217,"mtime":1616203260786,"results":"763","hashOfConfig":"642"},{"size":615,"mtime":1616316626453,"results":"764","hashOfConfig":"642"},{"size":2723,"mtime":1616203366305,"results":"765","hashOfConfig":"642"},{"size":3311,"mtime":1615440935514,"results":"766","hashOfConfig":"642"},{"size":45608,"mtime":1616305363643,"results":"767","hashOfConfig":"642"},{"size":2674,"mtime":1615440954880,"results":"768","hashOfConfig":"642"},{"size":2217,"mtime":1615418583202,"results":"769","hashOfConfig":"642"},{"size":2178,"mtime":1615418485980,"results":"770","hashOfConfig":"642"},{"size":2038,"mtime":1616131232577,"results":"771","hashOfConfig":"642"},{"size":2308,"mtime":1616131218499,"results":"772","hashOfConfig":"642"},{"size":815,"mtime":1616206513117,"results":"773","hashOfConfig":"642"},{"size":1224,"mtime":1616131312534,"results":"774","hashOfConfig":"642"},{"size":1257,"mtime":1616131066484,"results":"775","hashOfConfig":"642"},{"size":1179,"mtime":1616131370483,"results":"776","hashOfConfig":"642"},{"size":2784,"mtime":1616205996272,"results":"777","hashOfConfig":"642"},{"size":1075,"mtime":1616205464603,"results":"778","hashOfConfig":"642"},{"size":1411,"mtime":1616205322189,"results":"779","hashOfConfig":"642"},{"size":2022,"mtime":1616205657166,"results":"780","hashOfConfig":"642"},{"size":1138,"mtime":1616205102583,"results":"781","hashOfConfig":"642"},{"size":1186,"mtime":1615441904932,"results":"782","hashOfConfig":"642"},{"size":3744,"mtime":1616124568087,"results":"783","hashOfConfig":"642"},{"size":2189,"mtime":1614737691156,"results":"784","hashOfConfig":"642"},{"size":3015,"mtime":1616203893075,"results":"785","hashOfConfig":"642"},{"size":2702,"mtime":1616203762673,"results":"786","hashOfConfig":"642"},{"size":2079,"mtime":1613535338537,"results":"787","hashOfConfig":"642"},{"size":218,"mtime":1613452038810,"results":"788","hashOfConfig":"642"},{"size":1220,"mtime":1616203247297,"results":"789","hashOfConfig":"642"},{"size":1100,"mtime":1616203240833,"results":"790","hashOfConfig":"642"},{"size":1043,"mtime":1616203059081,"results":"791","hashOfConfig":"642"},{"size":718,"mtime":1615419057618,"results":"792","hashOfConfig":"642"},{"size":2679,"mtime":1616203589217,"results":"793","hashOfConfig":"642"},{"size":3402,"mtime":1615419147787,"results":"794","hashOfConfig":"642"},{"size":883,"mtime":1616132910651,"results":"795","hashOfConfig":"642"},{"size":1593,"mtime":1616133052558,"results":"796","hashOfConfig":"642"},{"size":3198,"mtime":1614213690940,"results":"797","hashOfConfig":"642"},{"size":1146,"mtime":1616132205283,"results":"798","hashOfConfig":"642"},{"size":2774,"mtime":1616205866635,"results":"799","hashOfConfig":"642"},{"size":469,"mtime":1613103116605,"results":"800","hashOfConfig":"642"},{"size":1120,"mtime":1616205813387,"results":"801","hashOfConfig":"642"},{"size":2387,"mtime":1614735376749,"results":"802","hashOfConfig":"642"},{"size":902,"mtime":1616298410935,"results":"803","hashOfConfig":"642"},{"size":3807,"mtime":1616293758058,"results":"804","hashOfConfig":"642"},{"size":5267,"mtime":1616287890263,"results":"805","hashOfConfig":"642"},{"size":1348,"mtime":1615441180175,"results":"806","hashOfConfig":"642"},{"size":4025,"mtime":1616130586371,"results":"807","hashOfConfig":"642"},{"size":12315,"mtime":1615442814347,"results":"808","hashOfConfig":"642"},{"size":4615,"mtime":1616124049316,"results":"809","hashOfConfig":"642"},{"size":1750,"mtime":1614213697882,"results":"810","hashOfConfig":"642"},{"size":4355,"mtime":1615440915815,"results":"811","hashOfConfig":"642"},{"size":1062,"mtime":1615440897515,"results":"812","hashOfConfig":"642"},{"size":3600,"mtime":1614213659885,"results":"813","hashOfConfig":"642"},{"size":2350,"mtime":1613432509856,"results":"814","hashOfConfig":"642"},{"size":956,"mtime":1616205473597,"results":"815","hashOfConfig":"642"},{"size":1415,"mtime":1616131330680,"results":"816","hashOfConfig":"642"},{"size":1824,"mtime":1613618713246,"results":"817","hashOfConfig":"642"},{"size":3991,"mtime":1616298168578,"results":"818","hashOfConfig":"642"},{"size":3203,"mtime":1612412785866,"results":"819","hashOfConfig":"642"},{"size":2227,"mtime":1615418562154,"results":"820","hashOfConfig":"642"},{"size":9692,"mtime":1616292033255,"results":"821","hashOfConfig":"642"},{"size":1172,"mtime":1616131333639,"results":"822","hashOfConfig":"642"},{"size":4225,"mtime":1615441978981,"results":"823","hashOfConfig":"642"},{"size":2210,"mtime":1615440967647,"results":"824","hashOfConfig":"642"},{"size":615,"mtime":1612224691803,"results":"825","hashOfConfig":"642"},{"size":5205,"mtime":1614295392695,"results":"826","hashOfConfig":"642"},{"size":595,"mtime":1612224691804,"results":"827","hashOfConfig":"642"},{"size":3664,"mtime":1616299466677,"results":"828","hashOfConfig":"642"},{"size":1150,"mtime":1614747167447,"results":"829","hashOfConfig":"642"},{"size":1025,"mtime":1616205389860,"results":"830","hashOfConfig":"642"},{"size":1155,"mtime":1616204394724,"results":"831","hashOfConfig":"642"},{"size":467,"mtime":1613529049481,"results":"832","hashOfConfig":"642"},{"size":1785,"mtime":1614837052828,"results":"833","hashOfConfig":"642"},{"size":680,"mtime":1613980033745,"results":"834","hashOfConfig":"642"},{"size":602,"mtime":1612224691803,"results":"835","hashOfConfig":"642"},{"size":3569,"mtime":1612412785866,"results":"836","hashOfConfig":"642"},{"size":3220,"mtime":1612226943564,"results":"837","hashOfConfig":"642"},{"size":2182,"mtime":1616123513185,"results":"838","hashOfConfig":"642"},{"size":2180,"mtime":1616123553957,"results":"839","hashOfConfig":"642"},{"size":1832,"mtime":1616290908417,"results":"840","hashOfConfig":"642"},{"size":4624,"mtime":1616305360690,"results":"841","hashOfConfig":"642"},{"size":1369,"mtime":1616316962458,"results":"842","hashOfConfig":"642"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845","usedDeprecatedRules":"846"},"i3jrvt",{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"846"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"868","usedDeprecatedRules":"846"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"871","usedDeprecatedRules":"846"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"876","usedDeprecatedRules":"846"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"881","usedDeprecatedRules":"846"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884","usedDeprecatedRules":"846"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"887"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"891"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894","usedDeprecatedRules":"846"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"846"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"846"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"846"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"846"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"911","usedDeprecatedRules":"846"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"914","usedDeprecatedRules":"846"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"846"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"928","usedDeprecatedRules":"846"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"931","usedDeprecatedRules":"846"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"934","usedDeprecatedRules":"846"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"939","messages":"940","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"846"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"944","usedDeprecatedRules":"846"},{"filePath":"945","messages":"946","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"947","usedDeprecatedRules":"846"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"950","usedDeprecatedRules":"846"},{"filePath":"951","messages":"952","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"953","usedDeprecatedRules":"846"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"956","usedDeprecatedRules":"846"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"959","usedDeprecatedRules":"846"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"962","usedDeprecatedRules":"846"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"965","usedDeprecatedRules":"846"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"846"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"971","messages":"972","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"973","usedDeprecatedRules":"846"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978","usedDeprecatedRules":"846"},{"filePath":"979","messages":"980","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"981","usedDeprecatedRules":"846"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"990","usedDeprecatedRules":"846"},{"filePath":"991","messages":"992","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"993","messages":"994","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"995","usedDeprecatedRules":"846"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1000","usedDeprecatedRules":"846"},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1007","usedDeprecatedRules":"846"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1010","usedDeprecatedRules":"846"},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1015","usedDeprecatedRules":"846"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1018","usedDeprecatedRules":"846"},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"887"},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"887"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"887"},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1029","usedDeprecatedRules":"887"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"887"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1034","usedDeprecatedRules":"887"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1037","usedDeprecatedRules":"887"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1040","usedDeprecatedRules":"846"},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1045","usedDeprecatedRules":"846"},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1048","usedDeprecatedRules":"846"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1055","usedDeprecatedRules":"846"},{"filePath":"1056","messages":"1057","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1058","usedDeprecatedRules":"846"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1061","usedDeprecatedRules":"846"},{"filePath":"1062","messages":"1063","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1064","usedDeprecatedRules":"846"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1067","usedDeprecatedRules":"846"},{"filePath":"1068","messages":"1069","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1070","usedDeprecatedRules":"846"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1073","usedDeprecatedRules":"846"},{"filePath":"1074","messages":"1075","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1076","usedDeprecatedRules":"846"},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1079","usedDeprecatedRules":"846"},{"filePath":"1080","messages":"1081","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1084","usedDeprecatedRules":"846"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1089","usedDeprecatedRules":"846"},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1092","usedDeprecatedRules":"1093"},{"filePath":"1094","messages":"1095","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1096","usedDeprecatedRules":"846"},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1099","usedDeprecatedRules":"846"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1104","usedDeprecatedRules":"846"},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1107","messages":"1108","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1111","usedDeprecatedRules":"846"},{"filePath":"1112","messages":"1113","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1114","messages":"1115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1116","usedDeprecatedRules":"1117"},{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1120","usedDeprecatedRules":"1117"},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1127","usedDeprecatedRules":"846"},{"filePath":"1128","messages":"1129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1130","usedDeprecatedRules":"846"},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1133","usedDeprecatedRules":"846"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1136","usedDeprecatedRules":"846"},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1139","usedDeprecatedRules":"846"},{"filePath":"1140","messages":"1141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1142","usedDeprecatedRules":"846"},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1145"},{"filePath":"1146","messages":"1147","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1148","usedDeprecatedRules":"1149"},{"filePath":"1150","messages":"1151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1152","usedDeprecatedRules":"1149"},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1157","usedDeprecatedRules":"846"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1160","messages":"1161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1162","usedDeprecatedRules":"846"},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1167","usedDeprecatedRules":"846"},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1170","usedDeprecatedRules":"846"},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1173","usedDeprecatedRules":"846"},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1176","usedDeprecatedRules":"846"},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1179","usedDeprecatedRules":"846"},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1182","usedDeprecatedRules":"846"},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1185","usedDeprecatedRules":"846"},{"filePath":"1186","messages":"1187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1188","usedDeprecatedRules":"846"},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1193","usedDeprecatedRules":"846"},{"filePath":"1194","messages":"1195","errorCount":0,"warningCount":61,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1196","usedDeprecatedRules":"846"},{"filePath":"1197","messages":"1198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1199","usedDeprecatedRules":"846"},{"filePath":"1200","messages":"1201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1202","usedDeprecatedRules":"846"},{"filePath":"1203","messages":"1204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1205","usedDeprecatedRules":"846"},{"filePath":"1206","messages":"1207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1208","usedDeprecatedRules":"846"},{"filePath":"1209","messages":"1210","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1211","usedDeprecatedRules":"846"},{"filePath":"1212","messages":"1213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1214","usedDeprecatedRules":"846"},{"filePath":"1215","messages":"1216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1217","messages":"1218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1219","usedDeprecatedRules":"846"},{"filePath":"1220","messages":"1221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1222","usedDeprecatedRules":"846"},{"filePath":"1223","messages":"1224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1225","usedDeprecatedRules":"846"},{"filePath":"1226","messages":"1227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1228","usedDeprecatedRules":"846"},{"filePath":"1229","messages":"1230","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1231","usedDeprecatedRules":"846"},{"filePath":"1232","messages":"1233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1234","usedDeprecatedRules":"846"},{"filePath":"1235","messages":"1236","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1237","usedDeprecatedRules":"846"},{"filePath":"1238","messages":"1239","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1240","usedDeprecatedRules":"846"},{"filePath":"1241","messages":"1242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1243","messages":"1244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1245","messages":"1246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1247","usedDeprecatedRules":"846"},{"filePath":"1248","messages":"1249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1250","usedDeprecatedRules":"846"},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1253","usedDeprecatedRules":"846"},{"filePath":"1254","messages":"1255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1256","usedDeprecatedRules":"846"},{"filePath":"1257","messages":"1258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1259","usedDeprecatedRules":"846"},{"filePath":"1260","messages":"1261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1262","usedDeprecatedRules":"846"},{"filePath":"1263","messages":"1264","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1265","usedDeprecatedRules":"846"},{"filePath":"1266","messages":"1267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1268","messages":"1269","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1270","usedDeprecatedRules":"846"},{"filePath":"1271","messages":"1272","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1273","usedDeprecatedRules":"846"},{"filePath":"1274","messages":"1275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1276","usedDeprecatedRules":"846"},{"filePath":"1277","messages":"1278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1283","messages":"1284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1285","messages":"1286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1287","usedDeprecatedRules":"846"},{"filePath":"1288","messages":"1289","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1290","usedDeprecatedRules":"846"},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293","usedDeprecatedRules":"846"},{"filePath":"1294","messages":"1295","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1296","usedDeprecatedRules":"846"},{"filePath":"1297","messages":"1298","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1299","usedDeprecatedRules":"846"},{"filePath":"1300","messages":"1301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1302","messages":"1303","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1304","usedDeprecatedRules":"846"},{"filePath":"1305","messages":"1306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1307","usedDeprecatedRules":"846"},{"filePath":"1308","messages":"1309","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1310","usedDeprecatedRules":"846"},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1315","messages":"1316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1317","messages":"1318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1319","usedDeprecatedRules":"846"},{"filePath":"1320","messages":"1321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1322","messages":"1323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1324","messages":"1325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1326","messages":"1327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1328","messages":"1329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1330","messages":"1331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1332","messages":"1333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1334","messages":"1335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1336","messages":"1337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1338","messages":"1339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1340","messages":"1341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"846"},{"filePath":"1343","messages":"1344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1345","messages":"1346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1347","messages":"1348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1349","messages":"1350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1351","usedDeprecatedRules":"846"},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1354","messages":"1355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1356","messages":"1357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1358","messages":"1359","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1360","usedDeprecatedRules":"846"},{"filePath":"1361","messages":"1362","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1363","usedDeprecatedRules":"846"},{"filePath":"1364","messages":"1365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1366","usedDeprecatedRules":"846"},{"filePath":"1367","messages":"1368","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1369","usedDeprecatedRules":"846"},{"filePath":"1370","messages":"1371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1372","usedDeprecatedRules":"846"},{"filePath":"1373","messages":"1374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1375","messages":"1376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"846"},{"filePath":"1378","messages":"1379","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1380","usedDeprecatedRules":"846"},{"filePath":"1381","messages":"1382","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1383","usedDeprecatedRules":"846"},{"filePath":"1384","messages":"1385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1386","messages":"1387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1388","usedDeprecatedRules":"846"},{"filePath":"1389","messages":"1390","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1391","usedDeprecatedRules":"846"},{"filePath":"1392","messages":"1393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1394","messages":"1395","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1396","usedDeprecatedRules":"846"},{"filePath":"1397","messages":"1398","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1399","usedDeprecatedRules":"846"},{"filePath":"1400","messages":"1401","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1402","usedDeprecatedRules":"846"},{"filePath":"1403","messages":"1404","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1405","usedDeprecatedRules":"846"},{"filePath":"1406","messages":"1407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1408","messages":"1409","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1410","usedDeprecatedRules":"846"},{"filePath":"1411","messages":"1412","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1413","usedDeprecatedRules":"846"},{"filePath":"1414","messages":"1415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1416","messages":"1417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1418","usedDeprecatedRules":"846"},{"filePath":"1419","messages":"1420","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1421","usedDeprecatedRules":"846"},{"filePath":"1422","messages":"1423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"846"},{"filePath":"1424","messages":"1425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845","usedDeprecatedRules":"1426"},"1q4d8mh",{"filePath":"1427","messages":"1428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1429","messages":"1430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1431","messages":"1432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"876","usedDeprecatedRules":"1426"},{"filePath":"1433","messages":"1434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"1426"},{"filePath":"1435","messages":"1436","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"1426"},{"filePath":"1437","messages":"1438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1439","messages":"1440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1441","messages":"1442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1443","messages":"1444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1445","messages":"1446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1447","messages":"1448","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"1426"},{"filePath":"1449","messages":"1450","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"947","usedDeprecatedRules":"1426"},{"filePath":"1451","messages":"1452","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1453","usedDeprecatedRules":"1426"},{"filePath":"1454","messages":"1455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1456","messages":"1457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1458","messages":"1459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884","usedDeprecatedRules":"1426"},{"filePath":"1460","messages":"1461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1388","usedDeprecatedRules":"1426"},{"filePath":"1462","messages":"1463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1464","messages":"1465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1466","messages":"1467","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1193","usedDeprecatedRules":"1426"},{"filePath":"1468","messages":"1469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1470","messages":"1471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1010","usedDeprecatedRules":"1426"},{"filePath":"1472","messages":"1473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"928","usedDeprecatedRules":"1426"},{"filePath":"1474","messages":"1475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1476","messages":"1477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1478","messages":"1479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1480","messages":"1481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1482","messages":"1483","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1484","usedDeprecatedRules":"1426"},{"filePath":"1485","messages":"1486","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1487","usedDeprecatedRules":"1426"},{"filePath":"1488","messages":"1489","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1000","usedDeprecatedRules":"1426"},{"filePath":"1490","messages":"1491","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"950","usedDeprecatedRules":"1426"},{"filePath":"1492","messages":"1493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1494","messages":"1495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1496","messages":"1497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1498","messages":"1499","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"911","usedDeprecatedRules":"1426"},{"filePath":"1500","messages":"1501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1502","messages":"1503","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"934","usedDeprecatedRules":"1426"},{"filePath":"1504","messages":"1505","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1380","usedDeprecatedRules":"1426"},{"filePath":"1506","messages":"1507","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1383","usedDeprecatedRules":"1426"},{"filePath":"1508","messages":"1509","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"1426"},{"filePath":"1510","messages":"1511","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1512","usedDeprecatedRules":"1426"},{"filePath":"1513","messages":"1514","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"931","usedDeprecatedRules":"1426"},{"filePath":"1515","messages":"1516","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1048","usedDeprecatedRules":"1426"},{"filePath":"1517","messages":"1518","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"956","usedDeprecatedRules":"1426"},{"filePath":"1519","messages":"1520","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1521","usedDeprecatedRules":"1426"},{"filePath":"1522","messages":"1523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1524","messages":"1525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1526","messages":"1527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978","usedDeprecatedRules":"1426"},{"filePath":"1528","messages":"1529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1530","messages":"1531","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1532","usedDeprecatedRules":"1426"},{"filePath":"1533","messages":"1534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1535","messages":"1536","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1045","usedDeprecatedRules":"1426"},{"filePath":"1537","messages":"1538","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1539","usedDeprecatedRules":"1426"},{"filePath":"1540","messages":"1541","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"1426"},{"filePath":"1542","messages":"1543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1544","messages":"1545","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"981","usedDeprecatedRules":"1426"},{"filePath":"1546","messages":"1547","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1548","usedDeprecatedRules":"1426"},{"filePath":"1549","messages":"1550","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1136","usedDeprecatedRules":"1426"},{"filePath":"1551","messages":"1552","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1058","usedDeprecatedRules":"1426"},{"filePath":"1553","messages":"1554","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1555","usedDeprecatedRules":"1426"},{"filePath":"1556","messages":"1557","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1182","usedDeprecatedRules":"1426"},{"filePath":"1558","messages":"1559","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1061","usedDeprecatedRules":"1426"},{"filePath":"1560","messages":"1561","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1070","usedDeprecatedRules":"1426"},{"filePath":"1562","messages":"1563","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1564","usedDeprecatedRules":"1426"},{"filePath":"1565","messages":"1566","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1567","usedDeprecatedRules":"1426"},{"filePath":"1568","messages":"1569","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1067","usedDeprecatedRules":"1426"},{"filePath":"1570","messages":"1571","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1572","messages":"1573","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"965","usedDeprecatedRules":"1426"},{"filePath":"1574","messages":"1575","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1576","usedDeprecatedRules":"1426"},{"filePath":"1577","messages":"1578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1579","messages":"1580","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1581","usedDeprecatedRules":"1426"},{"filePath":"1582","messages":"1583","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"962","usedDeprecatedRules":"1426"},{"filePath":"1584","messages":"1585","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"959","usedDeprecatedRules":"1426"},{"filePath":"1586","messages":"1587","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1250","usedDeprecatedRules":"1426"},{"filePath":"1588","messages":"1589","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"1426"},{"filePath":"1590","messages":"1591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1592","messages":"1593","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"995","usedDeprecatedRules":"1426"},{"filePath":"1594","messages":"1595","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1596","usedDeprecatedRules":"1426"},{"filePath":"1597","messages":"1598","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1142","usedDeprecatedRules":"1426"},{"filePath":"1599","messages":"1600","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1391","usedDeprecatedRules":"1426"},{"filePath":"1601","messages":"1602","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1366","usedDeprecatedRules":"1426"},{"filePath":"1603","messages":"1604","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1290","usedDeprecatedRules":"1426"},{"filePath":"1605","messages":"1606","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1304","usedDeprecatedRules":"1426"},{"filePath":"1607","messages":"1608","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1276","usedDeprecatedRules":"1426"},{"filePath":"1609","messages":"1610","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1296","usedDeprecatedRules":"1426"},{"filePath":"1611","messages":"1612","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1613","usedDeprecatedRules":"1426"},{"filePath":"1614","messages":"1615","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1273","usedDeprecatedRules":"1426"},{"filePath":"1616","messages":"1617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1618","messages":"1619","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1620","usedDeprecatedRules":"1426"},{"filePath":"1621","messages":"1622","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1623","usedDeprecatedRules":"1426"},{"filePath":"1624","messages":"1625","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1007","usedDeprecatedRules":"1426"},{"filePath":"1626","messages":"1627","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1173","usedDeprecatedRules":"1426"},{"filePath":"1628","messages":"1629","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1630","usedDeprecatedRules":"1426"},{"filePath":"1631","messages":"1632","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1179","usedDeprecatedRules":"1426"},{"filePath":"1633","messages":"1634","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894","usedDeprecatedRules":"1426"},{"filePath":"1635","messages":"1636","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1637","usedDeprecatedRules":"1426"},{"filePath":"1638","messages":"1639","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1640","usedDeprecatedRules":"1426"},{"filePath":"1641","messages":"1642","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"1426"},{"filePath":"1643","messages":"1644","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1645","usedDeprecatedRules":"1426"},{"filePath":"1646","messages":"1647","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1225","usedDeprecatedRules":"1426"},{"filePath":"1648","messages":"1649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1650","messages":"1651","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1219","usedDeprecatedRules":"1426"},{"filePath":"1652","messages":"1653","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1654","usedDeprecatedRules":"1426"},{"filePath":"1655","messages":"1656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1657","messages":"1658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1659","messages":"1660","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1096","usedDeprecatedRules":"1426"},{"filePath":"1661","messages":"1662","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1208","usedDeprecatedRules":"1426"},{"filePath":"1663","messages":"1664","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1099","usedDeprecatedRules":"1426"},{"filePath":"1665","messages":"1666","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1410","usedDeprecatedRules":"1426"},{"filePath":"1667","messages":"1668","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1669","usedDeprecatedRules":"1426"},{"filePath":"1670","messages":"1671","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1205","usedDeprecatedRules":"1426"},{"filePath":"1672","messages":"1673","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1211","usedDeprecatedRules":"1426"},{"filePath":"1674","messages":"1675","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1676","usedDeprecatedRules":"1426"},{"filePath":"1677","messages":"1678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1679","messages":"1680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1681","messages":"1682","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1405","usedDeprecatedRules":"1426"},{"filePath":"1683","messages":"1684","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1685","messages":"1686","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1687","usedDeprecatedRules":"1426"},{"filePath":"1688","messages":"1689","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1690","usedDeprecatedRules":"1426"},{"filePath":"1691","messages":"1692","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1693","usedDeprecatedRules":"1426"},{"filePath":"1694","messages":"1695","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1696","usedDeprecatedRules":"1426"},{"filePath":"1697","messages":"1698","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1699","messages":"1700","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1701","usedDeprecatedRules":"1426"},{"filePath":"1702","messages":"1703","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1402","usedDeprecatedRules":"1426"},{"filePath":"1704","messages":"1705","errorCount":0,"warningCount":61,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1196","usedDeprecatedRules":"1426"},{"filePath":"1706","messages":"1707","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1310","usedDeprecatedRules":"1426"},{"filePath":"1708","messages":"1709","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1185","usedDeprecatedRules":"1426"},{"filePath":"1710","messages":"1711","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1170","usedDeprecatedRules":"1426"},{"filePath":"1712","messages":"1713","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1714","usedDeprecatedRules":"1426"},{"filePath":"1715","messages":"1716","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1717","usedDeprecatedRules":"1426"},{"filePath":"1718","messages":"1719","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1720","usedDeprecatedRules":"1426"},{"filePath":"1721","messages":"1722","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1723","usedDeprecatedRules":"1426"},{"filePath":"1724","messages":"1725","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1726","usedDeprecatedRules":"1426"},{"filePath":"1727","messages":"1728","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1729","usedDeprecatedRules":"1426"},{"filePath":"1730","messages":"1731","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1732","usedDeprecatedRules":"1426"},{"filePath":"1733","messages":"1734","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1735","usedDeprecatedRules":"1426"},{"filePath":"1736","messages":"1737","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1738","usedDeprecatedRules":"1426"},{"filePath":"1739","messages":"1740","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1741","usedDeprecatedRules":"1426"},{"filePath":"1742","messages":"1743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1744","messages":"1745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1746","messages":"1747","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1748","usedDeprecatedRules":"1426"},{"filePath":"1749","messages":"1750","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1228","usedDeprecatedRules":"1426"},{"filePath":"1751","messages":"1752","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1753","usedDeprecatedRules":"1426"},{"filePath":"1754","messages":"1755","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1756","usedDeprecatedRules":"1426"},{"filePath":"1757","messages":"1758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1759","messages":"1760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1761","messages":"1762","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1763","usedDeprecatedRules":"1426"},{"filePath":"1764","messages":"1765","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1766","usedDeprecatedRules":"1426"},{"filePath":"1767","messages":"1768","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1769","usedDeprecatedRules":"1426"},{"filePath":"1770","messages":"1771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1772","messages":"1773","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1774","usedDeprecatedRules":"1426"},{"filePath":"1775","messages":"1776","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1167","usedDeprecatedRules":"1426"},{"filePath":"1777","messages":"1778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1779","messages":"1780","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1781","usedDeprecatedRules":"1426"},{"filePath":"1782","messages":"1783","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1253","usedDeprecatedRules":"1426"},{"filePath":"1784","messages":"1785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1786","messages":"1787","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1788","usedDeprecatedRules":"1426"},{"filePath":"1789","messages":"1790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1791","messages":"1792","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1793","usedDeprecatedRules":"1426"},{"filePath":"1794","messages":"1795","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1247","usedDeprecatedRules":"1426"},{"filePath":"1796","messages":"1797","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1798","usedDeprecatedRules":"1426"},{"filePath":"1799","messages":"1800","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1801","usedDeprecatedRules":"1426"},{"filePath":"1802","messages":"1803","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1804","usedDeprecatedRules":"1426"},{"filePath":"1805","messages":"1806","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1396","usedDeprecatedRules":"1426"},{"filePath":"1807","messages":"1808","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1809","usedDeprecatedRules":"1426"},{"filePath":"1810","messages":"1811","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1265","usedDeprecatedRules":"1426"},{"filePath":"1812","messages":"1813","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1814","usedDeprecatedRules":"1426"},{"filePath":"1815","messages":"1816","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1256","usedDeprecatedRules":"1426"},{"filePath":"1817","messages":"1818","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"990","usedDeprecatedRules":"1426"},{"filePath":"1819","messages":"1820","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1421","usedDeprecatedRules":"1426"},{"filePath":"1821","messages":"1822","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1259","usedDeprecatedRules":"1426"},{"filePath":"1823","messages":"1824","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1287","usedDeprecatedRules":"1426"},{"filePath":"1825","messages":"1826","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1827","usedDeprecatedRules":"1426"},{"filePath":"1828","messages":"1829","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1830","usedDeprecatedRules":"1426"},{"filePath":"1831","messages":"1832","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1369","usedDeprecatedRules":"1426"},{"filePath":"1833","messages":"1834","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1835","usedDeprecatedRules":"1426"},{"filePath":"1836","messages":"1837","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1838","usedDeprecatedRules":"1426"},{"filePath":"1839","messages":"1840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1841","messages":"1842","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1843","usedDeprecatedRules":"1426"},{"filePath":"1844","messages":"1845","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1846","usedDeprecatedRules":"1426"},{"filePath":"1847","messages":"1848","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293","usedDeprecatedRules":"1426"},{"filePath":"1849","messages":"1850","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1162","usedDeprecatedRules":"1426"},{"filePath":"1851","messages":"1852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1853","messages":"1854","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1139","usedDeprecatedRules":"1426"},{"filePath":"1855","messages":"1856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1857","messages":"1858","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1859","usedDeprecatedRules":"1426"},{"filePath":"1860","messages":"1861","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1127","usedDeprecatedRules":"1426"},{"filePath":"1862","messages":"1863","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1864","usedDeprecatedRules":"1426"},{"filePath":"1865","messages":"1866","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1867","usedDeprecatedRules":"1426"},{"filePath":"1868","messages":"1869","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1222","usedDeprecatedRules":"1426"},{"filePath":"1870","messages":"1871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1872","messages":"1873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1874","messages":"1875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1426"},{"filePath":"1876","messages":"1877","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1878","usedDeprecatedRules":"1426"},{"filePath":"1879","messages":"1880","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1133","usedDeprecatedRules":"1426"},{"filePath":"1881","messages":"1882","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1883","usedDeprecatedRules":"1426"},{"filePath":"1884","messages":"1885","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1886","usedDeprecatedRules":"1426"},{"filePath":"1887","messages":"1888","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1889","usedDeprecatedRules":"1426"},{"filePath":"1890","messages":"1891","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1892","usedDeprecatedRules":"1426"},{"filePath":"1893","messages":"1894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\index.js",["1895"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { LoadScript } from '@react-google-maps/api';\nimport {UXContextProvider} from \"./Context/UX\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './store/'; \nimport {LoadPrototype} from \"./actions/PrototypeLoader\";\nimport {JWT} from \"./actions/authUser\";\n\n/*\ngit add .\ngit commit -am \"FirstPushTest\"\ngit push heroku master\n\n*/\nrequire('dotenv').config();\nconst PrepApp = new LoadPrototype();\nconst JWTCHECK = JWT();\nPrepApp.Fetch();\n//require('dotenv').config()\n\nlet APIKEY = process.env.REACT_APP_GOOGLEAPI;\n\nReactDOM.render(\n    <Provider store={ store }>\n      <LoadScript  googleMapsApiKey={APIKEY}  libraries={[\"visualization\"]}>\n        <UXContextProvider>\n          <React.StrictMode>\n            <App />\n          </React.StrictMode>\n        </UXContextProvider>\n      </LoadScript>\n    </Provider>,\n  document.getElementById('root')\n); \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["1896","1897"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\App.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\reportWebVitals.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\UX.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\History.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\PrototypeLoader.js",["1898"],"\r\n// Private Functions\r\nimport store from \"../store/index\"\r\nimport axios from 'axios';\r\nimport {useAPILOCATION} from \"./authUser\"\r\n\r\n\r\n/*\r\nexport function LoginSequence(arr){\r\n    let State = arr.map((Value,i)=>{\r\n       store.dispatch({ type:Value.Type, payload:Value.Value });\r\n       return true;\r\n    })\r\n    return State;\r\n} \r\n */\r\n\r\nexport function LoadPrototype(){\r\n\r\n    console.log(\"LOAD ME\")\r\n    this.API=useAPILOCATION()+'graphql'\r\n\r\n    this.Limit=100;\r\n\r\n   \r\n\r\n    this.RegionRequest= `\r\n         {name id combined long lat  \r\n          count{ WorkOrders JobTypes TradeTypes Customers} \r\n          sites{name id lat long delivery_model{name id} combined count{ WorkOrders JobTypes TradeTypes Customers} }\r\n          cities{name id }\r\n        }\r\n      `\r\n    this.LimitedRequest = `{ name id }`\r\n \r\n    \r\n    this.Store={customers:true,SmallFetch:true, sites:true}\r\n\r\n    this.SmallReturnsQuery = `query{ \r\n        states {name id combined long lat count{ WorkOrders } }\r\n        countries { country lat long combined count{ WorkOrders }}\r\n      }`\r\n    // THIS IS HORRIBLE FIX IT\r\n    this.SitesRequest =`{ name lat long combined siteweighting count{ WorkOrders}  region_type{name} postcode{name} }`\r\n    this.StoreSites=[]\r\n    this.SitesQuery =` query { sites (start: 0) ${ this.SitesRequest} }`;\r\n\r\n    this.StoreRegions=[]\r\n    this.RegionQuery = `query {regions (start: 0) ${this.RegionRequest}}`\r\n\r\n    this.StoreCustomers=[]\r\n    this.CustomerQuery = `query { customers (start: 0) ${this.LimitedRequest}}`;\r\n\r\n    \r\n    this.GraphQL=(Query, CallBack)=>{\r\n        axios({  url: this.API,  method: 'post', data: { query: Query} }).then((result) => { CallBack(result.data) });\r\n    }\r\n\r\n\r\n    this.Fetch = ()=>{\r\n        console.log(\"Prep App\");\r\n        // Large Data Fetch\r\n        \r\n        // commented out for dev\r\n        //this.GraphQL(this.SitesQuery, this.ProcessSites)\r\n        //this.GraphQL(this.RegionQuery, this.ProcessRegions)\r\n\r\n    //    this.GraphQL(this.CustomerQuery, this.ProcessCustomer)\r\n\r\n        // Small Data Fetch\r\n    //    this.GraphQL( this.SmallReturnsQuery, this.ProcessSmallReturns)\r\n    this.processCheck()\r\n    }\r\n\r\n\r\n\r\n    /* *************************************************************************************************** */\r\n    // Process Small\r\n    /* *************************************************************************************************** */       \r\n        this.ProcessSmallReturns = (Data)=>{\r\n            //console.log(Data.data)\r\n\r\n            store.dispatch({ type:'STORECOUNTRIES', payload:Data.data.countries});\r\n            store.dispatch({ type:'STORETRADETYPE', payload:Data.data.tradeTypes});\r\n            store.dispatch({ type:'STOREJOBTYPE', payload:Data.data.jobTypes});\r\n            store.dispatch({ type:'STOREINDUSTRYTYPE', payload:Data.data.industryTypes});\r\n            store.dispatch({ type:'STORERATIOMODELS', payload:Data.data.ratioModels});\r\n            store.dispatch({ type:'STORESTATES', payload:Data.data.states});\r\n\r\n            this.Store.SmallFetch=true;\r\n            this.processCheck()\r\n        }     \r\n\r\n        \r\n  /* *************************************************************************************************** */\r\n    // Sites\r\n     /* *************************************************************************************************** */\r\n     this.ProcessSites=(Data)=>{ \r\n        this.StoreSites = [...this.StoreSites,...Data.data.sites];\r\n\r\n      //console.log(\"modulus\", this.StoreSites.length % this.Limit);\r\n\r\n        //console.log(this.StoreSites)\r\n\r\n        if((this.StoreSites.length % this.Limit) === 0){  \r\n            this.GraphQL(`query {sites (start: ${this.StoreSites.length}) ${this.SitesRequest}}`, this.ProcessSites)\r\n        }\r\n        else{ this.Store.sites=true}\r\n\r\n        store.dispatch({ type:'STORESITES', payload:this.StoreSites});\r\n\r\n        this.processCheck()\r\n    }\r\n\r\n  /* *************************************************************************************************** */\r\n    // Regions\r\n     /* *************************************************************************************************** */\r\n     this.ProcessRegions=(Data)=>{ \r\n        this.StoreRegions = [...this.StoreRegions,...Data.data.regions];\r\n\r\n           //console.log(\"modulus\", this.StoreRegions.length % this.Limit)\r\n        if((this.StoreRegions.length % this.Limit) === 0){  \r\n            this.GraphQL(`query {regions (start: ${this.StoreRegions.length}) ${this.RegionRequest}}`, this.ProcessRegions)\r\n        }\r\n        else{ this.Store.Region=true}\r\n\r\n        store.dispatch({ type:'STOREREGIONS', payload:this.StoreRegions});\r\n\r\n        this.processCheck()\r\n    }\r\n\r\n  /* *************************************************************************************************** */\r\n  // Customer\r\n   /* *************************************************************************************************** */\r\n   this.ProcessCustomer=(Data)=>{ \r\n    this.StoreCustomers = [...this.StoreCustomers,...Data.data.customers];\r\n\r\n    if(this.StoreCustomers.length === this.Limit){  \r\n        this.GraphQL(`query {customers (start: ${Data.data.customers.length}) ${this.LimitedRequest}}`, \r\n        this.ProcessCustomer)\r\n    }\r\n    else{ this.Store.customers=true}\r\n\r\n    store.dispatch({ type:'STORECUSTOMERS', payload:this.StoreCustomers});\r\n\r\n    this.processCheck()\r\n    }\r\n\r\n\r\n    /* Is Process Complete?  */\r\n    this.processCheck=()=>{ \r\n        let Load = true\r\n        Object.keys(this.Store).map((k,i)=>{\r\n            if(!this.Store[k])\r\n                Load=false\r\n        })\r\n        console.log(\"Load\", Load)\r\n            if(Load)\r\n                store.dispatch({ type:'DATARECEIVED', payload:true});\r\n            \r\n    }\r\n\r\n\r\n\r\n} ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\STRAPI.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\SideBar.js",["1899","1900"],"import React, {useEffect} from 'react'\r\nimport { Link} from \"react-router-dom\";\r\nimport { NavLink } from 'react-router-dom'\r\nimport List from '@material-ui/core/List';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport ApartmentIcon from '@material-ui/icons/Apartment';\r\nimport BlurCircularIcon from '@material-ui/icons/BlurCircular';\r\n//import DataUsageIcon from '@material-ui/icons/DataUsage';\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\nimport CompareIcon from '@material-ui/icons/Compare';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\n\r\nconst Login = ()=>{\r\n\r\n    useEffect(()=>{},[])\r\n    return(\r\n \r\n        <List className=\"AuthNavigation\">\r\n            <NavLink to={`/`} exact activeClassName=\"selected\">\r\n                <ListItem button key='Profile'>\r\n                    <ListItemIcon><PersonPinIcon /></ListItemIcon>\r\n            </ListItem> \r\n            </NavLink>\r\n\r\n           <NavLink to={`/create-model`} activeClassName=\"selected\">\r\n                <ListItem button key='Create Model' >\r\n                        <ListItemIcon><BlurCircularIcon /></ListItemIcon>\r\n                </ListItem>\r\n           </NavLink>\r\n\r\n       \r\n            <NavLink to={`/view-models`} activeClassName=\"selected\">\r\n                <ListItem button key='View Models' >\r\n                        <ListItemIcon><ApartmentIcon /></ListItemIcon>\r\n                        \r\n                </ListItem>\r\n            </NavLink>\r\n\r\n            <NavLink to={`/compare-models`} activeClassName=\"selected\">\r\n                <ListItem button key='Compare Models' >\r\n                        <ListItemIcon><CompareIcon /></ListItemIcon>\r\n                        \r\n                </ListItem>\r\n            </NavLink>\r\n            \r\n\r\n            \r\n            <NavLink to={`/release-notes`} activeClassName=\"selected\">\r\n                <ListItem button key='release-notes' >\r\n                    <ListItemIcon><BuildIcon /></ListItemIcon>\r\n                    \r\n                </ListItem>\r\n            </NavLink>\r\n            <NavLink to={`/pipeline`} activeClassName=\"selected\">\r\n                <ListItem button key='pipeline' >\r\n                    <ListItemIcon><AccountTreeIcon /></ListItemIcon>\r\n                    \r\n                </ListItem>\r\n            </NavLink>\r\n\r\n            <NavLink to={`/UIComponents`} activeClassName=\"selected\">\r\n                <ListItem button key='UI Components' >\r\n                    <ListItemIcon><DashboardIcon /></ListItemIcon>\r\n                </ListItem>\r\n            </NavLink>\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n/*\r\n<ListItemText primary='Profile' />\r\n<ListItemText primary='Create Model' /> \r\n<ListItemText primary='View Models' /> \r\n<ListItemText primary='Compare Models' /> \r\n<ListItemText primary='UI Components' />\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\GeoLocationActions.js",["1901","1902","1903","1904","1905","1906","1907","1908"],"import { Circle } from '@react-google-maps/api';\r\nimport store from \"../store/index\"\r\nimport {ClusterAnalysis} from \"./ClusterAnalysis\";\r\n\r\n\r\n\r\n/*\r\n    This class should deal with Geolocation Processes ONLY\r\n    all result filtering to be handled in phase two\r\n\r\n*/\r\n\r\n\r\n// find the distance in KM from 1 point to another\r\nexport function distancetoPoint(lat1, lon1, lat2, lon2, unit) {\r\n    if ((lat1 == lat2) && (lon1 == lon2)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var radlat1 = Math.PI * lat1/180;\r\n        var radlat2 = Math.PI * lat2/180;\r\n        var theta = lon1-lon2;\r\n        var radtheta = Math.PI * theta/180;\r\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n        if (dist > 1) {\r\n            dist = 1;\r\n        }\r\n        dist = Math.acos(dist);\r\n        dist = dist * 180/Math.PI;\r\n        dist = dist * 60 * 1.1515;\r\n        if (unit==\"K\") { dist = dist * 1.609344 }\r\n        if (unit==\"N\") { dist = dist * 0.8684 }\r\n        return dist;\r\n    }\r\n}\r\n\r\n// use to find the scan box area.\r\n// this function return the corosponding lnglat to a given point\r\n\r\n\r\nexport  function llFromDistance(latitude, longitude, distance, bearing) {\r\n    // taken from: https://stackoverflow.com/a/46410871/13549 \r\n    // distance in KM, bearing in degrees\r\n  \r\n    const R = 6378.1; // Radius of the Earth\r\n    const brng = bearing * Math.PI / 180; // Convert bearing to radian\r\n    let lat = latitude * Math.PI / 180; // Current coords to radians\r\n    let lon = longitude * Math.PI / 180;\r\n  \r\n    // Do the math magic\r\n    lat = Math.asin(Math.sin(lat) * Math.cos(distance / R) + Math.cos(lat) * Math.sin(distance / R) * Math.cos(brng));\r\n    lon += Math.atan2(Math.sin(brng) * Math.sin(distance / R) * Math.cos(lat), Math.cos(distance / R) - Math.sin(lat) * Math.sin(lat));\r\n  \r\n    // Coords back to degrees and return\r\n    return [(lat * 180 / Math.PI), (lon * 180 / Math.PI)];\r\n  \r\n  }\r\n\r\n\r\n  export const TestBoundaries = (site, Area)=>{\r\n    let found=false;\r\n    if(site.lat <=  Area.north && site.lat >= Area.south && site.long >= Area.west && site.long <= Area.east ){found=true}\r\n    return found\r\n}\r\n\r\n\r\n\r\n\r\n\r\n \r\n// Main Scan Class\r\nexport function PreformScan(){\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /* Variables */\r\n    /* *************************************************************************************************************** */        \r\n    \r\n    //this.Area=.5\r\n    //this.ScanDistanceArea=this.Area;\r\n    //this.SearchRadius = .5\r\n    //this.minSites=2\r\n    //this.WorkOrderVariants = [500,1500];\r\n    this.FilterVariables=null\r\n\r\n\r\n    this.Boundaries=null;\r\n    this.setGridpoints=null;\r\n    this.setGridPointer=null;\r\n\r\n    this.TestAgainstSites=null;\r\n    this.ScanResults=[];\r\n    this.setScanResults=null\r\n    this.sleepFor=10;\r\n    this.NESW={ north: null, south: null, east: null,  west: null }\r\n    \r\n    \r\n    this.PointOptions={\r\n        strokeColor: '#FF0000',\r\n        strokeOpacity: 0.5,\r\n        strokeWeight: 1,\r\n        fillColor: '#FF0000',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 10,\r\n        zIndex: 1\r\n      }\r\n         \r\n     this.GridPointerOptions = {\r\n        strokeColor: '#00ff00',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 1,\r\n        fillColor: '#00ff00',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 100,\r\n        zIndex: 10\r\n      }\r\n\r\n      this.GridResultOptions={\r\n        strokeColor: '#00ff00',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 1,\r\n        fillColor: '#00ff00',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 1000,\r\n        zIndex: 10\r\n      }\r\n\r\n      this.recOptions={\r\n        strokeColor: '#6094ff',\r\n        strokeOpacity: 0.9,\r\n        strokeWeight: 1,\r\n        fillColor: '#6094ff',\r\n        fillOpacity: 0.15,\r\n      }\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /*  AUX Functions*/\r\n    /* *************************************************************************************************************** */        \r\n\r\n    this.sleep = ()=>{  return new Promise(resolve => setTimeout(resolve, this.sleepFor)) }\r\n    \r\n    this.BreakBoundaries=(Boundaries)=>{\r\n        this.NESW = {  north: Boundaries[1], south: Boundaries[0], east: Boundaries[3], west: Boundaries[2] }\r\n    }\r\n\r\n    this.arePointsNear = (checkPoint, centerPoint, km) => {\r\n                var ky = 40000 / 360;\r\n                var kx = Math.cos(Math.PI * centerPoint.lat / 180.0) * ky;\r\n                var dx = Math.abs(centerPoint.lng - checkPoint.lng) * kx;\r\n                var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\r\n                return Math.sqrt(dx * dx + dy * dy) <= km;\r\n            }\r\n\r\n    this.RemoveDuplicates =()=>{\r\n\r\n    }\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /* Process */\r\n    /* *************************************************************************************************************** */        \r\n\r\n    this.Scan=()=>{\r\n            console.log(\"START SCAN \")\r\n            console.log(\"Scan Filters\", this.FilterVariables)\r\n            \r\n            this.BreakBoundaries(this.Boundaries)\r\n            //console.log(this.NESW)\r\n            \r\n            \r\n            //console.log(this.FilterVariables.Area, this.FilterVariables);\r\n            let Xiterations = distancetoPoint(this.NESW.north,this.NESW.west, this.NESW.north, this.NESW.east,'K')/this.FilterVariables.GridSpacing;\r\n            let Yiterations = distancetoPoint(this.NESW.north,this.NESW.west, this.NESW.south, this.NESW.west,'K')/this.FilterVariables.GridSpacing;\r\n\r\n            //console.log( Xiterations, Yiterations);\r\n            //let ScanBoxStartingPosition = llFromDistance(this.NESW.north, this.NESW.west, Math.sqrt(2)*this.Area, 135)\r\n            \r\n            //let LargestSurfaceArea = Math.max(Math.ceil(Xiterations), Math.ceil(Yiterations))\r\n\r\n            this.setGridPointer(<Circle options={this.GridPointerOptions}  center={{ lat: this.NESW.north, lng: this.NESW.west }} />)\r\n            this.FindScanPoints(Math.ceil(Xiterations), Math.ceil(Yiterations))\r\n            \r\n        }\r\n\r\n\r\n\r\n    this.FindScanPoints = (Xiterations, Yiterations)=>{\r\n\r\n        //console.log(Xiterations, Yiterations);\r\n\r\n        let LargestSurfaceArea = Math.max(Xiterations, Yiterations)\r\n        let i=0;\r\n        let Points = []\r\n        let ReturnedLngLat;\r\n\r\n      \r\n        while( i < LargestSurfaceArea){\r\n           \r\n            ReturnedLngLat = llFromDistance(this.NESW.north, this.NESW.west, (Math.sqrt(2)*(i*this.FilterVariables.GridSpacing)), 135)\r\n            //console.log(ReturnedLngLat[0],ReturnedLngLat[1])\r\n            Points.push([ReturnedLngLat[0],ReturnedLngLat[1]]) \r\n            \r\n            i++\r\n        }\r\n\r\n        //console.log(Points);\r\n        this.MapScanPoints(Points, Xiterations, Yiterations)\r\n    }\r\n\r\n\r\n\r\n    this.MapScanPoints=(Points, Xiterations, Yiterations)=>{\r\n\r\n        let MapGrid=[]\r\n        let createCircles=[];\r\n\r\n\r\n        let ii=0;\r\n\r\n        while(ii < Yiterations){\r\n            let Row=0, Col=0, iii=0\r\n            while(iii < Xiterations){\r\n                Row=ii;\r\n                Col=iii\r\n                    //console.log([Row,Col])\r\n                    MapGrid.push([Points[Row][0], Points[Col][1]])\r\n                    createCircles.push(<Circle key={ii+iii} options={this.PointOptions}  center={{ lat: Points[Row][0], lng: Points[Col][1] }} />)\r\n                    iii++\r\n            }\r\n            ii++\r\n        }\r\n        //console.log(MapGrid);\r\n        this.setGridpoints(createCircles)\r\n        this.RunScanTest (MapGrid)\r\n    }\r\n\r\n\r\n    this.RunScanTest = async(MapGrid)=>{\r\n        \r\n        // Variables\r\n        this.setScanResults(null)\r\n        let i=0\r\n        // run loop to scan through Grid points\r\n        while(i<MapGrid.length){\r\n            // Hold scan point for FE show only\r\n            await this.sleep()\r\n            // find\r\n          //  let ScanBoxNewPosition = llFromDistance(MapGrid[i][0], MapGrid[i][1], Math.sqrt(2)*this.Area, 135)\r\n          //  south: ScanBoxNewPosition[0],east: ScanBoxNewPosition[1],\r\n            this.setGridPointer(<Circle options={this.GridPointerOptions}  center={{ lat: MapGrid[i][0], lng: MapGrid[i][1] }} />)\r\n            \r\n            // Create Circle Center point to scan in next function hand off.\r\n            let ScanBoundary = { north: MapGrid[i][0],  west: MapGrid[i][1] }\r\n            \r\n            this.scanTestDiameter(ScanBoundary)\r\n            \r\n            i++\r\n        }\r\n\r\n        this.setGridPointer(<Circle visible={false} options={this.GridPointerOptions}   />)\r\n        this.StoreResults()\r\n        ClusterAnalysis(this.ScanResults)\r\n        \r\n    }\r\n\r\n\r\n\r\n    this.scanTestDiameter = (ScanBoundary)=>{\r\n\r\n        // This function checks to see if a site is within the Radius of the center point in the scan\r\n        // it should check each site lng/lst. if true then store in array this.ScanResults;\r\n       \r\n        // Outer Global Variables\r\n        let CollectSites=[];\r\n        let long=[],lat=[],GroupedBoxBoundaryLimits=[];\r\n       // Variables\r\n       let WorkOrderCount = 0;\r\n\r\n        // Loop known sites in this area for matches\r\n        this.TestAgainstSites.map((site,i)=>{\r\n            \r\n            \r\n            if(this.arePointsNear({ lat: site.lat, lng: site.long}, { lat: ScanBoundary.north, lng: ScanBoundary.west }, this.FilterVariables.SearchRadius)){\r\n\r\n                //console.log(site)\r\n\r\n                // Push Values into Arrays\r\n                long.push(site.long);\r\n                lat.push(site.lat)\r\n                CollectSites.push(site);\r\n                \r\n                //console.log(site)\r\n                //if(site.count[0] !== null) WorkOrderCount = WorkOrderCount + site.count[0].WorkOrders;\r\n               \r\n              \r\n            } // close if true\r\n           \r\n          })  // close Map\r\n\r\n            // Limit Boundaries to outer most\r\n            GroupedBoxBoundaryLimits.push([Math.max(...long), Math.min(...long), Math.max(...lat), Math.min(...lat)])\r\n            // if work orders !0 ship it off for processing\r\n            /*\r\n            if( WorkOrderCount >= this.FilterVariables.MinWorkOrder \r\n                && WorkOrderCount <= this.FilterVariables.MaxOrderOrders \r\n                && CollectSites.length>=this.FilterVariables.minSites)\r\n                { }\r\n            */\r\n                this.ProcessGridBoundary(CollectSites, GroupedBoxBoundaryLimits, ScanBoundary)\r\n        }\r\n\r\n \r\n\r\n    this.ProcessGridBoundary=(Sites, GroupedBoxBoundaryLimits, ScanBoundary)=>{\r\n     \r\n        // Variables\r\n        let tmp = [];\r\n        let remove=[];\r\n        let removeDuplicateBoundaryLimits;\r\n        \r\n        // remove any dupliactes from arrays\r\n        removeDuplicateBoundaryLimits = GroupedBoxBoundaryLimits.filter(function (v, i) {\r\n            if (tmp.indexOf(v.toString()) < 0) \r\n                { \r\n                    tmp.push(v.toString());\r\n                    return v;\r\n                }else{\r\n                    remove.push(i)\r\n                }\r\n        });\r\n\r\n        remove.map((id,i)=>{ Sites.splice(id, 1);})\r\n\r\n        // only add items with a site count\r\n        if(Sites.length>0){\r\n            this.ScanResults.push({\r\n                Sites:Sites,\r\n                SiteCount:Sites.length,\r\n                Boundary:ScanBoundary,\r\n                //WorkOrderCount:WorkOrderCount,\r\n                GroupedBoxBoundaryLimits:removeDuplicateBoundaryLimits[0]\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    this.StoreResults = ()=>{\r\n\r\n\r\n        //console.log(\"Scan End Num\", this.ScanResults.length)\r\n        // Store Results\r\n        store.dispatch({ type:'SCANSTATE', payload:false}); \r\n        \r\n        \r\n        //store.dispatch({ type:'STORERESULTS', payload:this.ScanResults});        \r\n \r\n    }\r\n\r\n} ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\STRAPI.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\UX.js",["1909"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n    Full\r\n    Countries\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_UX_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_UX_FULL = ()=>{\r\n    return useContext(Context_UX_FULL)\r\n}\r\n\r\n\r\n \r\nexport const UXContextProvider = ({children})=>{\r\n        const UX = useSelector(state => state.UX );\r\n\r\n    useMemo(()=>{  },[UX]) \r\n\r\n    return(\r\n            <Context_UX_FULL.Provider value={UX}>\r\n                {children}            \r\n            </Context_UX_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\SCANSTATE.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleUX.js",["1910","1911","1912","1913","1914","1915","1916","1917","1918","1919","1920","1921","1922","1923","1924","1925","1926","1927","1928","1929","1930","1931","1932","1933","1934","1935","1936","1937","1938","1939","1940","1941","1942","1943"],"// Private Functions\r\nimport store from \"../store/index\"\r\n\r\n//import axios from 'axios';\r\nimport {distancetoPoint} from \"./GeoLocationActions\"\r\nimport { findIndex} from 'lodash'; \r\n\r\n// Icons\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\n\r\n//export const colorArray = ['#030303', '#787878', '#575757', '#999A9A', '#D4D4D3', '#313231', '#777777', '#575757', '#3A3A3A', '#444444',];\r\nexport const colorArray = ['#89b2c3', '#D2B953','#D29653','#386E85','#514592', '#3F9F54', '#3C6289', '#D25F53', '#575757', '#D29F53', '#40598D',];\r\n\r\nexport const LocationcolorArray = ['#514592', '#D29653', '#D2B953','#386E85', '#3F9F54', '#3C6289', '#D25F53', '#575757', '#D29F53', '#40598D',];\r\n\r\nexport const TradecolorArray = ['#3F5A8C', '#40A151', '#FCF889','#D25C53'];\r\n\r\n\r\nexport const ChartIcon =(Icon)=>{\r\n  let DisplayIcon; \r\n  switch (Icon) {\r\n    case 'bar':\r\n        DisplayIcon = <AssessmentIcon />\r\n      break;\r\n      case 'pie':\r\n        DisplayIcon = <PieChartIcon />\r\n      break;\r\n      case 'radial':\r\n        DisplayIcon = <BubbleChartIcon />\r\n      break;\r\n      case 'map':\r\n        DisplayIcon = <MapIcon />\r\n      break;\r\n      case 'funnel':\r\n        DisplayIcon = <FilterListIcon />\r\n      break;\r\n      case 'line':\r\n        DisplayIcon = <TimelineIcon />\r\n      break;\r\n\r\n      \r\n      default:\r\n        DisplayIcon = <AssessmentIcon />\r\n    \r\n  }\r\n  return DisplayIcon;\r\n}\r\n\r\n\r\nexport function setMainMapLocation(Location){\r\n  const NewLocation = {\r\n    LatLngBoundaries:Location.Center,\r\n    BoundaryCenterPoint:null,\r\n    zoom:Location.Zoom,\r\n    Location:Location.Name\r\n}\r\n  store.dispatch({ type:'STOREMAPPARAMETERS', payload:NewLocation});\r\n}\r\n\r\n\r\n\r\n/* ********************************************************************************* */\r\n// Handle Various  Filters\r\n/* ********************************************************************************* */\r\nexport const SetMapClusterType = (type)=>{\r\n  store.dispatch({ type:'SETMAPCLUSTERTYPE', payload:type});\r\n}\r\n\r\n\r\nexport const SetMapResourceType = (type)=>{\r\n  //console.log(type)\r\n  store.dispatch({ type:'SETMAPRESOURCETYPE', payload:type});\r\n}\r\n\r\nexport const SetFilterClient = (type)=>{\r\n  //console.log(type)\r\n  store.dispatch({ type:'SETFILTERCLIENT', payload:type});\r\n}\r\n\r\nexport const SetFilterModel = (type)=>{\r\n  //console.log('SetFilterModel', type)\r\n  store.dispatch({ type:'SETFILTERMODEL', payload:type});\r\n}\r\n\r\nexport const SetFilterPolygon = (type)=>{\r\n  //console.log('SETFILTERPOLYGON', type)\r\n  store.dispatch({ type:'SETFILTERPOLYGON', payload:type});\r\n  \r\n}\r\n\r\nexport const SetFilterMarkerType = (type)=>{\r\n  //console.log('SETFILTERMARKERTYPE', type)\r\n  store.dispatch({ type:'SETFILTERMARKERTYPE', payload:type});\r\n}\r\n\r\n\r\nexport const SetSelectedCluster = (type)=>{\r\n  //console.log('SETSELECTEDCLUSTER', type)\r\n  store.dispatch({ type:'SETSELECTEDCLUSTER', payload:type});\r\n}\r\n\r\n\r\n/* ********************************************************************************* */\r\n// END Filters\r\n/* ********************************************************************************* */\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport const gl=(data)=>{ return data.length }\r\n\r\nexport function AreaFilter(type, value){\r\n    //console.log('AreaFilter', value)\r\n    store.dispatch({ type:type, payload:value});\r\n}\r\n\r\nexport function ScanState(value){\r\n   //console.log('ScanState', value)\r\n    store.dispatch({ type:'SCANSTATE', payload:value});\r\n}\r\n\r\nexport function SelectedRegion(SelectedRegion){\r\n\r\n    //console.log(SelectedRegion)\r\n    store.dispatch({ type:'STORESELECTEDAREA', payload:SelectedRegion});\r\n\r\n}\r\n\r\nexport function RemoveClusterItem(Haystack, Needle){ \r\n\r\n    //console.log(\"Delete Cluster\");\r\n    //console.log(Haystack, Needle);\r\n    let index = findIndex( Haystack, function(o) { return o.Boundary === Needle; })\r\n    //console.log(index);\r\n\r\n    Haystack.splice(index, 1)\r\n    //console.log(Haystack);\r\n    store.dispatch({ type:'STORERESULTS', payload:Haystack}); \r\n}\r\n\r\n \r\nexport function CreateMapParameters(DATA){\r\n\r\n            // USe this function to create ALL of the possible Map Data and Meta points.\r\n            // Try to limit the use on the UX.SelectedArea around the APP\r\n            // Instead focus on using UX.MapParameters\r\n\r\n            let centerLatArray = [];\r\n            let centerLngArray = [];\r\n            let Storesites=[]\r\n\r\n            //console.log(DATA)\r\n            DATA.map((Region, i)=>{\r\n                //console.log(\"Region\", Region)\r\n                Region.sites.map((marker,i)=>{\r\n                    Storesites.push(marker)\r\n                    if(!isNaN(parseFloat(marker.lat))){\r\n                        centerLatArray.push(parseFloat(marker.lat))\r\n                        centerLngArray.push(parseFloat(marker.long))\r\n                    }\r\n                })\r\n                //return false\r\n            })\r\n\r\n\r\n            let centerLat = ((Math.min(...centerLatArray) + Math.max(...centerLatArray))/2)\r\n            let centerLng = ((Math.min(...centerLngArray) + Math.max(...centerLngArray))/2)\r\n            let LatLngBoundaries = [Math.min(...centerLatArray),Math.max(...centerLatArray),Math.min(...centerLngArray),Math.max(...centerLngArray)]\r\n            \r\n            let distance = distancetoPoint(LatLngBoundaries[0],LatLngBoundaries[2], LatLngBoundaries[1],LatLngBoundaries[3],'K')\r\n           \r\n           //console.log('distance', (distance*1000), setZoomLevel((distance*1000).toFixed(0)));\r\n           \r\n            let zoom = setZoomLevel((distance*1000).toFixed(0))\r\n            let SetMap = true\r\n            //console.log('Storesites', Storesites)\r\n            \r\n            let MapParameters = {\r\n                LatLngBoundaries:LatLngBoundaries,\r\n                BoundaryCenterPoint:[centerLat, centerLng],\r\n                zoom:zoom,\r\n                SetMap:SetMap,\r\n                markers:Storesites\r\n            }\r\n\r\n            //console.log(\"MapParameters\", MapParameters)\r\n           //store.dispatch({ type:'STOREMAPPARAMETERS', payload:MapParameters});\r\n}\r\n\r\n\r\n\r\nfunction setZoomLevel(meters) { \r\n    //console.log(`Zoom level set meters: ${meters}`); \r\n\r\n    switch (meters) {\r\n        case (meters < 1128):\r\n            return 15;\r\n          break;\r\n        case ((meters > 1128) && (meters < 2256)):\r\n            return 14;\r\n          break;\r\n        case ((meters > 2256) && (meters < 4513)):\r\n            return 13;\r\n          break;\r\n        case ((meters > 4513) && (meters < 9027)):\r\n            return 12;\r\n          break; \r\n        case ((meters > 9027) && (meters < 18055)) :\r\n            return 11;\r\n          break;\r\n        case ((meters > 18055) && (meters < 36111)) :\r\n            return 10;\r\n          break; \r\n        case ((meters > 36111) && (meters < 72223)) :\r\n            return 9;\r\n          break;      \r\n        case ((meters > 72223) && (meters < 144447)) :\r\n            return 8;\r\n          break;   \r\n        case ((meters > 144447) && (meters < 288895)) :\r\n            return 7;\r\n          break;    \r\n        case ((meters > 288895) && (meters < 577790)) :\r\n            return 6;\r\n          break;  \r\n          case ((meters > 577790) && (meters < 1155581)) :\r\n            return 5;\r\n          break;     \r\n          default:\r\n            return 4;\r\n      }\r\n\r\n\r\n    //return zoomfactor;\r\n}\r\n\r\nexport function NumberReducer (labelValue) {\r\n\r\n    // Nine Zeroes for Billions\r\n    return Math.abs(Number(labelValue)) >= 1.0e+9\r\n\r\n    ? Math.abs(Number(labelValue)) / 1.0e+9 + \"B\"\r\n    // Six Zeroes for Millions \r\n    : Math.abs(Number(labelValue)) >= 1.0e+6\r\n\r\n    ? Math.abs(Number(labelValue)) / 1.0e+6 + \"M\"\r\n    // Three Zeroes for Thousands\r\n    : Math.abs(Number(labelValue)) >= 1.0e+3\r\n\r\n    ? Math.abs(Number(labelValue)) / 1.0e+3 + \"K\"\r\n\r\n    : Math.abs(Number(labelValue));\r\n\r\n}\r\n\r\n\r\nexport function HandleFilterChange(TYPE, VALUE){\r\n    //console.log(TYPE, VALUE)\r\n    store.dispatch({ type:TYPE, payload:VALUE});\r\n}\r\n\r\nexport function RegionColor(region){\r\n  switch (region) {\r\n      case 'SameBuilding':\r\n            return '#B2007C' \r\n            break;\r\n      case 'CBD':\r\n              return '#DC000B'\r\n        break;\r\n      case 'InnerCity':\r\n              return '#04419B'\r\n          break;\r\n      case 'Metro':\r\n              return '#11B700'\r\n          break;\r\n      case 'OuterMetro':\r\n              return '#330193'\r\n          break;\r\n        case 'Regional':\r\n          return '#FF7400'\r\n          break;\r\n        case 'Remote':\r\n          return '#3D1324'\r\n          break; \r\n      case 'ExtremeRemote':\r\n            return '#111D2F'\r\n          break;   \r\n     \r\n  }\r\n}\r\n\r\n\r\nexport const getDate=(timeStamp)=>{ \r\n\r\n  const milliseconds = timeStamp * 1000 \r\n\r\n  const dateObject = new Date(milliseconds)\r\n  //console.log(dateObject.getFullYear())\r\n  //let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n  let options = { year: 'numeric', month: 'numeric', day: 'numeric' };\r\n  const humanDateFormat = dateObject.toLocaleString('en-UK',options) //2019-12-9 10:30:15\r\n\r\n  return humanDateFormat\r\n }\r\n\r\n export const monthDiff = (d1, d2) => {\r\n  var months;\r\n\r\n  months = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n  months -= d1.getMonth();\r\n  months += d2.getMonth();\r\n\r\n  //months = months+1\r\n  return months <= 0 ? 0 : months;\r\n}\r\n\r\n\r\n\r\nfunction parseDate(input) {\r\n  // Transform date from text to date\r\nvar parts = input.match(/(\\d+)/g);\r\n// new Date(year, month [, date [, hours[, minutes[, seconds[, ms]]]]])\r\nreturn new Date(parts[0], parts[1]-1, parts[2]); // months are 0-based\r\n}\r\n\r\n\r\nexport const workingDaysBetweenDates = (S1, E1) => {\r\n  const S1Date = S1 * 1000; \r\n  const E1Date = E1 * 1000;\r\n  \r\n  const S1dateObject = new Date(S1Date)\r\n  const E1dateObject = new Date(E1Date)\r\n\r\n  let d0 = `${S1dateObject.getFullYear()}/${S1dateObject.getMonth()}/${S1dateObject.getDay()}`\r\n  let d1= `${E1dateObject.getFullYear()}/${E1dateObject.getMonth()}/${E1dateObject.getDay()}`\r\n  /* Two working days and an sunday (not working day) */\r\n // var holidays = ['2018-05-03', '2018-05-05', '2018-05-07'];\r\n  var holidays = [''];\r\n  var startDate = parseDate(d0);\r\n  var endDate = parseDate(d1);  \r\n\r\n// Validate input\r\n  if (endDate <= startDate) {\r\n    return 0;\r\n  }\r\n\r\n// Calculate days between dates\r\n  var millisecondsPerDay = 86400 * 1000; // Day in milliseconds\r\n  startDate.setHours(0, 0, 0, 1);  // Start just after midnight\r\n  endDate.setHours(23, 59, 59, 999);  // End just before midnight\r\n  var diff = endDate - startDate;  // Milliseconds between datetime objects    \r\n  var days = Math.ceil(diff / millisecondsPerDay);\r\n\r\n  // Subtract two weekend days for every week in between\r\n  var weeks = Math.floor(days / 7);\r\n  days -= weeks * 2;\r\n\r\n  // Handle special cases\r\n  var startDay = startDate.getDay();\r\n  var endDay = endDate.getDay();\r\n    \r\n  // Remove weekend not previously removed.   \r\n  if (startDay - endDay > 1) {\r\n    days -= 2;\r\n  }\r\n  // Remove start day if span starts on Sunday but ends before Saturday\r\n  if (startDay == 0 && endDay != 6) {\r\n    days--;  \r\n  }\r\n  // Remove end day if span ends on Saturday but starts after Sunday\r\n  if (endDay == 6 && startDay != 0) {\r\n    days--;\r\n  }\r\n  /* Here is the code */\r\n  holidays.forEach(day => {\r\n    if ((day >= d0) && (day <= d1)) {\r\n      /* If it is not saturday (6) or sunday (0), substract it */\r\n      if ((parseDate(day).getDay() % 6) != 0) {\r\n        days--;\r\n      }\r\n    }\r\n  });\r\n\r\n  return days\r\n}\r\n\r\n\r\n\r\nexport const GroupArrayByOccurances =(arr) =>{\r\n  var a = [],b = [],prev;\r\n  arr.sort();\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (arr[i] !== prev) {\r\n      a.push(arr[i]);\r\n      b.push(1);\r\n    } else {\r\n      b[b.length - 1]++;\r\n    }\r\n    prev = arr[i];\r\n  }\r\n  return [a, b];\r\n}\r\n\r\nexport const HandleTZDate = (DATE)=>{\r\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\" }\r\n  return new Date(DATE).toLocaleDateString(undefined, options)\r\n\r\n // let NewDate = DATE.split('T');\r\n\r\n // return NewDate[0]\r\n}\r\n\r\n// CLient Name for Filter\r\nexport const FindClientList = ()=>{\r\n  const MODEL = store.getState().SCANSTATE;\r\n  let ClientNames = []\r\n  MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n      Object.keys(model.ClientGroupedBy).map(function(key, index) {\r\n          model.ClientGroupedBy[key].map((c,ii)=>{\r\n              if(ClientNames.indexOf(c.Customer) === -1){\r\n                  ClientNames.push(c.Customer)\r\n              }\r\n          })\r\n      })\r\n  })\r\n  return ClientNames\r\n}\r\n\r\n// UX Filters\r\n export const HandleResourceFilter=(item, filter)=>{\r\n    if(findIndex(item.resourceQuota, function(o) { return o.Trade === filter}) === -1)\r\n      return false  \r\n        return true\r\n }","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SCAN.js",["1944"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_SCAN_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_SCAN_FULL = ()=>{\r\n    return useContext(Context_SCAN_FULL)\r\n}\r\n\r\n\r\n \r\nexport const SCANContextProvider = ({children})=>{\r\n        const SCAN = useSelector(state => state.SCANSTATE );\r\n\r\n    useMemo(()=>{  },[SCAN]) \r\n\r\n    return(\r\n            <Context_SCAN_FULL.Provider value={SCAN}>\r\n                {children}            \r\n            </Context_SCAN_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\SimplePie.js",[],["1945","1946"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\BarChart.js",["1947"],"import React  from 'react';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n} from 'recharts';\r\n\r\n/*\r\nexample\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n];\r\n*/\r\n\r\nconst SimpleBarChart = (props)=>{\r\n\r\n    const {Data} = props\r\n    return (\r\n      <div style={{ width: '100%', height: 400 }}>\r\n      <ResponsiveContainer>\r\n          <BarChart\r\n            width={600}\r\n            height={400}\r\n            data={Data}\r\n            margin={{\r\n              top: 5, right: 30, left: 20, bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"value\" fill=\"#ffbf00\" />\r\n          \r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default SimpleBarChart;\r\n",["1948","1949"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\ClusterAnalysis.js",["1950","1951","1952","1953","1954","1955","1956","1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967","1968","1969","1970","1971","1972","1973"],"import store from \"../store/index\"\r\n//import axios from 'axios';\r\nimport {find, findIndex} from 'lodash'; \r\n\r\n\r\n/* **************************************************************************** */\r\n/*  Aux Functions */\r\n/* **************************************************************************** */\r\nconst GroupArray =(arr) =>{\r\n    var a = [],b = [],prev;\r\n    arr.sort();\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i] !== prev) {\r\n        a.push(arr[i]);\r\n        b.push(1);\r\n      } else {\r\n        b[b.length - 1]++;\r\n      }\r\n      prev = arr[i];\r\n    }\r\n    return [a, b];\r\n  }\r\n\r\n\r\n  const FindMultiplier=(int)=>{\r\n    const RM = store.getState().STRAPI.ratioModel\r\n    let Multiplier = find(RM, function(o) { return (o.Min <= int && o.max >= int) });\r\n    return Multiplier.multiplier\r\n  }\r\n\r\n\r\n  const FindInterior = (outer, inner)=>{\r\n    inner.map((cluster,i)=>{\r\n      let Inside = false\r\n      if(\r\n          cluster.GroupedBoxBoundaryLimits[0] > outer[0]\r\n        && cluster.GroupedBoxBoundaryLimits[1] < outer[1]\r\n        && cluster.GroupedBoxBoundaryLimits[2] > outer[2]\r\n        && cluster.GroupedBoxBoundaryLimits[3] < outer[3]\r\n      )\r\n      { Inside = true}\r\n      //console.log(outer, cluster.GroupedBoxBoundaryLimits)\r\n        //console.log(Inside)\r\n    })\r\n  }\r\n\r\n   export const findTradeTypeName = (id)=>{\r\n    \r\n    const TRADETYPE = store.getState().STRAPI.tradeType;\r\n    \r\n    let FoundType = find(TRADETYPE, function(o) { return o.id === id; })\r\n    return FoundType.name\r\n}\r\n\r\n\r\n  export const findClientName=(id)=>{\r\n    const Clients = store.getState().STRAPI.UserData.Customers;\r\n    let FoundClient = find(Clients, function(o) { return o.id === id; });\r\n\r\n    if(FoundClient !== undefined)\r\n      return FoundClient.name \r\n  \r\n    return false\r\n   }\r\n\r\n    const ResourcesRequired = (TradesUsed)=>{\r\n      //console.log(TradesUsed);\r\n      \r\n    }\r\n\r\n    const ChartGroupArrayData = (Compressed)=>{\r\n    let CompressedForPie=[]\r\n    Compressed[0].map((jt,i)=>{ CompressedForPie.push({ name: jt , value: Compressed[1][i] }) })\r\n    return (CompressedForPie);\r\n    }\r\n\r\n/* End Aux Functions **************************************************************************** */\r\n\r\n\r\n/* **************************************************************************** */\r\n/* Worker Functions  */\r\n/* **************************************************************************** */\r\n\r\n\r\n\r\nconst findTradeParent = (trade)=>{\r\n  const TRADETYPEALLOCATION = store.getState().STRAPI.UserData.tradetypes;\r\n\r\n  let FoundType = find(TRADETYPEALLOCATION, function(o) { return o.id === trade; })\r\n  if(FoundType === undefined){\r\n    //console.log(trade)\r\n    return 'undefined'\r\n  }else{\r\n   //console.log(trade, FoundType.trade_allocation_ratio.Name)\r\n    return FoundType.trade_allocation_ratio.Name;\r\n  }\r\n \r\n}\r\n\r\n// Find Allocation of trade type across cluster\r\n\r\n   export const FindTradeTypeAllocation = (data)=>{\r\n     let TotalChildTradesTradearr=[]\r\n     let ParentTradeName=[]\r\n      data.map((site,i)=>{\r\n          site.sites.map((count,i)=>{\r\n            let TradesJson = JSON.parse(count.count[0].TradeTypes);\r\n            TotalChildTradesTradearr=  [...TotalChildTradesTradearr, ...TradesJson]\r\n          })\r\n      })\r\n\r\n      TotalChildTradesTradearr.map((childTrades, i )=>{\r\n        ParentTradeName.push(findTradeParent(childTrades))\r\n      })\r\n      \r\n      return GroupArray(ParentTradeName)\r\n    }\r\n\r\n\r\nexport const SitesbyTier = (data)=>{\r\n    let tiers=[]\r\n    data.map((item,index)=>{\r\n        let ii=0\r\n       \r\n        while(ii<item.sites.length){\r\n           tiers.push(item.scanCategory)\r\n            ii++\r\n        }\r\n      \r\n      \r\n    })\r\n\r\n    //console.log(GroupArray(tiers))\r\n    return GroupArray(tiers)\r\n}\r\n\r\n// Return the Total workordercount for a cluster\r\n    export const SumWorkOrderTotal = (sites)=>{\r\n        let total=[]\r\n          sites.map((item,i)=>{\r\n              if (!isNaN(item.SumWorkOrder))\r\n                total.push(item.SumWorkOrder)\r\n          })\r\n          return total.reduce((a, b) => a + b, 0)\r\n      }\r\n\r\n\r\n\r\n\r\nconst Removeinteriors = (Results)=>{\r\n  //console.log(Results)\r\n  Results.map((results)=>{\r\n      FindInterior(results.GroupedBoxBoundaryLimits, Results)\r\n  })\r\n}\r\n\r\nconst ClusterCost=(ClusterAssetBreakdown)=>{\r\n    const TRADETYPE = store.getState().STRAPI.tradeType;\r\n    let ClusterCost=[]\r\n    ClusterAssetBreakdown[0].map((id,i)=>{\r\n        let Cost;\r\n        let TT = find(TRADETYPE, function(o) { return o.id === id; });\r\n        if(TT.cpj != undefined){\r\n                //console.log(TT.cpj, id, ClusterAssetBreakdown[1][i], FindMultiplier(ClusterAssetBreakdown[1][i]))\r\n               Cost = (ClusterAssetBreakdown[1][i]* TT.cpj)*FindMultiplier(ClusterAssetBreakdown[1][i])\r\n               ClusterCost.push([findTradeTypeName(id), parseFloat(Cost.toFixed(2))])\r\n        }else{\r\n            //console.log(`${findTradeTypeName(id)} is missing a CPJ marker`)\r\n        }\r\n    })\r\n    return ClusterCost\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  const JobTypes =(JOBTYPES,result)=>{\r\n     \r\n       //console.log(JOBTYPES,result)\r\n\r\n        // JOb Type\r\n        let PUSHJobTypeName=[]\r\n        let PUSHJobTypeID=[]\r\n        let PUSHJobTypeWorkOrderCount=[]\r\n        let PUSHTradeType=[]\r\n        let PUSHSplitTradeTypeCount=[]\r\n        let PUSHTradeInt=[]\r\n        let PUSHWorkOrdersTrueNumber=[]\r\n        let WorkOrderValue;\r\n\r\n        result.Sites.map((site,i)=>{\r\n\r\n            //console.log(site)\r\n            // Breakdown Jobtypes\r\n            JOBTYPES.map((jobtype,i)=>{\r\n\r\n                //console.log(find(jobtype.work_orders, function(o) { return o.site === site.id; }))\r\n                let FindWorkOrder = find(jobtype.work_orders, function(o) { return o.site === site.id; })\r\n                if(FindWorkOrder!== undefined){\r\n                    \r\n                    // Store JT name\r\n                    PUSHJobTypeName.push(jobtype.name);\r\n                    PUSHJobTypeID.push(jobtype.id)\r\n\r\n                    //console.log(FindWorkOrder)\r\n                    //console.log(jobtype);\r\n                    \r\n                    PUSHWorkOrdersTrueNumber.push(FindWorkOrder.count)\r\n                    PUSHTradeType.push(findTradeTypeName(FindWorkOrder.trade_type))\r\n                    PUSHTradeInt.push(FindWorkOrder.trade_type)\r\n                   \r\n                    let Index = findIndex(PUSHSplitTradeTypeCount, function(o) { return o.id == FindWorkOrder.trade_type; });\r\n          \r\n                    if(Index != -1){\r\n                          PUSHSplitTradeTypeCount[Index].count = PUSHSplitTradeTypeCount[Index].count + FindWorkOrder.count\r\n                    }else{\r\n                      PUSHSplitTradeTypeCount.push({id:FindWorkOrder.trade_type, count:FindWorkOrder.count, name:findTradeTypeName(FindWorkOrder.trade_type)})\r\n                    }\r\n                    \r\n                    \r\n                     // I DONT THINK THIS IS CORRECT\r\n                    WorkOrderValue = PUSHWorkOrdersTrueNumber.reduce((a, b) => a + b, 0)\r\n                    //console.log(\"PUSHWorkOrdersTrueNumber\", PUSHWorkOrdersTrueNumber)\r\n                    let IndexThis = findIndex(PUSHJobTypeWorkOrderCount, function(o) { return o.name === jobtype.name; })\r\n                    \r\n                    if(IndexThis === -1){ \r\n                        PUSHJobTypeWorkOrderCount.push({name:jobtype.name, value:WorkOrderValue})\r\n                    }\r\n                    else{\r\n                        PUSHJobTypeWorkOrderCount.splice(IndexThis, 1, {name:jobtype.name, value: (PUSHJobTypeWorkOrderCount[IndexThis].value+WorkOrderValue)});\r\n                    }\r\n                    \r\n                }\r\n            })\r\n           \r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // Create Analysis to hand off to Reducer\r\n\r\n        return {\r\n            JobTypeNameARR :GroupArray(PUSHJobTypeName),\r\n            JobTypeIDARR : GroupArray(PUSHJobTypeID),\r\n            TradeTypeARR : GroupArray(PUSHTradeType),\r\n            WorkOrdersTrueNumber:PUSHWorkOrdersTrueNumber.reduce((a, b) => a + b, 0),\r\n            JobTypeWorkOrderCount : PUSHJobTypeWorkOrderCount,\r\n            ClusterCost: ClusterCost(GroupArray(PUSHTradeInt)),\r\n            ResourcesRequired:ResourcesRequired(GroupArray(PUSHTradeType)),\r\n            SplitTradeTypeCount:PUSHSplitTradeTypeCount\r\n        }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const checkResourceCount = (Results)=>{\r\n\r\n    Results.map((cluster,i)=>{\r\n\r\n      //console.log(cluster, cluster.SplitTradeTypeCount)\r\n    })\r\n      /*\r\n        minValueDay = 2\r\n        ResourceDay = 0.2\r\n        JobsPerDay = 4.4\r\n        MinRadius = 2000\r\n        WorkDays = 250\r\n      */\r\n\r\n  }\r\n\r\n  /* NEW FUNCTIONS */\r\n\r\n  const ExtractWorkOrderValues = (Results) => {\r\n    // Extracts the True workorder count\r\n      Results.map((result)=>{\r\n        let WorkOrderCount = [], WorkOrderNum=0\r\n          result.Sites.map((site, i)=>{\r\n              WorkOrderNum = WorkOrderNum + site.count[0].WorkOrders\r\n              WorkOrderCount.push(site.count[0].WorkOrders)\r\n          })\r\n          result.WorkOrders = WorkOrderCount.reduce((a, b) => a + b, 0);\r\n      })\r\n      return true;\r\n  }\r\n\r\n\r\n  const ExtractTradeTypes = (Results, STRAPI)=>{\r\n\r\n    //console.log(STRAPI)\r\n    \r\n    Results.map((result)=>{\r\n      let PUSHTradeType=[]\r\n        result.Sites.map((site, i)=>{\r\n          PUSHTradeType = [...PUSHTradeType,...JSON.parse(site.count[0].TradeTypes)]\r\n        })\r\n        result.TradeType = GroupArray(PUSHTradeType)\r\n        //console.log(GroupArray(PUSHTradeType));\r\n    })\r\n   \r\n    return true;\r\n  } \r\n\r\n\r\n\r\n/* **************************************************************************** */\r\n/*  Starter Function  ********************************************************* */\r\n/*                                                                               */\r\n/* **************************************************************************** */\r\n\r\n\r\nexport function ClusterAnalysis(Results){\r\n    const STRAPI = store.getState().STRAPI;\r\n    //console.log(\"ClusterAnalysis\", Results);\r\n    \r\n    // Let group some of the Data points into Meta data\r\n    // Group by WO\r\n      ExtractWorkOrderValues(Results)\r\n    // Group by Trade type\r\n      ExtractTradeTypes(Results, STRAPI)\r\n    // Group by Resource Type\r\n      //checkResourceCount(Results)\r\n    \r\n    // Group by Cost\r\n    \r\n    // Group by Asset Type\r\n    // Group by Delivery Model\r\n    // Group by Customers\r\n\r\n\r\n\r\n\r\n    // OK time to filter through the results on Known restrictions\r\n    \r\n     // Run Resource Test Here\r\n    \r\n    // Removeinteriors(Results)\r\n\r\n\r\n    \r\n    // find the job types\r\n    /*\r\n     Results.map((result,i)=>{\r\n        \r\n        let TRADEOBJ = JobTypes(STRAPI.JobType,result);\r\n\r\n        //result.WorkOrdersTrueNumber = TRADEOBJ.WorkOrdersTrueNumber\r\n        result.SplitTradeTypeCount = TRADEOBJ.SplitTradeTypeCount\r\n        result.TradeTypeCount =TRADEOBJ.TradeTypeARR\r\n        result.ClusterCost = TRADEOBJ.ClusterCost\r\n        result.Charts={\r\n            JobTypeID:ChartGroupArrayData(TRADEOBJ.JobTypeIDARR),\r\n            JobTypeName:ChartGroupArrayData(TRADEOBJ.JobTypeNameARR),\r\n            TradeType:ChartGroupArrayData(TRADEOBJ.TradeTypeARR),\r\n            JobTypeSum:ChartGroupArrayData(TRADEOBJ.JobTypeNameARR),\r\n            JobTypeWorkOrderCount:TRADEOBJ.JobTypeWorkOrderCount\r\n        }\r\n    })\r\n\r\n    */\r\n   \r\n    //console.log(\"FINAL RESULT \", Results)\r\n    \r\n    //store.dispatch({ type:'STORERESULTS', payload:Results}); \r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Assets\\logo.js",["1974","1975","1976","1977","1978"],"\r\nimport React  from 'react'\r\n\r\nexport const LogoMain=()=>{\r\n    return( <img className=\"MainLogo\" src=\"/img/png/intact-group.png\" />)\r\n}\r\n\r\nexport const JLLMain=()=>{\r\n    return( <img className=\"MainLogo\" src=\"/img/png/jll-logo.png\" />)\r\n}\r\n\r\nexport const LogoMainWhite=()=>{\r\n    return( <img className=\"MainLogo\" src=\"/img/png/intact-group-white.png\" />)\r\n}\r\n\r\nexport const AlogoBlue=()=>{\r\n    return( <img className=\"ALogoMainLogo\" src=\"/img/png/A-Logo.png\" />)\r\n}\r\n\r\nexport const AlogoWhite=()=>{\r\n    return( <img className=\"ALogoMainLogo\" src=\"/img/png/A-Logo-white.png\" />)\r\n}\r\n\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleMarkerBasedScan.js",["1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992"],"import store from \"../store/index\"\r\nimport { orderBy, findIndex, inRange} from 'lodash'; \r\n\r\n// find the distance in KM from 1 point to another\r\nfunction distancetoPoint(lat1, lon1, lat2, lon2, unit) {\r\n    if ((lat1 == lat2) && (lon1 == lon2)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var radlat1 = Math.PI * lat1/180;\r\n        var radlat2 = Math.PI * lat2/180;\r\n        var theta = lon1-lon2;\r\n        var radtheta = Math.PI * theta/180;\r\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n        if (dist > 1) {\r\n            dist = 1;\r\n        }\r\n        dist = Math.acos(dist);\r\n        dist = dist * 180/Math.PI;\r\n        dist = dist * 60 * 1.1515;\r\n        if (unit==\"K\") { dist = dist * 1.609344 }\r\n        if (unit==\"N\") { dist = dist * 0.8684 }\r\n        return dist;\r\n    }\r\n}\r\n\r\n\r\nexport function ScanSites(){\r\n\r\n    /* ***************************************************************************************** */\r\n    // Arrays and Variable set up\r\n    this.SiteList=null;\r\n    this.SearchThisList=null\r\n    this.GlobalCluster=[]\r\n    this.GlobalCenterpoints=[]\r\n    this.CatchNoLongLat=[]\r\n    this.clusterCount=0\r\n    this.ProcessPointer=0;\r\n\r\n    this.ScanAreas=[\r\n        { name:'SameBuilding',  range: [0,0.2], allocation:0.4, maxAllocation:null, feather:0.1,restrict:[] },\r\n        { name:'CBD',           range: [0,2],   allocation:0.4, maxAllocation:null, feather:10, restrict:[]   },\r\n        { name:'InnerCity',     range: [0,10],  allocation:0.4, maxAllocation:null, feather:5,  restrict:[]   },\r\n        { name:'Metro',         range: [0,50],  allocation:0.4, maxAllocation:1, feather:1 , restrict:[]  },\r\n        { name:'OuterMetro',    range: [0,100], allocation:0.4, maxAllocation:1, feather:0 , restrict:[]  },\r\n        { name:'Regional',      range: [0,200], allocation:0.4, maxAllocation:1, feather:0 , restrict:[[7000,7999]]  },\r\n        { name:'Remote',        range: [0,500], allocation:0.4, maxAllocation:1, feather:0 , restrict:[[7000,7999]]  },\r\n        { name:'ExtremeRemote', range: [0,2000],allocation:0.4, maxAllocation:1, feather:0 , restrict:[[7000,7999]] },\r\n    ]\r\n   \r\n\r\n\r\n\r\n    /* ***************************************************************************************** */\r\n    // AUX Functions\r\n    /* ***************************************************************************************** */\r\n    this.JSONparse = ()=>{\r\n    \r\n        this.SiteList.map((site,i)=>{\r\n            if(typeof site.siteweighting === 'string')\r\n                site.siteweighting = orderBy(JSON.parse(site.siteweighting), ['name'], ['asc', 'desc']); \r\n            else\r\n                site.siteweighting = orderBy(site.siteweighting, ['name'], ['asc', 'desc']);\r\n        })\r\n        this.SiteList = orderBy(this.SiteList, item => item.count[0].WorkOrders, ['desc']);\r\n        this.SearchThisList = JSON.parse(JSON.stringify(this.SiteList));\r\n    }\r\n\r\n\r\n    this.CheckGlobalKeys=(NameKey)=>{\r\n        if(this.GlobalCluster[NameKey] === undefined)\r\n            this.GlobalCluster[NameKey] = []\r\n    }\r\n\r\n\r\n\r\n\r\n    /* ***************************************************************************************** */\r\n    // Rules\r\n    /* ***************************************************************************************** */\r\n\r\n    this.ArrayState = ()=>{\r\n        if((this.ScanAreas.length-1) === this.ProcessPointer || this.SearchThisList.length  === 0){\r\n            //console.log(\"SCAN COMPLETE\")\r\n            this.Global();\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n    this.PointerState=(int)=>{\r\n        if(int === (this.SearchThisList.length-1) && int > 0){\r\n            //console.log(\"Int and Arr are the Same\")\r\n            this.ProcessPointer = this.ProcessPointer + 1\r\n            this.ProcessScan(this.ScanAreas[this.ProcessPointer], 0);\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    // Rule : is Site in radius Rule\r\n    this.IsInDistance=(SiteInFocus,site,Range)=>{\r\n        let Distance = distancetoPoint(SiteInFocus.lat, SiteInFocus.long, site.lat,site.long, \"K\")\r\n\r\n        if( Distance === 0 || Distance >= Range.range[0] && Distance <= Range.range[1] || (Distance-((Range.feather/100)*Distance)) <= Range.range[1]) \r\n            return true\r\n        else\r\n            return false\r\n    }\r\n\r\n\r\n    // Rule : Restrict Postcode if in restricted Category\r\n    this.sitePostCodeCheck = (postcode,region, int)=>{\r\n        let Retrict = false\r\n\r\n            region.restrict.map((range,i)=>{ Retrict = inRange(postcode, range[0], range[1])})\r\n        \r\n            if(!Retrict)\r\n                return Retrict;\r\n            else\r\n                this.ProcessScan(this.ScanAreas[this.ProcessPointer], (int+1));\r\n                return Retrict;\r\n        \r\n    }\r\n\r\n    // check cluster integity\r\n    this.clusterintegrity =(SiteCluster)=>{\r\n        // check to see if the cluster should be handed over to a quota\r\n        if(SiteCluster.length === 0)\r\n           return false\r\n        else\r\n            return true\r\n    }\r\n\r\n\r\n    // Cluster Rules\r\n\r\n\r\n    this.ClusterQuota = (cluster, int)=>{\r\n        let resourceQuota=[]\r\n        let MaxAllocation = this.ScanAreas[this.ProcessPointer].maxAllocation;\r\n        cluster.map((site,i)=>{\r\n            site.siteweighting.map((weight,ii)=>{  \r\n                \r\n                if(MaxAllocation === null){\r\n                    resourceQuota.push(weight[this.ScanAreas[this.ProcessPointer].name]) \r\n                }else{\r\n                    if(resourceQuota.reduce((a, b) => a + b, 0) < this.ScanAreas[this.ProcessPointer].maxAllocation){\r\n                        resourceQuota.push(weight[this.ScanAreas[this.ProcessPointer].name]) \r\n                    }\r\n                    else{\r\n                        //console.log(\"Max Quota Hit for this cluster in this Category. remove the existing sites\")\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\r\n        if(resourceQuota.reduce((a, b) => a + b, 0) >=  this.ScanAreas[this.ProcessPointer].allocation){\r\n           //console.log(\"resourceQuota\", resourceQuota.reduce((a, b) => a + b, 0), this.ScanAreas[this.ProcessPointer].name, this.ScanAreas[this.ProcessPointer].allocation)\r\n            return resourceQuota.reduce((a, b) => a + b, 0)\r\n        }else{\r\n            //console.log(\"Cluster Failed to reach min resources\")\r\n            this.ProcessScan(this.ScanAreas[this.ProcessPointer], (int+1));\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /* ***************************************************************************************** */\r\n    // Power Functions \r\n    // Start Here\r\n    this.Search=()=>{\r\n        //console.log(\"Begin Marker Search\")\r\n        // 1. OrderSites on site weighting\r\n        this.JSONparse();\r\n        // 2,\r\n        this.ProcessScan(this.ScanAreas[this.ProcessPointer], 0);\r\n        // 3 Rules\r\n            // Site Rules\r\n            // CLuster Rules\r\n            // State of Search Array\r\n    }\r\n    \r\n\r\n    this.ProcessScan = (Range, int)=>{\r\n\r\n        // Scan Function Variables\r\n        let SiteCluster=[]\r\n        let CenterPoints=[]\r\n        \r\n\r\n        // Scan State Rules\r\n        // If State Complete\r\n        if(this.ArrayState())   \r\n            return true\r\n        // If Pointer exhusted\r\n        if(this.PointerState(int))\r\n            return true\r\n      \r\n        // Data Collection House Keeping\r\n            // check to see if region exists in this.global\r\n            this.CheckGlobalKeys(Range.name);\r\n\r\n\r\n        let SiteInFocus = this.SearchThisList[int];\r\n       \r\n        if(SiteInFocus.combined != null){\r\n            \r\n            // Rule. Check if post code is restricted to the current scan category\r\n            if(this.sitePostCodeCheck(SiteInFocus.postcode.name, Range, int))\r\n                return false\r\n\r\n            // Create an instance of a cluster center point, should cluster exist\r\n            CenterPoints.push({\r\n                name:`${SiteInFocus.region.name}-${Range.name}-${SiteInFocus.name}`,\r\n                center:{ lat: SiteInFocus.lat, lng: SiteInFocus.long },\r\n                range:Range.range[1],\r\n                scanCategory:Range.name,\r\n                feather:Range.feather,\r\n                region:SiteInFocus.region.name,\r\n                postcode:SiteInFocus.postcode.name\r\n            })\r\n\r\n\r\n            this.SearchThisList.map((site,ii)=>{\r\n               \r\n                // 1 rule for sites.\r\n                // Do they fit into the Radius of the center point?\r\n                if(this.IsInDistance(SiteInFocus, site, Range))\r\n                    SiteCluster.push(site)\r\n                else\r\n                    return false\r\n            })\r\n\r\n\r\n        }\r\n        else{\r\n            // CATCH ALL SITES NOT INCLUDED IN SCAN\r\n            let NoLngLat = findIndex(this.CatchNoLongLat, function(o) { return o.name == SiteInFocus.name; });\r\n            if(NoLngLat === -1)\r\n                this.CatchNoLongLat.push(SiteInFocus)\r\n            \r\n            \r\n        }\r\n\r\n        // should i push to Quota or fail this cluster nad move on?\r\n        if(this.clusterintegrity(SiteCluster))\r\n            this.findResourceQuota(SiteCluster, CenterPoints, int);\r\n        else\r\n            this.ProcessScan(this.ScanAreas[this.ProcessPointer], (int+1));\r\n       \r\n    }\r\n\r\n\r\n\r\n    this.findResourceQuota=(cluster, CenterPoints, int)=>{\r\n            //let resourceQuota=[]\r\n\r\n             // is cluster Quote over the current threshold?\r\n             let QuoteThreshold  = this.ClusterQuota(cluster, int) \r\n            \r\n             if(QuoteThreshold)\r\n                {\r\n                \r\n                    CenterPoints[0].resourceQuota = QuoteThreshold;\r\n                    CenterPoints[0].sites = cluster;\r\n                    \r\n                    this.GlobalCluster[this.ScanAreas[this.ProcessPointer].name].push(cluster);\r\n                    this.GlobalCenterpoints.push(CenterPoints[0])\r\n                    \r\n                    this.removeSites(cluster)\r\n             }\r\n\r\n           return true;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    this.removeSites=(cluster)=>{\r\n        //console.log(\"Cluster REMOVAL\")\r\n        \r\n        \r\n        let Index;\r\n        cluster.map((site,i)=>{\r\n            //console.log(site);\r\n            Index = findIndex(this.SearchThisList, function(o) { return o.name == site.name; });\r\n            //console.log(\"Index\", Index, site.name)\r\n            this.SearchThisList.splice(Index , 1)\r\n        })\r\n        this.ProcessScan(this.ScanAreas[this.ProcessPointer], 0);\r\n        //console.log(this.GlobalCluster);\r\n        //console.log(this.SearchThisList.length);\r\n        \r\n    }\r\n\r\n    this.Global = ()=>{\r\n\r\n        //console.log(\"this.GlobalCluster\", this.GlobalCluster.length);\r\n        //console.log(\"this.CatchNoLongLat\", this.CatchNoLongLat.length);\r\n        //console.log(\"this.SearchThisList\", this.SearchThisList.length);\r\n\r\n\r\n        store.dispatch({ type:'SCANSTATE', payload:false}); \r\n        store.dispatch({ type:'STOREMARKERRESULTS', payload:this.GlobalCluster});\r\n        store.dispatch({ type:'STOREMARKERCENTERPOINTS', payload:this.GlobalCenterpoints}); \r\n        store.dispatch({ type:'STORERESIDUALMARKERS', payload:this.SearchThisList});\r\n        store.dispatch({ type:'STORENOLONGLAT', payload:this.CatchNoLongLat}); \r\n        \r\n        \r\n        \r\n    }\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleScanProcess.js",["1993"],"\r\n// Private Functions\r\nimport store from \"../store/index\"\r\nimport axios from 'axios';\r\nimport {useAPILOCATION} from \"./authUser\"\r\n\r\n\r\n\r\nexport const CreateNewScan = (value)=>{  store.dispatch({ type:'CREATENEWDATASET', payload:value});} \r\n\r\n\r\nexport const SetSelected = (value)=>{\r\n    store.dispatch({ type:'USERDATASETSELECTEDDATABASE', payload:value});\r\n    \r\n}\r\n\r\nexport const StoreSelected_Single =(Data)=>{\r\n\r\n    console.log(Data);\r\n    store.dispatch({ type:'USERSTORESINGLEDATASET', payload:Data});\r\n} \r\n\r\nexport const BacktoScanOptions = ()=>{\r\n        console.log(\"BACK\");\r\n        CreateNewScan(false)\r\n        SetSelected(false)\r\n        StoreSelected_Single([])    \r\n}\r\n\r\nexport const BacktoAddItemsSingle = ()=>{\r\n    console.log(\"BACK to Select\");\r\n    \r\n    SetSelected(false)\r\n   // StoreSelected_Single([]) \r\n}\r\n\r\n\r\nexport const ResetCreateNewModel = ()=>{\r\n\r\n  \r\n    store.dispatch({ type:'CREATENEWDATASET', payload:false})\r\n    store.dispatch({ type:'USERDATASETSELECTEDDATABASE', payload:false})\r\n    store.dispatch({ type:'USERSTORESINGLEDATASET', payload:[]})\r\n    store.dispatch({ type:'USERSCANPROCESSING', payload:false})\r\n}\r\n\r\nexport const FetchSelectedItems = async  (DATA, TITLE, DESCRIPTION, S,E)=>{\r\n\r\n    let IDStr=[];\r\n    DATA.map((customer,i)=>{\r\n            IDStr.push(customer.id)\r\n    })\r\n\r\n    const ENDPOINT=useAPILOCATION()+'sites/scan'\r\n    const JWTToken = store.getState().AUTH.jwt;\r\n    const AuthUSer = store.getState().AUTH.user\r\n    const axiosHeader = {Authorization: \"Bearer \" + JWTToken}\r\n\r\n    \r\n    \r\n\r\n    console.log(\"Items sent to Strapi \", IDStr.length)\r\n    console.log(AuthUSer.id,  TITLE, DESCRIPTION)\r\n    const ScanName=TITLE\r\n    const ScanDescription=DESCRIPTION\r\n    \r\n    \r\n    store.dispatch({ type:'USERSCANPROCESSING', payload:true}); \r\n\r\n    //await axios.get(ENDPOINT+IDStr.toString()) \r\n\r\n   await axios({ url: ENDPOINT+'/'+[S,E].toString()+'/'+ScanName+'/'+ScanDescription+'/'+AuthUSer.id+'/'+IDStr.toString(), method: 'get', headers: axiosHeader})\r\n        .then(function (res) {\r\n            console.log(\"Create Model Return Value from Server\", res.data);\r\n            \r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n        .then(function () {\r\n            // always executed\r\n        });\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\authUser.js",["1994","1995","1996"],"// Private Functions\r\nimport store from \"../store/index\"\r\nimport axios from 'axios';\r\n\r\n\r\n// lazy testing only Fix this!\r\n\r\nexport const useAPILOCATION = () => {\r\n        let APILOCATION;\r\n        if (process.env.NODE_ENV !== 'production') {\r\n                APILOCATION = 'http://localhost:1337/'\r\n                //APILOCATION = 'https://intact-analtyiq.herokuapp.com/'\r\n                \r\n        }\r\n        else\r\n        {\r\n                APILOCATION = 'https://intact-analtyiq.herokuapp.com/'\r\n        }        \r\n        \r\n        return APILOCATION\r\n} \r\n\r\n\r\nexport const StrapiAuth = async (u,p)=>{\r\n        store.dispatch({ type:'PROCESSAUTH', payload:true});\r\n   \r\n        await axios.post(useAPILOCATION()+'auth/local', {\r\n        identifier: u,\r\n        password:p,\r\n        }).then((res)=>{\r\n              \r\n                store.dispatch({ type:'PROCESSAUTH', payload:false});\r\n                store.dispatch({ type:'AUTHUSERJWT', payload:res.data.jwt});\r\n                store.dispatch({ type:'AUTHUSER', payload:res.data.user});\r\n\r\n                // TODO\r\n                // for dev only, change this for production\r\n                localStorage.setItem('jwt', res.data.jwt);\r\n                localStorage.setItem('jwtid', res.data.user.id);\r\n\r\n\r\n        }).catch(function (thrown) {\r\n                if (axios.isCancel(thrown)) {\r\n                  console.log('Request canceled', thrown.message);\r\n                } else {\r\n                  // handle error\r\n                  console.log(\"ERROR\");\r\n                  store.dispatch({ type:'PROCESSAUTH', payload:false});\r\n                  store.dispatch({ type:'PROCESSAUTHERROR', payload:true});\r\n                }\r\n        });\r\n}\r\n\r\n\r\nexport const JWT=()=>{\r\n        \r\n        let JWT = localStorage.getItem('jwt');\r\n        let JWTID = localStorage.getItem('jwtid');\r\n      \r\n        if(JWT !== null){\r\n                store.dispatch({ type:'AUTHUSERJWT', payload:JWT});\r\n        }\r\n        if(JWTID !== null){\r\n                store.dispatch({ type:'AUTHUSER', payload:{id:JWTID} });\r\n        }\r\n        \r\n}\r\n\r\n\r\n\r\n/* ************************************************************************* */\r\n// Scan Related functions\r\nexport const FetchPreviousScans = ()=>{\r\n        \r\n        const axiosHeader = {Authorization: \"Bearer \" + store.getState().AUTH.jwt}\r\n        const APIFETCH = useAPILOCATION()+'scan-histories?users_permissions_user.id='+store.getState().AUTH.user.id+'&_sort=createdAt:DESC'\r\n        \r\n        // Tell UI whats going on;\r\n        store.dispatch({ type:'REFRESHSCANHISTORY', payload:true});\r\n        \r\n        // Send API Request\r\n        axios({ url: APIFETCH, method: 'get', headers: axiosHeader})\r\n        .then((result) => { \r\n\r\n                store.dispatch({ type:'AUTHSTORESCANHISTORY', payload:result.data});\r\n                store.dispatch({ type:'REFRESHSCANHISTORY', payload:false});\r\n                }).catch(function (thrown) {\r\n                        store.dispatch({ type:'REFRESHSCANHISTORY', payload:false});\r\n                        if (axios.isCancel(thrown)) { console.log('Request canceled', thrown.message);\r\n                        } else { console.log(\"ERROR\", thrown);}\r\n                });\r\n}\r\n\r\n\r\n\r\n\r\nexport const FetchSingleScanResult = (scanID, scan)=>{\r\n\r\n        store.dispatch({ type:'STORESELECTEDUI', payload:{active:false,processing:true,activeID:scanID} }); \r\n\r\n        const AWSURL=' https://intactanalytiq.s3-ap-southeast-2.amazonaws.com/';\r\n       // 6002d5ece940b655642d22df.json\r\n       // headers: axiosHeader\r\n       axios({ url: AWSURL+scanID+'.json', method: 'get'})\r\n        .then((result) => { \r\n        \r\n                //console.log(result.data);\r\n                //result.data.SCANSTATE\r\n                const UICHANGE={active:true,processing:false, activeID:scanID}   \r\n                store.dispatch({ type:'STORESELECTEDMODEL', payload:result.data}); \r\n                store.dispatch({ type:'STORESELECTEDMODELMETA', payload:scan}); \r\n                \r\n                store.dispatch({ type:'STORESELECTEDUI', payload:UICHANGE}); \r\n                //console.log(scan)\r\n                }).catch(function (thrown) {\r\n                        if (axios.isCancel(thrown)) { console.log('Request canceled', thrown.message);\r\n                        } else { console.log(\"ERROR\", thrown);}\r\n                });\r\n}\r\n\r\n\r\n\r\n\r\nconst FetchAPI = (Route, TYPE, i=0)=>{\r\n        const APIFETCH =useAPILOCATION()+Route\r\n        const JWTToken = store.getState().AUTH.jwt;\r\n        //console.log(JWTToken)\r\n        const axiosHeader = {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Authorization': \"Bearer \" + JWTToken,    \r\n       }\r\n\r\n        axios({ url: APIFETCH, method: 'get', headers: axiosHeader})\r\n        .then((result) => { \r\n        \r\n                //console.log(result);\r\n                store.dispatch({ type:TYPE, payload:result.data});\r\n\r\n                }).catch(function (thrown) {\r\n                        if (axios.isCancel(thrown)) { console.log('Request canceled', thrown.message);\r\n                        } else { \r\n                                console.log(\"ERROR\", thrown);\r\n                                //console.log(\"i = \", i)\r\n                                if(i<3){\r\n                                        \r\n                                        setTimeout(()=>{ FetchAPI(Route, TYPE, i=i+1) },3000)\r\n                                }\r\n                                else{\r\n                                        store.dispatch({ type:'DATAFETCHFAIL', payload:true}); \r\n                                }\r\n                                \r\n                        }\r\n                });\r\n}\r\n\r\n\r\n\r\n\r\nconst GraphQLFetch = (Route,i=0)=>{\r\n        const APIFETCH =useAPILOCATION()+'graphql'\r\n        const JWTToken = store.getState().AUTH.jwt;\r\n        //console.log(JWTToken)\r\n        const axiosHeader = {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + JWTToken,    \r\n       }\r\n      \r\n       let QUERY = Route\r\n\r\n        axios({ url: APIFETCH, method: 'post', data: {query: `${QUERY}` }, headers: axiosHeader})\r\n        .then((result) => { \r\n\r\n                        // for demo purposes we only need trade types and customers\r\n                        // this is for dev only NOT for production\r\n                        store.dispatch({ type:'STORETRADETYPES', payload:result.data.data['tradeTypes']});\r\n                        store.dispatch({ type:'STORECUSTOMERS', payload:result.data.data['customers']});\r\n                }).catch(function (thrown) {\r\n                        console.log(\"ERROR\", thrown);\r\n                      \r\n                        if(i<3){\r\n                                \r\n                                setTimeout(()=>{ GraphQLFetch(Route, i=i+1) },3000)\r\n                        }\r\n                        else{\r\n                                store.dispatch({ type:'DATAFETCHFAIL', payload:true}); \r\n                        }\r\n        });\r\n}\r\n\r\n\r\n\r\n\r\nexport const FetchDataIntegrity=()=>{\r\n        // list out the items needed to fetch\r\n        // do a look up to see if these items are already in the reducer\r\n        \r\n        GetTradeTypes();\r\n        GetCustomers();\r\n        FetchPreviousScans();\r\n\r\n\r\n        //GetTradeAllocations();\r\n        //GraphQLFetch()\r\n}\r\n\r\n\r\nconst GetCustomers=()=>{\r\n        //console.log(\"GetCustomers\")\r\n      //  if(store.getState().STRAPI.UserData.Customers === false)\r\n      //          FetchAPI('customers/intact', 'STORECUSTOMERS')       \r\n               //`{customers {name} }` \r\n\r\n               axios({ url: 'https://intactanalytiq.s3-ap-southeast-2.amazonaws.com/cache/5fe17522ab400d456889ac66ccc.json', method: 'get'})\r\n                        .then((result) => { \r\n        \r\n                                //console.log(result);\r\n                                store.dispatch({ type:'STORECUSTOMERS', payload:result.data});\r\n\r\n                        }).catch(function (thrown) {\r\n                                if (axios.isCancel(thrown)) { console.log('Request canceled', thrown.message);\r\n                                } else { \r\n                                        console.log(\"ERROR\", thrown);     \r\n                                }\r\n                        });\r\n}\r\n\r\n\r\nconst GetTradeTypes=()=>{\r\n        //console.log(\"GetTradeTypes\")\r\n        if(store.getState().STRAPI.UserData.tradetypes === false)\r\n              //  FetchAPI('trade-types/intact', 'STORETRADETYPES')      \r\n                //GraphQLFetch(`{tradeTypes { id name trade_allocation_ratio{Name id} }}`)  \r\n                //customers { name id }\r\n\r\n                axios({ url: 'https://intactanalytiq.s3-ap-southeast-2.amazonaws.com/cache/60401c70ab55256074ba2da4tt.json', method: 'get'})\r\n                        .then((result) => { \r\n        \r\n                                //console.log(result);\r\n                                store.dispatch({ type:'STORETRADETYPES', payload:result.data});\r\n\r\n                        }).catch(function (thrown) {\r\n                                if (axios.isCancel(thrown)) { console.log('Request canceled', thrown.message);\r\n                                } else { \r\n                                        console.log(\"ERROR\", thrown);     \r\n                                }\r\n                        });\r\n}\r\n\r\n\r\n\r\nconst GetSites=()=>{\r\n        //console.log(\"GetSites\")\r\n        if(store.getState().STRAPI.sites === false)\r\n                FetchAPI('sites/intact', 'STORESITES')        \r\n}\r\n\r\nconst GetTradeAllocations=()=>{\r\n        //console.log(\"GetTradeAllocations\")\r\n        if(store.getState().STRAPI.UserData.tradeAllocationRatio === false)\r\n                FetchAPI('trade-allocation-ratios', 'STORETRADEALLOCATION')        \r\n}\r\n\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Landing\\index.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\AuthLogin\\index.js",["1997","1998","1999"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_AUTH_FULL} from \"Context/AUTH\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {LogoMain,AlogoBlue,JLLMain,AlogoWhite} from \"Assets/logo\"\r\n\r\nimport LoginForm from \"venders/MaterialUI/Forms/LoginForm\"\r\nimport NivoPie from \"venders/Nivo/NivoRadial\";\r\n\r\nconst AuthLogin = ()=>{\r\n\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const Pushhistory = useHistory();\r\n    const RandomInt=()=>{\r\n        return ((Math.random() * 100) + 1).toFixed(2);\r\n    }\r\n\r\n    const [SELETCED, setSELETCED] = useState([\r\n            { 'name':'Same Building', 'Appearances':RandomInt()},\r\n            { 'name':'CBD','Appearances':RandomInt()},\r\n            { 'name':'Inner City','Appearances':RandomInt()},\r\n            { 'name':'Metro','Appearances':RandomInt()},\r\n            { 'name':'Outer Metro','Appearances':RandomInt()},\r\n            { 'name':'Regional','Appearances':RandomInt()},\r\n        ])\r\n \r\n    //const SELETCED=[{ name:'inScope', Appearances:100},{ name:'Out of Scope',Appearances:200}]\r\n    useEffect(()=>{ if(AUTH.jwt !== false){Pushhistory.push(\"/auth\");}},[AUTH]);\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n        setInterval(function(){ \r\n            //console.log(Math.floor((Math.random() * 100) + 1)); \r\n\r\n            setSELETCED([{ 'name':'Same Building', 'Appearances':RandomInt()},\r\n            { 'name':'CBD','Appearances':RandomInt()},\r\n            { 'name':'Inner City','Appearances':RandomInt()},\r\n            { 'name':'Metro','Appearances':RandomInt()},\r\n            { 'name':'Outer Metro','Appearances':RandomInt()},\r\n            { 'name':'Regional','Appearances':RandomInt()}])\r\n            \r\n\r\n        }, 3000);\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"LoginForm\">\r\n            <div className=\"left\">\r\n               <div></div>\r\n                <div className=\"LoginChart\">\r\n                    <AlogoBlue />\r\n                    <h1>AnalytiQ</h1>\r\n                    <div style={{height: 300, width:'50%'}}>\r\n                        <NivoPie data={SELETCED} id={`name`} value={'Appearances'} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"productOf\">\r\n                   \r\n                    <JLLMain />\r\n                  \r\n                    <p>Powered by Intact AnalytiQ</p>\r\n                    \r\n                    \r\n                   \r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"right\">\r\n                <LoginForm />\r\n                <Disclaimer />\r\n             </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default AuthLogin;\r\n\r\n\r\nconst Disclaimer = ()=>{\r\n    return(\r\n          <div className=\"disclaimer\">\r\n              <p>Please wait whilst we fire up the Dyno's</p>\r\n              <p>Build :  Dolores Beta 0.1</p>\r\n          </div>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\index.js",["2000","2001","2002","2003","2004","2005","2006","2007"],"import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_AUTH_FULL} from \"Context/AUTH\";\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\n\r\n// actions\r\nimport {FetchDataIntegrity} from \"actions/authUser\";\r\n// Components\r\nimport history from  '../../History'\r\nimport DashBoard from \"../../Template/AuthDashboard\"\r\n\r\n// Dataloading\r\nimport {LogoMainWhite} from \"../../Assets/logo\"\r\n\r\n// Routes\r\nimport ComponentLanding from \"./Landing\";\r\nimport ComponentDataDump from \"./DataDump\"\r\nimport ComponentCreateModel from \"./CreateModel\";\r\nimport ComponentViewModels from \"./ViewModels\";\r\nimport CompareComponent from \"./CompareModels\";\r\nimport ComponentScan from \"./ResourceAllocationScan\"\r\nimport UIComponents from \"./UICompnents/index\"\r\n//import ResultsComponent from \"./MarkerBasedScan/MarkerBasedScan\";\r\nimport ResultsComponent from \"./SingleModelResult\";\r\nimport ReleaseNotes from \"./ReleaseNotes\";\r\nimport Pipeline from \"./Pipeline\"\r\n\r\nconst routes = [\r\n    { Rpath: \"/\", component: ComponentLanding, exact:true},\r\n    { Rpath: \"/view-models\", component: ComponentViewModels, exact:true},\r\n    { Rpath: \"/create-model\", component: ComponentCreateModel, exact:false},\r\n    { Rpath: \"/compare-models\", component: CompareComponent, exact:false},\r\n    { Rpath: \"/MarkerBasedScan\", component: ComponentScan, exact:false},\r\n    { Rpath: \"/integrity\", component: ComponentDataDump, exact:false},\r\n    { Rpath: \"/results\", component: ResultsComponent, exact:false},\r\n    { Rpath: \"/UIComponents\", component: UIComponents, exact:false},\r\n    { Rpath: \"/release-notes\", component: ReleaseNotes, exact:false},\r\n    { Rpath: \"/pipeline\", component: Pipeline, exact:false},\r\n   \r\n];\r\n\r\nconst Auth = (props)=>{\r\n\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const Pushhistory = useHistory();\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n\r\n    const [DataStatus, setDataStatus] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        //console.log(AUTH)\r\n        if(AUTH.jwt === false){\r\n            console.log(\"USER DENIED\")\r\n            //Pushhistory.push(\"/demo/login\");\r\n            Pushhistory.push(\"/\");\r\n        }else{ \r\n            console.log(\"USER AUTHED\")\r\n        } \r\n    }, [AUTH])\r\n\r\n\r\n    const checkDataStatus=()=>{\r\n        let DS=true\r\n        Object.keys( STRAPI.UserData).map(function(key, index) { \r\n            if(STRAPI.UserData[key] === false){\r\n                DS = STRAPI.UserData[key] \r\n            }\r\n        });\r\n        setDataStatus(DS)\r\n    }\r\n\r\n    useEffect(()=>{ checkDataStatus() },[STRAPI.UserData])\r\n\r\n    return(\r\n           <>\r\n            { DataStatus ? <AuthRouters {...props} />:<FetchData /> }\r\n           </>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n//   </Switch> \r\n\r\n\r\nconst FetchData=()=>{\r\n\r\n    const [Fetch, setFetch] = useState(null)\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n\r\n    useEffect(()=>{\r\n        if(Fetch === null){\r\n            FetchDataIntegrity()\r\n            setFetch(true)\r\n        }\r\n    },[])\r\n    return( \r\n        <div className=\"DataLoad\">\r\n            <div className=\"LoadThis\">    \r\n                <LoadingCopy />\r\n                <div className=\"loader\">\r\n                <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>\r\n                <LogoMainWhite />\r\n                \r\n                {\r\n                    STRAPI.DataError ? 'There was an Error loading the data. Please try again later':''\r\n                }\r\n              <Disclaimer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst LoadingCopy=()=>{\r\n    return(\r\n      <div>\r\n           <h1>Intact AnalytiQ</h1>\r\n            <h2>Fetching Data</h2>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const Disclaimer = ()=>{\r\n      return(\r\n            <div className=\"disclaimer\">\r\n                <p>This is a prototype build of Intact Analyiq alpha v0.1 </p>\r\n                <p>Please wait whilst we fire up the Dyno's and fetch your profile</p>\r\n            </div>\r\n      )\r\n  }\r\n\r\n\r\nconst AuthRouters = (props)=>{\r\n\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const MODEL = useContext_SCAN_FULL()\r\n    const Pushhistory = useHistory();\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n\r\n    const [DataStatus, setDataStatus] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        //console.log(AUTH)\r\n        if(AUTH.jwt === false){\r\n            //console.log(\"USER DENIED\")\r\n            //Pushhistory.push(\"/demo/login\");\r\n            Pushhistory.push(\"/\");\r\n        }else{ \r\n            //console.log(\"USER AUTHED\")\r\n        }\r\n    }, [AUTH])\r\n\r\n    useEffect(()=>{\r\n        //console.log(MODEL.SelectedModel)\r\n    },[MODEL])\r\n    return(\r\n      \r\n        <Router  basename={'/auth/'} >\r\n            <Switch history={history}>\r\n                <DashBoard>\r\n                { \r\n                    routes.map((route, i) => (\r\n                            <Route \r\n                                key={i}  \r\n                                exact={route.exact} \r\n                                path={route.Rpath} \r\n                                render={()=> <route.component {... props}/> }\r\n                            /> \r\n                        \r\n                        ))\r\n                }\r\n                </DashBoard>\r\n                </Switch>\r\n        </Router>\r\n    \r\n)\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\About\\about.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Contact\\contact.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\index.js",["2008","2009","2010","2011"],"import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport PublicLayout from \"../../Template/PublicLayout\";\r\n// Components\r\nimport history from  '../../History'\r\n\r\nimport ComponentAbout from \"./About/about\";\r\nimport ComponentLanding from \"./Landing/index\"\r\nimport ComponentContact from \"./Contact/contact\";\r\nimport ComponentLogin from \"./AuthLogin/index\";\r\nimport ComponentUnAuth from \"./unAuth/UnAuth\";\r\n\r\nconst publicPath='demo'\r\nconst routes = [\r\n    { Rpath: `/${publicPath}/`, component: ComponentLogin, exact:true},\r\n   // { Rpath: `/${publicPath}/about`, component: ComponentAbout, exact:false},\r\n   // { Rpath: `/${publicPath}/contact`, component: ComponentContact, exact:false},\r\n   // { Rpath: `/${publicPath}/login`, component: ComponentLogin, exact:false},\r\n   // { Rpath: `/${publicPath}/unauthorized`, component: ComponentUnAuth, exact:false},\r\n  ];\r\n\r\n\r\nconst Landing = (props)=>{\r\n\r\n    return(\r\n\r\n                <Switch  history={history}>\r\n                    <PublicLayout>\r\n                    {\r\n                        routes.map((route, i) => (<Route key={i}  exact={route.exact} path={route.Rpath} render={()=> <route.component {... props}/> }/> ))\r\n                    }\r\n                    </PublicLayout>\r\n                </Switch> \r\n    )\r\n}\r\n\r\nexport default Landing\r\n\r\n// </Switch>\r\n/**\r\n * *\r\n *  <div className=\"InnerFrame\">\r\n            <h1>Landing Page</h1>\r\n            <h2>Asset Set List</h2>\r\n            <h3>Header 3</h3>\r\n            <p>Paragragh</p>\r\n            <ul>\r\n                <li>List item</li>\r\n                <li>List item</li>\r\n                <li>List item</li>\r\n            </ul>\r\n\r\n        <h2> For Testing </h2>\r\n            <Login />\r\n\r\n        </div>\r\n */","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\unAuth\\UnAuth.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\AUTH.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\AUTH.js",["2012"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_AUTH_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_AUTH_FULL = ()=>{\r\n    return useContext(Context_AUTH_FULL)\r\n}\r\n\r\n\r\n \r\nexport const AUTHContextProvider = ({children})=>{\r\n    const AUTH = useSelector(state => state.AUTH );\r\n\r\n    useMemo(()=>{  },[AUTH]) \r\n\r\n    return(\r\n            <Context_AUTH_FULL.Provider value={AUTH}>\r\n                {children}            \r\n            </Context_AUTH_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\AuthDashboard.js",["2013","2014"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {AlogoBlue, AlogoWhite} from 'Assets/logo'\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport SideBar from \"../Navigation/SideBar\";\r\n\r\n\r\nconst drawerWidth = 60;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n   // width: `calc(100% - ${drawerWidth}px)`,\r\n    //marginLeft: drawerWidth,\r\n    zIndex:999\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    //backgroundColor:'#89b2c3',\r\n    zIndex:99\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor:'#fff',\r\n    borderRight:'1px solid #89b2c3'\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: { \r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PermanentDrawerRight(props) {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <AlogoWhite />\r\n          <div>\r\n            <h1>Intact AnalytiQ </h1>\r\n            <p> Front end Portal  (Status : {`${process.env.NODE_ENV}` })</p>\r\n          </div>\r\n            \r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n    \r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n      \r\n        <SideBar />\r\n       \r\n      </Drawer> \r\n      \r\n      <main className=\"Auth\">  \r\n         <div className={classes.toolbar} />\r\n         {props.children}\r\n      </main>\r\n    </div>\r\n\r\n  );\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\PublicLayout.js",["2015","2016","2017","2018","2019","2020"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n\r\n// Components\r\nimport PublicNavigation from \"./Public/Navigation\"\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n   // width: `calc(100% - ${drawerWidth}px)`,\r\n    //marginLeft: drawerWidth,\r\n    zIndex:999\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    backgroundColor:'#89b2c3',\r\n    zIndex:99\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor:'#89b2c3'\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PermanentDrawerRight(props) {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <main className=\"Public\">  \r\n            <div  className=\"InnerFrame\">\r\n                {props.children}\r\n            </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n/*\r\n<div className={classes.toolbar} />\r\n <CssBaseline />\r\n\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <h1>Intact AnalytiQ </h1>\r\n            <p>Front end Portal</p>\r\n         \r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n*/\r\n\r\n\r\n//    <PublicNavigation />\r\n\r\n/*\r\n\r\n  <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n      \r\n      </Drawer>\r\n\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\Public\\Navigation.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\input.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\LoginForm.js",["2021","2022","2023"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_AUTH_FULL} from \"Context/AUTH\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {LogoMain,AlogoBlue,AlogoWhite} from \"Assets/logo\"\r\nimport {StrapiAuth} from \"actions/authUser\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function BasicTextFields() {\r\n    const AUTH = useContext_AUTH_FULL();\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{},[AUTH])\r\n  return (\r\n        <>\r\n            {\r\n                AUTH.process ? <Processing />:<LoginForm />\r\n            }\r\n        </>\r\n  );\r\n}\r\n\r\n\r\nconst Processing = ()=>{\r\n   \r\n    return(\r\n        <><h3>Authenticating User ...</h3></>\r\n    )\r\n}\r\n\r\nconst Error = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const ErrorTrue='There was an Error in the Username or Password when processing your details'\r\n    const ErrorFalse=''\r\n    useEffect(()=>{},[AUTH])\r\n    return(\r\n        <>{\r\n            AUTH.error ? <h3>{ErrorTrue}</h3>:<h3>{ErrorFalse}</h3>\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nconst LoginForm = ()=>{\r\n    const classes = useStyles();\r\n    const [USERNAME, setUsername] = useState('')\r\n    const [PASSWORD, setPassword] = useState('')\r\n\r\n    const handleClick=()=>{\r\n\r\n        StrapiAuth(USERNAME,PASSWORD)\r\n    }\r\n\r\n    const handleEmail=(e)=>{setUsername(e.target.value)}\r\n    const handlePassword=(e)=>{setPassword(e.target.value)}\r\n\r\n    return(\r\n        <div className=\"LoginContainer\">\r\n            <Error />\r\n            <div className=\"LoginlogoFormContainer\">\r\n                <AlogoWhite />\r\n                <div>\r\n                    <div className=\"loginInput\">\r\n                        <TextField \r\n                            id=\"outlined-basic\" \r\n                            label=\"e-mail\" \r\n                            variant=\"outlined\" \r\n                            onChange={handleEmail}\r\n                        />\r\n                    </div>\r\n                    <div className=\"loginInput\">\r\n                        <TextField\r\n                            id=\"standard-password-input\"\r\n                            label=\"password\"\r\n                            type=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            variant=\"outlined\"\r\n                            onChange={handlePassword}\r\n                        />\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n           \r\n            <button className=\"SelectClientBtn\" onClick={()=>{handleClick()}}>Login</button>\r\n                \r\n        </div>\r\n        )\r\n}\r\n\r\n/*\r\n\r\n<TextField id=\"standard-basic\" label=\"Standard\" />\r\n      <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Landing.js",["2024","2025","2026"],"import React, { useEffect } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_AUTH_FULL} from \"Context/AUTH\";\r\nimport Footer from \"./Components/Layout/Footer\";\r\nimport Auth from 'Pages/Auth';\r\n\r\nconst Profile = ()=>{    \r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const AUTH = useContext_AUTH_FULL()\r\n    useEffect(()=>{\r\n        //console.log(AUTH)\r\n    },[AUTH])\r\n\r\n    return(\r\n    <>\r\n        <div className=\"OuterContainer\">\r\n            <div className=\"InnerFrame\">\r\n            \r\n                <div className=\"Content\">\r\n                    <ArticleContainer title={`Disclaimer!!`}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n                    </ArticleContainer>\r\n                    <ArticleContainer title={`About AnalytiQ`}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n                    </ArticleContainer>\r\n                    <ArticleContainer title={`What is a Model`}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n                    </ArticleContainer>\r\n                    <ArticleContainer title={`Viewing saved Models`}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n                    </ArticleContainer>\r\n                    <ArticleContainer title={`Comparing Models`}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n                    </ArticleContainer>\r\n                   \r\n                </div>\r\n                \r\n               \r\n            </div>\r\n            <div className=\"SideBarRight\">\r\n                <h2>User : {AUTH.user.username}</h2>\r\n             \r\n            </div>\r\n           \r\n        </div>\r\n        <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\nconst ArticleContainer = (props)=>{\r\n    const{title} = props\r\n    return(\r\n        <div className=\"ArticleContainer\">\r\n            <h2>{title}</h2>\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Loading\\Loading.js",["2027","2028"],"import React, { useEffect } from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {LogoMainWhite} from \"../../../Assets/logo\"\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nconst Loading=()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const Pushhistory = useHistory();\r\n    useEffect(()=>{\r\n        //console.log(UX)\r\n        if(UX.STRAPIRECEIVED){ Pushhistory.push(\"/demo\");}\r\n    },[UX])\r\n    return(\r\n        <div className=\"App\">\r\n            <div className=\"LoadThis\">\r\n                \r\n                <LoadingCopy />\r\n                <div className=\"loader\">\r\n                <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>\r\n                <LogoMainWhite />\r\n              <Disclaimer />\r\n            </div>\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;\r\n\r\n\r\n\r\nconst LoadingCopy=()=>{\r\n    return(\r\n      <div>\r\n           <h1>Intact AnalytiQ</h1>\r\n            <h2>Fetching Data</h2>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const Disclaimer = ()=>{\r\n      return(\r\n            <div className=\"disclaimer\">\r\n                <p>This is a prototype build of Intact Analyiq alpha v0.1 </p>\r\n                <p>Please wait whilst we fire up the Dyno's</p>\r\n            </div>\r\n      )\r\n  }","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\DataDump.js",["2029","2030"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst DataDump = ()=>{\r\n    return(\r\n        <>\r\n            Remove THiS\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataDump;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan.js",["2031","2032","2033","2034"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_STRAPI_FULL} from \"../../Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"../../Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"../../Context/SCAN\";\r\nimport {ScanSites} from \"../../actions/HandleMarkerBasedScan\";\r\n\r\n// Components\r\nimport ResourceAllocationMap from \"./ResourceAllocationScan/Map\";\r\n\r\nconst RenderScamSites = new ScanSites();\r\n\r\nconst RecourseAllocationScan = ()=>{\r\n\r\n    \r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n\r\n\r\n    const Scan = ()=>{\r\n        //console.log(STRAPI.sites);\r\n        // Pass only fully loaded sites\r\n        let SiteList=[]\r\n        STRAPI.sites.map((site)=>{\r\n                console.log(site.count)\r\n    \r\n                // Add any new rules if required\r\n                if(site.count.length!== 0){\r\n                    SiteList.push(site)\r\n                }\r\n        })\r\n        RenderScamSites.SiteList=SiteList;\r\n        RenderScamSites.Search();\r\n    }\r\n\r\n\r\n    useEffect(()=>{ if(SCAN.active){Scan() }},[SCAN.active])\r\n\r\n    return(\r\n        <>\r\n            {SCAN.MarkerScanResults ?  <ResourceAllocationMap />: false}\r\n        </>\r\n    )\r\n}\r\n//  <ScanBtn />\r\nexport default RecourseAllocationScan;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Map.js",["2035","2036"],"import React, {useEffect, useState} from 'react'\r\n//import {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\n//import {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {ScanSites} from \"actions/HandleMarkerBasedScan\";\r\nimport { GoogleMap,} from '@react-google-maps/api';\r\n\r\n// Components\r\nimport Markers from \"./MapComponents/LocationMarkers\";\r\nimport ResidualMarkers from \"./MapComponents/ResidualLocationMarkers\";\r\nimport CenterPoints from \"./MapComponents/MarkersCenterpoints\";\r\nimport MarkerBasedResults from \"./MapComponents/MarkerBasedResults\";\r\nimport ColorKey from \"./Results/ColorKey\"\r\n\r\nconst RenderScamSites = new ScanSites();\r\n\r\nconst containerStyle = { height: \"600px\", width: \"auto\" };\r\n\r\n\r\nconst ResourceAllocationMap=()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    useEffect(()=>{\r\n        //console.log(SCAN.MarkerScanResults)\r\n    },[SCAN])\r\nreturn(\r\n    <div className=\"ScanMapMain\" id=\"MainMap\">\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={{\r\n                    lat: -37.813629,\r\n                    lng: 144.963058\r\n                  }}\r\n                zoom={14}\r\n               \r\n            >\r\n            { /* Child components, such as markers, info windows, etc. */ }\r\n            \r\n                <Markers />\r\n                <CenterPoints />\r\n                <ResidualMarkers />\r\n            </GoogleMap>\r\n\r\n            <ColorKey />\r\n            <MarkerBasedResults />\r\n        </div>\r\n)\r\n}\r\n\r\nexport default ResourceAllocationMap;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\ResidualLocationMarkers.js",["2037","2038","2039","2040","2041","2042","2043","2044","2045"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\n\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkersALL = ()=>{\r\n\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name)=>{console.log(\"Marker Clicked\", name) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n        //console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n\r\n        //console.log(\"markers\", markers)\r\n        \r\n        let StoreMarkers=[]         \r\n                markers.map((site,i)=>{\r\n                    Targeticon = {\r\n                        path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                        fillColor: '#fff',\r\n                        fillOpacity: .9,\r\n                        anchor: new window.google.maps.Point(0,0),\r\n                        strokeWeight: 0,\r\n                        scale: 1,\r\n                        zIndex:10\r\n                    };\r\n                    StoreMarkers.push( \r\n                        \r\n                            <Marker\r\n                                key={i}\r\n                                onLoad={onLoadMarker}\r\n                                title={site.name}\r\n                                label={site.name}\r\n                                icon={Targeticon}\r\n                                onClick={()=>{OnMarkerClick(site.name)}}\r\n                                position={{\r\n                                        lat: parseFloat(site.lat),\r\n                                        lng: parseFloat(site.long)\r\n                                    }}\r\n                            />\r\n                    )\r\n                })\r\n        setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{ \r\n         \r\n          CreateMarkers(SCAN.MarkerScanResidual)},[SCAN.MarkerScanResidual])\r\n\r\n      return(  <>{DisplayMarkers}</>) \r\n\r\n}\r\n\r\nexport default MarkerBasedLocationMarkersALL;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkerBasedResults.js",["2046"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport ClusterResults from \"../Results/ClusterResults\";\r\nimport {GroupArrayByOccurances} from \"actions/HandleUX\";\r\n\r\nconst MarkerBasedResults = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n\r\n    const [Results, setResults] = useState(null)\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]])\r\n    const extractResults=()=>{\r\n        //console.log(SCAN.MarkerScanCenterPoints);\r\n\r\n        let ResultArr=[];\r\n        let CategoryInt=[]\r\n            SCAN.MarkerScanCenterPoints.map((result,i)=>{\r\n                ResultArr.push( <li key={i}> <ClusterResults  result={result} i={i}/></li>)\r\n                CategoryInt.push(result.scanCategory)\r\n                return true\r\n            })\r\n            setResults(ResultArr);\r\n            setCategoryOccurance(GroupArrayByOccurances(CategoryInt))\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        if(SCAN.MarkerScanCenterPoints !==null)\r\n            extractResults()\r\n\r\n    },[SCAN]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"ResultsHeader\">\r\n            <h2>Results</h2>\r\n            <h3>Clusters : <strong>{SCAN.MarkerScanCenterPoints.length}</strong></h3>\r\n            <h4>By Category:</h4>\r\n            <ul className=\"ClustersbyCategory\">\r\n            {\r\n                CategoryOccurance[0].map((cat,i)=>{\r\n                    return(\r\n                        <li key={i}>\r\n                                {cat} : {CategoryOccurance[1][i]}\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n            <h3>Sites were not allocated a Cluster : <strong>{SCAN.MarkerScanResidual.length} </strong></h3>\r\n            <h3>Sites were not included in this scan : <strong>{SCAN.NoLongLat.length} </strong></h3>\r\n            </div>\r\n\r\n            <ul className=\"ListResults\">\r\n                    {Results}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerBasedResults;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\LocationMarkers.js",["2047","2048","2049","2050","2051","2052","2053","2054","2055","2056"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\nimport {RegionColor} from \"actions/HandleUX\"\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkers = ()=>{\r\n\r\n    //const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name, Region)=>{console.log(\"Marker Clicked\", name, Region) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n        //console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n\r\n        //console.log(\"markers\", markers)\r\n        let StoreMarkers=[];\r\n\r\n        markers.map((centerPoint,i)=>{\r\n          //console.log(centerPoint.sites)\r\n          centerPoint.sites.map((site,ii)=>{\r\n\r\n              Targeticon = {\r\n                path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                fillColor: RegionColor(centerPoint.scanCategory),\r\n                fillOpacity: .9,\r\n                anchor: new window.google.maps.Point(0,0),\r\n                strokeWeight: 0,\r\n                scale: 1\r\n            }; \r\n          \r\n            StoreMarkers.push( \r\n                \r\n                    <Marker\r\n                        key={site.name}\r\n                        onLoad={onLoadMarker}\r\n                        title={site.name}\r\n                        label={site.name}\r\n                        icon={Targeticon}\r\n                        onClick={()=>{OnMarkerClick(site.name, centerPoint.scanCategory)}}\r\n                        position={{\r\n                                lat: parseFloat(site.lat),\r\n                                lng: parseFloat(site.long)\r\n                            }}\r\n                    />\r\n                \r\n            )\r\n            })\r\n        })\r\n        /*\r\n        Object.keys(markers).map((key, value)=>{\r\n            //console.log(markers[key], value)\r\n              markers[key].map((sites,i)=>{\r\n                  sites.map((site,ii)=>{\r\n\r\n                  \r\n                  })\r\n              })\r\n          })*/\r\n        setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{ \r\n        if(CreateMarkers(SCAN.MarkerScanCenterPoints) != undefined)\r\n          CreateMarkers(SCAN.MarkerScanCenterPoints)\r\n      },[SCAN.MarkerScanCenterPoints])\r\n\r\n      return(  <>{DisplayMarkers}</>)\r\n\r\n}\r\n\r\n\r\nexport default MarkerBasedLocationMarkers;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkersCenterpoints.js",["2057","2058"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Circle } from '@react-google-maps/api';\r\nimport {useContext_SCAN_FULL} from \"../../../../Context/SCAN\";\r\n\r\nimport {RegionColor} from \"../../../../actions/HandleUX\"\r\n\r\n\r\n\r\nconst MarkerCenterpoints = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [Centerpoints, setCenterpoints] = useState(null)\r\n    \r\n    const CreateCenterpoints = ()=>{\r\n        let StorePoints=[]       \r\n        SCAN.MarkerScanCenterPoints.map((center,i)=>{\r\n        \r\n/*\r\n                        {\r\n                            name:site.name,\r\n                            center:{\r\n                                lat: site.lat,\r\n                                lng: site.long\r\n                              },\r\n                            range:Range.range[1]\r\n                        }\r\n            */\r\n           //console.log(center.center, center.range)\r\n           \r\n           \r\n\r\n           let options = {\r\n               strokeColor: RegionColor(center.scanCategory),\r\n               strokeOpacity: 0.9,\r\n               strokeWeight: 1,\r\n               fillColor: RegionColor(center.scanCategory),\r\n               fillOpacity: 0.2,\r\n               radius: ((center.range*1000)),\r\n               zIndex: 1\r\n             }\r\n            let Featheroptions = {\r\n                strokeColor: RegionColor(center.scanCategory),\r\n                strokeOpacity: 0.7,\r\n                strokeWeight: 3,\r\n                fillColor: RegionColor(center.scanCategory),\r\n                fillOpacity: 0.01,\r\n                radius: (( (center.range+((center.feather/100)*center.range)) *1000)),  \r\n                zIndex: 1\r\n              }\r\n           StorePoints.push(\r\n                <span key={i}>\r\n                    <Circle center={center.center} options={options}/>\r\n                    <Circle center={center.center} options={Featheroptions}/>\r\n                </span>\r\n           )\r\n            \r\n        })\r\n        setCenterpoints(StorePoints)\r\n        \r\n    }\r\n    \r\n    \r\n    useEffect(()=>{  CreateCenterpoints() },[SCAN.MarkerScanCenterPoints])\r\n\r\n    useEffect(()=>{},[ Centerpoints])\r\n\r\n    return(\r\n        <>\r\n        {Centerpoints}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerCenterpoints;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ColorKey.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ClusterResults.js",["2059","2060","2061","2062"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport{NumberReducer} from \"../../../../actions/HandleUX\";\r\n\r\n//import DeleteClusterBtn from \"../Controls/buttons/DeleteClusterBtn\";\r\n//import BacktoMap from \"../Controls/buttons/BacktoMapBtn\";\r\n//import ClusterMap from \"../../Prototype/Components/Map/clusterMap/clustermap\"\r\n//import MoreInfo from \"./MoreInfo\";\r\n\r\n\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nconst ClusterResult = (props)=>{\r\n\r\n    const {result, i} = props;\r\n    const [Multiplier, setMultiplier]= useState(1000)\r\n    const [ClusterTotal, setClusterTotal] = useState(0)\r\n\r\n\r\n    const FindClusterTotal = (result)=>{\r\n        let total=0;\r\n        result.ClusterCost.map((type,i)=>{ total = total + type[1] })\r\n        \r\n        setClusterTotal(NumberReducer(parseFloat((total*Multiplier).toFixed(2))))\r\n    }\r\n\r\n\r\n    useEffect(()=>{ \r\n        //FindClusterTotal(result) \r\n        //console.log(result)\r\n    },[result])\r\n\r\n    return(\r\n        <>\r\n            <h3><LocationCityIcon /> Cluster { (i+1) }  - <strong>{result.scanCategory}</strong></h3>\r\n            <h3>Cluster Resource Quota : <strong>{result.resourceQuota.toFixed(2)}</strong></h3> \r\n            <h3>est Cluster Cost : <strong>${0}</strong></h3>\r\n            <div className=\"ListResultContainer\">\r\n                <div className=\"Title\">\r\n                <h3> {result.name}</h3>\r\n                </div>\r\n                Add Map and Cluster Details once Data dump has been completed\r\n\r\n            </div>\r\n                \r\n               \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClusterResult;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\HistoryRerfresh.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ViewSingleResultBtn.js",["2063"],"import React, {useEffect} from 'react';\r\nimport store from \"store/index\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { Link} from \"react-router-dom\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport{FetchSingleScanResult} from \"actions/authUser\"\r\n\r\n\r\n// this button has 3 states\r\n// Falsey .. nothign downloaded ot process\r\n// Active .. there is a active result in memory\r\n// processing .. system is downloading a result\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function IconButtons(props) {\r\n    const {scanID, scan} = props\r\n    const SCAN = useContext_SCAN_FULL();\r\n    useEffect(()=>{},[SCAN])\r\n\r\n    return (\r\n          <>\r\n            {\r\n              SCAN.SelectedModelUI.active ? <ActiveTrue scanID={scanID} scan={scan} />:<ActiveFalse scanID={scanID} scan={scan} />\r\n            }\r\n          </>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst ActiveTrue = (props)=>{\r\n  const {scanID, scan} = props\r\n  const SCAN = useContext_SCAN_FULL();\r\n  useEffect(()=>{\r\n      //console.log(scanID,SCAN.SelectedModelUI.activeID )\r\n  },[])\r\n    return(\r\n      <>\r\n        {\r\n          SCAN.SelectedModelUI.activeID === scanID ? <ViewResult /> : <DownloadResult scanID={scanID} scan={scan}/>\r\n        }\r\n      </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ActiveFalse = (props)=>{\r\n  const {scanID, scan} = props\r\n  const SCAN = useContext_SCAN_FULL();\r\n  useEffect(()=>{\r\n      //console.log(scanID,SCAN.SelectedModelUI.activeID )\r\n  },[])\r\n  return(\r\n    <>\r\n      {\r\n          SCAN.SelectedModelUI.processing  ? <Processing /> : <DownloadResult scanID={scanID} scan={scan}/>\r\n        }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst DownloadResult = (props)=>{\r\n  const {scanID, scan} = props\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton aria-label=\"refresh\" onClick={()=>{FetchSingleScanResult(scanID, scan)}}>\r\n        <GetAppIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst ViewResult = (props)=>{\r\n  const {scanID} = props\r\n  const classes = useStyles();\r\n  \r\n  const ClearOldModel=()=>{\r\n    //console.log(\"Clear out old Model\")\r\n    store.dispatch({ type:'MODELREVIEWREADY', payload:false});\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton aria-label=\"refresh\"\r\n        component={Link}\r\n        onClick={ClearOldModel}\r\n        to='/results/locations'\r\n\r\n       >\r\n        <VisibilityIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst Processing = ()=>{\r\n  return(\r\n    <>\r\n        <div className=\"loader\">\r\n            <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    </>\r\n  )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateSingleScanBtn.js",["2064"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {CreateNewScan} from \"actions/HandleScanProcess\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ContainedButtons() {\r\n  const classes = useStyles();\r\n\r\n\r\n    const HandleSingle=()=>{ console.log(\"Create Single\", CreateNewScan(0));}\r\n    const HandleCompare=()=>{ console.log(\"Create Single\", CreateNewScan(1));}\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Button variant=\"contained\" onClick={HandleSingle} className=\"btn-Next\">\r\n            Select Clients \r\n        </Button>\r\n    </div>\r\n  );\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoAddItemsSingleScan.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoScanType.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\SetSelectedBtn.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\CreateScanoptions.js",["2065","2066","2067","2068"],"import 'date-fns';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nimport {FetchSelectedItems} from \"actions/HandleScanProcess\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\n/* Handle Scna Form*/\r\nexport default function CreateNewScanForm() {\r\n  return (<ScanForm />);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Processing = ()=>{\r\n   \r\n    return(\r\n        <>\r\n            processing\r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\nconst Error = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const ErrorTrue='There was an Error in the Username or Password when processing your details'\r\n    const ErrorFalse=''\r\n    useEffect(()=>{},[AUTH])\r\n    return(\r\n        <>{\r\n            AUTH.error ? <h3>{ErrorTrue}</h3>:<h3>{ErrorFalse}</h3>\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n*/\r\n\r\n\r\n\r\n\r\nconst ScanForm = ()=>{\r\n    \r\n    const SCAN = useContext_SCAN_FULL();\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n\r\n    const classes = useStyles();\r\n    const [TITLE, setTITLE] = useState('')\r\n    const [DESCRIPTION, setDESCRIPTION] = useState('')\r\n    const[Start, setStart] = useState()\r\n    const[End, setEnd] = useState()\r\n\r\n    const handleClick=()=>{\r\n      //console.log(USERSCAN.UserScanSingleDataSets, TITLE, DESCRIPTION, Start, End)\r\n      FetchSelectedItems(USERSCAN.UserScanSingleDataSets, TITLE, DESCRIPTION, Start, End)\r\n    }\r\n\r\n    const handleTitle=(e)=>{setTITLE(e.target.value)}\r\n    const handleDescription=(e)=>{setDESCRIPTION(e.target.value)}\r\n    const SetStartDate=(START)=>{\r\n        setStart(new Date(`${START}`).getTime() / 1000)\r\n    }\r\n    const SetEndDate=(END)=>{\r\n        setEnd(new Date(`${END}`).getTime() / 1000)\r\n    }\r\n    \r\n    return(\r\n        <div className=\"LoginContainer\">\r\n            {Start}{End}\r\n            <MaterialUIPickers  SetEndDate={SetEndDate} SetStartDate={SetStartDate}/>\r\n \r\n            <TextField \r\n                id=\"outlined-basic\" \r\n                label=\"Model Name\" \r\n                variant=\"outlined\" \r\n                onChange={handleTitle}\r\n            />\r\n            \r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Model Description\"\r\n                multiline\r\n                rows={6}\r\n                onChange={handleDescription}\r\n                variant=\"outlined\"\r\n                />\r\n\r\n            \r\n            <Button variant=\"contained\" onClick={()=>{handleClick()} } className=\"btn-Confirm\">\r\n                Create Model\r\n            </Button>\r\n                \r\n        </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nfunction MaterialUIPickers(props) {\r\n    const{SetStartDate, SetEndDate} = props\r\n    // The first commit of Material-UI\r\n    const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\r\n    const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\r\n  \r\n    const handleDateChange = (date) => {\r\n        setSelectedStartDate(date);\r\n      SetStartDate(date)\r\n     \r\n    };\r\n\r\n    const handleEndDateChange = (date) => {\r\n        setSelectedEndDate(date);\r\n    \r\n        SetEndDate(date)\r\n      };\r\n  \r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Start Date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={selectedStartDate}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"End Date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={selectedEndDate}\r\n            onChange={handleEndDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n  ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateNewModel.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompare.js",["2069"],"import React, { useEffect,useState } from 'react';\r\n// Context\r\nimport {useContext_AUTH_FULL} from \"Context/AUTH\";\r\n// Actions\r\nimport {StoreCompareItem} from \"actions/HandleCompare\"\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useContext_COMPARE_FULL} from \"Context/COMPARE\";\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport {orderBy} from 'lodash'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function CompareSelect(props) {\r\n\r\n    const {pos} = props\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const COMPARE = useContext_COMPARE_FULL()\r\n    const classes = useStyles();\r\n    const [Model, setModel] = useState(COMPARE.CompareData.UserSelected[pos]);\r\n    const Term=['Baseline','Comparable']\r\n\r\n    const handleChange = (event) => { \r\n        setModel(event.target.value); \r\n        StoreCompareItem(event.target.value, pos)\r\n    };\r\n\r\n\r\n   \r\n\r\n    useEffect(()=>{\r\n      //console.log(COMPARE.CompareData.UserSelected)\r\n      orderBy(AUTH.ScanHistory, ['IntClients'], ['asc', 'desc']);\r\n    },[COMPARE])\r\n\r\n  return ( \r\n    <>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">{Term[pos]}</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={Model}\r\n          onChange={handleChange}\r\n          label=\"Compare\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>Select</em>\r\n          </MenuItem>\r\n\r\n          {\r\n              orderBy(AUTH.ScanHistory, ['IntClients'], ['asc', 'desc']).map((scan,i)=>{\r\n                return(\r\n                  <MenuItem value={scan} key={i}>{scan.Name} ({scan.IntClients})</MenuItem>\r\n                ) \r\n              })\r\n          }\r\n\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ViewModels.js",["2070","2071","2072","2073","2074","2075","2076"],"import React, { useEffect } from 'react';\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_AUTH_FULL} from \"Context/AUTH\";\r\nimport{FetchPreviousScans} from \"actions/authUser\"\r\n\r\n// Layout\r\nimport {H1, H2, H3,H4, P, S} from \"./Components/Type\";\r\nimport Section from \"./Components/Layout/Section\"\r\n\r\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\r\nimport LocationDisabledIcon from '@material-ui/icons/LocationDisabled';\r\nimport LocationSearchingIcon from '@material-ui/icons/LocationSearching';\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\n\r\nimport {HandleTZDate} from \"actions/HandleUX\";\r\nimport ScanHistoryRefreshBtn from \"./Components/buttons/HistoryRerfresh\";\r\nimport ViewSingleResultBtn from \"./Components/buttons/ViewSingleResultBtn\";\r\nimport Footer from \"./Components/Layout/Footer\"\r\n\r\n\r\nconst Profile = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n    return(\r\n        <>\r\n        <div className=\"OuterContainer\">\r\n            <div className=\"InnerFrame\">\r\n                <H2 Copy={`View Models`} />\r\n                <Section><ModelHistory /></Section>   \r\n            </div>\r\n               \r\n            <div className=\"SideBarRight\"> \r\n                <div className=\"ControlBar\">\r\n                    {  AUTH.RefreshScanHistory ? <Refreshloading />: <ScanHistoryRefreshBtn /> }\r\n                </div> \r\n            </div>\r\n        </div>\r\n        <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\nconst ModelHistory = ()=>{\r\n    const AUTH = useContext_AUTH_FULL();\r\n\r\n    const HandleDate=(timestamp)=>{\r\n        var a = new Date(timestamp * 1000);\r\n        var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n        var year = a.getFullYear();\r\n        var month = months[a.getMonth()];\r\n        var date = a.getDate();\r\n        var time = date + ' ' + month + ' ' + year;\r\n        return time;\r\n        \r\n    }\r\n    useEffect(()=>{\r\n        //console.log(AUTH.ScanHistory);\r\n       let needle='V12'\r\n       const results = AUTH.ScanHistory.filter( h => h.Name.includes(needle) );\r\n\r\n       //console.log(results);\r\n    },[AUTH.ScanHistory])\r\n    return(\r\n        <div className=\"ModelHistory\">\r\n            <ul className=\"Card_List\">\r\n            { \r\n                AUTH.ScanHistory.map((scan,i)=>{ \r\n                    //console.log(scan);\r\n                    return(\r\n                        <li key={i} className=\"Card\">\r\n\r\n                             <div className=\"Card_Header\">\r\n                                <div><H2 Copy={scan.Name}/></div>\r\n                                <p><strong>{HandleDate(scan.DateStart)} - {HandleDate(scan.DateEnd) }</strong></p>\r\n                              \r\n                                { scan.ScanState=== 'Complete'? <CTA scan={scan}/>: <ProcessingStatus scan={scan} />  }\r\n                             </div>\r\n                            \r\n\r\n                             <div className=\"Card_Body\">\r\n                               \r\n                                <div className=\"description\">\r\n                                    <P Copy={scan.Description}/>    \r\n                                </div>\r\n\r\n                                <div className=\"ResultStats\">\r\n                                    <ul> \r\n                                        <li><span>{scan.IntClients}</span><PersonPinIcon />Clients</li>\r\n                                        <li><span>{scan.IntCluster}</span><GroupWorkIcon />Clusters</li>\r\n                                        <li><span>{scan.IntSites}</span><LocationCityIcon />Locations</li>\r\n                                        <li><span>{(scan.IntSites-scan.IntLocationsunaccommodated)}</span><LocationSearchingIcon />Inscope</li>\r\n                                        <li><span>{scan.IntLocationsunaccommodated}</span><LocationDisabledIcon />Out of Scope</li>\r\n                            \r\n                                    </ul>\r\n                                </div>\r\n                               \r\n                             </div>\r\n                             <div className=\"Card_Footer\">\r\n                                <CreatedAt scan={scan}/>\r\n                                { scan.ScanState=== 'Complete'? <ProcessingStatus scan={scan} />: false }\r\n                             </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Refreshloading=()=>{\r\n    return(\r\n        <div className=\"loader\"><div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>\r\n    )\r\n}\r\n\r\n\r\nconst CreatedAt=(props)=>{\r\n    const {scan} = props\r\n    return(\r\n        <div className=\"ModelDateCreated\">\r\n            <S Copy={`Created : ${HandleTZDate(scan.createdAt)}`}/>                        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ProcessingStatus=(props)=>{\r\n    const {scan} = props\r\n    return(\r\n        <>\r\n            <div className={`${scan.ScanState} status`}>\r\n                {\r\n                    scan.ScanState=== 'Complete' ? `Processing Time ${scan.CreateModel_TimeTaken}`:`ETA: ${scan.CreateModel_RemainingTime} `\r\n                }\r\n                <br />\r\n                {scan.ScanState}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst CTA = (props)=>{\r\n    const {scan} = props\r\n    return(\r\n        <div className=\"cta\">\r\n            <div><ViewSingleResultBtn scanID={scan.id} scan={scan}/></div>\r\n         \r\n        </div>\r\n    )\r\n}\r\n//   <div>Delete</div>","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CompareModels.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMPARE.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleCompare.js",["2077","2078"],"\r\n// Private Functions\r\nimport store from \"../store/index\"\r\nimport axios from 'axios';\r\nimport { P } from \"Pages/Auth/Components/Type\";\r\n\r\nexport const StoreCompareItem = (scan,i)=>{\r\n    const UserSelected = store.getState().COMPARE.CompareData.UserSelected;\r\n    UserSelected[i] = scan\r\n    //console.log(scan,i, UserSelected)\r\n    store.dispatch({ type:'STOREUSERSELECTED', payload:UserSelected});\r\n}\r\n\r\n\r\n\r\nexport const ConfirmCompare = (bool)=>{\r\n    store.dispatch({ type:'COMPAREPROCESSING', payload:true}); \r\n   \r\n    const UserSelected = store.getState().COMPARE.CompareData.UserSelected;\r\n   \r\n\r\n    UserSelected.map((models,i)=>{\r\n        //console.log(i)\r\n        if(i === 0){ store.dispatch({ type:'STORESELECTEDMODELMETA', payload:models}) }\r\n        FetchCompareModel(models.id, i, UserSelected.length) \r\n    })\r\n}\r\n\r\n//store.dispatch({ type:'STORESELECTEDMODEL', payload:result.data}); \r\n//store.dispatch({ type:'STORESELECTEDMODELMETA', payload:scan}); \r\n\r\nexport const ResetCompare = ()=>{\r\n\r\n    store.dispatch({ type:'COMPARESTATUS', payload:false}); \r\n    store.dispatch({ type:'COMPAREPROCESSING', payload:false}); \r\n    store.dispatch({ type:'STOREUSERSELECTED', payload:[]});\r\n    store.dispatch({ type:'STOREMODELS', payload:[]});\r\n}\r\n\r\n \r\nexport const FetchCompareModel = (scanID, int, total)=>{\r\n\r\n    const AWSURL=' https://intactanalytiq.s3-ap-southeast-2.amazonaws.com/';\r\n   \r\n    // headers: axiosHeader\r\n   axios({ url: AWSURL+scanID+'.json', method: 'get'})\r\n    .then((result) => { \r\n    \r\n\r\n            const FetchedModels = store.getState().COMPARE.CompareData.FetchedModels;\r\n\r\n            FetchedModels[int] = result.data\r\n            if(int === 0){ store.dispatch({ type:'STORESELECTEDMODEL', payload:result.data}) }\r\n            store.dispatch({ type:'STOREMODELS', payload:FetchedModels}); \r\n\r\n            // Check Data State\r\n            if(FetchedModels.length === total)\r\n                SetState()\r\n\r\n            }).catch(function (thrown) {\r\n                    if (axios.isCancel(thrown)) { console.log('Request canceled', thrown.message);\r\n                    } else { console.log(\"ERROR\", thrown);}\r\n            });\r\n}\r\n\r\nconst SetState = ()=>{\r\n    const FetchedModels = store.getState().COMPARE.CompareData.FetchedModels;\r\n \r\n    if(FetchedModels.includes(undefined) === false){\r\n        store.dispatch({ type:'COMPAREPROCESSING', payload:false}); \r\n        store.dispatch({ type:'COMPARESTATUS', payload:true}); \r\n    }\r\n}\r\n\r\n\r\n// Use this if the user has selected a model in Storage\r\nexport const SelectSingleScanResult = (ModelMeta, Model)=>{\r\n    store.dispatch({ type:'STORESELECTEDMODEL', payload:Model}); \r\n    store.dispatch({ type:'STORESELECTEDMODELMETA', payload:ModelMeta});\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMPARE.js",["2079"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_COMPARE_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_COMPARE_FULL = ()=>{\r\n    return useContext(Context_COMPARE_FULL)\r\n}\r\n\r\n\r\n \r\nexport const COMPAREContextProvider = ({children})=>{\r\n    const COMPARE = useSelector(state => state.COMPARE );\r\n\r\n    useMemo(()=>{  },[COMPARE]) \r\n\r\n    return(\r\n            <Context_COMPARE_FULL.Provider value={COMPARE}>\r\n                {children}            \r\n            </Context_COMPARE_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ConfirmCompareBtn.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SelectModels.js",["2080","2081","2082","2083","2084","2085"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"Context/COMPARE\";\r\n\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\n\r\n\r\nimport SelectCompare from \"../Components/selects/SelectCompare\"\r\nimport ConfirmCompareBtn from \"../Components/buttons/ConfirmCompareBtn\";\r\n\r\n const CompareModels=()=>{\r\n\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    // useContext_COMPARE_FULL\r\n    const [ModelLimit, setLimit] = useState(2)\r\n    const [ModelsSelected, setModelsSelected] = useState(2)\r\n    const [ModelSelects, setModelSelects] = useState([])\r\n    const [Warning, setWarning] = useState(null)\r\n\r\n\r\n    \r\n\r\n    const CreateSelects = ()=>{\r\n        let i=0\r\n        let temp=[]\r\n        while(i<ModelLimit){\r\n            \r\n            temp.push(<SelectCompare pos={i}/>)\r\n            i++;\r\n        } \r\n        setModelSelects(temp)\r\n    }\r\n\r\n\r\n    const ValidCompare=()=>{\r\n        let obj=true\r\n        \r\n            if( COMPARE.CompareData.UserSelected[0] === COMPARE.CompareData.UserSelected[1]){\r\n                obj=false;\r\n            }\r\n\r\n            COMPARE.CompareData.UserSelected.map((check,i)=>{\r\n                if(typeof check !== 'object')\r\n                    obj=false\r\n            })\r\n    \r\n        return obj\r\n    }\r\n\r\n    useEffect(()=>{  CreateSelects() },[ModelsSelected])\r\n    useEffect(()=>{  \r\n        //console.log(COMPARE.CompareData.UserSelected.length) \r\n    },[COMPARE])\r\n\r\n\r\n    return(\r\n        <div className=\"OuterContainer\">\r\n            \r\n            <div className=\"InnerFrame\">\r\n                <div className=\"SectionHeaderWithControls\">\r\n                    <h2>Compare Models</h2>\r\n                    <ModelList />\r\n                  \r\n                    {\r\n                         ValidCompare() ? <ConfirmCompareBtn /> :  false\r\n                    }\r\n\r\n                    <p>{Warning}</p> \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"SideBarRight\">\r\n                <div className=\"controls\">\r\n                    <div className=\"SelectComparables\">\r\n                        <h3>Select comparable models</h3>\r\n                        {ModelSelects}\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompareModels\r\n\r\n \r\nconst ModelList = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const icons=[<StarRateIcon />,<CompareArrowsIcon />]\r\n    return(\r\n        <div className=\"ComparedSelectedItems\">\r\n\r\n                        <ul className=\"ComparableItem\">\r\n                            <li></li>\r\n                            <li>Model Name</li>\r\n                            <li>Clients</li>\r\n                            <li>Clusters</li>\r\n                            <li>Sites</li>\r\n                            <li>Description</li>\r\n                        </ul>   \r\n \r\n                        {\r\n                            COMPARE.CompareData.UserSelected.map((model,i)=>{\r\n                                return(\r\n                                    <ul key={i} className=\"ComparableItem\">\r\n                                            <li>{icons[i]}</li>\r\n                                            <li>{model.Name}</li>\r\n                                            <li>{model.IntClients}</li>\r\n                                            <li>{model.IntCluster}</li>\r\n                                            <li>{model.IntSites}</li>\r\n                                            <li>{model.Description}</li>\r\n                                    </ul>    \r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareModels.js",["2086","2087","2088","2089","2090","2091"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"Context/COMPARE\";\r\n\r\nimport ResetModels from \"Pages/Auth/Components/buttons/ResetCompareModels\"\r\n\r\n// Import Table\r\nimport TableHeader from \"Pages/Auth/Compare/Layout/TableHeader\"\r\nimport FilterChips from \"Pages/Auth/SingleModelResult/Layout/FilterChips\";\r\n// Filter\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/CompareGlobalFilter\";\r\n    // Clusters\r\nimport Clusters_Main from \"Pages/Auth/Compare/SubSections/Clusters_Main\";\r\n    // Work Orders\r\nimport WorkOrders_Main from \"Pages/Auth/Compare/SubSections/WorkOrders_Main\";\r\n    // Locations\r\nimport Locations_Main from \"Pages/Auth/Compare/SubSections/Locations_Main\"\r\n    // Resources\r\nimport Resources_Main from \"Pages/Auth/Compare/SubSections/Resources_Main\"\r\n    // Clients\r\nimport Clients_Main from \"Pages/Auth/Compare/SubSections/Clients_Main\";\r\n\r\nimport NivoNetwork from \"venders/Nivo/NivoNetwork\"\r\nimport LocationsNetwork from \"Pages/Auth/SingleModelResult/components/Locations_Network\";\r\nconst ModelComparision = ()=>{\r\n   \r\n    const COMPARE = useContext_COMPARE_FULL();\r\n   \r\n    useEffect(()=>{\r\n        //console.log(COMPARE.CompareData.UserSelected.length)\r\n    },[COMPARE])\r\n    \r\n    return( \r\n        <div className=\"OuterContainer\">\r\n            <div className=\"InnerFrame\">\r\n                <h2>Comparison Results</h2>\r\n                <div className=\"ModelComparisonContainer\">\r\n                    <div className=\"ModelComparisonTable\">\r\n                   \r\n                        <TableHeader />\r\n                        <LocationsNetwork /> \r\n                        \r\n                        <Locations_Main /> \r\n                        <Resources_Main />\r\n                        <WorkOrders_Main />\r\n                        <Clients_Main />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"SideBarRight\">\r\n                <div className=\"controls\">\r\n                    <h4>Filters</h4>\r\n                    <GlobalFilter />\r\n                    <ResetModels />\r\n                </div>\r\n            </div>  \r\n        \r\n            <FilterChips />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModelComparision;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetCompareModels.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsInScope.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableLocationsUnaccomidated.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTotalWorkOrdersCoveredInCluster.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableResourceAllocationPerResourceTotal.js",["2092"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\n\r\nconst Title='Avg WO Completed per resource';\r\n\r\nconst TableWorkOrders = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n    \r\n    useEffect(()=>{ },[COMPARE])\r\n\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n            <div>{Title}</div>\r\n            {\r\n                MODELS.map((model,i)=>{\r\n                    return( \r\n                        <div key={i}> {((model.CLUSTERSTATS.WorkOrdersCoveredInModel/model.CLUSTERSTATS.ResourceAllocation)/250).toFixed(2)} </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableWorkOrders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableWorkOrderByClient.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableTradeTypeBreakdown.js",["2093"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\nimport {FindTradeTypeAllocation} from \"../../../../actions/ClusterAnalysis\";\r\nconst Title='Model Trades';\r\n\r\nconst TableWorkOrders = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n    \r\n    useEffect(()=>{},[COMPARE])\r\n\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n            <div>{Title}</div>\r\n            {\r\n                        MODELS.map((model,i)=>{\r\n                           let  Breakdown= FindTradeTypeAllocation(model.STOREMARKERCENTERPOINTS)\r\n                            return(\r\n                                <div key={i}>\r\n                                    <DisplayBreakdown Breakdown={Breakdown}/>\r\n                                </div>\r\n                            )\r\n                                \r\n                        })\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableWorkOrders;\r\n\r\nconst DisplayBreakdown = (props)=>{\r\n    const {Breakdown} = props\r\n    return(\r\n        <>\r\n        {\r\n              Breakdown[0].map((cat,i)=>{\r\n                return(\r\n                    <div key={i} className=\"AccordionData\">\r\n                        <div>{cat}</div>\r\n                        <div>{Breakdown[1][i]}</div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        </>       \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\TableSitesByTier.js",["2094","2095"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"../../../../Context/COMPARE\";\r\n\r\nimport {SitesbyTier} from \"../../../../actions/ClusterAnalysis\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport {numberWithCommas} from \"../../../../actions/HandleUX\";\r\nimport {findClientName} from \"../../../../actions/ClusterAnalysis\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n  }));\r\n\r\nconst Title='Locations allocation by Tier';\r\n\r\nconst WorkordersByClient = ()=>{\r\n    const classes = useStyles();\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n\r\n    useEffect(()=>{ },[COMPARE])\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n        <Accordion className=\"ComparisonAccordion\">\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n                {Title}\r\n            </AccordionSummary>\r\n\r\n            <AccordionDetails className=\"ComparisonRow\">\r\n                <div>&nbsp;</div>\r\n                   \r\n\r\n                    {\r\n                        MODELS.map((model,i)=>{\r\n                            let Breakdown = SitesbyTier(model.STOREMARKERCENTERPOINTS)\r\n                            return(\r\n                                <div key={i}>\r\n                                    <DisplayBreakdown Breakdown={Breakdown}/>\r\n                                </div>\r\n                            )\r\n                                \r\n                        })\r\n                    }\r\n            </AccordionDetails>\r\n\r\n        </Accordion>\r\n        </div>\r\n    )\r\n} \r\nexport default WorkordersByClient;\r\n\r\n\r\nconst DisplayBreakdown = (props)=>{\r\n    const {Breakdown} = props\r\n    return(\r\n        <>\r\n        {\r\n              Breakdown[0].map((cat,i)=>{\r\n                return(\r\n                    <div key={i} className=\"AccordionData\">\r\n                        <div>{cat}</div>\r\n                        <div>{Breakdown[1][i]}</div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        </>        \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult.js",["2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107"],"import React, { useEffect } from 'react'\r\nimport { Route, Switch,useRouteMatch } from \"react-router-dom\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// Layout \r\nimport AppBar from \"Pages/Auth/SingleModelResult/Layout/AppBar\"\r\nimport HeaderTitles from \"Pages/Auth/SingleModelResult/Layout/HeaderTitle\"\r\nimport {H1} from \"Pages/Auth/Components/Type\";\r\n// Sub Sections \r\n import SubSection_Locations from \"Pages/Auth/SingleModelResult/SubSections/SubSection_Locations\";\r\n import SubSection_Client from \"Pages/Auth/SingleModelResult/SubSections/SubSection_Client\";\r\n import SubSection_FullMap from \"Pages/Auth/SingleModelResult/SubSections/SubSection_FullMap\";\r\n import SubSection_Clusters from \"Pages/Auth/SingleModelResult/SubSections/SubSection_Clusters\";\r\n import SubSection_Trade from \"Pages/Auth/SingleModelResult/SubSections/SubSection_Trade\";\r\n import SubSection_Workorders from \"Pages/Auth/SingleModelResult/SubSections/SubSection_Workorders\";\r\n import SubSection_CostAnalysis from \"Pages/Auth/SingleModelResult/SubSections/SubSection_CostAnalysis\"\r\n\r\n import FilterChips from \"Pages/Auth/SingleModelResult/Layout/FilterChips\";\r\n\r\nconst ModelCheck = ()=>{\r\n    const MODEL = useContext_SCAN_FULL()\r\n    let match = useRouteMatch(); \r\n    const Pushhistory = useHistory();\r\n    useEffect(()=>{\r\n            if(MODEL.SelectedModel === null){\r\n                Pushhistory.push(\"/view-models\");\r\n            } \r\n    },[MODEL])\r\n    return(\r\n        <div>\r\n            { MODEL.SelectedModel === null ? false:<SingleModelResult />}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SingleModelResult = ()=>{ \r\n    let match = useRouteMatch(); \r\n    return(\r\n        <>\r\n          \r\n                <div className=\"OuterContainer\">\r\n                    <Switch> \r\n                        <Route path={`${match.path}/locations`}>\r\n                            <SubSection_Locations /> \r\n                        </Route> \r\n                        \r\n                        <Route path={`${match.path}/trades`}>\r\n                            <SubSection_Trade />\r\n                        </Route>  \r\n                        \r\n                        <Route path={`${match.path}/clients`}>\r\n                            <SubSection_Client />\r\n                        </Route> \r\n\r\n                        <Route path={`${match.path}/workorders`}>\r\n                            <SubSection_Workorders />\r\n                        </Route>\r\n\r\n                        <Route path={`${match.path}/map`}>\r\n                            <SubSection_FullMap />\r\n                        </Route>\r\n\r\n                        <Route path={`${match.path}/cluster`}>\r\n                            <SubSection_Clusters />\r\n                        </Route>\r\n\r\n                        <Route path={`${match.path}/costs`}>\r\n                            <SubSection_CostAnalysis />\r\n                        </Route>\r\n                    </Switch>  \r\n                    <FilterChips />\r\n                </div>\r\n         \r\n        </>\r\n    ) \r\n}\r\n\r\nexport default ModelCheck; \r\n//   <AppBar />\r\n//   <HeaderTitles />\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ScanStateBtn.js",["2108"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Footer.js",["2109"],"import React from 'react';\r\n\r\nimport {AlogoBlue, LogoMain, JLLMain} from 'Assets/logo'\r\nconst Footer= ()=>{\r\n    return(\r\n        <div className=\"Footer\">\r\n            <div>\r\n                <AlogoBlue />\r\n                <p>AnalytiQ Build : Dolores Beta 0.1</p>\r\n                \r\n            </div>\r\n             \r\n             <div>\r\n                <JLLMain />\r\n                <p>Powered by Intact AnalytiQ</p>\r\n             </div>\r\n   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer; ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\UICompnents\\index.js",["2110"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n// Type\r\nimport {H1, H2, H3,H4, P, S} from \"../Components/Type\";\r\nimport Section from \"../Components/Layout/Section\"\r\nconst UIComponentList = ()=>{\r\n    return(\r\n        <div className=\"OuterContainer\">\r\n            <div className=\"InnerFrame\">\r\n            <H1 Copy={`UI COMPONENTS`}/>\r\n            <Section><BasicTypeOptions /></Section>            \r\n            <Section><ColorPallete /></Section>\r\n            <Section><Cards /></Section>\r\n            <Section><Pods /></Section>\r\n            <Section><StatBar /></Section>\r\n            <Section><Buttons /></Section>\r\n            <Section><ControlBar /></Section>\r\n            <Section>\r\n                Controls\r\n                charts\r\n            </Section>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default UIComponentList; \r\n\r\n\r\nconst ControlBar=()=>{\r\n    return(\r\n        <div className=\"ControlBar\">\r\n            Icon\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Buttons=()=>{\r\n    return(\r\n        <>\r\n             <H2 Copy={`Buttons`}/>\r\n             <Button variant=\"contained\" className=\"btn-Back\"> Back </Button>\r\n             <Button variant=\"contained\" className=\"btn-Select\"> Select </Button>\r\n             <Button variant=\"contained\" className=\"btn-Next\"> Next </Button>\r\n             <Button variant=\"contained\" className=\"btn-Confirm\"> Confirm </Button>\r\n             <Button variant=\"contained\" className=\"btn-Create\"> Create </Button>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst StatBar=()=>{\r\n\r\n        return(\r\n            <>\r\n             <H2 Copy={`Stat/Data Bar`}/>\r\n                <ul className=\"Stat_Bar\">\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                    <li>Title : Number</li>\r\n                </ul>\r\n            </>\r\n        )\r\n}\r\n\r\nconst Pods =()=>{\r\n    return(\r\n        <>\r\n            <H2 Copy={`Data Pods`}/>\r\n\r\n            <ul className=\"Pod_List\">\r\n                <li className=\"Pod\">\r\n                    \r\n                    <div className=\"Data\"><P Copy={`Pod Data`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Pod Title`}/></div>\r\n                    <div className=\"Data Strong\"><P Copy={`Secondary  Data`}/></div>\r\n                </li>\r\n                <li className=\"Pod\">\r\n                    <div className=\"Data\"><P Copy={`Pod Data`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Pod Title`}/></div>\r\n                    \r\n                </li>\r\n                <li className=\"Pod\">\r\n                    \r\n                    <div className=\"Data\"><P Copy={`Pod Data`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Pod Title`}/></div>\r\n                    <div className=\"Data Strong\"><P Copy={`Secondary  Data`}/></div>\r\n                </li>\r\n                <li className=\"Pod\">\r\n                    <div className=\"Data\"><P Copy={`Pod Data`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Pod Title`}/></div>\r\n                    \r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst Cards = ()=>{\r\n    return(\r\n        <>\r\n        <H2 Copy={`Cards`}/>\r\n\r\n        <ul className=\"Card_List\">\r\n            <li className=\"Card\">\r\n                    <div className=\"Card_Header\">\r\n                            <H2 Copy={`Card Header`}/>\r\n                    </div>\r\n                    <div className=\"Card_Body\">\r\n                            <P Copy={`Card Body`}/>\r\n                    </div>\r\n                    <div className=\"Card_Footer\">\r\n                            <H4 Copy={`Card Footer`}/>\r\n                    </div>\r\n            </li>\r\n\r\n            <li className=\"Card\">\r\n                    <div className=\"Card_Header\">\r\n                            <H2 Copy={`Card Header`}/>\r\n                    </div>\r\n                    <div className=\"Card_Body\">\r\n                            <P Copy={`Card Body`}/>\r\n                    </div>\r\n                    <div className=\"Card_Footer\">\r\n                            <H4 Copy={`Card Footer`}/>\r\n                    </div>\r\n            </li>\r\n        </ul>\r\n\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst ColorPallete=()=>{\r\n    return(\r\n        <>\r\n        <H2 Copy={`Color palettes`}/>\r\n        <H3 Copy={`Baseline Colors`}/>\r\n            <ul className=\"ColorPalette\">\r\n                <li>\r\n                    <span className=\"color1\"></span>\r\n                    <H4 Copy={`Color 1`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"color2\"></span>\r\n                    <H4 Copy={`Color 2`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"color3\"></span>\r\n                    <H4 Copy={`Color 3`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"color4\"></span>\r\n                    <H4 Copy={`Color 4`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"color5\"></span>\r\n                    <H4 Copy={`Color 5`}/>\r\n                </li>\r\n            </ul>\r\n        <H3 Copy={`Accent Colors`}/>\r\n            <ul className=\"ColorPalette\">\r\n                <li>\r\n                    <span className=\"true\"></span>\r\n                    <H4 Copy={`Accent True`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"false\"></span>\r\n                    <H4 Copy={`Accent False`}/>\r\n                </li>\r\n                <li>\r\n                    <span className=\"Link\"></span>\r\n                    <H4 Copy={`Link`}/>\r\n                </li>\r\n               \r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst ULList = ()=>{\r\n    return(\r\n        <ul>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n            <li>List Item</li>\r\n\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst BasicTypeOptions=()=>{\r\n    return(\r\n        <>\r\n            \r\n            \r\n            <H1 Copy={`Header H1. Font : Roboto`}/>\r\n            <H2 Copy={`Header H2. Font : Roboto`}/>\r\n            <H3 Copy={`Header H3. Font : Roboto`}/>\r\n            <H4 Copy={`Header H4. Font : Roboto`}/>\r\n            \r\n            <P Copy={`Paragraph Font : Montserrat`}/>\r\n            <S Copy={`Small Copy Font : Montserrat`}/>\r\n        </>\r\n    )\r\n}\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Type.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Section.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Locations.js",["2111","2112","2113","2114"],"import React  from 'react'\r\n\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H2} from \"Pages/Auth/Components/Type\";\r\n\r\n\r\n// components\r\nimport Locations_Basic_Stats from \"../components/Locations_Basic_Stats\"\r\nimport Locations_Basic_Charts from \"../components/Locations_Basic_Charts\";\r\n\r\nimport LocationHeatMap from \"../Maps/Location_Heatmap\";\r\nimport Location_ResourceSpread from \"../components/Location_ResourceSpread\";\r\nimport Location_WorkorderSpread from \"../components/Location_WorkOrderSpread\";\r\nimport LocationsNetwork from \"Pages/Auth/SingleModelResult/components/Locations_Network\";\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/ReviewGlobalFilter\";\r\nimport ModelMeta from \"Pages/Auth/SingleModelResult/Layout/ModelMeta\";\r\nimport AppBar from \"Pages/Auth/SingleModelResult/Layout/AppBar\"\r\n\r\nconst SubSection_Locations = ()=>{\r\n\r\n    return(\r\n        <>\r\n            <div className=\"InnerFrame\">\r\n                <H2 Copy={`Locations`} /> \r\n                \r\n                \r\n                <Section>\r\n                    <Locations_Basic_Stats />    \r\n                    <LocationsNetwork /> \r\n                    <Locations_Basic_Charts />\r\n                    <LocationHeatMap />\r\n                    <Location_ResourceSpread />      \r\n                    <Location_WorkorderSpread /> \r\n                </Section> \r\n            </div>\r\n            <AppBar />\r\n            <div className=\"SideBarRight\"> \r\n                <ModelMeta />\r\n                <GlobalFilter />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// <Location_CLusterSpreadbyClient />\r\nexport default SubSection_Locations;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\HeaderTitle.js",["2115","2116","2117","2118","2119"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { HandleTZDate, workingDaysBetweenDates, getDate,monthDiff} from \"actions/HandleUX\";\r\n\r\n// Filter\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/ReviewGlobalFilter\";\r\n\r\n\r\nconst HeaderTitle = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const SCANMODELMETA = SCAN.SelectedModelMeta\r\n    const [startDate, setStartDate] = useState()\r\n    const [endDate, setEndDate] = useState()\r\n    const [WorkingDays, setWorkingDays] = useState(0) \r\n                 \r\n    useEffect(()=>{\r\n        \r\n        monthDiff(new Date(SCAN.SelectedModelMeta.DateStart * 1000),new Date(SCAN.SelectedModelMeta.DateEnd * 1000))\r\n\r\n        setStartDate(getDate(SCAN.SelectedModelMeta.DateStart))\r\n        setEndDate(getDate(SCAN.SelectedModelMeta.DateEnd))\r\n        setWorkingDays(workingDaysBetweenDates(SCAN.SelectedModelMeta.DateStart,SCAN.SelectedModelMeta.DateEnd))\r\n\r\n    },[SCAN])\r\n    return(\r\n        <>\r\n            <div className=\"ModelSingleHeader\">\r\n            <h2>{SCANMODELMETA.Name}</h2>\r\n               \r\n            </div> \r\n          \r\n        </>\r\n    )\r\n}\r\n//   <p>{SCANMODELMETA.Description}</p>\r\nexport default HeaderTitle;\r\n\r\n/*\r\n <h4>Date Range : {startDate}  - {endDate }</h4>\r\n                <h4>Working Days Counted : {WorkingDays}</h4>\r\n                <h4>Months in Model : {monthDiff(new Date(SCAN.SelectedModelMeta.DateStart * 1000),new Date(SCAN.SelectedModelMeta.DateEnd * 1000))}</h4>\r\n               \r\n                <div className=\"created\"><p>Created : {HandleTZDate(SCANMODELMETA.createdAt)}</p></div>\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\AppBar.js",["2120","2121","2122","2123","2124","2125","2126"],"import React from 'react';\r\nimport { Link} from \"react-router-dom\";\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport BlurCircularIcon from '@material-ui/icons/BlurCircular';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\n\r\n\r\nimport FilterChips from \"Pages/Auth/SingleModelResult/Layout/FilterChips\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  }, button: {\r\n    backgroundColor: \"green\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"white\"\r\n    }\r\n  },\r\n  child: {\r\n    backgroundColor: \"#656565\"\r\n  },\r\n  rippleVisible: {\r\n    opacity: 0.5,\r\n    animation: `$enter 550ms ${theme.transitions.easing.easeInOut}`\r\n  },\r\n  \"@keyframes enter\": {\r\n    \"0%\": {\r\n      transform: \"scale(0)\",\r\n      opacity: 0.1\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(1)\",\r\n      opacity: 0.3\r\n    }\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst AppNav=[\r\n  {\r\n    Link:'/results/locations',\r\n    Icon:<LocationCityIcon />,\r\n    Label:'locations'\r\n  },{\r\n    Link:'/results/trades',\r\n    Icon:<BuildIcon />,\r\n    Label:'Resources'\r\n  },{\r\n    Link:'/results/clients',\r\n    Icon:<PeopleIcon />,\r\n    Label:'clients'\r\n  },{\r\n    Link:'/results/workorders',\r\n    Icon:<AssignmentIcon />,\r\n    Label:'Work Orders'\r\n  },{\r\n    Link:'/results/map',\r\n    Icon:<MapIcon />,\r\n    Label:'Map'\r\n  },{\r\n    Link:'/results/cluster',\r\n    Icon:<BlurCircularIcon />,\r\n    Label:'Clusters'\r\n  },{\r\n    Link:'/results/costs',\r\n    Icon:<MonetizationOnIcon />,\r\n    Label:'Cost Analysis'\r\n  }\r\n]\r\n\r\n\r\nexport default function BottomAppBar() {\r\n  const classes = useStyles();\r\n  const { button: buttonClass, ...rippleClasses } = classes;\r\n  return (\r\n  \r\n    \r\n    <div className=\"ModelViewNav\">\r\n           \r\n              {\r\n                AppNav.map((Link,i)=>{\r\n                    return(\r\n                      <NavLink key={i} to={Link.Link}  activeClassName=\"selected\">\r\n                        <IconButton edge=\"end\"  color=\"inherit\" TouchRippleProps={{ classes: rippleClasses }} >\r\n                              {Link.Icon}\r\n                              <p>{Link.Label}</p>\r\n                        </IconButton>\r\n                      </NavLink>\r\n                    )\r\n                })\r\n              }\r\n            \r\n      </div>     \r\n      \r\n\r\n  );\r\n}\r\n\r\n/*\r\n\r\nexport default function BottomAppBar() {\r\n  const classes = useStyles();\r\n  const { button: buttonClass, ...rippleClasses } = classes;\r\n  return (\r\n    <React.Fragment>\r\n    \r\n      <AppBar position=\"fixed\" className={`ModelSingleResultBottom ${classes.appBar} `}>\r\n            <FilterChips />\r\n            <Toolbar className=\"ModelSingleResultAppBar\">\r\n           \r\n              {\r\n                AppNav.map((Link,i)=>{\r\n                    return(\r\n                      <NavLink key={i} to={Link.Link}  activeClassName=\"selected\">\r\n                        <IconButton edge=\"end\"  color=\"inherit\" TouchRippleProps={{ classes: rippleClasses }} >\r\n                              {Link.Icon}\r\n                              <p>{Link.Label}</p>\r\n                        </IconButton>\r\n                      </NavLink>\r\n                    )\r\n                })\r\n              }\r\n           \r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_FullMap.js",["2127","2128","2129","2130","2131","2132","2133","2134","2135"],"import React  from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H2} from \"Pages/Auth/Components/Type\";\r\n\r\nimport Map_Full_Main from \"Pages/Auth/SingleModelResult/components/Map_Full_MAin\";\r\nimport SectionChart from \"Pages/Auth/Compare/Layout/SectionCharts\"\r\n\r\n// Chart\r\nimport Resources_Pie_ResourceAllocation from 'Pages/Auth/SingleModelResult/Charts/Resources_Pie_ResourceAllocation'\r\n\r\nimport Resources_Pie_ClientsBreakdown from 'Pages/Auth/SingleModelResult/Charts/Resources_Pie_ClientsBreakdown'\r\nimport Client_Pie_WorkOrders from 'Pages/Auth/SingleModelResult/Charts/Client_Pie_WorkOrders'\r\nimport Client_line_ResourcesOvertime from 'Pages/Auth/SingleModelResult/Charts/Client_line_ResourcesOvertime'\r\nimport Client_line_WorkordersOvertime from 'Pages/Auth/SingleModelResult/Charts/Client_line_WorkordersOvertime'\r\nimport WorkOrder_Heatmap from 'Pages/Auth/SingleModelResult/Maps/WorkOrder_Heatmap'\r\n\r\nimport Cost_Resource_PieCharts from \"Pages/Auth/SingleModelResult/components/Cost_Resource_PieCharts\";\r\nimport Cost_Resource_OverTime from \"Pages/Auth/SingleModelResult/components/Cost_Resource_OverTime\";\r\n\r\n\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/ReviewGlobalFilter\";\r\nimport ModelMeta from \"Pages/Auth/SingleModelResult/Layout/ModelMeta\";\r\nimport AppBar from \"Pages/Auth/SingleModelResult/Layout/AppBar\"\r\n\r\nconst Charts=[\r\n    {\r\n        chart: <Resources_Pie_ResourceAllocation />,\r\n        label:`Resource Allocation Total`,\r\n        tip:'',\r\n        icon:'pie'\r\n    },{\r\n        chart: <Resources_Pie_ClientsBreakdown />,\r\n        label:`Resources Split Clients`,\r\n        tip:'',\r\n        icon:'pie'\r\n    },{\r\n        chart: <Client_line_ResourcesOvertime />,\r\n        label:`Resources Allocation Over Time`,\r\n        tip:'',\r\n        icon:'line'\r\n    },{\r\n        chart: <Client_Pie_WorkOrders />,\r\n        label:`Clients WO's Split`,\r\n        tip:'',\r\n        icon:'pie'\r\n    },{\r\n        chart: <Client_line_WorkordersOvertime />,\r\n        label:`WO's Over Time`,\r\n        tip:'',\r\n        icon:'line'\r\n    },{\r\n        chart: <WorkOrder_Heatmap />,\r\n        label:`HeatMap`,\r\n        tip:'',\r\n        icon:'map'\r\n    },{\r\n        chart: <Cost_Resource_PieCharts />,\r\n        label:`Resource Cost Split`,\r\n        tip:'',\r\n        icon:'pie'\r\n    },{\r\n        chart: <Cost_Resource_OverTime />,\r\n        label:`Resource Cost Over Time`,\r\n        tip:'',\r\n        icon:'line'\r\n    }\r\n    \r\n]\r\n\r\nconst SubSection_FullMap = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n    //console.log(UX.AreaSelectFilter.ByPolygon)\r\n    return(\r\n        <><div className=\"InnerFrame\">\r\n         <H2 Copy={`Model Overview`} />\r\n            <Section>\r\n                <Map_Full_Main />\r\n                { UX.AreaSelectFilter.ByPolygon === false ? false : <SectionChart Charts={Charts}  /> }\r\n            </Section > \r\n            </div>\r\n            <AppBar />\r\n            <div className=\"SideBarRight\"> \r\n                <ModelMeta />\r\n                <GlobalFilter />\r\n            </div>\r\n        </>\r\n    )  \r\n} \r\n\r\nexport default SubSection_FullMap;  ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Client.js",["2136"],"import React, { useEffect } from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H1,H2,H4, P} from \"Pages/Auth/Components/Type\";\r\n\r\nimport ClientBasicChart from \"Pages/Auth/SingleModelResult/components/Client_Basic_Differences\";\r\nimport ClientWorkordersOverTime from \"Pages/Auth/SingleModelResult/components/Client_WorkordersOverTime\";\r\nimport ClientResourceAllocationOverTime from \"Pages/Auth/SingleModelResult/components/Client_ResourceAllocationOverTime\";\r\nimport ClientSingleSelected from \"Pages/Auth/SingleModelResult/components/Client_SingleSelectedComponents\";\r\n\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\n\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/ReviewGlobalFilter\";\r\nimport ModelMeta from \"Pages/Auth/SingleModelResult/Layout/ModelMeta\";\r\nimport AppBar from \"Pages/Auth/SingleModelResult/Layout/AppBar\"\r\n\r\nconst SubSection_Client = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n    \r\n    useEffect(()=>{\r\n        //console.log(UX.AreaSelectFilter.ByClient)\r\n    },[])\r\n    return(\r\n        <>  <div className=\"InnerFrame\">\r\n            <H2 Copy={`Clients`} />\r\n            <Section>\r\n                <ClientBasicChart />\r\n                <ClientWorkordersOverTime /> \r\n                <ClientResourceAllocationOverTime />\r\n            </Section>\r\n            {\r\n                 UX.AreaSelectFilter.ByClient === false ? <SelectAClient /> :<ClientSingleSelected />\r\n            }\r\n            </div>\r\n            <AppBar />\r\n            <div className=\"SideBarRight\"> \r\n                <ModelMeta />\r\n                <GlobalFilter />\r\n            </div>\r\n       </>\r\n    )  \r\n} \r\n \r\nexport default SubSection_Client;  \r\n\r\n\r\nconst SelectAClient=()=>{\r\n    return(\r\n        <Section>\r\n            <div className=\"PleaseSelectOption\">\r\n                <PeopleAltIcon />\r\n                <H4 Copy={`Client Required.`}/>\r\n                <P Copy={`To use this Section a Client must be selected from the Filter Above.`} />\r\n            </div>\r\n            \r\n        </Section>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Clusters.js",["2137","2138","2139","2140","2141","2142","2143","2144"],"import React, { useEffect }  from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H2} from \"Pages/Auth/Components/Type\";\r\nimport Clusters_ResultsList from \"Pages/Auth/SingleModelResult/components/Clusters_ResultsList\";\r\nimport Clusters_List from \"Pages/Auth/SingleModelResult/components/Clusters_List\";\r\nimport{sumBy, groupBy, chain} from 'lodash'\r\n\r\n\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/ReviewGlobalFilter\";\r\nimport ModelMeta from \"Pages/Auth/SingleModelResult/Layout/ModelMeta\";\r\nimport AppBar from \"Pages/Auth/SingleModelResult/Layout/AppBar\"\r\n\r\nconst SubSection_Clusters = ()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const MODEL = useContext_SCAN_FULL()\r\n\r\n    useEffect(()=>{\r\n        //console.log(MODEL.SelectedModel.STOREMARKERCENTERPOINTS)\r\n    },[])\r\n    return(\r\n        <>\r\n        <div className=\"InnerFrame\">\r\n         \r\n           <Section>\r\n                <Clusters_ResultsList />\r\n                <Clusters_List />\r\n           </Section>\r\n           </div>\r\n           <AppBar />\r\n            <div className=\"SideBarRight\"> \r\n                <ModelMeta />\r\n                <GlobalFilter />\r\n            </div>\r\n       </>\r\n    ) \r\n}\r\n\r\nexport default SubSection_Clusters;  \r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Workorders.js",["2145","2146","2147"],"import React  from 'react'\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H2} from \"Pages/Auth/Components/Type\";\r\n\r\nimport WorkOrders_Basics from \"Pages/Auth/SingleModelResult/components/WorkOrders_Basics\";\r\nimport WorkOrder_Radial_Charts from \"Pages/Auth/SingleModelResult/components/WorkOrder_Radial_Charts\";\r\nimport WorkOrder_Basic_Charts from \"Pages/Auth/SingleModelResult/components/WorkOrders_Basic_Charts\";\r\n\r\nimport WorkordersOverTime from \"Pages/Auth/SingleModelResult/components/WorkOrders_OverTime\";\r\nimport WorkOrderHeatMap from   \"Pages/Auth/SingleModelResult/Maps/WorkOrder_Heatmap\";\r\n\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/ReviewGlobalFilter\";\r\nimport ModelMeta from \"Pages/Auth/SingleModelResult/Layout/ModelMeta\";\r\nimport AppBar from \"Pages/Auth/SingleModelResult/Layout/AppBar\"\r\n\r\nconst SubSection_Workorders = ()=>{\r\n\r\n    return(\r\n        <>\r\n            <div className=\"InnerFrame\">\r\n            <H2 Copy={`Work Orders`} />\r\n            <Section>\r\n                <WorkOrders_Basics />\r\n                <WorkOrder_Radial_Charts /> \r\n                <WorkOrder_Basic_Charts />\r\n                <WorkOrderHeatMap />\r\n                <WorkordersOverTime />  \r\n            </Section> \r\n            </div>\r\n            <AppBar />\r\n            <div className=\"SideBarRight\"> \r\n                <ModelMeta />\r\n                <GlobalFilter />\r\n            </div>\r\n        </>\r\n    )  \r\n}\r\n/*\r\n\r\n            \r\n*/\r\nexport default SubSection_Workorders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Trade.js",["2148","2149","2150","2151","2152","2153","2154","2155"],"import React  from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H1,H2,H4,P} from \"Pages/Auth/Components/Type\";\r\n\r\nimport Trade_ResourceAllocation from \"Pages/Auth/SingleModelResult/components/Trade_ResourceAllocation\";\r\nimport Trade_Radial_Charts from \"Pages/Auth/SingleModelResult/components/Trade_Radial_Charts\";\r\nimport Trade_Radial_Clients from \"Pages/Auth/SingleModelResult/components/Trade_Radial_Clients\";\r\nimport Trade_ResourceAllocationOverTime from \"Pages/Auth/SingleModelResult/components/Trade_AllocationOverTime\";\r\nimport TradeSpecific_ClientBreakdown from \"Pages/Auth/SingleModelResult/components/Trade_Specific_ClientBreakdown\";\r\nimport TradeSpecific_Overview from \"Pages/Auth/SingleModelResult/components/Trade_Specific_Overview\";\r\nimport Trade_Ratios from \"Pages/Auth/SingleModelResult/components/Trade_Ratios\";\r\nimport TradeHeatMap from  \"Pages/Auth/SingleModelResult/Maps/Trade_Heatmap\";\r\nimport FaceIcon from '@material-ui/icons/Face';\r\n\r\n\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/ReviewGlobalFilter\";\r\nimport ModelMeta from \"Pages/Auth/SingleModelResult/Layout/ModelMeta\";\r\nimport AppBar from \"Pages/Auth/SingleModelResult/Layout/AppBar\"\r\n\r\nconst SubSection_Trade = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n    \r\n    return(\r\n        <>\r\n        <div className=\"InnerFrame\">\r\n            <H2 Copy={`Resources`} /> \r\n            <Section>           \r\n                <Trade_ResourceAllocation />  \r\n                <Trade_Radial_Charts />\r\n                <Trade_Radial_Clients />     \r\n                <TradeHeatMap /> \r\n                <Section>\r\n                    { UX.AreaSelectFilter.ByResourceType === false ? <SelectATrade /> :<TradeSpecificComponents />}\r\n                </Section>\r\n            </Section>  \r\n            </div>\r\n            <AppBar />\r\n            <div className=\"SideBarRight\">  \r\n                <ModelMeta />\r\n                <GlobalFilter />\r\n            </div>\r\n       </>  \r\n    ) \r\n}\r\n\r\n//  <Trade_Ratios />\r\nexport default SubSection_Trade;\r\n\r\n\r\nconst SelectATrade = ()=>{\r\n    return(\r\n        <Section>\r\n            <div className=\"PleaseSelectOption\">\r\n                <FaceIcon />\r\n                <H4 Copy={`No Resource Type Selected`}/>\r\n                <P Copy={`To use this Section a Resource Type must be selected from the Filter Above.`} />\r\n            </div>\r\n            \r\n        </Section>\r\n    )\r\n}\r\n\r\nconst TradeSpecificComponents=()=>{\r\n    return(\r\n        <Section className=\"SelectedItem\"> \r\n                <TradeSpecific_Overview />   \r\n                <TradeSpecific_ClientBreakdown />\r\n                <Trade_ResourceAllocationOverTime />\r\n                \r\n                break down stats for each resource Type. i.e. handyman section\r\n           </Section>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Stats.js",["2156","2157"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMMS_FULL} from 'Context/COMMS'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { numberWithCommas, gl} from \"actions/HandleUX\";\r\nimport {OBJ_SITE_GLOBAL} from 'actions/CreateSingleViewModel'\r\n\r\nimport {H4,H3, P} from \"Pages/Auth/Components/Type\"\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst HeaderLocations=()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const COMMS = useContext_COMMS_FULL()\r\n\r\n    const INFO = COMMS.information;\r\n\r\n    const MODEL = SCAN.SelectedModel\r\n    const [SiteBreakdown, setSiteBreakdown] = useState([])\r\n   \r\n    const SiteNum=()=>{\r\n        let SiteCount=[];\r\n        MODEL.STOREMARKERCENTERPOINTS.map((model,i)=>{ SiteCount.push(model.StripedSites.length) })\r\n        return SiteCount.reduce((a, b) => a + b, 0)\r\n    }\r\n\r\n    useEffect(()=>{ setSiteBreakdown(OBJ_SITE_GLOBAL()) },[UX]);\r\n\r\n\r\n\r\n    const Numbers=[\r\n        {\r\n            info:INFO.CLUSTER,\r\n            number:gl(MODEL.STOREMARKERCENTERPOINTS),\r\n            label:'Clusters',\r\n            perc:null\r\n        },{\r\n            info:INFO.TOTALLOCATIONS,\r\n            number:SiteNum()+gl(MODEL.STORERESIDUALMARKERS),\r\n            label:'Total Locations',\r\n            perc:null\r\n        },{\r\n            info:INFO.LOCATIONSINSCOPE,\r\n            number:gl(SiteBreakdown),\r\n            label:'Locations Inscope',\r\n            perc:`${((gl(SiteBreakdown)/(gl(SiteBreakdown)+gl(MODEL.STORERESIDUALMARKERS))*100)).toFixed(2)} %`\r\n        },{\r\n            info:INFO.LOCATIONSOUTSCOPE,\r\n            number:numberWithCommas(gl(MODEL.STORERESIDUALMARKERS)),\r\n            label:'Out of Scope',\r\n            perc:null\r\n        },{\r\n            info:INFO.EXCLUDEDLOCATIONS,\r\n            number:numberWithCommas( gl(MODEL.USERSELECTEDLIST)-(SiteNum()+gl(MODEL.STORERESIDUALMARKERS))  ),\r\n            label:'Excluded Locations',\r\n            perc:null\r\n        },{\r\n            info:INFO.FULLPORTFOLIO,\r\n            number:numberWithCommas( gl(MODEL.USERSELECTEDLIST) ),\r\n            label:'Full Portfolio',\r\n            perc:null\r\n        }\r\n    ]\r\n\r\n    return(\r\n        <>       \r\n                <ul className=\"Pod_List\">\r\n                    {\r\n                        Numbers.map((number,i)=>{\r\n                            return(\r\n                                <Tooltip title={number.info} key={i}>\r\n                                    <li className=\"Pod\">\r\n                                        <div className=\"Data\"><P Copy= {number.number}/></div>\r\n                                        <div className=\"Title\"> <H4 Copy={number.label}/></div>\r\n                                        <div className=\"Data Strong\"><P Copy={number.perc} /></div>\r\n                                        \r\n                                        <HelpOutlineIcon />\r\n                                    </li> \r\n                                </Tooltip>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n        </>\r\n    )\r\n}\r\nexport default HeaderLocations;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_ByTier.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Charts.js",["2158","2159","2160","2161"],"import React, {useEffect} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\n// Actions\r\nimport {OBJ_SITE_GLOBAL,OBJ_CLUSTER_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n// Template\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\n\r\n// Chart\r\nimport Locaction_Radial_Clusters from 'Pages/Auth/SingleModelResult/Charts/Location_Radial_Clusters'\r\nimport Chart_Pie_OutofScope from 'Pages/Auth/SingleModelResult/Charts/Location_Pie_OutofScope'\r\n\r\nconst Locations_Radial_Pie_Charts=()=>{\r\n\r\n    const UX = useContext_UX_FULL();  \r\n\r\n    useEffect(()=>{  },[UX]);\r\n    return(\r\n        <DiagramContainer>\r\n            \r\n            <div className=\"resultCharts\">\r\n                <Locaction_Radial_Clusters />\r\n                <Chart_Pie_OutofScope />\r\n            </div> \r\n            \r\n            <Stats_Bar data={OBJ_CLUSTER_GLOBAL()} name={`name`} value={`Appearances`}/>\r\n            \r\n        </DiagramContainer> \r\n    )\r\n}\r\n\r\nexport default Locations_Radial_Pie_Charts;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basics.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basic_Charts.js",["2162","2163","2164","2165"],"import React, { useEffect }  from 'react'\r\n\r\nimport {OBJ_CLIENT_RESOURCES, OBJ_CLUSTER_GLOBAL} from 'actions/CreateSingleViewModel'\r\n\r\n// Chart\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\n// Charts \r\nimport Workorder_pie_Clients from 'Pages/Auth/SingleModelResult/Charts/Workorder_pie_Clients'\r\nimport Workorder_Radial_Cluster from 'Pages/Auth/SingleModelResult/Charts/Workorder_Radial_Cluster'\r\n\r\n\r\nconst WorkOrderByClient=()=>{\r\n    useEffect(()=>{ },[])\r\n    return(\r\n        <DiagramContainer> \r\n        \r\n            <div className=\"resultCharts\">  \r\n                <Workorder_pie_Clients />\r\n               <Workorder_Radial_Cluster />\r\n            </div>\r\n\r\n            <Stats_Bar data={OBJ_CLIENT_RESOURCES()} name={`name`} value={`Work Orders`}/> \r\n            <Stats_Bar data={OBJ_CLUSTER_GLOBAL()} name={`name`} value={`Work Orders`}/> \r\n        </DiagramContainer>\r\n    )\r\n}\r\nexport default WorkOrderByClient;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clients_Names.js",["2166","2167","2168"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {findClientName} from \"actions/ClusterAnalysis\";\r\n\r\n\r\nconst ClusterByClientName = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [byClient, setByClient] = useState([])\r\n    const Model = SCAN.SelectedModel;\r\n    const ByClient=()=>{\r\n        let client=[];\r\n        let SumByClient\r\n        Model.STOREMARKERCENTERPOINTS.map((sites,i)=>{\r\n            sites.sites.map((site,i)=>{\r\n                client.push({\r\n                    sum:site.SumWorkOrder,\r\n                    client:site.customers[0]\r\n                })\r\n            })\r\n        })\r\n      \r\n        SumByClient = client.reduce(function (r, o) { (r[o.client])? r[o.client] += o.sum : r[o.client] = o.sum; return r; }, {});\r\n\r\n        setByClient(SumByClient)\r\n    }\r\n\r\n    useEffect(()=>{ByClient()},[SCAN])\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"Stat_Bar Column\">\r\n            {\r\n                Object.keys(byClient).map(function(key, i) {\r\n                    return(\r\n                        <li key={i}>\r\n                            <div>\r\n                                <div>{findClientName(key)}</div>\r\n                                <div>{byClient[key]} </div>\r\n                            </div>\r\n                        </li>\r\n                        )\r\n                    })        \r\n            }\r\n        </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClusterByClientName;",["2169","2170"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_ResourceAllocation.js",["2171","2172","2173","2174"],"import React,{useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport { workingDaysBetweenDates,numberWithCommas} from \"actions/HandleUX\";\r\n\r\n// Actions\r\nimport {WorkorderTotals, OBJ_SITE_GLOBAL,OBJ_RESOURCES_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n\r\n// Template\r\nimport {H4,H3, P,S} from \"Pages/Auth/Components/Type\";\r\n\r\nimport {sumBy} from 'lodash'\r\n\r\nconst ResourceAllocationRatios = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [WorkingDays, setWorkingDays] = useState(0)\r\n    const [ResourceSum, setResourceSum] = useState(0)\r\n    \r\n\r\n    useEffect(()=>{\r\n        setResourceSum(sumBy(OBJ_SITE_GLOBAL(), function(o) { return o['Resources']; }).toFixed(2))\r\n\r\n        setWorkingDays(workingDaysBetweenDates(SCAN.SelectedModelMeta.DateStart,SCAN.SelectedModelMeta.DateEnd))\r\n   \r\n    },[UX]) \r\n\r\n    useEffect(()=>{\r\n    \r\n    },[ResourceSum]) \r\n   \r\n    return(\r\n        <>  \r\n        <H3 Copy={`Model Resource Allocations`} />\r\n     \r\n            <ul className=\"Pod_List\"> \r\n                <li className=\"Pod\">\r\n                    <div className=\"Data\"><P Copy={WorkorderTotals()[0]}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Work Order Total`}/></div>\r\n                </li> \r\n                <li className=\"Pod\">\r\n                    <div className=\"Data\"><P Copy= {ResourceSum}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Total Resource Allocation`}/></div>\r\n                </li> \r\n                <li className=\"Pod\"> \r\n                    <div className=\"Data\"><P Copy= {WorkingDays}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Working Days in Model`}/></div>\r\n                </li> \r\n                \r\n                <li className=\"Pod\">\r\n              \r\n                    <div className=\"Data\"><P Copy={(ResourceSum/WorkingDays).toFixed(2)} /></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Avg WO/resource`}/></div>\r\n                    \r\n                </li>\r\n            </ul>\r\n        </>  \r\n    )\r\n} \r\n\r\nexport default ResourceAllocationRatios;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Ratios.js",["2175","2176","2177","2178","2179"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {FindTradeTypeAllocation} from \"actions/ClusterAnalysis\";\r\n\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H4,H2, P} from \"Pages/Auth/Components/Type\";\r\n \r\nconst ByTradeRatio = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const Model = SCAN.SelectedModel;\r\n    \r\n    const [TradeAllocationTotal, setTradeAllocationTotal] = useState(0)\r\n    const [TradeAllocation,setTradeAllocation] = useState([[],[]])\r\n    \r\n    const TradeWoRatioForDemo=(num)=>{\r\n        return ((num/TradeAllocationTotal)*100).toFixed(2)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let TWV=0\r\n        FindTradeTypeAllocation(Model.STOREMARKERCENTERPOINTS)[1].map((value,i)=>{TWV= TWV+value})\r\n        setTradeAllocationTotal(TWV)\r\n    },[])\r\n    \r\n    return(\r\n        <>\r\n        <H2 Copy={`Workorders by Trade Type`} />\r\n        <Section>\r\n        \r\n            <ul className=\"Stat_Bar\">\r\n                {\r\n                    TradeAllocation[0].map((trade,i)=>{\r\n                        return(\r\n                            <li key={i}>\r\n                                <span>{TradeWoRatioForDemo(TradeAllocation[1][i])}%</span>\r\n                                {trade} \r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </Section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ByTradeRatio;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\OLD_ResultHeader.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Map_Full_MAin.js",["2180"],"import React from 'react'\r\n\r\n// Components\r\nimport Map_SingleModelReview_FULLModel from \"Pages/Auth/Components/Maps/Map_SingleModelReview_FULLModel\"\r\nimport MapColorKey from \"Pages/Auth/Components/Maps/MapColorKey\"\r\nimport MainMapFilters from \"Pages/Auth/Components/Maps/MapMainFilter\";\r\n\r\nconst ResultMap = ()=>{\r\n    return(\r\n        <>\r\n  \r\n            <div className=\"ScanMapMain\" id=\"MainMap\">\r\n                <MainMapFilters />\r\n                \r\n                <Map_SingleModelReview_FULLModel />\r\n                <MapColorKey />\r\n            </div> \r\n        </> \r\n    )\r\n}\r\n\r\nexport default ResultMap;  ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Map_SingleModelReview_FULLModel.js",["2181","2182","2183","2184","2185"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\LocationMarkers.js",["2186","2187","2188","2189","2190","2191","2192","2193","2194","2195","2196","2197","2198","2199","2200"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ResidualLocationMarkers.js",["2201","2202","2203","2204","2205","2206","2207","2208","2209"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\n\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkersALL = ()=>{\r\n\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name)=>{console.log(\"Marker Clicked\", name) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n       // console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n\r\n        //console.log(\"markers\", markers)\r\n        \r\n        let StoreMarkers=[]         \r\n                markers.map((site,i)=>{\r\n                    Targeticon = {\r\n                        //path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                        path:\"M-24-48h48v48h-48z\",\r\n                        fillColor: '#3D3D3D',\r\n                        fillOpacity: 1,\r\n                        anchor: new window.google.maps.Point(0,0),\r\n                        strokeWeight: 0,\r\n                        scale: .2,\r\n                        zIndex:10\r\n                    };\r\n                    StoreMarkers.push( \r\n                        \r\n                            <Marker\r\n                                key={i}\r\n                                onLoad={onLoadMarker}\r\n                                title={site.name}\r\n                                //label={site.name}\r\n                                icon={Targeticon}\r\n                                onClick={()=>{OnMarkerClick(site.name)}}\r\n                                position={{\r\n                                        lat: parseFloat(site.lat),\r\n                                        lng: parseFloat(site.long)\r\n                                    }}\r\n                            />\r\n                    )\r\n                })\r\n        setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{  CreateMarkers(SCAN.SelectedModel.STORERESIDUALMARKERS)},[SCAN.SelectedModel])\r\n\r\n      return(  <>{DisplayMarkers}</>) \r\n\r\n}\r\n\r\nexport default MarkerBasedLocationMarkersALL;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Polygons.js",["2210","2211","2212","2213","2214","2215","2216","2217","2218","2219"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MarkersCenterpoints.js",["2220","2221"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Circle } from '@react-google-maps/api';\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\nimport {RegionColor} from \"actions/HandleUX\"\r\n\r\n\r\n\r\nconst MarkerCenterpoints = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [Centerpoints, setCenterpoints] = useState(null)\r\n     \r\n    const CreateCenterpoints = ()=>{\r\n        let StorePoints=[]       \r\n        SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((center,i)=>{\r\n        \r\n/*\r\n                        {\r\n                            name:site.name,\r\n                            center:{\r\n                                lat: site.lat,\r\n                                lng: site.long\r\n                              },\r\n                            range:Range.range[1]\r\n                        }\r\n            */\r\n           //console.log(center.center, center.range)\r\n           \r\n           \r\n\r\n           let options = {\r\n               strokeColor: RegionColor(center.scanCategory),\r\n               strokeOpacity: 0.9,\r\n               strokeWeight: 1,\r\n               fillColor: RegionColor(center.scanCategory),\r\n               fillOpacity: 0.2,\r\n               radius: ((center.range*1000)),\r\n               zIndex: 1\r\n             }\r\n            let Featheroptions = {\r\n                strokeColor: RegionColor(center.scanCategory),\r\n                strokeOpacity: 0.7,\r\n                strokeWeight: 3,\r\n                fillColor: RegionColor(center.scanCategory),\r\n                fillOpacity: 0.01,\r\n                radius: (( (center.range+((center.feather/100)*center.range)) *1000)),  \r\n                zIndex: 1\r\n              }\r\n           StorePoints.push(\r\n                <span key={i}>\r\n                    <Circle center={center.center} options={options}/>\r\n                    <Circle center={center.center} options={Featheroptions}/>\r\n                </span>\r\n           )\r\n            \r\n        })\r\n        setCenterpoints(StorePoints)\r\n        \r\n    }\r\n    \r\n    \r\n    useEffect(()=>{  CreateCenterpoints() },[SCAN.SelectedModel])\r\n\r\n    useEffect(()=>{},[ Centerpoints])\r\n\r\n    return(\r\n        <>\r\n            {Centerpoints}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerCenterpoints;",["2222","2223"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MarkerBasedResults.js",["2224"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport ClusterResults from \"Pages/Auth/Components/Maps/ClusterMiniMapResults/ClusterResults\";\r\nimport {GroupArrayByOccurances} from \"actions/HandleUX\";\r\nimport {FindTradeTypeAllocation, findClientName} from \"actions/ClusterAnalysis\";\r\n\r\n\r\nconst MarkerBasedResults = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n\r\n    const CLUSTERSTATS = SCAN.SelectedModel.CLUSTERSTATS;\r\n    \r\n    const [Results, setResults] = useState(null)\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n    const [TradeAllocation,setTradeAllocation] = useState([[],[]])\r\n\r\n\r\n    const extractResults=()=>{\r\n        //console.log(SCAN.SelectedModel.STOREMARKERCENTERPOINTS);\r\n\r\n        let ResultArr=[];\r\n        let CategoryInt=[]\r\n            SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((result,i)=>{\r\n                ResultArr.push( <li key={i}> <ClusterResults  result={result} i={i}/></li>)\r\n                CategoryInt.push(result.scanCategory)\r\n                return true\r\n            })\r\n            setResults(ResultArr);\r\n            setCategoryOccurance(GroupArrayByOccurances(CategoryInt))\r\n    }\r\n\r\n    const gl=(data)=>{\r\n        return data.length\r\n    }\r\n\r\n    useEffect(()=>{ \r\n     \r\n        if(SCAN.SelectedModel.STOREMARKERCENTERPOINTS !==null){\r\n            extractResults()\r\n            setTradeAllocation(FindTradeTypeAllocation(SCAN.SelectedModel.STOREMARKERCENTERPOINTS));\r\n        \r\n        }\r\n            \r\n     \r\n    },[SCAN]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"ResultsHeader\">\r\n            \r\n            <h2>Model Stats</h2>\r\n\r\n            <h3>Clusters : {CLUSTERSTATS.clusters}</h3>\r\n            <h3>Total Locations {gl(SCAN.SelectedModel.USERSELECTEDLIST)} </h3>\r\n            <h3>Unaccommodated Locations : {CLUSTERSTATS.UnaccommodatedLocations}</h3>\r\n            <h3>Locations Inscope {CLUSTERSTATS.Inscope} ({ ((CLUSTERSTATS.Inscope/gl(SCAN.SelectedModel.USERSELECTEDLIST)*100)).toFixed(2)}%)</h3>\r\n            \r\n            <hr />\r\n\r\n                <h3>Clients Total Work Orders {CLUSTERSTATS.TotalWorkOrders}</h3>\r\n                <h3>Work Orders Covered in model {CLUSTERSTATS.WorkOrdersCoveredInModel} ({((CLUSTERSTATS.WorkOrdersCoveredInModel/CLUSTERSTATS.TotalWorkOrders)*100).toFixed(2)}%)</h3>\r\n            \r\n            <hr />\r\n\r\n\r\n            <h4>Model Work Orders by Client</h4>\r\n            \r\n            <ul className=\"\">\r\n                {\r\n                    Object.keys(CLUSTERSTATS.ByClient).map(function(key, i) {\r\n                        return(\r\n                            <li key={i}>\r\n                                {findClientName(key)} : {CLUSTERSTATS.ByClient[key]} \r\n                            </li>\r\n                            )\r\n                      })        \r\n                }\r\n            </ul>\r\n            <hr />\r\n            <h3>Resource Allocation : {CLUSTERSTATS.ResourceAllocation}</h3>\r\n            <h3>Avg WO Completed per resource: {(CLUSTERSTATS.WorkOrdersCoveredInModel/CLUSTERSTATS.ResourceAllocation).toFixed(2)} ({((CLUSTERSTATS.WorkOrdersCoveredInModel/CLUSTERSTATS.ResourceAllocation)/250).toFixed(2)}) </h3>\r\n         \r\n            <hr />\r\n\r\n            <h4>Trade Overview:</h4>\r\n            <p>These numbers are just instances, not real numbers</p>\r\n            <ul className=\"ClustersbyCategory\">\r\n                {\r\n                    TradeAllocation[0].map((trade,i)=>{\r\n                        return(\r\n                            <li key={i}>\r\n                                {trade} {TradeAllocation[1][i]}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n\r\n            <h4>Cluster by Tiers</h4>\r\n                <ul className=\"ClustersbyCategory\">\r\n                    {\r\n                        CategoryOccurance[0].map((cat,i)=>{\r\n                            return(\r\n                                <li key={i}>\r\n                                        {cat} : {CategoryOccurance[1][i]}\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n           \r\n            </div>\r\n\r\n            <ul className=\"ListResults\">\r\n                    {Results}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerBasedResults;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapColorKey.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\OLD_ResultMap.js",["2225","2226"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clusters_ResultsList.js",["2227","2228","2229"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport ClusterResults from \"Pages/Auth/Components/Maps/ClusterMiniMapResults/ClusterResults\";\r\n\r\n\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H2} from \"Pages/Auth/Components/Type\";\r\nconst CulsterResults = ()=>{\r\n   \r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [Results, setResults] = useState(null)\r\n\r\n    const extractResults=()=>{\r\n        let ResultArr=[];\r\n            SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((result,i)=>{\r\n                ResultArr.push( <li key={i}> <ClusterResults  result={result} i={i}/></li>)\r\n                return true\r\n            })\r\n            setResults(ResultArr);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        //console.log(SCAN.SelectedModel.STOREMARKERCENTERPOINTS)\r\n        if(SCAN.SelectedModel.STOREMARKERCENTERPOINTS !==null)\r\n            extractResults()\r\n        \r\n    },[SCAN]);\r\n\r\n    return(\r\n        <Section>\r\n            \r\n            \r\n            \r\n        </Section>\r\n    )\r\n}\r\n\r\nexport default CulsterResults; \r\n\r\n// <ul className=\"ListResults\">{Results}</ul>","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterResults.js",["2230","2231","2232","2233","2234"],"import React, { useEffect, useState } from 'react'\r\nimport{NumberReducer, RegionColor, GroupArrayByOccurances} from \"actions/HandleUX\";\r\nimport {findClientName, FindTradeTypeAllocation} from \"actions/ClusterAnalysis\";\r\nimport ClusterMiniMap from \"Pages/Auth/Components/Maps/ClusterMiniMapResults/ClusterMiniMap\"\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\n\r\nconst ClusterResult = (props)=>{\r\n\r\n    const {result, i} = props;\r\n    const [WorkOrderTotal, setWorkOrderTotal] = useState(0)\r\n   \r\n    const SumWorkorders = (data)=>{\r\n        let total = []\r\n        data.map((site)=>{\r\n            if(!isNaN(site.SumWorkOrder))\r\n                total.push(site.SumWorkOrder)\r\n        })\r\n        setWorkOrderTotal(total.reduce((a, b) => a + b, 0))\r\n    }\r\n\r\n    const SumTradeType = ()=>{\r\n\r\n    }\r\n \r\n    useEffect(()=>{ \r\n        console.log(result)\r\n        //FindClusterTotal(result)\r\n        SumWorkorders(result.sites) \r\n        SumTradeType(result.sites)\r\n        \r\n    },[result])\r\n \r\n    return(\r\n        <>\r\n            \r\n            <div className=\"colorkey\" style={{backgroundColor:RegionColor(result.scanCategory)}}>\r\n             <strong>{result.scanCategory}</strong>\r\n            </div>\r\n          \r\n            <h3><LocationCityIcon /> Cluster { (i+1) }</h3>            \r\n            <ul className=\"ListStats\">\r\n                <li>Sites: <strong>{result.sites.length}</strong></li>\r\n                <li>Total Work Orders: <strong>{WorkOrderTotal}</strong></li>\r\n                <li>Resource Quota : <strong>{result.resourceQuota.toFixed(2)}</strong></li> \r\n               \r\n               <li>\r\n                   Clients\r\n                   <GetClientName clients = {GroupArrayByOccurances(JSON.parse(result.sites[0].count[0].Customers))}/></li>\r\n                <li>\r\n                    Trade Types %\r\n                   <GetTradeName Trades = {FindTradeTypeAllocation([{sites:result.sites}])}/></li>\r\n               \r\n             \r\n            </ul>\r\n            <h4></h4> \r\n           \r\n            \r\n            \r\n            <div className=\"ListResultContainer\">\r\n               <ClusterMiniMap result={result}/>\r\n            </div>\r\n                \r\n               \r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\n   <li>est Cost : <strong>$?</strong></li>\r\n  <CenterPoints />\r\n                        <Markers />\r\n                        <ResidualMarkers />\r\n*/\r\nexport default ClusterResult;\r\n\r\n//<h3> {result.name}</h3>\r\n\r\nconst GetTradeName = (props)=>{\r\n    const {Trades} = props\r\n    const [TradeAllocationTotal, setTradeAllocationTotal] = useState(0)\r\n    const TradeWoRatioForDemo=(num)=>{\r\n        return ((num/TradeAllocationTotal)*100).toFixed(2)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let TWV=0\r\n        Trades[1].map((value,i)=>{TWV= TWV+value})\r\n        setTradeAllocationTotal(TWV)\r\n    },[])\r\n\r\n    return(\r\n        <ul>\r\n            {\r\n                Trades[0].map((trade,i)=>{\r\n                    return(\r\n                        <li key={i}>\r\n                            {trade} <strong>{ TradeWoRatioForDemo(Trades[1][i]) }%</strong>\r\n                        </li>\r\n                    )\r\n                })\r\n\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n \r\n\r\nconst GetClientName = (props)=>{\r\n    const {clients} = props\r\n    return(\r\n        <ul>\r\n            {\r\n                clients[0].map((client, i )=>{\r\n                    return(\r\n                        <li key={i}><strong>{findClientName(client)}</strong></li>\r\n                    )\r\n                })\r\n\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterMiniMap.js",["2235","2236","2237","2238","2239"],"import React, { useEffect, useState } from 'react'\r\nimport { GoogleMap, Circle,Marker,Polygon } from '@react-google-maps/api';\r\n\r\nimport {RegionColor} from \"actions/HandleUX\";\r\n\r\nconst containerStyle = { height: \"300px\", width: \"auto\" };\r\nlet Targeticon = { };\r\nconst ClusterMap = (props)=>{\r\n    const {result} = props;\r\n\r\n    const [markers, setMarkers] = useState([])\r\n    const [PolyPath, setPolyPath] = useState([])\r\n\r\n    let options = {\r\n        strokeColor: RegionColor(result.scanCategory),\r\n        strokeOpacity: 0.9,\r\n        strokeWeight: 1,\r\n        fillColor: RegionColor(result.scanCategory),\r\n        fillOpacity: 0.2,\r\n        radius: ((result.range*1000)),\r\n        zIndex: 1\r\n      }\r\n\r\n      const CreateMarkers = ()=>{\r\n\r\n        //console.log(\"markers\", markers)\r\n        let StoreMarkers=[];\r\n\r\n    \r\n          //console.log(centerPoint.sites)\r\n          result.sites.map((site,ii)=>{\r\n\r\n              Targeticon = {\r\n                //path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                path:\"M-24-48h48v48h-48z\",\r\n                fillColor: RegionColor(result.scanCategory),\r\n                fillOpacity: .9,\r\n                anchor: new window.google.maps.Point(0,0), \r\n                strokeWeight: 0,\r\n                scale: .5\r\n            }; \r\n          \r\n            \r\n            StoreMarkers.push( \r\n                \r\n                    <Marker\r\n                       \r\n                        key={site.name}\r\n                     \r\n                        title={site.name}\r\n                        label={site.name}\r\n                        icon={Targeticon}\r\n                        \r\n                        position={{\r\n                                lat: parseFloat(site.lat),\r\n                                lng: parseFloat(site.long)\r\n                            }}\r\n                    />\r\n                \r\n            )\r\n            })\r\n            setMarkers(StoreMarkers);\r\n        }\r\n\r\n\r\n\r\n        const CreatePolygon = ()=>{\r\n          let Polyoptions = {\r\n            strokeColor: RegionColor(result.scanCategory),\r\n            strokeOpacity: 1,\r\n            strokeWeight: 1.5,\r\n            fillColor: RegionColor(result.scanCategory),\r\n            fillOpacity: 0.1,\r\n          \r\n            zIndex: 1\r\n          }\r\n\r\n              let PolygonPath=[]\r\n              result.polygon.map((point,i)=>{\r\n                  //console.log(point)\r\n                  PolygonPath.push({ lat: point[0], lng: point[1]})\r\n              })\r\n              \r\n              setPolyPath(<Polygon paths={PolygonPath} options={Polyoptions} />)\r\n              \r\n            }\r\n\r\n\r\n      useEffect(()=>{  \r\n        CreateMarkers() \r\n        CreatePolygon()\r\n      },[])\r\n\r\n    return(\r\n        <GoogleMap \r\n                mapContainerStyle={containerStyle}\r\n                center={result.center}\r\n                zoom={15}\r\n            >\r\n                { /* Child components, such as markers, info windows, etc. */ }\r\n               \r\n                {markers}\r\n                {PolyPath}\r\n        </GoogleMap>\r\n\r\n    )\r\n}\r\n// <Circle center={result.center} options={options}/>\r\nexport default ClusterMap;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\SelectandReview.js",["2240","2241","2242","2243","2244"],"import React, { useEffect, useState } from 'react'\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { orderBy,  remove} from 'lodash'; \r\nimport ReviewSelectionBtn from \"../Components/buttons/SetSelectedBtn\";\r\n\r\nimport SelectScanItems from \"./ScanSelectItems\";\r\nimport ReviewSelection from \"./ScanReviewSelectedItems\";\r\n\r\n\r\nconst SelectandReview = ()=>{\r\n\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n    useEffect(()=>{},[SCAN])\r\n \r\n        return(\r\n            <>\r\n                {\r\n                USERSCAN.SetSelectedDatabase ? <ReviewSelection />:<SelectScanItems />\r\n            } \r\n            </>\r\n        )\r\n}\r\nexport default SelectandReview;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanSelectItems.js",["2245","2246","2247","2248","2249"],"import React, { useEffect, useState } from 'react'\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { orderBy,findIndex,  remove} from 'lodash'; \r\nimport ReviewSelectionBtn from \"../Components/buttons/SetSelectedBtn\";\r\nimport {StoreSelected_Single} from \"actions/HandleScanProcess\";\r\nimport BtnBacktoScanOptions from \"../Components/buttons/BacktoScanType\";\r\n\r\nimport Select_FilterClients from \"Pages/Auth/Components/selects/Select_CreateModelFilter\";\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nconst ScanSelectItems=()=>{\r\n   \r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const USERSCAN = SCAN.UserScanState;\r\n    const [nonSelected, setNonselected] = useState([])\r\n    const [Selected, setSelected] = useState([])\r\n    const [filter, setFilter] =  useState(null)\r\n\r\n    const handleAdd=(customer)=>{\r\n    \r\n        let Index= findIndex(Selected, function(o) { return o.id === customer.id; });\r\n        if(Index === -1){\r\n            let NewSelected = [...Selected, customer]; \r\n            setSelected(NewSelected)\r\n        }\r\n       \r\n        let RemoveSelected = remove(nonSelected, function(o) {return o.id != customer.id;});\r\n        setNonselected(RemoveSelected)\r\n        \r\n    } \r\n\r\n    const handleRemove=(customer)=>{\r\n\r\n        let Index= findIndex(nonSelected, function(o) { return o.id === customer.id; });\r\n        if(Index === -1){\r\n            let NewSelected = [...nonSelected, customer];\r\n            setNonselected(NewSelected)\r\n        }\r\n        let RemoveSelected = remove( Selected, function(o) {return o.id != customer.id;});\r\n        setSelected(RemoveSelected);\r\n      \r\n    }\r\n\r\n    useEffect(()=>{\r\n        setNonselected(JSON.parse(JSON.stringify(STRAPI.UserData.Customers)));\r\n     \r\n        setSelected(USERSCAN.UserScanSingleDataSets)\r\n      \r\n    },[USERSCAN.ScanOptionSelected])\r\n\r\n    useEffect(()=>{\r\n        StoreSelected_Single(Selected)\r\n    },[Selected,nonSelected])\r\n\r\n    useEffect(()=>{\r\n        if(filter != null){\r\n            const results = JSON.parse(JSON.stringify(STRAPI.UserData.Customers)).filter( h => h.name.toLowerCase().includes(filter.toLowerCase()) );\r\n            setNonselected(results);\r\n        }\r\n      \r\n    },[filter])\r\n    return(\r\n        <>\r\n            <div className=\"InnerFrame\">\r\n                <h2>Select Clients for Model</h2>\r\n                <p>Loremipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\r\n                <p>Loremipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\r\n\r\n                <Select_FilterClients setFilter={setFilter}/>\r\n\r\n                <div className=\"Dataset_Selection\">\r\n                    <div>\r\n                        <ul>\r\n                            {\r\n                                \r\n                                orderBy(nonSelected, ['name'], ['asc']).map((customer,i)=>{\r\n                                    return(\r\n                                        <li key={i} >\r\n                                            {customer.name}\r\n                                            <IconButton aria-label=\"add\" onClick={()=>{handleAdd(customer)}}>\r\n                                            <AddCircleIcon />\r\n                                                \r\n                                            </IconButton>\r\n                                            \r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                      </ul>\r\n                    </div>\r\n                    <div>\r\n                        <ul>\r\n                            {\r\n                                orderBy(Selected, ['name'], ['asc']).map((customer,i)=>{\r\n                                    return(\r\n                                        <li key={i} >\r\n                                            {customer.name}\r\n                                            <IconButton aria-label=\"delete\"onClick={()=>{handleRemove(customer)}}>\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"SideBarRight\">\r\n                <div className=\"ControlBar\">\r\n                    <ReviewSelectionBtn />\r\n                    <BtnBacktoScanOptions />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScanSelectItems;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanReviewSelectedItems.js",["2250","2251","2252","2253","2254","2255"],"import React, { useEffect, useState } from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { orderBy,  remove} from 'lodash'; \r\n//import {FetchSelectedItems} from \"actions/HandleScanProcess\";\r\nimport BacktoSelectItems from \"../Components/buttons/BacktoAddItemsSingleScan\"\r\nimport ScanForm from \"../../../venders/MaterialUI/Forms/CreateScanoptions\";\r\nimport CreateNewModelBtn from \"../Components/buttons/CreateNewModel\";\r\n\r\nconst ReviewSelected = ()=>{\r\n\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    \r\n    const [Fetching, setFetching] = useState('Review items')\r\n\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n    useEffect(()=>{\r\n    \r\n        if(USERSCAN.UserWorkingDataSet_Single.length === 0){\r\n          //  FetchSelectedItems(USERSCAN.UserScanSingleDataSets)\r\n        }\r\n        \r\n     \r\n        \r\n    },[USERSCAN])\r\n    \r\n    return(\r\n        <>\r\n            {\r\n                USERSCAN.processing ? <ReviewSent />:<ReviewScanContnt />\r\n            }\r\n               \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ReviewSelected; \r\n\r\n\r\nconst ReviewScanContnt = ()=>{\r\n    \r\n    const SCAN = useContext_SCAN_FULL();\r\n    \r\n    const [Fetching, setFetching] = useState('Model Name and Description')\r\n\r\n    const USERSCAN = SCAN.UserScanState;\r\n\r\n    useEffect(()=>{\r\n    \r\n        if(USERSCAN.UserWorkingDataSet_Single.length === 0){\r\n          //  FetchSelectedItems(USERSCAN.UserScanSingleDataSets)\r\n        } \r\n    },[USERSCAN])\r\n    return(\r\n        <>\r\n            <div className=\"InnerFrame\">\r\n                    <h2>Model Name and Description</h2>\r\n                    <p>Add a clear and consis name and description for this model. This will be used later when comparing and anylisis models against each other.</p>\r\n                       \r\n                    <div className=\"ModelReview\">\r\n                        <ScanForm  DataSet={USERSCAN.UserScanSingleDataSets} />\r\n                    </div>\r\n                   \r\n            </div>\r\n            <div className=\"SideBarRight\">\r\n                <div>\r\n                    <h4>Selected Clients</h4>\r\n                    <ul> \r\n                        {\r\n                            USERSCAN.UserScanSingleDataSets.map((item,i)=>{\r\n                                return(\r\n                                    <li key={i}>\r\n                                        {item.name}\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"ControlBar\">\r\n                    <BacktoSelectItems />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ReviewSent=()=>{\r\n    return(\r\n        <>\r\n            <h2>Building new Model</h2>\r\n            <p>We are currently building the new model as requested.</p>\r\n            <p>You can check the progess of the model under the \"Resource Models\" page</p>\r\n            <p>Once the model status has changed to 'complete' your results will be viewable</p>\r\n            <CreateNewModelBtn />\r\n        </>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\RadialSIngleChart.js",[],["2256","2257"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_CLusterSpreadbyCLient.js",["2258","2259","2260","2261","2262","2263","2264","2265","2266","2267","2268"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {GroupArrayByOccurances} from \"actions/HandleUX\";\r\nimport {findClientName} from \"actions/ClusterAnalysis\";\r\n// Chart\r\nimport PieChart from \"venders/apexCharts/SimplePie\";\r\nimport RadialMultiChart from \"venders/apexCharts/RadialMultiChart\";\r\n\r\n\r\nimport {H3, P} from \"Pages/Auth/Components/Type\";\r\n\r\nimport {find, findIndex} from 'lodash'; \r\n\r\nconst HeaderLocations=()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const MODEL = SCAN.SelectedModel\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n\r\n    const gl=(data)=>{\r\n        return data.length\r\n    }\r\n\r\n    const extractResults=()=>{\r\n        let CategoryInt=[]\r\n           \r\n        SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((result,i)=>{\r\n                CategoryInt.push(result.scanCategory)\r\n                return true\r\n            })\r\n/* data = [\r\n  {\r\n    subject: 'Math', A: 120, B: 110, fullMark: 150,\r\n  },\r\n  {\r\n    subject: 'Chinese', A: 98, B: 130, fullMark: 150,\r\n  },\r\n  {\r\n    subject: 'English', A: 86, B: 130, fullMark: 150,\r\n  },\r\n  {\r\n    subject: 'Geography', A: 99, B: 100, fullMark: 150,\r\n  },\r\n  {\r\n    subject: 'Physics', A: 85, B: 90, fullMark: 150,\r\n  },\r\n  {\r\n    subject: 'History', A: 65, B: 85, fullMark: 150,\r\n  },\r\n];\r\n*/\r\n        let Data=[] \r\n        let ClientSpread=[]\r\n            console.log(GroupArrayByOccurances(CategoryInt));\r\n            let RegionArray=GroupArrayByOccurances(CategoryInt);\r\n           \r\n           \r\n            RegionArray[0].map((cat,i)=>{\r\n              \r\n                Data.push({ name: cat, value: RegionArray[1][i] })\r\n                let ClientPush=[]\r\n\r\n\r\n                SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((CP,i)=>{\r\n                        if(CP.scanCategory === cat)\r\n                        {\r\n                            \r\n                            // Check to see if Name exists\r\n                            let TierID = findIndex(ClientSpread, function(o) { return o.name === cat; })\r\n                            if(TierID === -1){ ClientSpread.push({name:cat}); }\r\n                            TierID = findIndex(ClientSpread, function(o) { return o.name === cat; })\r\n                        \r\n\r\n                            \r\n                           // console.log(ClientSpread[TierID], TierID, ClientSpread)\r\n                            CP.sites.map((client,i)=>{\r\n                                client.customers.map((name,i)=>{\r\n                                    if(ClientSpread[TierID][findClientName(name)] === undefined){\r\n                                        ClientSpread[TierID][findClientName(name)] = 1\r\n                                    }else{\r\n                                        ClientSpread[TierID][findClientName(name)] = ClientSpread[TierID][findClientName(name)]+1\r\n                                    }\r\n                                    //console.log()\r\n                                    //console.log(findClientName(name))\r\n                                })\r\n                            })\r\n                        }\r\n                       \r\n                })\r\n            });\r\n\r\n            console.log(ClientSpread)\r\n\r\n        setCategoryOccurance(ClientSpread)\r\n    }\r\n\r\n    const inScope=()=>{\r\n        return gl(MODEL.USERSELECTEDLIST)-gl(MODEL.STORERESIDUALMARKERS)\r\n    }\r\n\r\n    useEffect(()=>{ console.log(MODEL)  },[]) \r\n    useEffect(()=>{extractResults()},[SCAN])\r\n\r\n    return(\r\n        <> \r\n            <H3 Copy={`Cluster Spread by Client`} />\r\n            <div className=\"resultCharts\">\r\n                <div>\r\n                    <RadialMultiChart Data={CategoryOccurance} term={`Clusters`}/>\r\n                </div>\r\n               \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n//<PieChart Data={CategoryOccurance}/>\r\nexport default HeaderLocations;",["2269","2270"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\RadialMultiChart.js",["2271"],"import React from 'react';\r\nimport {\r\n  Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis,ResponsiveContainer,Legend, Tooltip\r\n} from 'recharts';\r\n\r\n\r\n\r\nconst SimpleRadial = (props)=>{\r\n    const {Data, term} = props\r\n    return(\r\n        <ResponsiveContainer width='100%' height={300}>\r\n        <RadarChart  outerRadius={100}  data={Data}>\r\n            <PolarGrid />\r\n            <PolarAngleAxis dataKey=\"name\" />\r\n            <PolarRadiusAxis />\r\n            \r\n            {\r\n                Data.map((tier,i)=>{\r\n                    console.log(tier )\r\n                    return(\r\n                        <Radar key={`cell-${i}`} name={tier.name} dataKey={tier} stroke=\"#030303\" fill=\"#030303\" fillOpacity={0.6} />\r\n                    )\r\n                })\r\n            }\r\n            \r\n            <Tooltip />\r\n            <Legend />\r\n        </RadarChart>\r\n      </ResponsiveContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default SimpleRadial;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapMainFilter.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_ResourceSpread.js",["2272"],"import React, {useEffect} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\n\r\n// Layout\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\n// Charts\r\nimport ClusterSwarmPlot from 'Pages/Auth/SingleModelResult/Charts/Clusters_SwarmPlot_Numbers'\r\nimport ClusterBar_ResourceAllocation from 'Pages/Auth/SingleModelResult/Charts/Cluster_Bar_ResourceAllocation'\r\n\r\n\r\nconst LocationResourceSpread = ()=>{\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL()\r\n    useEffect(()=>{ },[UX, MODEL]) \r\n\r\n    return(\r\n        <>\r\n        <DiagramContainer>\r\n            <ClusterSwarmPlot />\r\n        </DiagramContainer>\r\n        <DiagramContainer>\r\n          <ClusterBar_ResourceAllocation />\r\n        </DiagramContainer>\r\n        </>\r\n        \r\n    ) \r\n}\r\nexport default LocationResourceSpread;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\apexCharts\\StackedBarChart.js",["2273"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByResourceType.js",["2274","2275","2276"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { setMainMapLocation, SetMapClusterType,SetMapResourceType } from \"actions/HandleUX\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  /* ************************************************** */\r\nconst ByResourceType = ()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL()\r\n    const UX = useContext_UX_FULL()\r\n    const ResourceType=[\"HandyMan\",\"Electrician\",\"Plumber\",\"Specialized\"]\r\n    const [type,setType] = useState(UX.AreaSelectFilter.ByResourceType)\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleChange = (event) => { \r\n        //console.log(event.target.value)\r\n        \r\n        setType(event.target.value)\r\n        SetMapResourceType(event.target.value)\r\n        //StoreCompareItem(event.target.value, pos)\r\n    };\r\n\r\n\r\n  \r\n    useEffect(()=>{ setType(UX.AreaSelectFilter.ByResourceType)},[UX])\r\n\r\n    return(\r\n        <FormControl variant=\"outlined\" className={`${classes.formControl} Map_Filters`}>\r\n        <InputLabel id=\"ByTier\">Resource Type</InputLabel>\r\n             <Select\r\n                labelId=\"ByTier\"\r\n                id=\"ByTier-outlined\"\r\n                value={type}\r\n                onChange={handleChange}\r\n                label=\"Select Resource Type\"\r\n                >\r\n                <MenuItem value={false}>ALL</MenuItem>\r\n\r\n                {\r\n                    ResourceType.map((Resource,i)=>{\r\n                        return(\r\n                            <MenuItem key={Resource}  value={Resource}>{Resource}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ByResourceType;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByClusterType.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByCapitalCities.js",["2277","2278"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport { setMainMapLocation } from \"actions/HandleUX\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {find} from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  \r\nconst ByCapitalCities = ()=>{\r\n    const UX = useContext_UX_FULL()\r\n    const CapitalCities=[\r\n        {\r\n            Name:'Australia', \r\n            Zoom:4,\r\n            Center: { lat:   -25.274399, lng: 133.775131}\r\n        },{\r\n            Name:'Sydney',\r\n            Zoom:10,\r\n            Center: { lat:   -33.868820, lng: 151.209290}\r\n        },\r\n        {\r\n            Name:'Melbourne',\r\n            Zoom:8,\r\n            Center: { lat:   -37.813629, lng: 144.963058}\r\n        },\r\n        {\r\n            Name:'Brisbane',\r\n            Zoom:10,\r\n            Center: { lat:-27.4678, lng:153.0281}\r\n        },\r\n        {\r\n            Name:'Perth',\r\n            Zoom:10,\r\n            Center: { lat:-31.9522, lng:115.8589}\r\n        },\r\n        {\r\n            Name:'Adelaide',\r\n            Zoom:10,\r\n            Center: { lat:-34.9289, lng:138.6011}\r\n        },\r\n        {\r\n            Name:'Canberra',\r\n            Zoom:13,\r\n            Center: { lat:-35.2931, lng:149.1269}\r\n        },\r\n        {\r\n            Name:'Gold Coast',\r\n            Zoom:10,\r\n            Center: { lat:-28.0167, lng:153.4000}\r\n        },\r\n        {\r\n            Name:'Newcastle',\r\n            Zoom:10,\r\n            Center: { lat:-32.9167, lng:151.7500}\r\n        },\r\n        {\r\n            Name:'Hobart',\r\n            Zoom:10,\r\n            Center: { lat:-42.8806, lng:147.3250}\r\n        }\r\n]\r\n\r\n\r\n    const classes = useStyles();\r\n    const [city, setCity] = useState(UX.MapParameters.Location);\r\n    const [OPTIONS, setOPTIONS] = useState([])\r\n    \r\n    \r\n    const handleChange = (event, key, payload) => { \r\n        //console.log(CapitalCities[event.target.value])\r\n        let Selected = find(CapitalCities, function(o) { return o.Name === event.target.value; })    \r\n        setMainMapLocation(Selected); \r\n        setCity(event.target.value)\r\n    \r\n    };\r\n\r\n    const CreateOptions=()=>{\r\n        let options=[]\r\n        CapitalCities.map((model,i)=>{ options.push(model.Name) })\r\n        setOPTIONS(options)\r\n    }\r\n\r\n    useEffect(()=>{CreateOptions()},[])\r\n\r\n    return(\r\n       <FormControl variant=\"outlined\" className={`${classes.formControl} Map_Filters`}>\r\n        <InputLabel id=\"MajorCities\">Major Cities</InputLabel>\r\n             <Select\r\n                labelId=\"MajorCities\"\r\n                id=\"MajorCities-outlined\"\r\n                value={city}\r\n                onChange={handleChange}\r\n                label=\"Select Major City\"\r\n                >\r\n          {\r\n              OPTIONS.map((city,i)=>{\r\n                  return(\r\n                    <MenuItem key={i} value={city}>{city}</MenuItem>\r\n                  )\r\n              })\r\n          }\r\n\r\n        </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ByCapitalCities;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectResourceType.js",["2279"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {SetMapResourceType } from \"actions/HandleUX\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  /* ************************************************** */\r\nconst ByResourceType = ()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL()\r\n    const UX = useContext_UX_FULL()\r\n    const ResourceType=[\"HandyMan\",\"Electrician\",\"Plumber\",\"Specialized\"]\r\n    const [type,setType] = useState(UX.AreaSelectFilter.ByResourceType)\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleChange = (event) => { \r\n        //console.log(event.target.value.Center)\r\n        \r\n        setType(event.target.value)\r\n        SetMapResourceType(event.target.value)\r\n        //StoreCompareItem(event.target.value, pos)\r\n    };\r\n\r\n  \r\n   \r\n\r\n    useEffect(()=>{ setType(UX.AreaSelectFilter.ByResourceType)},[UX])\r\n\r\n\r\n    return(\r\n        <FormControl variant=\"outlined\" className={`${classes.formControl} Map_Filters`}>\r\n        <InputLabel id=\"ByTier\">Resource Type</InputLabel>\r\n             <Select\r\n                labelId=\"ByTier\"\r\n                id=\"ByTier-outlined\"\r\n                value={type}\r\n                onChange={handleChange}\r\n                label=\"Select Resource Type\"\r\n                >\r\n                <MenuItem value={false}>ALL</MenuItem>\r\n\r\n                {\r\n                    ResourceType.map((Resource,i)=>{\r\n                        return(\r\n                            <MenuItem key={i}  value={Resource}>{Resource}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ByResourceType;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_WorkOrderSpread.js",["2280"],"import React, {useEffect} from 'react'\r\n\r\n// Layout\r\n\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport ClusterBar_WorkOrders from 'Pages/Auth/SingleModelResult/Charts/Cluster_Bar_Workorders'\r\n\r\nconst LocationResourceSpread = ()=>{\r\n\r\n    useEffect(()=>{},[])\r\n    return(\r\n        <DiagramContainer>\r\n            <ClusterBar_WorkOrders />\r\n        </DiagramContainer>\r\n    ) \r\n}\r\nexport default LocationResourceSpread;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\ChartHeader.js",["2281","2282","2283","2284","2285","2286","2287","2288"],"import React from 'react'\r\n// Icons\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport {ChartIcon} from 'actions/HandleUX';\r\n\r\n\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\n\r\n\r\nimport {H4, P} from \"Pages/Auth/Components/Type\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nconst ChartHeader=(props)=>{\r\n    const{ Header,Copy, Icon,filters=[]} = props\r\n    let DisplayIcon = ChartIcon(Icon);\r\n\r\n    return(\r\n        <div className=\"ChartHeader\">\r\n            <div className=\"InfoIcons\">\r\n                <Tooltip title=\"Small Helpful tip\">\r\n                    <LiveHelpIcon  className=\"help\"/> \r\n                </Tooltip>\r\n\r\n                <Filters filters={filters}/>\r\n\r\n                <Tooltip title=\"Chart is Interactive\">\r\n                    <TouchAppIcon className=\"interactive\" />\r\n                </Tooltip>\r\n            </div>\r\n            <div className=\"Content\">\r\n                {DisplayIcon}\r\n                <div>\r\n                    <H4 Copy={Header} />\r\n                    <P Copy={Copy}/> \r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartHeader;\r\n\r\nconst Filters = (props)=>{\r\n    const {filters} = props\r\n    const Chips={\r\n        cluster:<Tooltip title=\"Chart can be affected by Cluster  Filter\"><LocationCityIcon className=\"warning\"/></Tooltip>,\r\n        resource:<Tooltip title=\"Chart can be affected by Resource Filter\"><FaceIcon className=\"warning\"/></Tooltip>,\r\n        client:<Tooltip title=\"Chart can be affected by Client Filter\"><PeopleAltIcon className=\"warning\"/></Tooltip>\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {\r\n                filters.map((filter,i)=>{\r\n                    return(\r\n                        <> { Chips[filter]} </>\r\n                    )\r\n                })\r\n            }\r\n        </>      \r\n    )\r\n}\r\n\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\ReviewGlobalFilter.js",["2289","2290","2291"],"import React from 'react';\r\n\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {P} from \"Pages/Auth/Components/Type\";\r\n\r\n// Filter\r\nimport FilterByResourceType from \"Pages/Auth/Components/selects/SelectResourceType\";\r\nimport FilterByClusterType from \"Pages/Auth/Components/selects/SelectClusterType\";\r\nimport SelectClient from \"Pages/Auth/Components/selects/SelectClient\";\r\nimport Filter_ByCapitalCities from \"Pages/Auth/Components/Maps/Filters/Filter_ByCapitalCities\";\r\nconst GlobalFilter = ()=>{\r\n\r\n    return(\r\n        <>\r\n            \r\n            <div className=\"GlobalFilter\">\r\n                <div className=\"options\">\r\n                    <Filter_ByCapitalCities />\r\n                    <SelectClient />    \r\n                    <FilterByResourceType />  \r\n                    <FilterByClusterType />\r\n                </div>\r\n            </div>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default GlobalFilter;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\FilterChips.js",["2292","2293","2294","2295","2296"],"import React, { useEffect } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\nimport {\r\n        SetMapResourceType,\r\n        SetMapClusterType,\r\n        SetFilterClient,\r\n        SetFilterModel,\r\n        SetFilterPolygon,\r\n        SetSelectedCluster } \r\n        from \"actions/HandleUX\";\r\n\r\nimport {findClientName} from \"actions/ClusterAnalysis\"\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst FilterChips = ()=>{\r\n    const classes = useStyles();\r\n    const UX = useContext_UX_FULL();\r\n\r\n    return(\r\n        <div className={`PacketofChips ${classes.root}`}>\r\n                \r\n            { UX.AreaSelectFilter.ByResourceType != false ? <ResourceChip /> : false }\r\n            { UX.AreaSelectFilter.ByClusterType != false ? <ClusterChip /> : false }\r\n            { UX.AreaSelectFilter.ByClient != false ? <ClientChip /> : false }\r\n            { UX.AreaSelectFilter.ByModel != false ? <ModelChip /> : false }\r\n            { UX.AreaSelectFilter.ByPolygon != false ? <PolygonChip /> : false }\r\n            \r\n        </div>\r\n    )\r\n}\r\n \r\nexport default FilterChips;\r\n\r\n\r\nconst PolygonChip=()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const handleDelete = () => {  \r\n        SetFilterPolygon(false) \r\n        SetSelectedCluster(false)\r\n    };\r\n    //onClick={handleDelete}\r\n    useEffect(()=>{},[UX])\r\n    return(\r\n        <Chip label={ UX.AreaSelectFilter.ByPolygon} clickable  className=\"PolygonChip\"  onClick={handleDelete}  icon={<LayersIcon />} />\r\n    )\r\n}\r\n\r\nconst ModelChip=()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const handleDelete = () => {  SetFilterModel(false) };\r\n    //onClick={handleDelete}\r\n    useEffect(()=>{},[UX])\r\n    return(\r\n        <Chip label={ UX.AreaSelectFilter.ByModel} clickable  className=\"ModelChip\" onClick={handleDelete}  icon={<AccountTreeIcon />} />\r\n    )\r\n}\r\nconst ResourceChip=()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const handleDelete = () => {  SetMapResourceType(false) };\r\n    useEffect(()=>{},[UX])\r\n    return(\r\n        <Chip label={ UX.AreaSelectFilter.ByResourceType} clickable  className=\"TradeChip\" onClick={handleDelete} icon={<FaceIcon />} />\r\n    )\r\n}\r\n\r\n\r\nconst ClusterChip=()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const handleDelete = () => {  SetMapClusterType(false) };\r\n    useEffect(()=>{},[UX])\r\n    return(\r\n        <Chip label={ UX.AreaSelectFilter.ByClusterType} clickable  className=\"TradeChip\" onClick={handleDelete} icon={<LocationCityIcon />} />\r\n    )\r\n}\r\n\r\nconst ClientChip=()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const handleDelete = () => {  SetFilterClient(false) };\r\n    useEffect(()=>{},[UX])\r\n    return(\r\n        <Chip label={ findClientName(UX.AreaSelectFilter.ByClient)} clickable  className=\"TradeChip\" onClick={handleDelete} icon={<PeopleAltIcon />} />\r\n    )\r\n}\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectClusterType.js",["2297"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { SetMapClusterType } from \"actions/HandleUX\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  /* ************************************************** */\r\nconst ByClusterType = ()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL()\r\n    const UX = useContext_UX_FULL()\r\n    const ClusterType=['SameBuilding','CBD','InnerCity','Metro','OuterMetro','Regional','Remote','ExtremeRemote' ]\r\n    const [type,setType] = useState(UX.AreaSelectFilter.ByClusterType)\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleChange = (event) => { \r\n        //console.log(event.target.value.Center)\r\n        \r\n        setType(event.target.value)\r\n        SetMapClusterType(event.target.value)\r\n        //StoreCompareItem(event.target.value, pos)\r\n    };\r\n\r\n\r\n    \r\n    useEffect(()=>{\r\n      \r\n        setType(UX.AreaSelectFilter.ByClusterType)},[UX])\r\n\r\n \r\n    return(\r\n        <FormControl variant=\"outlined\" className={`${classes.formControl} Map_Filters`}>\r\n        <InputLabel id=\"ByTier\">Cluster Type</InputLabel>\r\n             <Select\r\n                labelId=\"ByTier\"\r\n                id=\"ByTier-outlined\"\r\n                value={type}\r\n                onChange={handleChange}\r\n                label=\"Select Cluster Type\"\r\n                >\r\n                <MenuItem value={false}>ALL</MenuItem>\r\n\r\n                {\r\n                    ClusterType.map((city,i)=>{\r\n                        return(\r\n                            <MenuItem key={city}  value={city}>{city}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ByClusterType;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Radial_Charts.js",["2298","2299","2300"],"import React, {useEffect} from 'react'\r\n\r\n// Actions\r\nimport {OBJ_RESOURCES_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\n\r\nimport Resources_Radial_Resources from \"Pages/Auth/SingleModelResult/Charts/Resource_Radial_Resources\"\r\nimport Resources_Bar_ResourceAllocation from \"Pages/Auth/SingleModelResult/Charts/Resources_Pie_ResourceAllocation\"\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n\r\n    useEffect(()=>{},[]) \r\n    \r\n    return(\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <Resources_Radial_Resources /> \r\n                <Resources_Bar_ResourceAllocation />\r\n            </div>\r\n \r\n            <Stats_Bar data={OBJ_RESOURCES_GLOBAL(['ByClusterType','ByClient'])} name={`name`} value={`Resources`}/>\r\n        </DiagramContainer>\r\n    )\r\n}\r\nexport default Trade_Radial_Charts;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\ModelSingleReview.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SINGLE.js",["2301"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_SINGLE_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_SINGLE_FULL = ()=>{\r\n    return useContext(Context_SINGLE_FULL)\r\n}\r\n\r\n\r\n \r\nexport const SINGLEContextProvider = ({children})=>{\r\n    const SINGLE = useSelector(state => state.SINGLE );\r\n\r\n    useMemo(()=>{  },[SINGLE]) \r\n\r\n    return(\r\n            <Context_SINGLE_FULL.Provider value={SINGLE}>\r\n                {children}            \r\n            </Context_SINGLE_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CreateSingleViewModel.js",["2302","2303","2304","2305","2306","2307","2308","2309","2310","2311","2312","2313","2314","2315","2316","2317","2318","2319","2320","2321","2322","2323","2324","2325","2326","2327","2328","2329","2330","2331","2332","2333","2334","2335","2336","2337","2338","2339","2340","2341","2342","2343","2344","2345","2346","2347","2348","2349","2350","2351","2352","2353","2354","2355","2356","2357","2358","2359","2360","2361","2362"],"/* Action file for Single Model Review Functions */\r\n/*\r\n    THIS IS FOR PROTOTYPE AND LIMITED DEV TIME ONLY\r\n    ALL OF THIS WILL NEED REFACTORING WHEN YOU HAVE TIME!!!\r\n    \r\n*/\r\n\r\nimport store from \"../store/index\"\r\nimport {GroupArrayByOccurances, HandleResourceFilter, numberWithCommas,colorArray, RegionColor,TradecolorArray} from \"actions/HandleUX\";\r\nimport {CostPerWorkOrder} from 'actions/CostsandPricings'\r\nimport {findIndex,sumBy,orderBy,groupBy,find, remove} from 'lodash';\r\nimport {findClientName} from \"actions/ClusterAnalysis\"\r\n\r\n export const fixNumber=(num)=>{\r\n    try {\r\n        if(num != undefined)\r\n        return parseFloat(num.toFixed(2)) \r\n            return 0\r\n      }\r\n      catch(err) {\r\n        console.log(err, num)\r\n      }\r\n}\r\n\r\n/* ******************************** */\r\n// FILTERS\r\n\r\n    const RunFilter=(filter,ByType)=>{\r\n        if(ByType != false){\r\n            if(filter != ByType )\r\n                return false\r\n        }return true        \r\n    }\r\n\r\n/**/\r\n\r\n\r\n\r\n/* ************************************************************************************************* */\r\n// OBJ BUILDER\r\n// FULL OBJECTS BROKEN DOWN BY A ROOT CATEGORY\r\n// Naming\r\n// OBJ_[ROOT]_CALCULATED_FILTER\r\n/* ************************************************************************************************* */\r\n\r\n/************************* */ \r\n// MAIN OBJ \"CLUSTERS vs Trade\"\r\n/************************* */\r\n\r\n// Filters=['ByClusterType','ByResourceType','ByClient']\r\n\r\n\r\n/************************* */\r\n// MAIN OBJ \"Cluster vs Global\"\r\n// model.ClientGroupedBy\r\n/************************* */\r\n\r\nexport const OBJ_CLUSTER_GLOBAL=()=>{\r\n    /*\r\n        Exports\r\n            {\r\n                Clients: [\"5fe1751dab400d456889ac5e\"]\r\n                Resource: 98.73\r\n                Sites: (30) []\r\n                Sum: 100\r\n                Work Orders: 9247\r\n                name: \"SameBuilding\" \r\n            }\r\n    */\r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE\r\n    \r\n    let Clusters_ByClient=[];\r\n\r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n\r\n            let Index = findIndex(Clusters_ByClient,{name:model.scanCategory})\r\n\r\n            if(Index === -1){ Clusters_ByClient.push({name:model.scanCategory,  Appearances:0})}\r\n            Index = findIndex(Clusters_ByClient,{name:model.scanCategory})\r\n            \r\n\r\n            Clusters_ByClient[Index].Appearances = Clusters_ByClient[Index].Appearances + 1;\r\n\r\n            Object.keys(model.ClientGroupedBy).map((key,ii)=>{\r\n\r\n                model.ClientGroupedBy[key].map((q,ii)=>{\r\n                    /* Run 'ByResourceType' Filter ********************************** */       \r\n                    if(!RunFilter(q.Trade ,UX.AreaSelectFilter.ByResourceType)) return false\r\n                    /* ********************************** */ \r\n                    /* Run 'ByClient'  Filter********************************** */       \r\n                        if(!RunFilter(q.Customer ,UX.AreaSelectFilter.ByClient)) return false\r\n                    /* ********************************** */ \r\n\r\n                    if(Clusters_ByClient[Index][`Resource_Count_${q.Trade}`] === undefined){\r\n                        Clusters_ByClient[Index][`Resource_Count_${q.Trade}`] = fixNumber(q.Ratio) \r\n                    }else{\r\n                        Clusters_ByClient[Index][`Resource_Count_${q.Trade}`] =   (fixNumber(Clusters_ByClient[Index][`Resource_Count_${q.Trade}`]  +q.Ratio))\r\n                    }\r\n\r\n                    if(Clusters_ByClient[Index][`work_order_${q.Trade}`] === undefined){\r\n                        Clusters_ByClient[Index][`work_order_${q.Trade}`] = fixNumber(q.WOS) \r\n                    }else{\r\n                        Clusters_ByClient[Index][`work_order_${q.Trade}`] =   (fixNumber(Clusters_ByClient[Index][`work_order_${q.Trade}`]  +q.WOS))\r\n                    }\r\n\r\n\r\n                    if(Clusters_ByClient[Index][`Sum`] === undefined){ Clusters_ByClient[Index][`Sum`] = 1 }\r\n                    else{ Clusters_ByClient[Index][`Sum`] =  Clusters_ByClient[Index][`Sum`] + 1 }\r\n\r\n                    if(Clusters_ByClient[Index][`Resource`] === undefined){ Clusters_ByClient[Index][`Resource`] = fixNumber(q.Ratio) }\r\n                    else{ Clusters_ByClient[Index][`Resource`] =  fixNumber(Clusters_ByClient[Index][`Resource`]) + fixNumber(q.Ratio) }\r\n\r\n                    if(Clusters_ByClient[Index][`Work Orders`] === undefined){ Clusters_ByClient[Index][`Work Orders`] = q.WOS }\r\n                    else{ Clusters_ByClient[Index][`Work Orders`] =  Clusters_ByClient[Index][`Work Orders`] + q.WOS }\r\n\r\n                    if(Clusters_ByClient[Index][`Clients`] === undefined){ Clusters_ByClient[Index][`Clients`] = [] }\r\n                    if(Clusters_ByClient[Index][`Clients`].indexOf(q.Customer)=== -1){ Clusters_ByClient[Index][`Clients`].push(q.Customer)}\r\n                \r\n                    if(Clusters_ByClient[Index][`Sites`] === undefined){ Clusters_ByClient[Index][`Sites`] = [] }\r\n                    if(Clusters_ByClient[Index][`Sites`].indexOf(q.site)=== -1){ Clusters_ByClient[Index][`Sites`].push(q.site)}\r\n                \r\n                    if(Clusters_ByClient[Index][`Trade`] === undefined){ Clusters_ByClient[Index][`Trade`] = [] }\r\n                    if(Clusters_ByClient[Index][`Trade`].indexOf(q.Trade)=== -1){ Clusters_ByClient[Index][`Trade`].push(q.Trade)}\r\n                \r\n                })\r\n            })\r\n    });\r\n\r\n    return Clusters_ByClient    \r\n}\r\n\r\n/************************* */\r\n// MAIN OBJ \"SITES vs Global\"\r\n// model.SitesGroupedBy\r\n/************************* */\r\n\r\nexport const OBJ_SITE_GLOBAL = ()=>{ \r\n    /*\r\n        Exports\r\n        {\r\n            Center: [{…}]\r\n            Client: [\"5fe1751dab400d456889ac5e\"]\r\n            Cluster: [\"SameBuilding\"]\r\n            Resources: 42.620000000000005\r\n            Trade: (16) [\"HandyMan\", \"HandyMan\", \"Electrician\", \"Plumber\", \"Specialized\", \"HandyMan\", \"Plumber\", \"Specialized\", \"Electrician\", \"HandyMan\", \"Plumber\", \"HandyMan\", \"Electrician\", \"Plumber\", \"HandyMan\", \"Specialized\"]\r\n            Work Orders: 3927\r\n            name: \"5fe173efab400d456889aa2b\"\r\n        }\r\n    */\r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE;\r\n\r\n    let Temp=[];\r\n    //console.log(MODEL.SelectedModel)\r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n     \r\n        //console.log(model)\r\n        /* Run 'ByClusterType' Filter ********************************** */       \r\n            if(!RunFilter(model.scanCategory,UX.AreaSelectFilter.ByClusterType)) return false\r\n        /* ********************************** */ \r\n                Object.keys(model.SitesGroupedBy).map(function(key, index) {\r\n                    model.SitesGroupedBy[key].map((c,ii)=>{\r\n                       \r\n                        //console.log(model.sites.length,  Object.keys(model.SitesGroupedBy).length, i)\r\n                    \r\n                        /* Run 'ByResourceType' Filter ********************************** */       \r\n                            if(!RunFilter(c.Trade ,UX.AreaSelectFilter.ByResourceType)) return false\r\n                        /* ********************************** */ \r\n                        /* Run 'ByClient'  Filter********************************** */       \r\n                            if(!RunFilter(c.Customer ,UX.AreaSelectFilter.ByClient)) return false\r\n                        /* ********************************** */ \r\n                        \r\n                        let Index = findIndex(Temp,{name:c.site})\r\n                        if(Index === -1){  \r\n                            Temp.push({name:c.site}); \r\n                            Index = findIndex(Temp,{name:c.site});\r\n                        }\r\n\r\n                        if(Temp[Index][`Client`] === undefined){Temp[Index][`Client`] = [];}\r\n                        if(Temp[Index][`Client`].indexOf(c.Customer) === -1){ Temp[Index][`Client`].push(c.Customer)}\r\n                     \r\n                        if(Temp[Index][`Trade`] === undefined){Temp[Index][`Trade`] = [];}\r\n                        Temp[Index][`Trade`].push(c.Trade)\r\n\r\n                        if(Temp[Index][`Resources`] === undefined){ Temp[Index][`Resources`] = fixNumber(c.Ratio) }\r\n                        else{ Temp[Index][`Resources`] =  fixNumber(Temp[Index][`Resources`]) + fixNumber(c.Ratio) }\r\n\r\n                        if(Temp[Index][`Work Orders`] === undefined){ Temp[Index][`Work Orders`] = c.WOS }\r\n                        else{ Temp[Index][`Work Orders`] =  Temp[Index][`Work Orders`] + c.WOS } \r\n\r\n                        if(Temp[Index][`Cluster`] === undefined){Temp[Index][`Cluster`] = [];}\r\n                        if(Temp[Index][`Cluster`].indexOf(model.scanCategory) === -1){  Temp[Index][`Cluster`].push(model.scanCategory)}\r\n                       \r\n                        if(Temp[Index][`Center`] === undefined){Temp[Index][`Center`] = [];}\r\n                        if(Temp[Index][`Center`].indexOf(model.center) === -1){  Temp[Index][`Center`].push(model.center)}\r\n                    \r\n                    })\r\n                })\r\n    })\r\n    return Temp;\r\n}\r\n\r\n\r\n/************************* */\r\n// MAIN OBJ \"Client vs Resources\"\r\n// model.ResourcesGroupedBy\r\n/************************* */\r\n\r\n// MAIN OBJ RESOURCES\r\nexport const OBJ_CLIENT_RESOURCES=()=>{\r\n\r\n    /*\r\n        Exports \r\n        {\r\n            Electrician: 7.390000000000001\r\n            HandyMan: 94.44\r\n            Plumber: 10.28\r\n            Specialized: 12.41\r\n            Sum: 124.52\r\n            Work Orders: 10778\r\n            name: \"C13693 Telstra Corporation Limited\"\r\n        }\r\n    */\r\n    // Get Filters \r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE\r\n\r\n    let Resources_Clients=[]\r\n\r\n  \r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n        \r\n        //console.log(model)\r\n          /* ********************************** */       \r\n        // Run Filter\r\n        if(!RunFilter(model.name,UX.AreaSelectFilter.ByPolygon)) return false\r\n        /* ********************************** */ \r\n        /* ********************************** */       \r\n        // Run Filter\r\n        if(!RunFilter(model.scanCategory,UX.AreaSelectFilter.ByClusterType)) return false\r\n        /* ********************************** */ \r\n        \r\n           \r\n        // loop\r\n        Object.keys(model.ResourcesGroupedBy).map(function(key, index) {\r\n\r\n            // Run Loop\r\n            model.ResourcesGroupedBy[key].map((q,ii)=>{\r\n                let Index;\r\n                //console.log(q)\r\n           \r\n            /* ********************************** */       \r\n            // Run Filter\r\n                if(!RunFilter(q.Trade,UX.AreaSelectFilter.ByResourceType)) return false\r\n            /* ********************************** */ \r\n            \r\n\r\n                //console.log(q)\r\n                Index = findIndex(Resources_Clients,{name:findClientName(q.Customer)})\r\n                if(Index === -1){ \r\n                    Resources_Clients.push({name:findClientName(q.Customer)})\r\n                    Index = findIndex(Resources_Clients,{name:findClientName(q.Customer)})\r\n                }\r\n\r\n               \r\n                if(Resources_Clients[Index][key] === undefined)\r\n                {Resources_Clients[Index][key] = fixNumber(q.Ratio)}\r\n                else{Resources_Clients[Index][key] = fixNumber(Resources_Clients[Index][key]) + fixNumber(q.Ratio)}\r\n                        \r\n\r\n                if(Resources_Clients[Index][`Sum`] === undefined)\r\n                {Resources_Clients[Index][`Sum`] = fixNumber(q.Ratio) }\r\n                else{Resources_Clients[Index][`Sum`] = fixNumber(Resources_Clients[Index][`Sum`]) + fixNumber(q.Ratio)} \r\n\r\n                if(Resources_Clients[Index][`Work Orders`] === undefined)\r\n                {Resources_Clients[Index][`Work Orders`] = q.WOS }\r\n                else{Resources_Clients[Index][`Work Orders`] = Resources_Clients[Index][`Work Orders`] + q.WOS} \r\n                    \r\n            })\r\n        });\r\n    })\r\n  \r\n \r\n   return orderBy(Resources_Clients, ['name'], [])\r\n\r\n}\r\n\r\n\r\n\r\n/************************* */\r\n// MAIN OBJ \"Resources GLOBAL\"\r\n\r\n// model.ResourcesGroupedBy\r\n/************************* */\r\n\r\n// MAIN OBJ RESOURCES\r\nexport const OBJ_RESOURCES_GLOBAL=(Filters=['ByClusterType','ByResourceType','ByClient'])=>{\r\n\r\n    /*\r\n        Exports \r\n        {\r\n            Clients: [\"5fe1751dab400d456889ac5e\"]\r\n            Date: (4) [\"03/2018\", \"05/2018\", \"06/2018\", \"04/2018\"]\r\n            Sites: (10) [\"5fe173efab400d456889aa2b\", \"5fe17408ab400d456889aa5a\", \"5fe17409ab400d456889aa5b\", \"5fe17408ab400d456889aa59\", \"5fe1740fab400d456889aa66\", \"5fe17427ab400d456889aa94\", \"5fe173e8ab400d456889aa1a\", \"5fe17404ab400d456889aa52\", \"5fe173feab400d456889aa48\", \"5fe173fcab400d456889aa40\"]\r\n            Resources: 7.390000000000001\r\n            Work Orders: 470\r\n            name: \"Electrician\"\r\n        } \r\n    */\r\n    // Get Filters \r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE\r\n    const COSTPERWORKORDER = CostPerWorkOrder()\r\n    let Resources_Clients=[]\r\n\r\n  \r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n        //console.log(model)\r\n        \r\n        /* ********************************** */       \r\n        // Run Filter\r\n        if(!RunFilter(model.name,UX.AreaSelectFilter.ByPolygon)) return false\r\n        /* ********************************** */ \r\n\r\n        /* ********************************** */       \r\n        // Run Filter\r\n        if(Filters.indexOf('ByClusterType') !== -1){\r\n            if(!RunFilter(model.scanCategory,UX.AreaSelectFilter.ByClusterType)) return false\r\n        }\r\n        \r\n        /* ********************************** */ \r\n        \r\n           \r\n        // loop\r\n        Object.keys(model.ResourcesGroupedBy).map(function(key, index) {\r\n\r\n            // Run Loop\r\n            model.ResourcesGroupedBy[key].map((q,ii)=>{\r\n                let Index;\r\n          \r\n           \r\n            /* ********************************** */       \r\n            // Run Filter\r\n            if(Filters.indexOf('ByResourceType') !== -1){\r\n                if(!RunFilter(q.Trade,UX.AreaSelectFilter.ByResourceType)) return false\r\n            }\r\n            /* ********************************** */ \r\n             /* ********************************** */       \r\n            // Run Filter\r\n            if(Filters.indexOf('ByClient') !== -1){\r\n                if(!RunFilter(q.Customer ,UX.AreaSelectFilter.ByClient)) return false\r\n                \r\n            }\r\n            /* ********************************** */ \r\n            \r\n\r\n                //console.log(q)\r\n                Index = findIndex(Resources_Clients,{name:q.Trade})\r\n                if(Index === -1){ \r\n                    Resources_Clients.push({name:q.Trade})\r\n                    Index = findIndex(Resources_Clients,{name:q.Trade})\r\n                }\r\n     \r\n  \r\n                if(Resources_Clients[Index][`Resources`] === undefined)\r\n                {Resources_Clients[Index][`Resources`] = fixNumber(q.Ratio) }\r\n                else{Resources_Clients[Index][`Resources`] = fixNumber(Resources_Clients[Index][`Resources`]) + fixNumber(q.Ratio)} \r\n\r\n                if(Resources_Clients[Index][`ResourceCost`] === undefined)\r\n                {Resources_Clients[Index][`ResourceCost`] = fixNumber(q.Ratio) }\r\n                else{Resources_Clients[Index][`ResourceCost`] = fixNumber(Resources_Clients[Index][`Resources`]*COSTPERWORKORDER)} \r\n\r\n\r\n\r\n                if(Resources_Clients[Index][`Work Orders`] === undefined)\r\n                {Resources_Clients[Index][`Work Orders`] = fixNumber(q.WOS) }\r\n                else{Resources_Clients[Index][`Work Orders`] = fixNumber(Resources_Clients[Index][`Work Orders`]) + fixNumber(q.WOS)} \r\n                \r\n                if(Resources_Clients[Index][`Sites`] === undefined){Resources_Clients[Index][`Sites`] = [] }\r\n                if(Resources_Clients[Index][`Sites`].indexOf(q.site) === -1){Resources_Clients[Index][`Sites`].push(q.site)}\r\n\r\n                if(Resources_Clients[Index][`Clients`] === undefined){Resources_Clients[Index][`Clients`] = [] }\r\n                if(Resources_Clients[Index][`Clients`].indexOf(q.Customer) === -1){Resources_Clients[Index][`Clients`].push(q.Customer)}\r\n                \r\n                if(Resources_Clients[Index][`Date`] === undefined){Resources_Clients[Index][`Date`] = [] }\r\n                if(Resources_Clients[Index][`Date`].indexOf(q.Date) === -1){Resources_Clients[Index][`Date`].push(q.Date)}\r\n\r\n                \r\n            })\r\n        });\r\n    })\r\n  \r\n \r\n    //console.log(orderBy(Resources_Clients, ['name'], []))\r\n   return orderBy(Resources_Clients, ['name'], [])\r\n\r\n}\r\n\r\n\r\n/************************* */\r\n// MAIN OBJ \"Client vs Global\"\r\n\r\n// model.ClientGroupedBy\r\n/************************* */\r\n \r\n// Main Client OBJ Creator\r\nexport const OBJ_CLIENT_GLOBAL_Filter =  ()=>{\r\n    /*\r\n        EXPORTS\r\n        {\r\n            Clusters: 185\r\n            Resources: 124.52\r\n            Sites: (83) [\"\"]\r\n            Total Sites: 113\r\n            Work Orders: 10778\r\n            name: \"C13693 Telstra Corporation Limited\"\r\n        }\r\n    */\r\n\r\n\r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE;\r\n\r\n    let Temp=[];\r\n    let SiteCount=[];\r\n\r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n        \r\n        /* ********************************** */       \r\n        // Run Filter\r\n        if(!RunFilter(model.name,UX.AreaSelectFilter.ByPolygon)) return false\r\n\r\n       //console.log(model)\r\n        /* ********************************** */ \r\n        /* Run 'ByClusterType' Filter ********************************** */       \r\n            if(!RunFilter(model.scanCategory,UX.AreaSelectFilter.ByClusterType)) return false\r\n        /* ************************************************************* */ \r\n\r\n                Object.keys(model.ClientGroupedBy).map(function(key, index) {\r\n                    \r\n                    model.ClientGroupedBy[key].map((c,ii)=>{\r\n                        //console.log(model.ClientGroupedBy[key])\r\n                        //console.log(c)\r\n                        /* Run 'ByResourceType' Filter ********************************** */       \r\n                            if(!RunFilter(c.Trade ,UX.AreaSelectFilter.ByResourceType)) return false\r\n                        /* ********************************** */ \r\n                        /* Run 'ByClient'  Filter********************************** */       \r\n                           // if(!RunFilter(c.Customer ,UX.AreaSelectFilter.ByClient)) return false\r\n                        /* ********************************** */ \r\n                        \r\n                        let Index = findIndex(Temp,{name:findClientName(c.Customer)})\r\n                        if(Index === -1){  \r\n                            Temp.push({name:findClientName(c.Customer)}); \r\n                            Index = findIndex(Temp,{name:findClientName(c.Customer)});\r\n                        }\r\n\r\n                        if(Temp[Index][`Clusters`] === undefined){ Temp[Index][`Clusters`] = 1 }\r\n                        else{ Temp[Index][`Clusters`] =  Temp[Index][`Clusters`] + 1 }\r\n\r\n                        if(Temp[Index][`Resources`] === undefined){ Temp[Index][`Resources`] = fixNumber(c.Ratio) }\r\n                        else{ Temp[Index][`Resources`] =  fixNumber(Temp[Index][`Resources`]) + fixNumber(c.Ratio) }\r\n\r\n                        if(Temp[Index][`Work Orders`] === undefined){ Temp[Index][`Work Orders`] = c.WOS }\r\n                        else{ Temp[Index][`Work Orders`] =  Temp[Index][`Work Orders`] + c.WOS }\r\n\r\n                        if(Temp[Index]['Sites'] === undefined) { Temp[Index]['Sites']=[]; }\r\n                        if(Temp[Index].Sites.indexOf(c.site) === -1){ Temp[Index]['Sites'].push(c.site)}\r\n                        if(Temp[Index]['Total Sites'] === undefined) { Temp[Index]['Total Sites']=0; }\r\n                        if(SiteCount.indexOf(c.site)=== -1){\r\n                            SiteCount.push(c.site);\r\n                            Temp[Index]['Total Sites'] = SiteCount.length\r\n                        }\r\n                    })\r\n                })\r\n    })\r\n\r\n    return Temp;\r\n}\r\n\r\n\r\n\r\nexport const OBJ_CENTERPOINTS=()=>{\r\n    /*\r\n        Exports\r\n            {}\r\n    */\r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE\r\n    let CenterPoints=[];\r\n\r\n    const clientNum=(model)=>{\r\n        let num=[]\r\n        Object.keys(model.ClientGroupedBy).map(function(key, index) { num.push(index)})\r\n        return num;\r\n    } \r\n\r\n    const resourceQuotatotal = (model)=>{\r\n        let total=[]\r\n        model.map((quota,i)=>{\r\n            total.push(quota.ResourceAllocation)\r\n        })\r\n        return total.reduce((a, b) => a + b, 0)\r\n    }\r\n\r\n\r\n\r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n            /* ********************************** */       \r\n            // Run Filter\r\n            if(!RunFilter(model.scanCategory ,UX.AreaSelectFilter.ByClusterType)) return false\r\n            /* ********************************** */ \r\n\r\n  \r\n            CenterPoints.push(\r\n                    {\r\n                        name:model.name,\r\n                        type:model.scanCategory,\r\n                        sites:model.StripedSites.length,\r\n                        clients:clientNum(model).length,\r\n                        resourceQuota:model.resourceQuota,\r\n                        resourceQuotaTotal:resourceQuotatotal(model.resourceQuota),\r\n                        model:model\r\n                    })\r\n    })\r\n\r\n    return CenterPoints;\r\n\r\n}\r\n/* ************************************************************************************************* */\r\n// END MAIN OBJ COLLECTIONS\r\n/* ************************************************************************************************* */\r\n\r\n\r\n\r\n\r\n\r\n/* ************************************************************************************************* */\r\n// Google Maps\r\n/* ************************************************************************************************* */\r\n\r\n\r\nexport const Location_HeatMap=()=>{\r\n    // Simple Loop FUnction\r\n    // This function loops locations for heat map\r\n\r\n    // Get Filters \r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE\r\n    let HeatMapLocations=[];\r\n\r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n       \r\n        /* ********************************** */       \r\n            // Run Filter\r\n            if(!RunFilter(model.scanCategory ,UX.AreaSelectFilter.ByClusterType)) return false\r\n        /* ********************************** */ \r\n\r\n            model.sites.map((site,ii)=>{\r\n                HeatMapLocations.push(new window.google.maps.LatLng(site.lat, site.long))\r\n            })\r\n    });\r\n\r\n    return HeatMapLocations    \r\n}\r\n\r\nexport const MapData_LocationHeatmap=()=>{\r\n    return [Location_HeatMap(), Location_HeatMap().length]\r\n }\r\n\r\n\r\n\r\n \r\nexport const Resources_HeatMap=()=>{\r\n\r\n   // Get Filters \r\n   const UX = store.getState().UX\r\n   const MODEL = store.getState().SCANSTATE\r\n   let HeatMapLocations=[];\r\n\r\n   let Quota=[]\r\n   MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n       \r\n        /* ********************************** */       \r\n        // Run Filter\r\n        if(!RunFilter(model.name,UX.AreaSelectFilter.ByPolygon)) return false\r\n        /* ********************************** */ \r\n       /* ********************************** */       \r\n       // Run Filter\r\n       if(!RunFilter(model.scanCategory ,UX.AreaSelectFilter.ByClusterType)) return false\r\n       /* ********************************** */   \r\n                   \r\n       // Loop Quotas to find volume numbers \r\n       model.resourceQuota.map((quota,ii)=>{\r\n\r\n           /* ********************************** */       \r\n           // Run Filter\r\n           if(!RunFilter(quota.Trade ,UX.AreaSelectFilter.ByResourceType)) return false\r\n           /* ********************************** */ \r\n           \r\n           Quota.push(quota.ResourceAllocation)\r\n       })\r\n      \r\n       //loop over volume numbers to create HEAT!!!!\r\n       // Math.ceil to round decimals up to 1 so they are counted\r\n       let n=0\r\n       while (n <= Math.ceil((Quota.reduce((a, b) => a + b, 0)))) {\r\n           HeatMapLocations.push(new window.google.maps.LatLng(model.center.lat, model.center.lng))\r\n           n++;\r\n       } \r\n   })\r\n   let ReduceNumber = Quota.reduce((a, b) => a + b, 0)\r\n\r\n   return [HeatMapLocations, ReduceNumber]\r\n}\r\n\r\n\r\nexport const COSTANALYSIS_Resources_HeatMap=()=>{\r\n\r\n    // THI IS WRONG!!!\r\n    // Get Filters \r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE\r\n    const COSTPERWORKORDER = CostPerWorkOrder()\r\n    let HeatMapLocations=[];\r\n \r\n    let Quota=[]\r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n        \r\n         /* ********************************** */       \r\n         // Run Filter\r\n         if(!RunFilter(model.name,UX.AreaSelectFilter.ByPolygon)) return false\r\n         /* ********************************** */ \r\n        /* ********************************** */       \r\n        // Run Filter\r\n        if(!RunFilter(model.scanCategory ,UX.AreaSelectFilter.ByClusterType)) return false\r\n        /* ********************************** */   \r\n                    \r\n        // Loop Quotas to find volume numbers \r\n        model.resourceQuota.map((quota,ii)=>{\r\n \r\n            /* ********************************** */       \r\n            // Run Filter\r\n            if(!RunFilter(quota.Trade ,UX.AreaSelectFilter.ByResourceType)) return false\r\n            /* ********************************** */ \r\n            \r\n           //console.log(quota.ResourceAllocation*COSTPERWORKORDER)\r\n            Quota.push((quota.ResourceAllocation*COSTPERWORKORDER)/10000)\r\n        })\r\n       \r\n        //loop over volume numbers to create HEAT!!!!\r\n        // Math.ceil to round decimals up to 1 so they are counted\r\n        let n=0\r\n\r\n        \r\n        while (n <= Math.ceil((Quota.reduce((a, b) => a + b, 0)))) {\r\n            HeatMapLocations.push(new window.google.maps.LatLng(model.center.lat, model.center.lng))\r\n            n++;\r\n        } \r\n    })\r\n    let ReduceNumber = Quota.reduce((a, b) => a + b, 0)\r\n \r\n    return [HeatMapLocations, ReduceNumber]\r\n }\r\n\r\nexport const WorkOrder_HeatMap=()=>{\r\n\r\n    // LOOK OVER THIS\r\n    // POSSIBLY WRONG\r\n\r\n   // Get Filters \r\n   const UX = store.getState().UX\r\n   const MODEL = store.getState().SCANSTATE\r\n   let HeatMapLocations=[];\r\n\r\n   let Quota=[]\r\n   \r\n   MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n       \r\n        /* ********************************** */       \r\n        // Run Filter\r\n        if(!RunFilter(model.name,UX.AreaSelectFilter.ByPolygon)) return false\r\n        /* ********************************** */ \r\n       /* ********************************** */       \r\n       // Run Filter\r\n       if(!RunFilter(model.scanCategory ,UX.AreaSelectFilter.ByClusterType)) return false\r\n       /* ********************************** */   \r\n       //console.log(model)        \r\n       // Loop Quotas to find volume numbers \r\n       let TotalWOs=[]\r\n       Object.keys(model.SitesGroupedBy).map(function(key, index) {\r\n            model.SitesGroupedBy[key].map((c,ii)=>{\r\n\r\n                /* Run 'ByResourceType' Filter ********************************** */       \r\n                if(!RunFilter(c.Trade ,UX.AreaSelectFilter.ByResourceType)) return false\r\n                /* ********************************** */ \r\n                /* Run 'ByClient'  Filter********************************** */       \r\n                    if(!RunFilter(c.Customer ,UX.AreaSelectFilter.ByClient)) return false\r\n                /* ********************************** */ \r\n\r\n\r\n                TotalWOs.push(c.WOS)\r\n                Quota.push(c.WOS)\r\n            })\r\n        })\r\n\r\n        //console.log(TotalWOs.reduce((a, b) => a + b, 0))\r\n      \r\n        let n=0\r\n        while (n <= Math.ceil((TotalWOs.reduce((a, b) => a + b, 0)))) {\r\n            HeatMapLocations.push(new window.google.maps.LatLng(model.center.lat, model.center.lng))\r\n            n++;\r\n        } \r\n   })\r\n   let ReduceNumber = Quota.reduce((a, b) => a + b, 0)\r\n\r\n   return [HeatMapLocations, ReduceNumber]\r\n}\r\n\r\n/* ************************************************************************************************* */\r\n// End Maps\r\n/* ************************************************************************************************* */\r\n\r\n\r\n/* ************************************************************************************************* */\r\n// OBJ Nivo Network\r\n/* ************************************************************************************************* */\r\n\r\n\r\n\r\nexport const NivoNetwork=()=>{\r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE\r\n\r\n    const FetchedModels = store.getState().COMPARE.CompareData.FetchedModels;\r\n\r\n    //console.log(FetchedModels);\r\n\r\n    let node=[{\r\n        \"id\": \"Model\",\r\n        \"radius\": 7,\r\n        \"depth\": 1,\r\n         \"color\": \"#89b2c3\"\r\n      }];\r\n    let links=[];\r\n\r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n        \r\n      \r\n        if(findIndex(node, function(o) { return o.id == model.scanCategory; })=== -1){\r\n            node.push({\r\n                \"id\": model.scanCategory,\r\n                \"radius\": 10,\r\n                \"depth\": 1,\r\n                \"color\": RegionColor(model.scanCategory)\r\n              })\r\n\r\n              links.push({\r\n                \"source\": \"Model\",\r\n                \"target\":  model.scanCategory,\r\n                \"distance\": 30\r\n              })\r\n        }\r\n\r\n\r\n        node.push({\r\n            \"id\": model.scanCategory+'.'+model.name,\r\n            \"radius\": 3,\r\n            \"depth\": 2,\r\n            \"color\": RegionColor(model.scanCategory)\r\n          })\r\n        \r\n          links.push({\r\n            \"source\": model.scanCategory,\r\n            \"target\":  model.scanCategory+'.'+model.name,\r\n            \"distance\": 20\r\n          })\r\n        \r\n    })\r\n\r\n    return {node, links}\r\n}\r\n\r\nexport const NivoSunBurst = ()=>{\r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE;\r\n    //console.log(MODEL)\r\n    let Data={\"children\":[]}\r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n        \r\n        /* ********************************** */       \r\n        // Run Filter\r\n        if(!RunFilter(model.name,UX.AreaSelectFilter.ByPolygon)) return false\r\n        /* ********************************** */ \r\n       /* ********************************** */       \r\n       // Run Filter\r\n       if(!RunFilter(model.scanCategory ,UX.AreaSelectFilter.ByClusterType)) return false\r\n       /* ********************************** */   \r\n\r\n        Object.keys(model.ResourcesGroupedBy).map(function(key, index) {\r\n            //console.log(model.ResourcesGroupedBy[key]);\r\n           \r\n            model.ResourcesGroupedBy[key].map((q,ii)=>{\r\n               \r\n                /* Run 'ByResourceType' Filter ********************************** */       \r\n                if(!RunFilter(q.Trade ,UX.AreaSelectFilter.ByResourceType)) return false\r\n                /* ********************************** */ \r\n                /* Run 'ByClient'  Filter********************************** */       \r\n                    if(!RunFilter(q.Customer ,UX.AreaSelectFilter.ByClient)) return false\r\n                /* ********************************** */ \r\n\r\n                let WO_ChildIndex=null;\r\n                let ClusterIndex=null;\r\n                \r\n                // Parent Vars\r\n                let Index=null;\r\n                let ParentPath = Data.children\r\n                Index = findIndex(ParentPath,{name:findClientName(q.Customer)})\r\n\r\n                if(Index === -1){ \r\n                    Index =  ParentPath.push({name:findClientName(q.Customer),color:colorArray[ParentPath.length],  \"children\":[]}) -1\r\n                }\r\n                /** End Parent */\r\n\r\n\r\n                // group by WOrk Order Vars\r\n                let WO_NAME = `${q.Trade} (${ParentPath[Index].name})`\r\n                let WO_Path = ParentPath[Index]['children']\r\n                WO_ChildIndex = findIndex(WO_Path,{name:WO_NAME})\r\n                \r\n\r\n                    if(WO_ChildIndex === -1){\r\n                        WO_ChildIndex = WO_Path.push({ name:WO_NAME,\"children\":[],  color:colorArray[WO_Path.length], }) - 1\r\n                    }else{\r\n                         //  WO_Path[WO_ChildIndex]['loc'] = WO_Path[WO_ChildIndex]['loc'] + q.WOS\r\n                    }\r\n\r\n                /** End Group By */\r\n                \r\n                // Group by Cluster\r\n                    let CLUSTERNAME =  `${model.scanCategory} (${WO_Path[WO_ChildIndex].name})` \r\n                    let ClusterPath = WO_Path[WO_ChildIndex]['children'];\r\n                    ClusterIndex = findIndex(ClusterPath,{name:CLUSTERNAME}) \r\n\r\n\r\n                    if(ClusterIndex === -1){\r\n                        ClusterIndex = ClusterPath.push({name:CLUSTERNAME, loc:1, color: colorArray[ClusterPath.length]}) -1\r\n                    }else{\r\n                        ClusterPath[ClusterIndex]['loc'] = ClusterPath[ClusterIndex]['loc'] + 1\r\n                    }\r\n                /** End Group Cluster */\r\n            })\r\n        })\r\n    })\r\n    return Data\r\n}\r\n\r\n\r\n/* ************************************************************************************************* */\r\n// OBJ Time Based \r\n/* ************************************************************************************************* */\r\nexport const OBJ_DATESPREAD_TRADE=()=>{\r\n\r\n    /*\r\n\r\n        EXPORTS \r\n        {\r\n            Customer: \"5fe1751eab400d456889ac5f\"\r\n            Date: \"08/2018\"\r\n            Ratio: 0.050847294915774915\r\n            Trade: \"HandyMan\"\r\n            UnixDate: 1533045600\r\n            WOS: 1\r\n            site: \"5ff83cc6065cf331405db3d0\"\r\n        }\r\n    */\r\n    // Get Filters \r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE\r\n    const COSTPERWORKORDER = CostPerWorkOrder()\r\n    let Resources_Clients=[]\r\n  \r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n        //console.log(model)\r\n        \r\n       /* ********************************** */       \r\n        // Run Filter\r\n        if(!RunFilter(model.name,UX.AreaSelectFilter.ByPolygon)) return false\r\n        /* ********************************** */ \r\n       /* ********************************** */       \r\n        // Run Filter\r\n        if(!RunFilter(model.scanCategory,UX.AreaSelectFilter.ByClusterType)) return false\r\n        /* ********************************** */ \r\n\r\n        // loop\r\n        Object.keys(model.ResourcesGroupedBy).map(function(key, index) {\r\n\r\n            // Run Loop\r\n            model.ResourcesGroupedBy[key].map((q,ii)=>{\r\n                let Index;\r\n\r\n                //console.log(q)\r\n                /* ********************************** */       \r\n                // Run Filter\r\n                if(!RunFilter(q.Trade ,UX.AreaSelectFilter.ByResourceType)) return false\r\n                /* ********************************** */ \r\n\r\n\r\n                Index = findIndex(Resources_Clients,{name:(q.Date)})\r\n                if(Index === -1){ \r\n                    Resources_Clients.push({name:(q.Date), UnixDate:q.UnixDate})\r\n                    Index = findIndex(Resources_Clients,{name:(q.Date)})\r\n                }\r\n               \r\n                if(Resources_Clients[Index][key] === undefined){\r\n                    Resources_Clients[Index][key] = fixNumber(q.Ratio)\r\n                }else{\r\n                    Resources_Clients[Index][key] = fixNumber(Resources_Clients[Index][key] + fixNumber(q.Ratio))\r\n                }\r\n\r\n               \r\n                \r\n                if(Resources_Clients[Index][`Resources`] === undefined){ Resources_Clients[Index][`Resources`] = fixNumber(q.Ratio) }\r\n                else{ Resources_Clients[Index][`Resources`] = (fixNumber(Resources_Clients[Index][`Resources`]  + fixNumber(q.Ratio)))}\r\n                if(Resources_Clients[Index][`Work Orders`] === undefined){ Resources_Clients[Index][`Work Orders`] = fixNumber(q.WOS) }\r\n                else{ Resources_Clients[Index][`Work Orders`] = (fixNumber(Resources_Clients[Index][`Work Orders`]  +fixNumber(q.WOS)))}\r\n                \r\n\r\n                if(Resources_Clients[Index][`${key}_cost`] === undefined){\r\n                    Resources_Clients[Index][`${key}_cost`] = fixNumber(q.Ratio *  COSTPERWORKORDER)\r\n                }else{\r\n                    Resources_Clients[Index][`${key}_cost`] = fixNumber(Resources_Clients[Index][key] *  COSTPERWORKORDER)\r\n                }\r\n                if(Resources_Clients[Index][`ResourceCost`] === undefined){ Resources_Clients[Index][`ResourceCost`] = COSTPERWORKORDER }\r\n                else{ Resources_Clients[Index][`ResourceCost`] = (fixNumber(Resources_Clients[Index][`Resources`]  *  COSTPERWORKORDER))}\r\n                //\r\n            })\r\n        });\r\n    })\r\n\r\n    //console.log(Resources_Clients)\r\n   return Resources_Clients\r\n}\r\n\r\n\r\n// Timeline with CLient Names..\r\n// keep for now as we need to filter out unwanted keys in the component\r\nexport const CreateOBJ_Client_WO_Overtime=()=>{\r\n\r\n    // Get Filters \r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE\r\n\r\n    let Resources_Clients=[]\r\n  \r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n        //console.log(model)\r\n        /* ********************************** */       \r\n        // Run Filter\r\n        if(!RunFilter(model.name,UX.AreaSelectFilter.ByPolygon)) return false\r\n        /* ********************************** */ \r\n        /* ********************************** */       \r\n        // Run Filter\r\n        if(!RunFilter(model.scanCategory,UX.AreaSelectFilter.ByClusterType)) return false\r\n        /* ********************************** */ \r\n\r\n        // loop\r\n        Object.keys(model.ClientGroupedBy).map(function(key, index) {\r\n\r\n            // Run Loop\r\n            model.ClientGroupedBy[key].map((q,ii)=>{\r\n                let Index;\r\n\r\n                //console.log(q)\r\n                /* ********************************** */       \r\n                // Run Filter\r\n                if(!RunFilter(q.Trade ,UX.AreaSelectFilter.ByResourceType)) return false\r\n                /* ********************************** */ \r\n                Index = findIndex(Resources_Clients,{name:(q.Date)})\r\n                if(Index === -1){ \r\n                    Resources_Clients.push({name:(q.Date), UnixDate:q.UnixDate})\r\n                    Index = findIndex(Resources_Clients,{name:(q.Date)})\r\n                }\r\n               \r\n                if(Resources_Clients[Index][`WorkOrder_Count_${findClientName(key)}`] === undefined){\r\n                    Resources_Clients[Index][`WorkOrder_Count_${findClientName(key)}`] = fixNumber(q.WOS)\r\n                }else{\r\n                    Resources_Clients[Index][`WorkOrder_Count_${findClientName(key)}`] = fixNumber(Resources_Clients[Index][`WorkOrder_Count_${findClientName(key)}`] + fixNumber(q.WOS))\r\n                }\r\n                if(Resources_Clients[Index][`Work Orders`] === undefined){ Resources_Clients[Index][`Work Orders`] = fixNumber(q.WOS) }\r\n                else{ Resources_Clients[Index][`Work Orders`] = (fixNumber(Resources_Clients[Index][`Work Orders`]  +fixNumber(q.WOS)))}\r\n                \r\n\r\n                if(Resources_Clients[Index][`Resource_Count_${findClientName(key)}`] === undefined){\r\n                    Resources_Clients[Index][`Resource_Count_${findClientName(key)}`] = fixNumber(q.Ratio)\r\n                }else{\r\n                    Resources_Clients[Index][`Resource_Count_${findClientName(key)}`] = fixNumber(Resources_Clients[Index][`Resource_Count_${findClientName(key)}`] + fixNumber(q.Ratio))\r\n                }\r\n                   \r\n              \r\n                if(Resources_Clients[Index][`Resource Allocation`] === undefined){\r\n                    Resources_Clients[Index][`Resource Allocation`] = fixNumber(q.Ratio)\r\n                }\r\n                else{\r\n                    Resources_Clients[Index][`Resource Allocation`] = (fixNumber(Resources_Clients[Index][`Resource Allocation`]  + fixNumber(q.Ratio)))\r\n                }\r\n            }) \r\n        });\r\n    })\r\n   return Resources_Clients\r\n}\r\n\r\n\r\nexport const CreateOBJ_WO_Overtime=()=>{\r\n\r\n    // Get Filters \r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE\r\n\r\n    let Resources_Clients=[]\r\n  \r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n       \r\n        /* ********************************** */       \r\n        // Run Filter\r\n        if(!RunFilter(model.scanCategory,UX.AreaSelectFilter.ByClusterType)) return false\r\n        /* ********************************** */ \r\n\r\n        // loop\r\n        Object.keys(model.ClientGroupedBy).map(function(key, index) {\r\n\r\n            // Run Loop\r\n            model.ClientGroupedBy[key].map((q,ii)=>{\r\n                let Index;\r\n\r\n  \r\n                /* ********************************** */       \r\n                // Run Filter\r\n                if(!RunFilter(q.Trade ,UX.AreaSelectFilter.ByResourceType)) return false\r\n                /* ********************************** */ \r\n\r\n\r\n                Index = findIndex(Resources_Clients,{name:(q.Date)})\r\n                if(Index === -1){ \r\n                    Resources_Clients.push({name:(q.Date), UnixDate:q.UnixDate})\r\n                    Index = findIndex(Resources_Clients,{name:(q.Date)})\r\n                }\r\n               \r\n                if(Resources_Clients[Index][key] === undefined){\r\n                    Resources_Clients[Index][key] = fixNumber(q.WOS)\r\n                }else{\r\n                    Resources_Clients[Index][key] = fixNumber(Resources_Clients[Index][key] + fixNumber(q.WOS))\r\n                }\r\n                   \r\n                        \r\n\r\n                if(Resources_Clients[Index][`Work Orders`] === undefined){\r\n                    Resources_Clients[Index][`Work Orders`] = fixNumber(q.WOS)\r\n                }\r\n                else{\r\n                    Resources_Clients[Index][`Work Orders`] = (fixNumber(Resources_Clients[Index][`Work Orders`]  +fixNumber(q.WOS)))\r\n                }\r\n              \r\n            })\r\n        });\r\n    })\r\n   return Resources_Clients\r\n}\r\n\r\n\r\n/* ************************************************************************************************* */\r\n// END TIME/DATE BASED OBJ\r\n/* ************************************************************************************************* */\r\n\r\n/* ************************************************************************************************* */\r\n// Helper Functions\r\n/* ************************************************************************************************* */\r\n\r\n\r\n\r\nexport const ClusterNumbersByResourceType=()=>{ \r\n    // Helper Function\r\n    // Get Filters\r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE\r\n    let ClusterTypeArr=[];\r\n\r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n        if(!HandleResourceFilter(model, UX.AreaSelectFilter.ByResourceType)){\r\n            ClusterTypeArr.push(model.scanCategory)\r\n            return true\r\n        } \r\n    });\r\n    return ClusterTypeArr    \r\n}\r\n\r\nexport const ModelNumSitesTotal=()=>{\r\n   \r\n    const MODEL = store.getState().SCANSTATE\r\n    let SiteNumberArr=[];\r\n\r\n    MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n        SiteNumberArr.push(model.sites.length)\r\n            return true\r\n    });\r\n\r\n    return SiteNumberArr    \r\n}\r\n\r\n\r\nexport const ClientOutOfScopeNum = ()=>{\r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE\r\n\r\n    let OOS_WOS =0\r\n    let OOS_Sites=0\r\n\r\n    MODEL.SelectedModel.STORERESIDUALMARKERS.map((OOS,i)=>{\r\n       if(OOS.customers.indexOf(UX.AreaSelectFilter.ByClient) != -1){\r\n            OOS_Sites = OOS_Sites + 1\r\n            OOS_WOS = OOS_WOS + OOS.SumWorkOrder\r\n       } \r\n    })\r\n    return [OOS_Sites,OOS_WOS]\r\n}\r\n\r\n\r\nexport const  WorkorderTotals=()=>{\r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE.SelectedModel\r\n\r\n    //let TotalWOs=[];\r\n    let TestTotalWOs=[];\r\n    let MissingWOs=[];\r\n\r\n    //console.log(MODEL)\r\n    MODEL.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n           //console.log(model)\r\n           // model.StripedSites.map((site,i)=>{\r\n           //     TotalWOs.push(site.SumWorkOrder)\r\n           // })\r\n\r\n            Object.keys(model.SitesGroupedBy).map(function(key, index) {\r\n                model.SitesGroupedBy[key].map((c,ii)=>{\r\n                    TestTotalWOs.push(c.WOS)\r\n                })\r\n            })\r\n    })\r\n\r\n    MODEL.STORERESIDUALMARKERS.map((model,i)=>{\r\n        MissingWOs.push(model.SumWorkOrder)\r\n    })\r\n    //console.log(\"WO TOTALS\")\r\n    //console.log(TotalWOs.reduce((a, b) => a + b, 0), TestTotalWOs.reduce((a, b) => a + b, 0))\r\n    return [TestTotalWOs.reduce((a, b) => a + b, 0), MissingWOs.reduce((a, b) => a + b, 0)]\r\n}\r\n\r\n\r\n/* ************************************************************************************************* */\r\n// Work Orders\r\n/* ************************************************************************************************* */\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrder_Radial_Charts.js",["2363","2364","2365"],"import React, {useEffect } from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\nimport {OBJ_RESOURCES_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n// Layout\r\n\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\n\r\n// Charts \r\nimport Workorders_Radial_Workorders from 'Pages/Auth/SingleModelResult/Charts/Workorder_Radial_Workorders'\r\nimport Workorder_pie_outofscope from 'Pages/Auth/SingleModelResult/Charts/Workorder_pie_outofscope' \r\n\r\n\r\nconst WorkOrderTradeCharts=()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    useEffect(()=>{ },[UX,SCAN]) \r\n    \r\n    return(\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <Workorders_Radial_Workorders />\r\n                <Workorder_pie_outofscope />\r\n            </div>\r\n\r\n            <Stats_Bar data={OBJ_RESOURCES_GLOBAL(['ByClusterType'])} name={`name`} value={`Work Orders`}/> \r\n           \r\n     </DiagramContainer>\r\n    )\r\n}\r\n\r\nexport default WorkOrderTradeCharts;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Radial_Clients.js",["2366","2367"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {OBJ_CLIENT_RESOURCES, fixNumber} from \"actions/CreateSingleViewModel\"\r\nimport {colorArray} from \"actions/HandleUX\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\n\r\nimport {partial,sumBy} from 'lodash';\r\nimport { Radar, RadarChart, PolarGrid,PieChart,Pie,Cell, PolarAngleAxis, PolarRadiusAxis,ResponsiveContainer,Legend, Tooltip} from 'recharts';\r\nimport NivoWaffle from \"venders/Nivo/NivoWaffle\"\r\nimport { H2 } from 'Pages/Auth/Components/Type';\r\n\r\nconst Chart1={\r\n    Icon:'radial',\r\n    Header:\"Resources Allocation to Clients\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:`The Graph shows the number of Resource Allocations by Cluster Type in a given model. \r\n            Use the 'Cluster Type' and 'Resource type' filters to find Resource Allocation numbers for specific Clients.`\r\n}\r\n\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n\r\n\r\n    const SingleValues = (category)=>{\r\n         let Total = sumBy([category], partial(sumBy, CategoryOccurance));\r\n         if(Total !== undefined)\r\n             return Total.toFixed(2)\r\n                return 0\r\n       }\r\n\r\n    useEffect(()=>{  setCategoryOccurance(OBJ_CLIENT_RESOURCES())   },[UX]) \r\n     \r\n\r\n    useEffect(()=>{\r\n        //console.log(CategoryOccurance)\r\n        //console.log(UX.AreaSelectFilter.ByResourceType)\r\n    },[CategoryOccurance])\r\n    return(\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <div>\r\n                    \r\n\r\n                <ChartHeader Icon={Chart1.Icon} Header={Chart1.Header} Tip={Chart1.Tip} Copy={Chart1.Copy} />\r\n                \r\n                    <div style={{height: 300}}>\r\n                        {\r\n                            UX.AreaSelectFilter.ByResourceType === false ? <SelectResource /> :<NivoWaffle data={CategoryOccurance} id={`name`} value={UX.AreaSelectFilter.ByResourceType} />\r\n                        }\r\n                        \r\n                    </div>\r\n                   \r\n                </div> \r\n            </div> \r\n\r\n\r\n            <ul className=\"Stat_Bar Column grouped\">\r\n                {\r\n                    CategoryOccurance.map((trade,i)=>{\r\n                        const {name, HandyMan, Electrician, Plumber, Specialized} = trade\r\n                        return(\r\n                            <li key={i}>\r\n                               \r\n                                <span> {name}</span>\r\n                                <span>{`HandyMan`} : {fixNumber(HandyMan)}</span>\r\n                                <span> {`Electrician`} : {fixNumber(Electrician)}</span>\r\n                                <span>{`Plumber`} : {fixNumber(Plumber)}</span>\r\n                                <span>{`Specialized`} : {fixNumber(Specialized)}</span>\r\n                                \r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                            <li>\r\n                                <span>Totals</span>\r\n                                <span>{SingleValues('HandyMan')}</span>\r\n                                <span>{SingleValues('Electrician')}</span>\r\n                                <span>{SingleValues('Plumber')}</span>\r\n                                <span>{SingleValues('Specialized')}</span>\r\n                            </li> \r\n                   \r\n            </ul>\r\n        </DiagramContainer>  \r\n    )\r\n}\r\nexport default Trade_Radial_Charts;\r\n\r\n\r\n\r\n\r\nconst SelectResource = ()=>{\r\n    return(\r\n        <div>\r\n            <H2 Copy={`Select a Resource Type to use this Graph`} />\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * \r\n *  {\r\n                       OBJ_CLIENT_RESOURCES().length>2 ? <Gtr2Radial CategoryOccurance={CategoryOccurance}/> : <Min2Pie  CategoryOccurance={CategoryOccurance}/>\r\n                    }\r\n */\r\n\r\nconst Min2Pie=(props)=>{\r\n    const {CategoryOccurance} = props\r\n\r\n    return(\r\n        <ResponsiveContainer width='100%' height={300}>\r\n        <PieChart >\r\n            <Pie dataKey=\"Sum\" isAnimationActive={false} data={CategoryOccurance}  outerRadius={80} fill=\"#ffbf00\" label >\r\n            {\r\n                CategoryOccurance.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={colorArray[index]}/>\r\n                ))\r\n            }   \r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend /> \r\n        </PieChart>\r\n        \r\n    </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nconst Gtr2Radial = (props)=>{\r\n    const {CategoryOccurance} = props\r\n    return(\r\n        <ResponsiveContainer width='100%' height={300}>\r\n        <RadarChart  outerRadius={100}  data={CategoryOccurance}>\r\n            <PolarGrid />\r\n            <PolarAngleAxis dataKey=\"name\" />\r\n            <PolarRadiusAxis />\r\n                <Radar name={`HandyMan`} dataKey=\"HandyMan\" stroke={colorArray[0]} fill={colorArray[0]} fillOpacity={0.6} />\r\n                <Radar name={`Electrician`} dataKey=\"Electrician\" stroke={colorArray[1]} fill={colorArray[1]} fillOpacity={0.6} />\r\n                <Radar name={`Plumber`} dataKey=\"Plumber\" stroke={colorArray[2]} fill={colorArray[2]} fillOpacity={0.6} />\r\n                <Radar name={`Specialized`} dataKey=\"Specialized\" stroke={colorArray[3]} fill={colorArray[3]} fillOpacity={0.6} /> \r\n            \r\n            <Tooltip />\r\n            <Legend />\r\n        </RadarChart>\r\n    </ResponsiveContainer>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_AllocationOverTime.js",["2368"],"import React from 'react'\r\n\r\n// Layout\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport {H3} from \"Pages/Auth/Components/Type\";\r\n\r\n// Charts\r\nimport Resources_Line_Allocation_OverTime from 'Pages/Auth/SingleModelResult/Charts/Resources_Line_Allocation_OverTime';\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n    return(\r\n        <>\r\n         <H3 Copy={`Title Required`} />\r\n            <DiagramContainer>\r\n                <Resources_Line_Allocation_OverTime />\r\n            </DiagramContainer>\r\n        </>\r\n    )\r\n}\r\nexport default Trade_Radial_Charts;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Specific_ClientBreakdown.js",["2369","2370","2371","2372"],"import React, {useEffect } from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n//import {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {\r\n    OBJ_CLIENT_RESOURCES,\r\n    OBJ_CLUSTER_GLOBAL\r\n} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\nimport {H3} from \"Pages/Auth/Components/Type\";\r\n\r\n// Charts\r\nimport Resources_Pie_ClientBreakdown from 'Pages/Auth/SingleModelResult/Charts/Resources_Pie_ClientsBreakdown';\r\nimport Resource_Cluster_Funnel from 'Pages/Auth/SingleModelResult/Charts/Resources_Cluster_Funnel';\r\n\r\nconst Resources_Client_Brekdown=()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    useEffect(()=>{ },[UX]) \r\n    return(\r\n        <>\r\n            <H3 Copy={`Title Required`} />\r\n            <DiagramContainer>\r\n            \r\n                <div className=\"resultCharts\">\r\n                    <Resources_Pie_ClientBreakdown />\r\n                    <Resource_Cluster_Funnel />\r\n                </div>\r\n\r\n                <Stats_Bar data={OBJ_CLIENT_RESOURCES()} name={`name`} value={`Sum`}/>\r\n                <Stats_Bar data={OBJ_CLUSTER_GLOBAL()} name={`name`} value={`Resource_Count_${UX.AreaSelectFilter.ByResourceType}`}/>\r\n            </DiagramContainer>\r\n        </>\r\n    )\r\n}\r\nexport default Resources_Client_Brekdown;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Specific_Overview.js",["2373","2374","2375","2376","2377"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n// Actions\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\nimport {OBJ_RESOURCES_GLOBAL} from \"actions/CreateSingleViewModel\"\r\nimport {H1,H2,H4,P} from \"Pages/Auth/Components/Type\";\r\nimport {find} from 'lodash'\r\n\r\n\r\nconst TradeSpecificOverview=()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const [tradeVolume, setTradeVolume] = useState(0)\r\n\r\n    useEffect(()=>{ \r\n  \r\n        let FindObj = find(OBJ_RESOURCES_GLOBAL(), function(o) { return o.name == UX.AreaSelectFilter.ByResourceType; });\r\n        setTradeVolume(FindObj)\r\n\r\n        //console.log(tradeVolume, UX.AreaSelectFilter.ByResourceType)\r\n    },[UX.AreaSelectFilter.ByResourceType]) \r\n     \r\n\r\n    return( \r\n        <DiagramContainer> \r\n            <div >\r\n                <H4 Copy={` Resource Type Selected : ${tradeVolume.name}`}/>\r\n                <H4 Copy={`Resource Allocation : ${tradeVolume.Resources}`}/>\r\n            </div>\r\n        </DiagramContainer>\r\n    )\r\n}\r\nexport default TradeSpecificOverview;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_Basic_Differences.js",["2378","2379","2380","2381"],"import React from 'react'\r\n\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\n// Charts\r\nimport Client_Sunburst from 'Pages/Auth/SingleModelResult/Charts/Client_Sunburst'\r\nimport Client_Pie_Resources from 'Pages/Auth/SingleModelResult/Charts/Client_Pie_Resources'\r\nimport Client_Pie_Sites from 'Pages/Auth/SingleModelResult/Charts/Client_Pie_Sites'\r\nimport Client_Pie_WorkOrders from 'Pages/Auth/SingleModelResult/Charts/Client_Pie_WorkOrders'\r\nimport ClientResourceSiteStatsBar from \"Pages/Auth/SingleModelResult/components/Clients_Site_Resource_StatsBar\";\r\n\r\nconst Client_Wrapup= ()=>{\r\n\r\n \r\n    return(\r\n        <>\r\n        <Client_Sunburst />\r\n        <DiagramContainer>\r\n                \r\n            <div className=\"resultCharts\">\r\n                <Client_Pie_Resources />\r\n                <Client_Pie_Sites />\r\n                <Client_Pie_WorkOrders />\r\n            </div>\r\n            <ClientResourceSiteStatsBar /> \r\n        </DiagramContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Client_Wrapup; ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clients_Site_Resource_StatsBar.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_WorkordersOverTime.js",["2382"],"import React from 'react'\r\n\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport Client_Line_Workorders from 'Pages/Auth/SingleModelResult/Charts/Client_line_WorkordersOvertime'\r\n\r\nconst Client_Line_Workorders_Container=()=>{\r\n\r\n    return(\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <Client_Line_Workorders />\r\n            </div>\r\n        </DiagramContainer>\r\n    )\r\n}\r\nexport default Client_Line_Workorders_Container;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_OverTime.js",["2383"],"import React from 'react'\r\n\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport Workorder_Bar_Overtime from 'Pages/Auth/SingleModelResult/Charts/Workorder_Bar_Overtime'\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n\r\n    return(\r\n        <DiagramContainer> \r\n            <div className=\"resultCharts\">\r\n                <Workorder_Bar_Overtime />\r\n            </div>\r\n        </DiagramContainer>\r\n    )\r\n}\r\nexport default Trade_Radial_Charts;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_ResourceAllocationOverTime.js",["2384"],"import React from 'react'\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport Client_line_ResourcesOvertime from 'Pages/Auth/SingleModelResult/Charts/Client_line_ResourcesOvertime'\r\n\r\nconst Client_line_ResourcesOvertime_Container =()=>{\r\n    return(\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <Client_line_ResourcesOvertime />\r\n            </div>\r\n        </DiagramContainer>\r\n    )\r\n}\r\nexport default Client_line_ResourcesOvertime_Container;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectClient.js",["2385"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {SetFilterClient , FindClientList} from \"actions/HandleUX\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport {findClientName} from \"actions/ClusterAnalysis\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  /* ************************************************** */\r\nconst ByResourceType = ()=>{\r\n\r\n    const MODEL = useContext_SCAN_FULL()\r\n    const UX = useContext_UX_FULL() \r\n    \r\n    const [type,setType] = useState(UX.AreaSelectFilter.ByClient) \r\n    const Clients = FindClientList()\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleChange = (event) => { \r\n        //console.log(event.target.value)\r\n        \r\n        setType(event.target.value)\r\n        SetFilterClient(event.target.value)\r\n        //StoreCompareItem(event.target.value, pos)\r\n    };\r\n    \r\n    useEffect(()=>{ setType(UX.AreaSelectFilter.ByClient) },[UX])\r\n  \r\n\r\n    return(\r\n        <FormControl variant=\"outlined\" className={`${classes.formControl} Map_Filters`}>\r\n        <InputLabel id=\"ByTier\">Select Client</InputLabel>\r\n             <Select\r\n                labelId=\"ByTier\"\r\n                id=\"ByTier-outlined\"\r\n                value={type}\r\n                onChange={handleChange}\r\n                label=\"Select Client\"\r\n            >\r\n                <MenuItem value={false}>ALL</MenuItem>\r\n\r\n                {\r\n                    Clients.map((client,i)=>{\r\n                        return(\r\n                            <MenuItem   key={i}  value={client}>{findClientName(client)}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ByResourceType;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_ResourceDistribution.js",["2386","2387","2388","2389","2390","2391","2392","2393","2394","2395","2396","2397","2398","2399"],"import React, { useEffect, useState }  from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\nimport {\r\n    OBJ_CLIENT_GLOBAL_Filter,\r\n    OBJ_RESOURCES_GLOBAL,\r\n    OBJ_CLUSTER_GLOBAL\r\n} from \"actions/CreateSingleViewModel\"\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\nimport {H2,H3,H4, P} from \"Pages/Auth/Components/Type\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Chart\r\n//import PieChart from \"venders/apexCharts/SimplePie\";\r\nimport { ResponsiveContainer,PieChart, Pie,Legend, Tooltip,Cell} from 'recharts';\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\n// Nivo \r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={\r\n    Icon:'pie',\r\n    Header:\"Client Resource Allocation\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"Graph shows the Resource Allocation for the selected client\"\r\n}\r\n\r\nconst Chart2={\r\n    Icon:'pie',\r\n    Header:\"Resources Cluster Spread\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"Graph shows the Resource distribution for the selected client by Cluster\"\r\n}\r\n\r\n/* ************************************** */\r\n// CLient specific section\r\n// Move to own file\r\n\r\n\r\nconst ClientResourceSpread = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n\r\n    const [ClientSpread, setClientSpread] = useState([])\r\n    const [ClientClusterSpread, setClientClusterSpread] = useState([])\r\n    \r\n    useEffect(()=>{\r\n        setClientSpread(OBJ_RESOURCES_GLOBAL())\r\n        setClientClusterSpread(OBJ_CLUSTER_GLOBAL())\r\n        //console.log(OBJ_CLUSTER_GLOBAL())\r\n    },[UX])\r\n\r\n    return(\r\n        <>\r\n        <H3 Copy={`Resource Spread`}/>\r\n        <DiagramContainer>\r\n            \r\n        <div className=\"resultCharts\">\r\n            <div>\r\n                <ChartHeader Icon={Chart1.Icon} Header={Chart1.Header}  Copy={Chart1.Copy} Tip={Chart1.Tip} />\r\n                    <div style={{height: 300}}>\r\n                        <NivoPie data={ClientSpread} id={`name`} value={'Resources'} />\r\n                    </div>\r\n\r\n              \r\n            </div>\r\n\r\n            <div>\r\n               \r\n                <ChartHeader Icon={Chart2.Icon} Header={Chart2.Header}  Copy={Chart2.Copy} Tip={Chart2.Tip} />\r\n                <div style={{height: 300}}>\r\n                        <NivoPie data={ClientClusterSpread} id={`name`} value={'Resource'} />\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n        </div>\r\n            { ClientSpread.length !== 0 ? <ClientStatBar ClientSpread={ClientSpread} ClientClusterSpread={ClientClusterSpread}/>: false }\r\n        </DiagramContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClientResourceSpread;\r\n\r\nconst ClientStatBar = (props)=>{\r\n    const {ClientClusterSpread, ClientSpread} = props\r\n    return(<>\r\n                <Stats_Bar data={ClientSpread} name={`name`} value={`Resources`}/>\r\n                <Stats_Bar data={ClientClusterSpread} name={`name`} value={`Resource`}/>\r\n        </>\r\n    )\r\n}\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_SingleSelectedComponents.js",["2400","2401","2402"],"import React, { useEffect, useState }  from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\nimport {findClientName} from \"actions/ClusterAnalysis\"\r\nimport {      \r\n    ClientOutOfScopeNum,\r\n    OBJ_CLIENT_GLOBAL_Filter\r\n} from \"actions/CreateSingleViewModel\"\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H2,H3,H4, P} from \"Pages/Auth/Components/Type\";\r\n\r\nimport ClientResourceDistribution from \"Pages/Auth/SingleModelResult/components/Client_ResourceDistribution\";\r\nimport Client_WorkOrderDistribution from \"Pages/Auth/SingleModelResult/components/Client_WorkOrderDistribution\";\r\nimport Client_Selected_ClusterSpread from \"Pages/Auth/SingleModelResult/components/Client_Selected_ClusterSpread\";\r\n\r\nimport {find} from 'lodash'\r\n\r\n/* ************************************** */\r\n// Client specific section\r\n// Move to own file\r\n\r\n\r\nconst ClientSpecificComponents = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n\r\n    return( \r\n        <Section className=\"SelectedItem\">\r\n             <H2 Copy={`Selected Client : ${findClientName(UX.AreaSelectFilter.ByClient)}`}/>\r\n             <P copy={`The following is a breakdown of how ${findClientName(UX.AreaSelectFilter.ByClient)} fits into the Model`} />\r\n\r\n                <ByClientBaseNumbers /> \r\n                <ClientResourceDistribution />\r\n                <Client_WorkOrderDistribution />\r\n                <Client_Selected_ClusterSpread /> \r\n                  \r\n        </Section>\r\n    ) \r\n}\r\n\r\n\r\nconst ByClientBaseNumbers = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const [ClientResources,setClientResources ] = useState(null) \r\n\r\n    useEffect(()=>{\r\n        setClientResources(find(OBJ_CLIENT_GLOBAL_Filter(), function(o) { return o.name === findClientName(UX.AreaSelectFilter.ByClient)}));\r\n    },[UX])\r\n\r\n    return(\r\n        <> { ClientResources !== null ? <DisplayNumbers ClientResources={ClientResources}/>:false }</>\r\n    )\r\n}\r\n\r\nexport default ClientSpecificComponents;\r\n\r\nconst DisplayNumbers = (props)=>{\r\n\r\n    const {ClientResources} = props\r\n\r\n    useEffect(()=>{},[ClientResources])\r\n    return(\r\n        <ul className=\"Pod_List\">\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy= {ClientResources.Resources}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`Resources`}/></div>\r\n            </li>\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy={ClientResources['Work Orders']}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`Work Orders`}/></div>\r\n            </li>\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy={ClientResources.Clusters}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`found in Clusters`}/></div>\r\n            </li>\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy={ClientOutOfScopeNum()[0]}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`Sites Out of Scope`}/></div>\r\n            </li>\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy={ClientOutOfScopeNum()[1]}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`Uncounted Work Orders`}/></div>\r\n            </li>\r\n        </ul>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_Selected_ClusterSpread.js",["2403","2404","2405","2406","2407","2408","2409","2410","2411","2412","2413","2414","2415"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n// Actions\r\nimport { OBJ_CLUSTER_GLOBAL,} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\"; \r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport {H3} from \"Pages/Auth/Components/Type\";\r\n\r\n// Chart\r\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis,ResponsiveContainer,Legend, Tooltip, FunnelChart , Funnel,LabelList} from 'recharts';\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\nimport NivoRadial from \"venders/Nivo/NivoRadial\"\r\nimport NivoFunnel from \"venders/Nivo/NivoFunnel\"\r\n\r\nconst Chart1={\r\n    Icon:'radial',\r\n    Header:\"Cluster Spread for Selected Client\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"The Radial Graph shows the cluster spread for the selected client.\"\r\n}\r\n\r\nconst Chart2={\r\n    Icon:'funnel',\r\n    Header:\"Cluster Spread for Selected Client\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"The Radial Graph shows the cluster spread for the selected client.\"\r\n}\r\n\r\nconst Locations_Radial_Pie_Charts=()=>{\r\n    const UX = useContext_UX_FULL(); \r\n    const [ClientClusterSpread,setClientClusterSpread ] = useState([[]]) \r\n    \r\n    useEffect(()=>{ setClientClusterSpread(OBJ_CLUSTER_GLOBAL()) },[UX]) \r\n    useEffect(()=>{ },[ClientClusterSpread])\r\n \r\n    return(\r\n        <>\r\n        <H3 Copy={`Cluster distribution `}/>\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <div>\r\n                    <ChartHeader Icon={Chart1.Icon} Header={Chart1.Header}  Copy={Chart1.Copy} Tip={Chart1.Tip} />\r\n                   \r\n                     \r\n                    <div style={{height: 300}}>\r\n                    <NivoRadial \r\n                            data={ClientClusterSpread} \r\n                            id={`name`} \r\n                            value={'Sum'} \r\n                            Label={'Clusters'}\r\n                        />\r\n                        </div>\r\n                </div>\r\n                <div>\r\n                    <DisplayFunnel />\r\n                </div>\r\n        </div>\r\n            { ClientClusterSpread.length !== 0 ? <ClientStatBar ClientClusterSpread={ClientClusterSpread}/>: false }\r\n            </DiagramContainer>\r\n        </>\r\n    )\r\n} \r\nexport default Locations_Radial_Pie_Charts;\r\n\r\n\r\nconst DisplayFunnel=()=>{\r\n    const UX = useContext_UX_FULL(); \r\n    const [ClusterOccurances,setClusterOccurances ] = useState([[]]) \r\n\r\n    useEffect(()=>{  setClusterOccurances(OBJ_CLUSTER_GLOBAL())},[UX]) \r\n\r\n    useEffect(()=>{},[ClusterOccurances])\r\n\r\n    return(\r\n        <div>\r\n            <ChartHeader Icon={Chart2.Icon} Header={Chart2.Header}Tip={Chart2.Tip} Copy={Chart2.Copy} />\r\n                <div style={{height: 300}}>\r\n                    <NivoFunnel data={ClusterOccurances} id={`name`} value={'Sum'} />\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst ClientStatBar = (props)=>{\r\n    const {ClientClusterSpread} = props\r\n    return(\r\n       <>\r\n            <Stats_Bar data={ClientClusterSpread} name={`name`} value={`Sum`}/>\r\n       </>\r\n    )\r\n}\r\n\r\n/*\r\n\r\n<ResponsiveContainer width='100%' height={300}>\r\n                        <RadarChart  outerRadius={100}  data={ClientClusterSpread}>\r\n                            <PolarGrid />\r\n                            <PolarAngleAxis dataKey=\"name\" />\r\n                            <PolarRadiusAxis />\r\n                            <Radar name={'Clusters'} dataKey=\"Sum\" stroke={colorArray[0]} fill={colorArray[0]} fillOpacity={0.6} />\r\n                            <Tooltip />\r\n                            <Legend />\r\n                        </RadarChart>\r\n                    </ResponsiveContainer>\r\n <ResponsiveContainer width='100%' height={300}>\r\n            <FunnelChart >\r\n                <Tooltip />\r\n                <Funnel\r\n                    dataKey={`Sum`}\r\n                    data={ClusterOccurances}\r\n                    isAnimationActive\r\n                >\r\n                    <LabelList position=\"center\" fill={colorArray[0]} stroke=\"none\" dataKey=\"name\" />\r\n                </Funnel>\r\n                </FunnelChart>\r\n                </ResponsiveContainer>\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_WorkOrderDistribution.js",["2416","2417","2418","2419","2420","2421","2422","2423","2424"],"import React, { useEffect, useState }  from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\nimport {\r\n    OBJ_CLUSTER_GLOBAL,\r\n    OBJ_RESOURCES_GLOBAL\r\n    \r\n} from \"actions/CreateSingleViewModel\"\r\n// Template\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport {H3} from \"Pages/Auth/Components/Type\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Chart\r\n//import PieChart from \"venders/apexCharts/SimplePie\";\r\nimport { ResponsiveContainer,PieChart, Pie,Legend, Tooltip,Cell} from 'recharts';\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\n// Nivo \r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={\r\n    Icon:'pie',\r\n    Header:\"Work Order Spread\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"Graph shows the Work Order spread across resource type within the Model\"\r\n}\r\n\r\nconst Chart2={\r\n    Icon:'pie',\r\n    Header:\"Work Orders by Cluster\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"Graph shows the Work Order Spread across Cluster Type within the Model\"\r\n}\r\n\r\n/* ************************************** */\r\n// CLient specific section\r\n// Move to own file\r\n\r\n\r\nconst ClientWOrkOrderSpread = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n\r\n    const [ClientSpread, setClientSpread] = useState([])\r\n    const [ClientClusterSpread, setClientClusterSpread] = useState([])\r\n    useEffect(()=>{\r\n        setClientSpread(OBJ_RESOURCES_GLOBAL())\r\n        setClientClusterSpread(OBJ_CLUSTER_GLOBAL())\r\n    },[UX])\r\n\r\n    return(\r\n        <>\r\n        <H3 Copy={`Work Order Spread distribution `}/>\r\n        <DiagramContainer>\r\n        <div className=\"resultCharts\">\r\n            <div>\r\n                <ChartHeader Icon={Chart1.Icon} Header={Chart1.Header}  Copy={Chart1.Copy} Tip={Chart1.Tip} />\r\n                <div style={{height: 300}}>\r\n                        <NivoPie data={ClientSpread} id={`name`} value={'Work Orders'} />\r\n                    </div>\r\n\r\n                \r\n            </div>\r\n            <div>\r\n                <ChartHeader Icon={Chart2.Icon} Header={Chart2.Header}  Copy={Chart2.Copy} Tip={Chart2.Tip} />\r\n\r\n                <div style={{height: 300}}>\r\n                        <NivoPie data={ClientClusterSpread} id={`name`} value={'Work Orders'} />\r\n                    </div>\r\n                \r\n            </div>\r\n        </div>\r\n        { ClientSpread.length !== 0 ? <ClientStatBar ClientSpread={ClientSpread} ClientClusterSpread={ClientClusterSpread}/>: false }\r\n        </DiagramContainer>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ClientWOrkOrderSpread;\r\n\r\nconst ClientStatBar = (props)=>{\r\n    const {ClientClusterSpread, ClientSpread} = props\r\n    return(<>\r\n            <Stats_Bar data={ClientSpread} name={`name`} value={`Work Orders`}/>\r\n            <Stats_Bar data={ClientClusterSpread} name={`name`} value={`Work Orders`}/> \r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\n\r\n<ResponsiveContainer width='100%' height={300}>\r\n                    <PieChart >\r\n                        <Pie dataKey=\"Work Orders\" isAnimationActive={false} data={ClientSpread}  outerRadius={80} fill=\"#ffbf00\" label >\r\n                            {\r\n                            ClientSpread.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={colorArray[index]}/>\r\n                            ))\r\n                            }   \r\n                        </Pie>\r\n                        <Tooltip />\r\n                        <Legend /> \r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n<ResponsiveContainer width='100%' height={300}>\r\n                    <PieChart >\r\n                        <Pie dataKey=\"Work Orders\" isAnimationActive={false} data={ClientClusterSpread}  outerRadius={80} fill=\"#ffbf00\" label >\r\n                            {\r\n                                ClientClusterSpread.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={colorArray[index]}/>\r\n                                ))\r\n                            }   \r\n                        </Pie>\r\n                        <Tooltip />\r\n                        <Legend /> \r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\DiagramContainer.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Stats_Bar.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoPie.js",["2425","2426"],"import React, { useEffect }  from 'react'\r\nimport { ResponsivePie } from '@nivo/pie'\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\nconst NivoPie=(props)=>{\r\n\r\n    const {data,id,value} = props\r\n    const [NivoData, setNivoData] = useState([])\r\n    const CreateNivoData=()=>{\r\n            let Nivo=[]\r\n            data.map((row,i)=>{\r\n                Nivo.push({\r\n                    \"id\": row[id],\r\n                    \"label\": row[id],\r\n                    \"value\": row[value],\r\n                })\r\n            }) \r\n            setNivoData(Nivo)\r\n    }\r\n\r\n    useEffect(()=>{ CreateNivoData() },[data])\r\n\r\n\r\n    return(\r\n        <ResponsivePie \r\n            data={NivoData}\r\n            margin={{ top: 50, right: 100, bottom: 50, left: 100 }}\r\n            innerRadius={0.4}\r\n            padAngle={3}\r\n            cornerRadius={3}\r\n            colors={colorArray}\r\n            sortByValue={true}\r\n            borderWidth={1}\r\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\r\n            radialLabelsSkipAngle={10}\r\n            radialLabelsTextColor=\"#2f2f2f\"\r\n            radialLabelsLinkColor={{ from: 'color' }}\r\n            sliceLabelsSkipAngle={10}\r\n            sliceLabelsTextColor=\"#fff\"\r\n            sliceLabel={function(e){return e.value.toFixed(2)}}\r\n            radialLabelsLinkStrokeWidth={1}\r\n            radialLabelsTextXOffset={1}\r\n            radialLabelsLinkHorizontalLength={15}    \r\n        />\r\n    )\r\n}\r\n\r\nexport default NivoPie;\r\n/*\r\n  legends={[\r\n                {\r\n                    anchor: 'bottom-left',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 56,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: '#999',\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 1,\r\n                    symbolSize: 18,\r\n                    symbolShape: 'circle',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemTextColor: '#000'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoRadial.js",["2427","2428","2429","2430"],"import React, { useEffect }  from 'react'\r\nimport { ResponsiveRadar } from '@nivo/radar'\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\nconst NivoPie=(props)=>{\r\n\r\n    const {data,id,value, Label} = props\r\n    const [NivoData, setNivoData] = useState([])\r\n    const [NivoRadialKeys, setNivoRadialKeys] = useState([])\r\n    const CreateNivoData=()=>{\r\n            //console.log(id,value)\r\n            let NivoRadialKeys=[]\r\n            let NivoRadialData=[]\r\n            data.map((row,i)=>{\r\n                NivoRadialKeys.push(row[id])\r\n\r\n                NivoRadialData.push({\r\n                    \"Name\":row[id],\r\n                    [Label]:row[value]=== undefined ? 0 : row[value],\r\n                }) \r\n            })\r\n           //console.log(NivoRadialData)\r\n            //console.log(NivoRadialKeys)\r\n            setNivoData(NivoRadialData)\r\n            setNivoRadialKeys(NivoRadialKeys)\r\n    }\r\n\r\n    useEffect(()=>{ \r\n        \r\n        //console.log(data)\r\n        CreateNivoData() },[data])\r\n\r\n\r\n    return(\r\n        <ResponsiveRadar\r\n            data={NivoData}\r\n            keys={[Label]}\r\n            indexBy={'Name'}\r\n            colors={colorArray}\r\n            maxValue=\"auto\"\r\n            margin={{ top: 70, right: 80, bottom: 40, left: 80 }}\r\n            curve=\"linearClosed\"\r\n            borderWidth={1}\r\n            borderColor={colorArray[0]} \r\n            gridLevels={15}\r\n            gridShape=\"circular\"\r\n            gridLabelOffset={26}\r\n            enableDots={true}\r\n            dotSize={10}\r\n            dotColor={colorArray[0]}\r\n            dotBorderWidth={2}\r\n            dotBorderColor={colorArray[0]}\r\n            enableDotLabel={true}\r\n            dotLabel=\"value\"\r\n            dotLabelYOffset={-12}\r\n            colors={colorArray}\r\n            fillOpacity={0.5}\r\n            blendMode=\"multiply\"\r\n            animate={true}\r\n            motionConfig=\"wobbly\"\r\n            isInteractive={true}\r\n       \r\n    />\r\n    )\r\n}\r\n\r\nexport default NivoPie;\r\n/*\r\n  legends={[\r\n                {\r\n                    anchor: 'bottom-left',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 56,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: '#999',\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 1,\r\n                    symbolSize: 18,\r\n                    symbolShape: 'circle',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemTextColor: '#000'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoWaffle.js",["2431","2432","2433"],"import React, { useEffect }  from 'react'\r\nimport { ResponsiveWaffle } from '@nivo/waffle'\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\nconst NivoPie=(props)=>{\r\n\r\n    const {data,id,value, Label} = props\r\n    const [NivoData, setNivoData] = useState([])\r\n    const [NivoWaffleTotal, setNivoWaffleTotal] = useState([])\r\n    const CreateNivoData=()=>{\r\n            //console.log(id,value)\r\n            let NivoWaffleTotal=[]\r\n            let NivoWaffleData=[]\r\n            data.map((row,i)=>{\r\n                NivoWaffleTotal.push(row[value])\r\n                NivoWaffleData.push({\r\n                    \"id\": row[id],\r\n                    \"label\": row[id],\r\n                    \"value\": row[value],\r\n                })\r\n            })\r\n            //console.log(NivoWaffleData)\r\n            //console.log(NivoRadialKeys)\r\n            setNivoData(NivoWaffleData)\r\n            setNivoWaffleTotal(NivoWaffleTotal.reduce((a, b) => a + b, 0))\r\n    }\r\n\r\n    useEffect(()=>{ \r\n        //console.log(data)\r\n        CreateNivoData() \r\n    },[data])\r\n\r\n\r\n    return(\r\n        <ResponsiveWaffle\r\n\r\n        data={NivoData}\r\n        total={NivoWaffleTotal}\r\n        rows={10}\r\n        columns={50}\r\n        fillDirection=\"left\"\r\n        margin={{ top: 60, right: 10, bottom: 10, left: 0 }}\r\n        colors={colorArray}\r\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.3 ] ] }}\r\n        animate={true}\r\n        motionStiffness={90}\r\n        motionDamping={11}\r\n        legends={[\r\n            {\r\n                anchor: 'top',\r\n                direction: 'row',\r\n                justify: false,\r\n                translateX: 0,\r\n                translateY: -50,\r\n                itemsSpacing: 4,\r\n                itemWidth: 300,\r\n                itemHeight: 20,\r\n                itemDirection: 'left-to-right',\r\n                itemOpacity: 1,\r\n                itemTextColor: '#777',\r\n                symbolSize: 20,\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemTextColor: '#000',\r\n                            itemBackground: '#f7fafb'\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n    />\r\n    )\r\n}\r\n\r\nexport default NivoPie;\r\n/*\r\n  legends={[\r\n                {\r\n                    anchor: 'bottom-left',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 56,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: '#999',\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 1,\r\n                    symbolSize: 18,\r\n                    symbolShape: 'circle',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemTextColor: '#000'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoFunnel.js",["2434","2435","2436","2437"],"import React, { useEffect }  from 'react'\r\nimport { ResponsiveFunnel } from '@nivo/funnel'\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\nconst NivoPie=(props)=>{\r\n\r\n    const {data,id,value, Label} = props\r\n    const [NivoData, setNivoData] = useState([])\r\n    const [NivoWaffleTotal, setNivoWaffleTotal] = useState([])\r\n    const CreateNivoData=()=>{\r\n            //console.log(id,value)\r\n            let NivoWaffleTotal=[]\r\n            let NivoWaffleData=[]\r\n            data.map((row,i)=>{\r\n                NivoWaffleTotal.push(row[value])\r\n                //console.log(row[value])\r\n                NivoWaffleData.push({\r\n                    \"id\": row[id],\r\n                    \"label\": row[id],\r\n                    \"value\": row[value]  === undefined ? 0 : row[value] ,\r\n                })\r\n            })\r\n            //console.log(NivoWaffleData)\r\n            //console.log(NivoRadialKeys)\r\n            setNivoData(NivoWaffleData)\r\n            setNivoWaffleTotal(NivoWaffleTotal.reduce((a, b) => a + b, 0)) \r\n    }\r\n\r\n    useEffect(()=>{ \r\n        \r\n        //console.log(data)\r\n        CreateNivoData() \r\n    },[data])\r\n\r\n\r\n    return(\r\n        <ResponsiveFunnel\r\n            data={NivoData}\r\n            margin={{ top: 0, right: 0, bottom: 20, left: 0 }}\r\n            valueFormat=\">-.4s\"\r\n            colors={colorArray}\r\n            borderWidth={40}\r\n            labelColor=\"#ffc200\"\r\n            beforeSeparatorLength={100}\r\n            beforeSeparatorOffset={20}\r\n            afterSeparatorLength={100}\r\n            afterSeparatorOffset={20}\r\n            currentPartSizeExtension={10}\r\n            currentBorderWidth={40}\r\n            motionConfig=\"wobbly\"\r\n    />\r\n    )\r\n}\r\n\r\nexport default NivoPie;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoLine.js",["2438","2439","2440"],"import React, { useEffect }  from 'react'\r\nimport { ResponsiveLine } from '@nivo/line'\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\nconst NivoPie=(props)=>{\r\n\r\n    const {data,Xaxis,value,Yaxis, label} = props\r\n    const [NivoData, setNivoData] = useState([])\r\n    \r\n    const CreateNivoData=()=>{\r\n            //console.log(Xaxis,value)\r\n            let Nivo=[{ 'id':Yaxis, \"color\": \"#ffc200\", 'data':[]}]\r\n\r\n            data.map((row,i)=>{\r\n                \r\n                Nivo[0]['data'].push({\r\n                    \"x\": row[Xaxis],\r\n                    \"y\": row[value],\r\n                    \r\n                })\r\n            }) \r\n            //console.log(Nivo)\r\n            setNivoData(Nivo)\r\n    }\r\n\r\n    useEffect(()=>{ \r\n        //console.log(data);\r\n        CreateNivoData() },[data])\r\n\r\n\r\n    return(\r\n        <ResponsiveLine\r\n        data={NivoData}\r\n        margin={{ top: 10, right: 10, bottom: 80, left: 50 }}\r\n        xScale={{ type: 'point' }}\r\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n        yFormat=\" >-.2f\"\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n            orient: 'bottom',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: label,\r\n            legendOffset: 36,\r\n            legendPosition: 'middle'\r\n        }}\r\n        axisLeft={{\r\n            orient: 'left',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'count',\r\n            legendOffset: -40,\r\n            legendPosition: 'middle'\r\n        }}\r\n        pointSize={10}\r\n        pointColor=\"#ffc200\"\r\n        pointBorderWidth={2}\r\n        pointBorderColor=\"#ffc200\"\r\n        pointLabelYOffset={-12}\r\n        useMesh={true}\r\n        legends={[\r\n            {\r\n                anchor: 'bottom',\r\n                direction: 'column',\r\n                justify: false,\r\n                translateX: 0,\r\n                translateY: 70,\r\n                itemsSpacing: 0,\r\n                itemDirection: 'left-to-right',\r\n                itemWidth: 80,\r\n                itemHeight: 20,\r\n                itemOpacity: 0.75,\r\n                symbolSize: 12,\r\n                symbolShape: 'circle',\r\n                symbolBorderColor: '#ffc200',\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemBackground: 'rgba(0, 0, 0, .03)',\r\n                            itemOpacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n    />\r\n    )\r\n}\r\n\r\nexport default NivoPie;\r\n/*\r\n  legends={[\r\n                {\r\n                    anchor: 'bottom-left',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 56,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: '#999',\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 1,\r\n                    symbolSize: 18,\r\n                    symbolShape: 'circle',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemTextColor: '#000'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoSwarmPlot.js",["2441","2442"],"import React, { useEffect }  from 'react'\r\nimport { ResponsiveSwarmPlot } from '@nivo/swarmplot'\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\nimport {sumBy} from 'lodash'\r\nconst NivoPie=(props)=>{\r\n\r\n  \r\n    const {data,Volume, Group} = props\r\n    const [NivoData, setNivoData] = useState([])\r\n    const [NivoRadialKeys, setNivoRadialKeys] = useState([])\r\n    const [VolumeSize, setVolumeSize] = useState([])\r\n    const [ValueSize, setValueSize] = useState([])\r\n    const CreateNivoData=()=>{\r\n\r\n            let Nivo=[]\r\n            let NivoRadialKeys=[]\r\n            let CreateVolumeSize=[]\r\n            let CreateValueSize=[]\r\n            data.map((row,i)=>{\r\n               //console.log(sumBy(row.resourceQuota, function(o) { return o.ResourceAllocation; }))\r\n               //console.log(row.resourceQuota)\r\n                Nivo.push({\r\n                    \"id\":`${i}_${row[Group]}`,\r\n                    \"group\": row[Group],\r\n                    \"value\": sumBy(row.StripedSites, function(o) { return o.SumWorkOrder; }),\r\n                    \"volume\": row[Volume].length,\r\n                })\r\n                CreateVolumeSize.push( row[Volume].length)\r\n                CreateValueSize.push(sumBy(row.StripedSites, function(o) { return o.SumWorkOrder; }))\r\n\r\n                if(NivoRadialKeys.indexOf(row[Group]) === -1){\r\n                    NivoRadialKeys.push(row[Group])\r\n                }\r\n               \r\n            }) \r\n            setNivoData(Nivo)\r\n\r\n           //console.log(Nivo)\r\n           //console.log(NivoRadialKeys)\r\n            setNivoRadialKeys(NivoRadialKeys)\r\n            setVolumeSize(CreateVolumeSize)\r\n            setValueSize(CreateValueSize)\r\n\r\n\r\n           //console.log(CreateVolumeSize, [ Math.min(...CreateVolumeSize), Math.max(...CreateVolumeSize) ])\r\n    }\r\n\r\n    useEffect(()=>{ CreateNivoData() },[data])\r\n\r\n\r\n    return(\r\n        <ResponsiveSwarmPlot\r\n        data={NivoData}\r\n        groups={NivoRadialKeys}\r\n        value=\"value\"\r\n        valueFormat=\"\"\r\n        valueScale={{ type: 'linear', min: Math.min(...ValueSize), max: Math.max(...ValueSize), reverse: false }}\r\n        size={{ key: 'volume', values: [ Math.min(...VolumeSize), Math.max(...VolumeSize) ], sizes: [ 6, 20 ] }}\r\n        forceStrength={1}\r\n        simulationIterations={100}\r\n        colors={colorArray}\r\n        borderColor={{\r\n            from: 'color',\r\n            modifiers: [\r\n                [\r\n                    'darker',\r\n                    0.6\r\n                ],\r\n                [\r\n                    'opacity',\r\n                    0.5\r\n                ]\r\n            ]\r\n        }}\r\n        margin={{ top: 80, right: 100, bottom: 80, left: 100 }}\r\n       \r\n       \r\n        axisBottom={{\r\n            orient: 'bottom',\r\n            tickSize: 10,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'Vertical  =  Work orders,  Horizontal = Numbers of sites in cluster',\r\n            legendPosition: 'middle',\r\n            legendOffset: 46\r\n        }}\r\n       \r\n        motionStiffness={50}\r\n        motionDamping={10}\r\n    />\r\n    )\r\n}\r\n\r\nexport default NivoPie;\r\n/*\r\n  legends={[\r\n                {\r\n                    anchor: 'bottom-left',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 56,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: '#999',\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 1,\r\n                    symbolSize: 18,\r\n                    symbolShape: 'circle',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemTextColor: '#000'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CreateCompareModelView.js",["2443","2444","2445","2446","2447","2448","2449","2450","2451","2452","2453","2454","2455","2456","2457","2458","2459","2460","2461","2462","2463","2464","2465","2466"],"import store from \"../store/index\"\r\nimport {GroupArrayByOccurances, HandleResourceFilter, numberWithCommas} from \"actions/HandleUX\";\r\nimport {findIndex,sumBy,orderBy,groupBy,find, remove} from 'lodash';\r\nimport {findClientName} from \"actions/ClusterAnalysis\"\r\n\r\n/* ************************************************************************************************* */\r\n// OBJ BUILDER\r\n// FULL OBJECTS BROKEN DOWN BY A ROOT CATEGORY\r\n// Naming\r\n// OBJ_[ROOT]_CALCULATED_FILTER\r\n/* ************************************************************************************************* */\r\n\r\n\r\nexport const fixNumber=(num)=>{\r\n    try {\r\n        if(num != undefined)\r\n        return parseFloat(num.toFixed(2)) \r\n     \r\n            return 0\r\n      }\r\n      catch(err) {\r\n        console.log(err, num)\r\n      }\r\n}\r\n\r\n\r\nexport const FindTotals = (DATA, FILTER)=>{\r\n    let Totals=[]\r\n    DATA.map((SELETCED, i )=>{\r\n        Totals.push(numberWithCommas(sumBy(SELETCED, function(o) { return o[FILTER]; }).toFixed(0)))\r\n    })\r\n    return  Totals\r\n}\r\n\r\n\r\nconst IsInt=(Num)=>{\r\n    if(typeof Num=== 'string'){return parseFloat(Num.replace(/,/g, ''))\r\n    }else{ return Num }\r\n    \r\n}\r\n\r\nexport const FindPercentageBewtweenTwoNumbers = (Data, i)=>{\r\n \r\n    let PercClass='negitive'\r\n    let PercSymbal=\"\"\r\n    if(i===1){\r\n        \r\n        let Percentage = ((IsInt(Data[1])  - IsInt(Data[0])) / IsInt(Data[0])) * 100\r\n        if(Percentage>-0.1){  PercClass='positive'; PercSymbal=\"+\"}\r\n        return <span className={PercClass}>{`( ${PercSymbal} ${Percentage.toFixed(2)} %)`}</span>\r\n    }\r\n    else{\r\n        return false\r\n    }\r\n}\r\n\r\n/* ******************************** */\r\n// FILTERS\r\n\r\n    const RunFilter=(filter,ByType)=>{\r\n        if(ByType != false){\r\n            if(filter != ByType )\r\n                return false\r\n        }return true        \r\n    }\r\n\r\n/**/\r\n\r\n/************************* */ \r\n// MAIN OBJ \"CLUSTERS vs Trade\"\r\n/************************* */\r\n\r\n// Filters=['ByClusterType','ByResourceType','ByClient']\r\n\r\n\r\n/************************* */\r\n// MAIN OBJ \"Cluster vs Global\"\r\n// model.ClientGroupedBy\r\n/************************* */\r\n\r\nexport const OBJ_CLUSTER_GLOBAL=()=>{ \r\n    /*\r\n        Exports\r\n            {\r\n                Clients: [\"5fe1751dab400d456889ac5e\"]\r\n                Resource: 98.73\r\n                Sites: (30) []\r\n                Sum: 100\r\n                Work Orders: 9247\r\n                name: \"SameBuilding\" \r\n            }\r\n    */\r\n \r\n    const COMPARE = store.getState().COMPARE.CompareData\r\n    const UX = store.getState().UX\r\n    const MODEL = store.getState().SCANSTATE\r\n\r\n    //console.log(COMPARE.FetchedModels)\r\n    \r\n        let CompareOBJ=[]\r\n    COMPARE.FetchedModels.map((MODEL, i)=>{\r\n        let Clusters_ByClient=[];\r\n           //console.log(MODEL.STOREMARKERCENTERPOINTS)\r\n            MODEL.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n\r\n                let Index = findIndex(Clusters_ByClient,{name:model.scanCategory})\r\n    \r\n                if(Index === -1){ Clusters_ByClient.push({name:model.scanCategory,  Appearances:0})}\r\n                Index = findIndex(Clusters_ByClient,{name:model.scanCategory})\r\n                \r\n    \r\n                Clusters_ByClient[Index].Appearances = Clusters_ByClient[Index].Appearances + 1;\r\n    \r\n                Object.keys(model.ClientGroupedBy).map((key,ii)=>{\r\n                    model.ClientGroupedBy[key].map((q,ii)=>{\r\n                        //console.log(q)\r\n                        /* Run 'ByResourceType' Filter ********************************** */       \r\n                        if(!RunFilter(q.Trade ,UX.AreaSelectFilter.ByResourceType)) return false\r\n                        /* ********************************** */ \r\n                        /* Run 'ByClient'  Filter********************************** */       \r\n                            if(!RunFilter(q.Customer ,UX.AreaSelectFilter.ByClient)) return false\r\n                        /* ********************************** */ \r\n    \r\n                        if(Clusters_ByClient[Index][`Resource_Count_${q.Trade}`] === undefined){\r\n                            Clusters_ByClient[Index][`Resource_Count_${q.Trade}`] = fixNumber(q.Ratio) \r\n                        }else{\r\n                            Clusters_ByClient[Index][`Resource_Count_${q.Trade}`] =   (fixNumber(Clusters_ByClient[Index][`Resource_Count_${q.Trade}`]  +q.Ratio))\r\n                        }\r\n    \r\n                        if(Clusters_ByClient[Index][`work_order_${q.Trade}`] === undefined){\r\n                            Clusters_ByClient[Index][`work_order_${q.Trade}`] = fixNumber(q.WOS) \r\n                        }else{\r\n                            Clusters_ByClient[Index][`work_order_${q.Trade}`] =   (fixNumber(Clusters_ByClient[Index][`work_order_${q.Trade}`]  +q.WOS))\r\n                        }\r\n    \r\n    \r\n                        if(Clusters_ByClient[Index][`Sum`] === undefined){ Clusters_ByClient[Index][`Sum`] = 1 }\r\n                        else{ Clusters_ByClient[Index][`Sum`] =  Clusters_ByClient[Index][`Sum`] + 1 }\r\n    \r\n                        if(Clusters_ByClient[Index][`Resource`] === undefined){ Clusters_ByClient[Index][`Resource`] = fixNumber(q.Ratio) }\r\n                        else{ Clusters_ByClient[Index][`Resource`] =  fixNumber(Clusters_ByClient[Index][`Resource`]) + fixNumber(q.Ratio) }\r\n    \r\n                        if(Clusters_ByClient[Index][`Work Orders`] === undefined){ Clusters_ByClient[Index][`Work Orders`] = q.WOS }\r\n                        else{ Clusters_ByClient[Index][`Work Orders`] =  Clusters_ByClient[Index][`Work Orders`] + q.WOS }\r\n    \r\n                        if(Clusters_ByClient[Index][`Clients`] === undefined){ Clusters_ByClient[Index][`Clients`] = [] }\r\n                        if(Clusters_ByClient[Index][`Clients`].indexOf(q.Customer)=== -1){ Clusters_ByClient[Index][`Clients`].push(q.Customer)}\r\n                    \r\n                        if(Clusters_ByClient[Index][`Sites`] === undefined){ Clusters_ByClient[Index][`Sites`] = [] }\r\n                        if(Clusters_ByClient[Index][`Sites`].indexOf(q.site)=== -1){ Clusters_ByClient[Index][`Sites`].push(q.site)}\r\n                    \r\n                        if(Clusters_ByClient[Index][`Trade`] === undefined){ Clusters_ByClient[Index][`Trade`] = [] }\r\n                        if(Clusters_ByClient[Index][`Trade`].indexOf(q.Trade)=== -1){ Clusters_ByClient[Index][`Trade`].push(q.Trade)}\r\n                    \r\n                    })\r\n                })\r\n        });\r\n        CompareOBJ.push(Clusters_ByClient)\r\n        })\r\n    \r\n    //console.log(CompareOBJ)\r\n    return CompareOBJ    \r\n}\r\n\r\n\r\n\r\n/************************* */\r\n// MAIN OBJ \"Resources GLOBAL\"\r\n\r\n// model.ResourcesGroupedBy\r\n/************************* */\r\n\r\n// MAIN OBJ RESOURCES\r\nexport const OBJ_RESOURCES_GLOBAL=(Filters=['ByClusterType','ByResourceType','ByClient'])=>{\r\n\r\n    /*\r\n        Exports \r\n        {\r\n            Clients: [\"5fe1751dab400d456889ac5e\"]\r\n            Date: (4) [\"03/2018\", \"05/2018\", \"06/2018\", \"04/2018\"]\r\n            Sites: (10) [\"5fe173efab400d456889aa2b\", \"5fe17408ab400d456889aa5a\", \"5fe17409ab400d456889aa5b\", \"5fe17408ab400d456889aa59\", \"5fe1740fab400d456889aa66\", \"5fe17427ab400d456889aa94\", \"5fe173e8ab400d456889aa1a\", \"5fe17404ab400d456889aa52\", \"5fe173feab400d456889aa48\", \"5fe173fcab400d456889aa40\"]\r\n            Resources: 7.390000000000001\r\n            Work Orders: 470\r\n            name: \"Electrician\"\r\n        }\r\n    */\r\n    // Get Filters \r\n    const COMPARE = store.getState().COMPARE.CompareData\r\n    const UX = store.getState().UX\r\n    //const MODEL = store.getState().SCANSTATE\r\n\r\n  \r\n\r\n    //console.log('COMPARE MODELS ', COMPARE.FetchedModels.length)\r\n    let CompareOBJ=[]\r\n\r\n    COMPARE.FetchedModels.map((MODEL, i)=>{\r\n        let Resources_Clients=[]\r\n        MODEL.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n            //console.log(model)\r\n            \r\n            /* ********************************** */       \r\n            // Run Filter\r\n            if(Filters.indexOf('ByClusterType') !== -1){\r\n                if(!RunFilter(model.scanCategory,UX.AreaSelectFilter.ByClusterType)) return false\r\n            }\r\n            \r\n            /* ********************************** */ \r\n            \r\n               \r\n            // loop\r\n            Object.keys(model.ResourcesGroupedBy).map(function(key, index) {\r\n    \r\n                // Run Loop\r\n                model.ResourcesGroupedBy[key].map((q,ii)=>{\r\n                    let Index;\r\n              \r\n               \r\n                /* ********************************** */       \r\n                // Run Filter\r\n                if(Filters.indexOf('ByResourceType') !== -1){\r\n                    if(!RunFilter(q.Trade,UX.AreaSelectFilter.ByResourceType)) return false\r\n                }\r\n                /* ********************************** */ \r\n                 /* ********************************** */       \r\n                // Run Filter\r\n                if(Filters.indexOf('ByClient') !== -1){\r\n                    if(!RunFilter(q.Customer ,UX.AreaSelectFilter.ByClient)) return false\r\n                    \r\n                }\r\n                /* ********************************** */ \r\n                \r\n    \r\n                    //console.log(q)\r\n                    Index = findIndex(Resources_Clients,{name:q.Trade})\r\n                    if(Index === -1){ \r\n                        Resources_Clients.push({name:q.Trade})\r\n                        Index = findIndex(Resources_Clients,{name:q.Trade})\r\n                    }\r\n         \r\n    \r\n                    if(Resources_Clients[Index][`Resources`] === undefined)\r\n                    {Resources_Clients[Index][`Resources`] = fixNumber(q.Ratio) }\r\n                    else{Resources_Clients[Index][`Resources`] = fixNumber(Resources_Clients[Index][`Resources`]) + fixNumber(q.Ratio)} \r\n    \r\n                    if(Resources_Clients[Index][`Work Orders`] === undefined)\r\n                    {Resources_Clients[Index][`Work Orders`] = fixNumber(q.WOS) }\r\n                    else{Resources_Clients[Index][`Work Orders`] = fixNumber(Resources_Clients[Index][`Work Orders`]) + fixNumber(q.WOS)} \r\n                    \r\n                    if(Resources_Clients[Index][`Sites`] === undefined){Resources_Clients[Index][`Sites`] = [] }\r\n                    if(Resources_Clients[Index][`Sites`].indexOf(q.site) === -1){Resources_Clients[Index][`Sites`].push(q.site)}\r\n    \r\n                    if(Resources_Clients[Index][`Clients`] === undefined){Resources_Clients[Index][`Clients`] = [] }\r\n                    if(Resources_Clients[Index][`Clients`].indexOf(q.Customer) === -1){Resources_Clients[Index][`Clients`].push(q.Customer)}\r\n                    \r\n                    if(Resources_Clients[Index][`Date`] === undefined){Resources_Clients[Index][`Date`] = [] }\r\n                    if(Resources_Clients[Index][`Date`].indexOf(q.Date) === -1){Resources_Clients[Index][`Date`].push(q.Date)}\r\n    \r\n                    \r\n                })\r\n            });\r\n        })\r\n        CompareOBJ.push(Resources_Clients)\r\n    })\r\n  \r\n   \r\n    //console.log(CompareOBJ)\r\n   return orderBy(CompareOBJ, ['name'], [])\r\n\r\n}\r\n\r\n\r\n/* ************************************************************************************************* */\r\n// END TIME/DATE BASED OBJ\r\n/* ************************************************************************************************* */\r\n\r\n/* ************************************************************************************************* */\r\n// Helper Functions\r\n/* ************************************************************************************************* */\r\n\r\n\r\nexport const  WorkorderTotals=(CenterPoints, MissingLocations)=>{\r\n\r\n    let TestTotalWOs=[];\r\n    let MissingWOs=[];\r\n\r\n\r\n    CenterPoints.map((model,i)=>{\r\n\r\n            Object.keys(model.SitesGroupedBy).map(function(key, index) {\r\n                model.SitesGroupedBy[key].map((c,ii)=>{\r\n                    TestTotalWOs.push(c.WOS)\r\n                })\r\n            })\r\n    })\r\n\r\n    MissingLocations.map((model,i)=>{\r\n        if(model.SumWorkOrder != undefined){\r\n            MissingWOs.push(model.SumWorkOrder)\r\n        }\r\n        \r\n    })\r\n  \r\n    return [TestTotalWOs.reduce((a, b) => a + b, 0), MissingWOs.reduce((a, b) => a + b, 0)]\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\TableHeader.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Locations_CompareTotals.js",["2467","2468","2469","2470","2471"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"Context/COMPARE\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {OBJ_CLUSTER_GLOBAL, FindPercentageBewtweenTwoNumbers} from 'actions/CreateCompareModelView'\r\n\r\nimport {H2} from \"Pages/Auth/Components/Type\"\r\nconst TableWorkOrders = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL().CompareData.FetchedModels\r\n    const UX = useContext_UX_FULL()\r\n    const [Locations, setLocations] = useState([])\r\n    const [OOS, setOOS] = useState([])\r\n    \r\n    const LocationTotals=()=>{\r\n        let Locs = []\r\n\r\n            OBJ_CLUSTER_GLOBAL().map((model,i)=>{\r\n               let collectSites=[]\r\n                model.map((sites,ii)=>{ \r\n                    if(sites.Sites != undefined){  collectSites.push(sites.Sites.length)  }\r\n                })\r\n                Locs.push(collectSites.reduce((a, b) => a + b, 0))\r\n            })\r\n\r\n            setLocations(Locs)\r\n    }\r\n\r\n    const OOSTotals=()=>{\r\n        let Locs = []\r\n        COMPARE.map((oos,i)=>{ Locs.push(oos.STORERESIDUALMARKERS.length) })\r\n        setOOS(Locs)\r\n    }\r\n\r\n    useEffect(()=>{ LocationTotals(); OOSTotals()},[UX])\r\n    useEffect(()=>{},[COMPARE])\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n             <div className=\"ShowInt\"> <H2 Copy={`Locations inScope`} /></div>\r\n                {\r\n                    Locations.map((locs,i)=>{\r\n                        return(\r\n                            <div key={i} className=\"ShowInt\"> \r\n                                {locs} {FindPercentageBewtweenTwoNumbers(Locations,i)}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n \r\n\r\n                <div className=\"ShowInt\"> <H2 Copy={`Locations Out of Scope`} /></div>\r\n                {\r\n                    OOS.map((locs,i)=>{\r\n                        return(\r\n                            <div key={i} className=\"ShowInt\"> \r\n                                {locs} {FindPercentageBewtweenTwoNumbers(OOS,i)}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n        </div> \r\n    ) \r\n} \r\n  \r\nexport default TableWorkOrders;\r\n\r\n\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Locations_Main.js",["2472","2473","2474","2475","2476"],"import React from 'react'\r\n\r\n import SectionChart from \"Pages/Auth/Compare/Layout/SectionCharts\"\r\n    // Locations\r\n    import CompareTableTotalLocations from \"Pages/Auth/Compare/CompareTable/Locations_CompareTotals\"\r\n    import CompareClusters from \"Pages/Auth/Compare/CompareTable/Clusters_Totals\"\r\n   \r\n\r\n// Chart\r\nimport Locaction_Radial_Clusters from 'Pages/Auth/SingleModelResult/Charts/Location_Radial_Clusters'\r\nimport Chart_Pie_OutofScope from 'Pages/Auth/SingleModelResult/Charts/Location_Pie_OutofScope'\r\nimport Clusters_Pie_ClusterNumbers from 'Pages/Auth/SingleModelResult/Charts/Clusters_Pie_ClusterNumbers'\r\n\r\nimport LocationHeatMap from 'Pages/Auth/SingleModelResult/Maps/Location_Heatmap'\r\nimport SwarmPlot from 'Pages/Auth/SingleModelResult/Charts/Clusters_SwarmPlot_Numbers'\r\nimport ClusterBar_ResourceAllocation from 'Pages/Auth/SingleModelResult/Charts/Cluster_Bar_ResourceAllocation'\r\nimport ClusterBar_WorkOrders from 'Pages/Auth/SingleModelResult/Charts/Cluster_Bar_Workorders'\r\nconst Charts=[\r\n  {\r\n    chart: <Chart_Pie_OutofScope />,\r\n    label:'Out of Scope',\r\n    tip:'Pie split of OOS and In Scope Locations',\r\n    icon:'pie'\r\n  }, {\r\n    chart: <Locaction_Radial_Clusters />,\r\n    label:'Grouped Clusters',\r\n    tip:'Radial chart showing the grouped clusters',\r\n    icon:'radial'\r\n  },\r\n  \r\n  {\r\n    chart: <Clusters_Pie_ClusterNumbers />,\r\n    label:'Grouped Clusters',\r\n    tip:'Pie chart showing the grouped clusters',\r\n    icon:'pie'\r\n  },\r\n  \r\n  {\r\n    chart: <LocationHeatMap />,\r\n    label:'HeatMap Locations',\r\n    tip:'Pie chart showing the grouped clusters',\r\n    icon:'map'\r\n  }\r\n  ,\r\n  \r\n  {\r\n    chart: <SwarmPlot />,\r\n    label:'Location Swarm',\r\n    tip:'Swarm Plot showing the density of cluster types',\r\n    icon:'radial'\r\n  },\r\n  \r\n  {\r\n    chart: <ClusterBar_ResourceAllocation />,\r\n    label:'Resource Allocation',\r\n    tip:'Swarm Plot showing the density of cluster types',\r\n    icon:'bar'\r\n  },\r\n  \r\n  {\r\n    chart: <ClusterBar_WorkOrders />,\r\n    label:'Work Orders',\r\n    tip:'Swarm Plot showing the density of cluster types',\r\n    icon:'bar'\r\n  }\r\n]\r\n\r\n\r\nconst TableSectionWorkorders = ()=>{\r\n    return(\r\n   \r\n          <div className=\"TableSection\">\r\n              <div className=\"SectionHeader\">\r\n                  <h2>Locations and Clusters</h2>\r\n               </div>\r\n                    <CompareTableTotalLocations />\r\n                    <CompareClusters />\r\n                    <SectionChart Charts={Charts} />   \r\n          </div>   \r\n     \r\n    )\r\n}   \r\n\r\nexport default TableSectionWorkorders;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Clusters_Main.js",["2477","2478","2479"],"import React from 'react'\r\n\r\n\r\nimport CompareClusters from \"Pages/Auth/Compare/CompareTable/Clusters_Totals\"\r\nimport ClusterComparisonPie from \"Pages/Auth/Compare/CompareTable/CLusters_ComparisionPie\"\r\nimport ClusterComparisonRadial from \"Pages/Auth/Compare/CompareTable/ClusterComparisonRadial\"\r\nimport ClusterResourcesComparisonBar from \"Pages/Auth/Compare/CompareTable/Cluster_ResourcesBar\"\r\n\r\n//import ClusterBreakdown from \"Pages/Auth/Compare/CompareTable/TableClusterBreakDown\";\r\n//import DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport {H2} from \"Pages/Auth/Components/Type\";\r\n\r\nconst Title='Clusters';\r\nconst TableSectionWorkorders = ()=>{\r\n    return(\r\n        <>\r\n            <div className=\"TableSection\">\r\n                <div className=\"SectionHeader\">\r\n                    <H2 Copy={Title} />\r\n               </div>\r\n                <CompareClusters />\r\n                \r\n            </div>\r\n        </>\r\n    ) \r\n}   \r\n// \r\nexport default TableSectionWorkorders;\r\n/*\r\n<ClusterComparisonPie />\r\n                <ClusterComparisonRadial />\r\n                <ClusterResourcesComparisonBar />\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Clusters_TotalsBreakdown.js",["2480","2481","2482"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Clusters_Totals.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\CLusters_ComparisionPie.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\ClusterComparisonRadial.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Cluster_ResourcesBar.js",["2483","2484"],"\r\nimport React from 'react'\r\n\r\nimport {OBJ_CLUSTER_GLOBAL} from \"actions/CreateCompareModelView\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n// Charts\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer} from 'recharts';\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\n\r\nconst Chart1={ \r\n    Icon:'pie',\r\n    Header:\"Cluster Comparison\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"Graph shows the Cluster Comparison within the Model\"\r\n}\r\n\r\nconst ClusterResourcesBar = ()=>{\r\n    return(\r\n        <DiagramContainer>\r\n       \r\n            {\r\n                    OBJ_CLUSTER_GLOBAL().map((SELETCED, i )=>{\r\n\r\n                        return(\r\n                            <ResponsiveContainer width='100%' height={300}>\r\n                            <BarChart\r\n                                 \r\n                                   data={SELETCED}\r\n                                   margin={{\r\n                                           top: 20, right: 0, left: 0, bottom: 0,\r\n                                   }}\r\n                               > \r\n                                   <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                   <XAxis dataKey=\"name\" />\r\n                                   <YAxis />\r\n                                   <Tooltip />\r\n                                   <Legend />\r\n                                       <Bar dataKey=\"Resource_Count_HandyMan\" name=\"HandyMan\" stackId=\"a\" fill={colorArray[0]} />\r\n                                       <Bar dataKey=\"Resource_Count_Electrician\" name=\"Electrician\" stackId=\"a\" fill={colorArray[1]} />\r\n                                       <Bar dataKey=\"Resource_Count_Plumber\" name=\"Plumber\" stackId=\"a\" fill={colorArray[2]} />\r\n                                       <Bar dataKey=\"Resource_Count_Specialized\" name=\"Specialized\" stackId=\"a\" fill={colorArray[3]} />\r\n                                  \r\n                               </BarChart>\r\n                               </ResponsiveContainer>\r\n                        )\r\n                        \r\n                    })\r\n                }\r\n\r\n            \r\n            \r\n\r\n            </DiagramContainer>\r\n    )\r\n}\r\n\r\nexport default ClusterResourcesBar;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Resources_Main.js",["2485","2486","2487","2488"],"import React  from 'react'\r\n\r\nimport SectionChart from \"Pages/Auth/Compare/Layout/SectionCharts\"\r\n\r\n// Locations \r\nimport TotalResourceAllocation from \"Pages/Auth/Compare/CompareTable/Resource_Totals\"\r\n\r\n// Chart\r\nimport Resources_Radial_Resources from \"Pages/Auth/SingleModelResult/Charts/Resource_Radial_Resources\"\r\nimport Resources_Pie_ResourceAllocation from \"Pages/Auth/SingleModelResult/Charts/Resources_Pie_ResourceAllocation\"\r\nimport TradeHeatMap from  \"Pages/Auth/SingleModelResult/Maps/Trade_Heatmap\";\r\nimport Resources_Pie_ClientBreakdown from 'Pages/Auth/SingleModelResult/Charts/Resources_Pie_ClientsBreakdown';\r\nimport Resources_Line_Allocation_OverTime from 'Pages/Auth/SingleModelResult/Charts/Resources_Line_Allocation_OverTime';\r\n\r\n\r\nconst Charts=[\r\n  {\r\n    chart: <Resources_Radial_Resources />,\r\n    label:'Resource Allocation',\r\n    tip:'',\r\n    icon:'radial'\r\n  },{\r\n    chart: <Resources_Pie_ResourceAllocation />,\r\n    label:'Resource Allocation',\r\n    tip:'',\r\n    icon:'pie'\r\n  },{\r\n    chart: <TradeHeatMap />,\r\n    label:'Resource Allocation',\r\n    tip:'',\r\n    icon:'map'\r\n  },{\r\n    chart: <Resources_Pie_ClientBreakdown />,\r\n    label:'Resources to Client',\r\n    tip:'',\r\n    icon:'pie'\r\n  }\r\n,{\r\n    chart: <Resources_Line_Allocation_OverTime />,\r\n    label:'Resources OverTime',\r\n    tip:'',\r\n    icon:'line'\r\n  }\r\n  \r\n]\r\n\r\nconst TableSectionWorkorders = ()=>{\r\n    return(\r\n        <>\r\n          <div className=\"TableSection\">\r\n              <div className=\"SectionHeader\">\r\n                  <h2>Resources</h2>\r\n               </div>\r\n               <TotalResourceAllocation /> \r\n               <SectionChart Charts={Charts} />   \r\n                   \r\n        </div>  \r\n        </> \r\n    )\r\n}   \r\n//import TableResourceAllocationPerResourceTotal from \"../CompareTable/TableResourceAllocationPerResourceTotal\"\r\n// <TableResourceAllocationPerResourceTotal/>\r\nexport default TableSectionWorkorders; ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Resource_Totals.js",["2489","2490","2491","2492","2493","2494"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"Context/COMPARE\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {OBJ_RESOURCES_GLOBAL, FindTotals, FindPercentageBewtweenTwoNumbers} from 'actions/CreateCompareModelView'\r\nimport { workingDaysBetweenDates} from \"actions/HandleUX\";\r\nimport {H2, H3} from \"Pages/Auth/Components/Type\"\r\n\r\n\r\nconst Resource_Totals = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const UX = useContext_UX_FULL()\r\n    const [RAW, setRAW] = useState([])\r\n    const [DAYS, setDAYS] = useState([])\r\n    const [AVG, setAVG] = useState([])\r\n   \r\n\r\n    const SetNumbers = ()=>{\r\n        let Store=[]\r\n        let AVG=[]\r\n        let Resourses = FindTotals(OBJ_RESOURCES_GLOBAL(),'Resources' )\r\n        COMPARE.CompareData.UserSelected.map((int,i)=>{ Store.push(workingDaysBetweenDates(int.DateStart,int.DateEnd)) })\r\n        Resourses.map((int,i)=>{ AVG.push((int/Store[i]).toFixed(2))})\r\n\r\n        setRAW(Resourses)\r\n        setDAYS(Store)\r\n        setAVG(AVG)\r\n    }\r\n\r\n    useEffect(()=>{ SetNumbers() },[UX])\r\n\r\n    useEffect(()=>{\r\n        //console.log(OBJ_RESOURCES_GLOBAL())\r\n    },[COMPARE])\r\n\r\n    return( \r\n        <>\r\n            <div className=\"ComparisonRow\">\r\n\r\n                <div className=\"ShowInt\"> <H2 Copy={`Resources In Model`} /></div>\r\n                    {\r\n                            RAW.map((int,i)=>{\r\n                                return(\r\n                                    <div key={i} className=\"ShowInt\">\r\n                                        {int} {FindPercentageBewtweenTwoNumbers(RAW,i)}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                    }\r\n\r\n\r\n                <div className=\"ShowInt\"> <H2 Copy={`Days In Model`} /></div>\r\n                    {\r\n                            DAYS.map((int,i)=>{\r\n                                return(\r\n                                    <div key={i} className=\"ShowInt\">\r\n                                        {int} {FindPercentageBewtweenTwoNumbers(DAYS,i)}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                    }\r\n                   \r\n                <div className=\"ShowInt\"> <H2 Copy={`AVG WO/Resource`} /></div>\r\n                    {\r\n                            AVG.map((int,i)=>{\r\n                                return(\r\n                                    <div key={i} className=\"ShowInt\">\r\n                                        {int} {FindPercentageBewtweenTwoNumbers(AVG,i)}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                    }\r\n\r\n                    <ResourceNumbers />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n \r\nexport default Resource_Totals;\r\n\r\n\r\n\r\n\r\n\r\nconst ResourceNumbers = ()=>{\r\n\r\n    const [Resources, setResources] = useState([])\r\n    const Calculate = ()=>{\r\n        let stored={ }\r\n        OBJ_RESOURCES_GLOBAL().map((model,i)=>{\r\n            model.map((res,ii)=>{\r\n                if(stored[res.name] === undefined){ stored[res.name]=[0,0] }\r\n                stored[res.name][i] = res.Resources\r\n            })\r\n        })\r\n        setResources(stored)\r\n    }\r\n\r\n    useEffect(()=>{ Calculate() },[])\r\n\r\n    return(\r\n        <>\r\n            <div className=\"FullWidth\">\r\n                <H2 Copy={`By Resource Type`} />\r\n            </div>\r\n                 {\r\n                        Object.keys(Resources).map((key,i)=>{\r\n                            //console.log(Resources[key])\r\n                          \r\n                               return  (\r\n                                   <>\r\n                                        <div className=\"ShowInt\"> <H2 Copy={key} /></div>\r\n                                        <div className=\"ShowInt\">{Resources[key][0].toFixed(2)}</div>\r\n                                        <div className=\"ShowInt\">{Resources[key][1].toFixed(2)} {FindPercentageBewtweenTwoNumbers(Resources[key],1)}</div>\r\n                                    </>\r\n                               )\r\n                        })\r\n                    }\r\n        </>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\WorkOrders_Main.js",["2495","2496","2497","2498","2499"],"import React  from 'react'\r\n\r\nimport CompareTableTotalWorkOrders from \"../CompareTable/WorkOrders_Totals\"\r\nimport SectionChart from \"Pages/Auth/Compare/Layout/SectionCharts\"\r\n\r\n// Chart\r\nimport Workorder_pie_Clients from 'Pages/Auth/SingleModelResult/Charts/Workorder_pie_Clients'\r\nimport Workorders_Radial_Workorders from 'Pages/Auth/SingleModelResult/Charts/Workorder_Radial_Workorders'\r\nimport Workorder_pie_outofscope from 'Pages/Auth/SingleModelResult/Charts/Workorder_pie_outofscope' \r\nimport Workorder_Radial_Cluster from 'Pages/Auth/SingleModelResult/Charts/Workorder_Radial_Cluster'\r\nimport WorkOrderHeatMap from   \"Pages/Auth/SingleModelResult/Maps/WorkOrder_Heatmap\";\r\nimport Workorder_Bar_Overtime from 'Pages/Auth/SingleModelResult/Charts/Workorder_Bar_Overtime'\r\nconst Charts=[\r\n  {\r\n    chart: <Workorders_Radial_Workorders />,\r\n    label:'Work Orders',\r\n    tip:'',\r\n    icon:'radial'\r\n  },{\r\n    chart: <Workorder_pie_outofscope />,\r\n    label:'Out of Scope',\r\n    tip:'',\r\n    icon:'pie'\r\n  },{\r\n    chart: <Workorder_pie_Clients />,\r\n    label:'Client Breakdown',\r\n    tip:'',\r\n    icon:'pie'\r\n  },{\r\n    chart: <Workorder_Radial_Cluster />,\r\n    label:'Cluster Breakdown',\r\n    tip:'',\r\n    icon:'radial'\r\n  },{\r\n    chart: <WorkOrderHeatMap />,\r\n    label:'Cluster HeatMap',\r\n    tip:'',\r\n    icon:'map'\r\n  },{\r\n    chart: <Workorder_Bar_Overtime />,\r\n    label:'Workorders Overtime',\r\n    tip:'',\r\n    icon:'bar'\r\n  }\r\n]\r\n\r\n\r\nconst TableSectionWorkorders = ()=>{\r\n    return(\r\n        <>\r\n        \r\n          <div className=\"TableSection\">\r\n            <div className=\"SectionHeader\"><h2>Work Orders</h2></div>\r\n                <CompareTableTotalWorkOrders /> \r\n                <SectionChart Charts={Charts} />  \r\n            </div>\r\n        </>\r\n    )\r\n}    \r\n\r\nexport default TableSectionWorkorders; ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\WorkOrders_Totals.js",["2500","2501","2502","2503","2504"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"Context/COMPARE\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {OBJ_RESOURCES_GLOBAL, FindTotals, FindPercentageBewtweenTwoNumbers, WorkorderTotals} from 'actions/CreateCompareModelView'\r\nimport {H2} from \"Pages/Auth/Components/Type\"\r\n\r\nconst WorkOrderComparison = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const UX = useContext_UX_FULL()\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n\r\n    const [InModel, setInModel] = useState([])\r\n    const [Total, setTotal] = useState([])\r\n    const [OutofScope, setOutofScope] = useState([])\r\n\r\n    const Calculate = ()=>{\r\n        let StoreInModel=[]\r\n        let StoreTotal=[]\r\n        let StoreOOS=[]\r\n        MODELS.map((model,i)=>{\r\n            StoreTotal.push(WorkorderTotals(model.STOREMARKERCENTERPOINTS,model.STORERESIDUALMARKERS).reduce((a, b) => a + b, 0))\r\n            StoreInModel.push(WorkorderTotals(model.STOREMARKERCENTERPOINTS,model.STORERESIDUALMARKERS)[0])\r\n            StoreOOS.push(WorkorderTotals(model.STOREMARKERCENTERPOINTS,model.STORERESIDUALMARKERS)[1])\r\n            console.log(WorkorderTotals(model.STOREMARKERCENTERPOINTS,model.STORERESIDUALMARKERS))\r\n        })\r\n\r\n       \r\n        setTotal(StoreTotal)\r\n        setInModel(StoreInModel)\r\n        setOutofScope(StoreOOS)\r\n    } \r\n\r\n\r\n    useEffect(()=>{\r\n        Calculate() \r\n       //console.log(MODELS)\r\n       //console.log(WorkorderTotals(MODELS[0].STOREMARKERCENTERPOINTS,MODELS[0].STORERESIDUALMARKERS))\r\n     },[COMPARE, UX])\r\n\r\n    const [RAW, setRAW] = useState([])\r\n\r\n    useEffect(()=>{  setRAW(FindTotals(OBJ_RESOURCES_GLOBAL(),'Work Orders' )) },[])\r\n\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n            <div className=\"ShowInt\"> <H2 Copy={`Work Order covered in Model`} /></div>\r\n                {\r\n                    InModel.map((int,i)=>{\r\n                        return(\r\n                            <div key={i} className=\"ShowInt\">\r\n                                {int}  {FindPercentageBewtweenTwoNumbers(InModel,i)}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            <div className=\"ShowInt\"> <H2 Copy={`Work Order Out of Scope`} /></div>\r\n         \r\n                {\r\n                    OutofScope.map((int,i)=>{\r\n                        return(\r\n                            <div key={i} className=\"ShowInt\">\r\n                                {int}  {FindPercentageBewtweenTwoNumbers(OutofScope,i)}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            <div className=\"ShowInt\"> <H2 Copy={`Total Work Orders`} /></div>\r\n            \r\n                {\r\n                    Total.map((int,i)=>{\r\n                        return(\r\n                            <div key={i} className=\"ShowInt\">\r\n                                {int}  {FindPercentageBewtweenTwoNumbers(Total,i)}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n    \r\n                <WorkOrderNumbers />\r\n            </div>\r\n    )\r\n}  \r\nexport default WorkOrderComparison;\r\n\r\n\r\nconst WorkOrderNumbers = ()=>{\r\n\r\n    const [Workorders, setWorkorders] = useState([])\r\n   \r\n    const Calculate = ()=>{\r\n        let stored={}\r\n\r\n        OBJ_RESOURCES_GLOBAL().map((model,i)=>{\r\n            model.map((res,ii)=>{\r\n                if(stored[res.name] === undefined){ stored[res.name]=[0,0] }\r\n                stored[res.name][i] = res['Work Orders']\r\n            })\r\n        })\r\n    \r\n        setWorkorders(stored)\r\n    }\r\n\r\n    useEffect(()=>{ Calculate() },[])\r\n\r\n    return(\r\n        <>\r\n            <div className=\"FullWidth\">\r\n                <H2 Copy={`By Resource Type`} />\r\n            </div>\r\n        \r\n                 {\r\n                        Object.keys(Workorders).map((key,i)=>{\r\n                           \r\n                               return  (\r\n                                   <>\r\n                                        <div className=\"ShowInt\"> <H2 Copy={key} /></div>\r\n                                        <div className=\"ShowInt\">{Workorders[key][0]}</div>\r\n                                        <div className=\"ShowInt\">\r\n                                                {Workorders[key][1]} {FindPercentageBewtweenTwoNumbers(Workorders[key],1)}\r\n                                        </div>\r\n                                    </>\r\n                               )\r\n                        })\r\n                    }\r\n        </>\r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\TableTradeTypes.js",["2505"],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Clients_Main.js",["2506","2507","2508","2509","2510"],"import React  from 'react'\r\n\r\nimport SectionChart from \"Pages/Auth/Compare/Layout/SectionCharts\"\r\n// Chart\r\nimport Client_Pie_Resources from 'Pages/Auth/SingleModelResult/Charts/Client_Pie_Resources'\r\nimport Client_Pie_Sites from 'Pages/Auth/SingleModelResult/Charts/Client_Pie_Sites'\r\nimport Client_Pie_WorkOrders from 'Pages/Auth/SingleModelResult/Charts/Client_Pie_WorkOrders'\r\nimport Client_Line_Workorders from 'Pages/Auth/SingleModelResult/Charts/Client_line_WorkordersOvertime'\r\nimport Client_line_ResourcesOvertime from 'Pages/Auth/SingleModelResult/Charts/Client_line_ResourcesOvertime'\r\nconst Charts=[\r\n {\r\n    chart: <Client_Pie_Sites />,\r\n    label:'Locations Split',\r\n    tip:'',\r\n    icon:'pie'\r\n  },{\r\n    chart: <Client_Pie_WorkOrders />,\r\n    label:'WorkOrder Split',\r\n    tip:'',\r\n    icon:'pie'\r\n  },{\r\n    chart: <Client_Line_Workorders />,\r\n    label:'WO/s Overtime',\r\n    tip:'',\r\n    icon:'line'\r\n  },{\r\n    chart: <Client_Pie_Resources />,\r\n    label:'Resource Split',\r\n    tip:'',\r\n    icon:'pie'\r\n  },{\r\n    chart: <Client_line_ResourcesOvertime />,\r\n    label:'Resources Overtime',\r\n    tip:'',\r\n    icon:'line'\r\n  }\r\n]\r\nconst Clients_Main = ()=>{\r\n    return(\r\n        <>\r\n            <div className=\"TableSection\">\r\n                <div className=\"SectionHeader\">\r\n                    <h2>Clients</h2>\r\n                </div>\r\n                <SectionChart Charts={Charts} />  \r\n            </div>  \r\n        </> \r\n    ) \r\n}   \r\n\r\nexport default Clients_Main;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\SectionCharts.js",["2511","2512","2513"],"import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// Context\r\nimport {useContext_COMPARE_FULL} from \"Context/COMPARE\";\r\n\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport{FetchSingleScanResult} from \"actions/authUser\"\r\nimport {SetFilterModel, ChartIcon} from \"actions/HandleUX\";\r\n\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n// Select Inpout\r\nimport ModelSelect from 'Pages/Auth/Components/selects/SelectCompareModel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst SectionCharts = (props)=>{\r\n    const {Charts} = props\r\n    const SCAN = useContext_SCAN_FULL()\r\n    const MODEL = useContext_COMPARE_FULL()\r\n    const [Selected, setSelected] = useState(0)\r\n\r\n\r\n    const handleClick=(i)=>{\r\n        setSelected(i)\r\n    }\r\n    useEffect(()=>{\r\n\r\n        if(SCAN.SelectedModel === null){\r\n            FetchSingleScanResult(MODEL.CompareData.UserSelected[0].id, MODEL.CompareData.UserSelected[0])\r\n            SetFilterModel(MODEL.CompareData.UserSelected[0].id)\r\n        }\r\n    },[])\r\n\r\n    return( \r\n        <DiagramContainer>\r\n           <div className=\"SectionChart\">\r\n\r\n                <div className=\"Options\">\r\n                     \r\n                    <ul className=\"SelectAChart\">\r\n                        {\r\n                            Charts.map((chart,i)=>{\r\n                                \r\n                                return(\r\n                                    <li onClick={()=>{handleClick(i)}} className={Selected===i ?'selected':'notselected'} key={i}>\r\n                                            <Tooltip title={chart.tip}>\r\n                                                {ChartIcon(chart.icon)} \r\n                                            </Tooltip>\r\n                                            <h3>{chart.label}</h3>\r\n                                    </li>\r\n                                )\r\n                            }) \r\n                        }\r\n                    </ul>\r\n                  \r\n                </div>\r\n\r\n                <div>\r\n                        {\r\n                            SCAN.SelectedModel !== null ?  Charts[Selected].chart : false\r\n                        }\r\n                </div>\r\n            </div>\r\n        </DiagramContainer>\r\n    )\r\n}\r\n\r\nexport default SectionCharts;\r\n//  <ModelSelect />","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompareModel.js",["2514","2515","2516","2517"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n// Context\r\nimport {useContext_COMPARE_FULL} from \"Context/COMPARE\";\r\n\r\nimport {SetFilterModel} from \"actions/HandleUX\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n//import{FetchSingleScanResult} from \"actions/authUser\"\r\nimport {SelectSingleScanResult} from \"actions/HandleCompare\";\r\n\r\nimport {find, findIndex} from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  /* ************************************************** */\r\nconst ByComparabelModel = ()=>{\r\n\r\n    const MODEL = useContext_COMPARE_FULL().CompareData\r\n    const UX = useContext_UX_FULL()\r\n    \r\n    const [type,setType] = useState(UX.AreaSelectFilter.ByModel) \r\n    const [OPTIONS, setOPTIONS] = useState([])\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    const handleChange = (event) => { \r\n        //console.log(event.target.value)\r\n\r\n        let SelectedIndex = findIndex(MODEL.UserSelected, function(o) { return o.Name == event.target.value; })\r\n  \r\n\r\n\r\n        SelectSingleScanResult(MODEL.UserSelected[SelectedIndex], MODEL.FetchedModels[SelectedIndex])\r\n        SetFilterModel(event.target.value)\r\n        setType(event.target.value) \r\n    };\r\n \r\n\r\n    const CreateOptions=()=>{\r\n        let options=[]\r\n        MODEL.UserSelected.map((model,i)=>{ options.push(model.Name) })\r\n        setOPTIONS(options)\r\n    }\r\n \r\n    useEffect(()=>{ setType(UX.AreaSelectFilter.ByModel) },[UX])\r\n\r\n    useEffect(()=>{ \r\n        CreateOptions()\r\n    },[])\r\n\r\n  \r\n    return(\r\n        <FormControl variant=\"outlined\" className={`${classes.formControl} Map_Filters`}>\r\n        <InputLabel id=\"ByTier\">Select Model</InputLabel>\r\n             <Select\r\n                labelId=\"ByTier\"\r\n                id=\"ByTier-outlined\"\r\n                value={type}\r\n                onChange={handleChange}\r\n                label=\"Select Client\" \r\n            >\r\n            \r\n                {\r\n                   OPTIONS.map((model,i)=>{\r\n                        return(\r\n                            <MenuItem  key={i}  value={model}>{model}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ByComparabelModel;\r\n/*\r\n findClientName()\r\n*/","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Location_Radial_Clusters.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Location_Pie_OutofScope.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Clusters_Pie_ClusterNumbers.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Clusters_SwarmPlot_Numbers.js",["2518"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport NivoSwarmPlot from \"venders/Nivo/NivoSwarmPlot\"\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n\r\nconst Chart1={\r\n    Header:\"Resource Allocation by Cluster Type\",\r\n    Tip:\"Use the Filters\",\r\n    Icon:'radial',\r\n    filters:[''],\r\n    Copy:\"Chart shows the Rescourse Allocation by the specific cluster types. Use the 'Resource Type' Filter to view a specific resource break down per Cluster Type\"\r\n}\r\n\r\nconst ClusterSwarmPlot = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const MODEL = useContext_SCAN_FULL()\r\n\r\n    useEffect(()=>{},[UX,MODEL]);\r\n    return(\r\n        <>\r\n            <ChartHeader  {...Chart1}/>\r\n            <div style={{height: 400}}>\r\n                <NivoSwarmPlot data={MODEL.SelectedModel.STOREMARKERCENTERPOINTS} Group={`scanCategory`} value={'Work Orders'} Volume={`StripedSites`} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClusterSwarmPlot;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cluster_Bar_ResourceAllocation.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cluster_Bar_Workorders.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resource_Radial_Resources.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Pie_ResourceAllocation.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Trade_Heatmap.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Location_Heatmap.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Pie_ClientsBreakdown.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Cluster_Funnel.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Line_Allocation_OverTime.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Radial_Workorders.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_pie_outofscope.js",["2519"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {OBJ_RESOURCES_GLOBAL, WorkorderTotals} from \"actions/CreateSingleViewModel\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n\r\n// Nivo \r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={\r\n    Icon:'radial',\r\n    Header:\"Work Orders Spread over Resource Type\",\r\n    Tip:\"Use the Filters\",\r\n    filters:[''],\r\n    Copy:\"The Radial Graph shows the Work Order Spread over specific Resource Types. Use the 'Cluster Type' filter to find Work Order numbers for a specific resource.\"\r\n}\r\n\r\n\r\nconst Workorder_pie_outofscope=()=>{\r\n\r\n    const MODEL = useContext_SCAN_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const [PieData, setPieData] = useState([])\r\n  \r\n  \r\n    useEffect(()=>{ \r\n        setPieData([{ name: 'Work Orders In Scope',value: WorkorderTotals()[0]}, { name: 'Work Orders Out of Scope', value:WorkorderTotals()[1] }])\r\n    },[UX,MODEL]) \r\n    \r\n    return(\r\n        <div>\r\n            <ChartHeader  {...Chart1}/>                       \r\n            <div style={{height: 300}}>\r\n                <NivoPie data={PieData} id={`name`} value={'value'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Workorder_pie_outofscope;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_pie_Clients.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Radial_Cluster.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\WorkOrder_Heatmap.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Bar_Overtime.js",["2520"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n// Actions\r\nimport {CreateOBJ_WO_Overtime} from \"actions/CreateSingleViewModel\"\r\nimport {colorArray} from \"actions/HandleUX\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n\r\nimport {orderBy} from 'lodash'\r\n\r\nimport {\r\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n  } from 'recharts';\r\n\r\nconst Chart1={\r\n    Icon:'bar',\r\n    Header:\"Workorders\",\r\n    Tip:\"Use the Filters\",\r\n    filters:['cluster','resource'],\r\n    Copy:`The Bar Graph shows the number of Work Orders over the time period of the Model. \r\n        Use the 'Cluster Type' and 'Resource type' filters to filter the chart to a specific Recourse or cluster type`\r\n}\r\n\r\n\r\nconst Workorder_Bar_Overtime=()=>{\r\n \r\n    const UX = useContext_UX_FULL();\r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n    useEffect(()=>{  setCategoryOccurance(CreateOBJ_WO_Overtime())   },[UX,MODEL]) \r\n    useEffect(()=>{},[CategoryOccurance])\r\n\r\n    return(\r\n        <div>\r\n                    <ChartHeader  {...Chart1}/>\r\n                \r\n                    <div style={{ width: '100%', height: 400 }}>\r\n                        <ResponsiveContainer>\r\n                            <BarChart\r\n                                data={orderBy(CategoryOccurance,'UnixDate')}\r\n                                margin={{\r\n                                top: 5, right: 0, left: 0, bottom: 5,\r\n                                }}\r\n                            >\r\n                                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis />\r\n                                <Tooltip />\r\n                                <Legend />              \r\n                                    <Bar dataKey={'Work Orders'} fill={colorArray[0]} />\r\n                                 \r\n                            \r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\nexport default Workorder_Bar_Overtime;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_Resources.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_Sites.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_WorkOrders.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_line_WorkordersOvertime.js",["2521","2522","2523","2524","2525"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {CreateOBJ_Client_WO_Overtime} from \"actions/CreateSingleViewModel\"\r\nimport {colorArray} from \"actions/HandleUX\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport {orderBy} from 'lodash'\r\n\r\nimport {\r\n    ComposedChart, Line, Area, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n  } from 'recharts';\r\n\r\n\r\nconst Chart1={\r\n    Icon:'bar',\r\n    Header:\"Client work orders over time\",\r\n    Tip:\"Use the Filters\",\r\n    filters:['cluster','resource',],\r\n    Copy:`This Composition chart shows the selected clients work order distribution over time against the total work orders in the Model\r\n            Use the filters to dive deeper into a resource or cluster type`\r\n}\r\n\r\n\r\nconst Client_Line_Workorders=()=>{\r\n\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n\r\n    const str='WorkOrder_Count_'\r\n    const FindLabels = ()=>{\r\n        let Labels=[]  \r\n\r\n        CategoryOccurance.map((item,i)=>{\r\n            Object.keys(item).map((key,ii)=>{  \r\n                if(key.includes(str)){\r\n                    if(Labels.indexOf(key.replace(str,'')) === -1){\r\n                        Labels.push(key.replace(str,''))\r\n                    } \r\n                }\r\n            }) \r\n         })\r\n         return Labels;\r\n    }\r\n\r\n    useEffect(()=>{          \r\n        setCategoryOccurance(CreateOBJ_Client_WO_Overtime())   \r\n    },[UX,MODEL]) \r\n    \r\n    useEffect(()=>{},[CategoryOccurance])\r\n\r\n    return(\r\n        <div>\r\n            <ChartHeader  {...Chart1}/>\r\n\r\n            <div style={{ width: '100%', height: 400 }}>\r\n                <ResponsiveContainer>\r\n                    <ComposedChart\r\n                        data={orderBy(CategoryOccurance,'UnixDate')}\r\n                        margin={{\r\n                        top: 5, right: 0, left: 0, bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                            <Bar dataKey={'Work Orders'} opacity={0.3} fill={colorArray[3]} />\r\n                            {\r\n                                FindLabels().map((label,i)=>{\r\n                                    return(\r\n                                        <Line type=\"monotone\" name={`${label}`} dataKey={`${str}${label}`} stroke={colorArray[i]} />\r\n                                    )\r\n                                })\r\n                            }\r\n                    </ComposedChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Client_Line_Workorders;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_line_ResourcesOvertime.js",["2526","2527","2528","2529","2530","2531"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {CreateOBJ_Client_WO_Overtime} from \"actions/CreateSingleViewModel\"\r\nimport {colorArray} from \"actions/HandleUX\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport {orderBy} from 'lodash'\r\n\r\nimport {\r\n    ComposedChart, Line, Area, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n  } from 'recharts';\r\n\r\n\r\nconst Chart1={\r\n    Icon:'bar',\r\n    Header:\"Clients Resource Allocation over time\",\r\n    Tip:\"Use the Filters\",\r\n    filters:['cluster','resource',],\r\n    Copy:`This Composition chart shows the selected clients Resource Allocation over time against the total Resource Allocation in the Model\r\n            Use the filters to dive deeper into a resource or cluster type`\r\n}\r\n\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n\r\n    const Ignore=['UnixDate','name','Resource Allocation']\r\n    const str='Resource_Count_'\r\n    const FindLabels = ()=>{\r\n        let Labels=[]  \r\n        CategoryOccurance.map((item,i)=>{\r\n            //console.log(item, 'name')\r\n              \r\n            Object.keys(item).map((key,ii)=>{\r\n                if(key.includes(str)){\r\n                    if(Labels.indexOf(key.replace(str,'')) === -1){\r\n                        Labels.push(key.replace(str,''))\r\n                    } \r\n                }\r\n                })\r\n         })\r\n\r\n         return Labels;\r\n    }\r\n\r\n    useEffect(()=>{ setCategoryOccurance(CreateOBJ_Client_WO_Overtime())},[UX,MODEL]) \r\n    useEffect(()=>{\r\n     \r\n     },[CategoryOccurance])\r\n\r\n    return(\r\n        <div>\r\n               <ChartHeader  {...Chart1}/>\r\n \r\n                <div style={{ width: '100%', height: 400 }}>\r\n                    <ResponsiveContainer>\r\n                        <ComposedChart\r\n                            data={orderBy(CategoryOccurance,'UnixDate')}\r\n                            margin={{\r\n                            top: 5, right: 0, left: 0, bottom: 5,\r\n                            }}\r\n                        >\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"name\" />\r\n                            <YAxis />\r\n                            <Tooltip />\r\n                            <Legend />\r\n                                <Bar dataKey={`Resource Allocation`} opacity={0.3} fill={colorArray[3]} />\r\n                                {\r\n                                    FindLabels().map((label,i)=>{\r\n                                        return(\r\n                                            <Line type=\"monotone\" name={`${label}`} dataKey={`${str}${label}`} stroke={colorArray[i]} />\r\n                                        )\r\n                                    })\r\n                                }\r\n                        </ComposedChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Trade_Radial_Charts;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\CompareGlobalFilter.js",["2532","2533"],"import React from 'react';\r\n\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {P} from \"Pages/Auth/Components/Type\";\r\n\r\n// Filter\r\nimport FilterByResourceType from \"Pages/Auth/Components/selects/SelectResourceType\";\r\nimport FilterByClusterType from \"Pages/Auth/Components/selects/SelectClusterType\";\r\nimport SelectCompareModel from \"Pages/Auth/Components/selects/SelectCompareModel\";\r\nconst GlobalFilter = ()=>{\r\n\r\n    return(\r\n        <>\r\n            \r\n            <div className=\"GlobalFilter\">\r\n                <div className=\"options\">\r\n                    <SelectCompareModel />\r\n                    <FilterByResourceType /> \r\n                    <FilterByClusterType />\r\n                </div>\r\n            </div>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default GlobalFilter;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByMarkerType.js",["2534","2535"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport { SetFilterMarkerType } from \"actions/HandleUX\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {find} from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nconst ByCapitalCities = ()=>{\r\n    const UX = useContext_UX_FULL()\r\n    const MarkerTypes=['Show All', 'Center Points Only']\r\n\r\n    const classes = useStyles();\r\n    const [Selected, setMarkerType] = useState(UX.AreaSelectFilter.ByMarkerType);\r\n  \r\n    const handleChange = (event) => { \r\n        SetFilterMarkerType(event.target.value); \r\n        setMarkerType(event.target.value)\r\n    };\r\n \r\n\r\n    return(\r\n       <FormControl variant=\"outlined\" className={`${classes.formControl} Map_Filters`}>\r\n        <InputLabel id=\"MarkerType\">Marker Type</InputLabel>\r\n             <Select\r\n                labelId=\"Marker Type\"\r\n                id=\"MarkerType-outlined\"\r\n                value={Selected}\r\n                onChange={handleChange}\r\n                label=\"Select Marker Type\"\r\n                >\r\n          <MenuItem value=\"\"> <em>Select</em> </MenuItem>\r\n\r\n          {\r\n              MarkerTypes.map((marker,i)=>{\r\n                  return(\r\n                    <MenuItem key={i} value={marker}>{marker}</MenuItem>\r\n                  )\r\n              })\r\n          }\r\n\r\n        </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ByCapitalCities;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clusters_List.js",["2536"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {OBJ_CENTERPOINTS} from 'actions/CreateSingleViewModel';\r\nimport {RegionColor, SetFilterPolygon,SetSelectedCluster,setMainMapLocation} from \"actions/HandleUX\";\r\nimport {H2} from \"Pages/Auth/Components/Type\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {orderBy} from 'lodash'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nconst ClusterList = ()=>{\r\n   // const SCAN = useContext_SCAN_FULL();\r\n\r\n   const [ReorderBy, setReorderBy] = useState('type')\r\n   const Pushhistory = useHistory();\r\n   useEffect(()=>{\r\n        //console.log(OBJ_CENTERPOINTS())\r\n    },[ReorderBy])\r\n\r\n    const handleSelect=(centerpoint)=>{\r\n     \r\n        SetFilterPolygon(centerpoint.name)\r\n        SetSelectedCluster(centerpoint.model)\r\n        setMainMapLocation( {Center:centerpoint.model.center, Zoom:14,Name:centerpoint.name} )\r\n        Pushhistory.push(\"/results/map\");\r\n    }\r\n\r\n    const handleReorder=(item)=>{\r\n        setReorderBy(item)\r\n    }\r\n\r\n\r\n    const arrow=(item)=>{\r\n        if(item === ReorderBy){\r\n            return <ArrowDropDownIcon />\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n         <H2 Copy={`Cluster Breakdown`}/>\r\n        <DiagramContainer>\r\n        \r\n        <ul className=\"clusterList\">\r\n            <li className=\"Header\">\r\n                <div>Cluster Name</div>\r\n                <div className=\"sortable\" onClick={()=>{handleReorder('type')}} >Cluster Type {arrow('type')} </div>\r\n                <div className=\"sortable\" onClick={()=>{handleReorder('sites')}} >Sites {arrow('sites')}</div>\r\n                <div  className=\"sortable\" onClick={()=>{handleReorder('clients')}} >Clients {arrow('clients')}</div>\r\n                <div>Trades</div>\r\n                <div className=\"sortable\" onClick={()=>{handleReorder('resourceQuotaTotal')}} >Resources {arrow('resourceQuotaTotal')}</div>\r\n                <div></div>\r\n            </li>\r\n\r\n            {\r\n                //orderBy(OBJ_CENTERPOINTS(), ['resourceQuotaTotal', 'type'], ['asc', 'desc'])\r\n                orderBy(OBJ_CENTERPOINTS(), [ReorderBy], ['desc','asc']).map((center,i)=>{\r\n                    return(\r\n                        <li key={i}>\r\n                           <div>{ center.name }</div>\r\n                           <div style={{color: RegionColor(center.type)}}>{ center.type }</div>\r\n                           <div >{ center.sites }</div>\r\n                           <div>{ center.clients }</div>\r\n\r\n                           <div>\r\n                               { \r\n                               center.resourceQuota.map((type,i)=>{\r\n                                return(<span>{type.Trade}</span>)\r\n                                }) \r\n                               }\r\n                            </div>\r\n\r\n                            <div>{center.resourceQuotaTotal.toFixed(2)}</div>\r\n                            \r\n                            <div>\r\n                                <IconButton aria-label=\"refresh\" onClick={()=>{handleSelect(center)}}>\r\n                                    <VisibilityIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n        </DiagramContainer>\r\n        </>\r\n    )\r\n}\r\nexport default ClusterList;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\Select_CreateModelFilter.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\ModelMeta.js",["2537"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { HandleTZDate, workingDaysBetweenDates, getDate,monthDiff} from \"actions/HandleUX\";\r\n\r\n// Filter\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/ReviewGlobalFilter\";\r\n\r\n\r\nconst HeaderTitle = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const SCANMODELMETA = SCAN.SelectedModelMeta\r\n    const [startDate, setStartDate] = useState()\r\n    const [endDate, setEndDate] = useState()\r\n    const [WorkingDays, setWorkingDays] = useState(0) \r\n                 \r\n    useEffect(()=>{\r\n        \r\n        monthDiff(new Date(SCAN.SelectedModelMeta.DateStart * 1000),new Date(SCAN.SelectedModelMeta.DateEnd * 1000))\r\n\r\n        setStartDate(getDate(SCAN.SelectedModelMeta.DateStart))\r\n        setEndDate(getDate(SCAN.SelectedModelMeta.DateEnd))\r\n        setWorkingDays(workingDaysBetweenDates(SCAN.SelectedModelMeta.DateStart,SCAN.SelectedModelMeta.DateEnd))\r\n\r\n    },[SCAN])\r\n    return(\r\n        <>\r\n            <div className=\"ModelSingleHeader\">\r\n                <h3>{SCANMODELMETA.Name}</h3>\r\n                <h4>Date Range : {startDate}  - {endDate }</h4>\r\n                <h4>Working Days Counted : {WorkingDays}</h4>\r\n                <h4>Months in Model : {monthDiff(new Date(SCAN.SelectedModelMeta.DateStart * 1000),new Date(SCAN.SelectedModelMeta.DateEnd * 1000))}</h4>\r\n                <div className=\"created\"><p>Created : {HandleTZDate(SCANMODELMETA.createdAt)}</p></div>\r\n            </div> \r\n          \r\n        </>\r\n    )\r\n}\r\n//   \r\nexport default HeaderTitle;\r\n\r\n//  <GlobalFilter />","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ReleaseNotes.js",["2538","2539","2540"],"import React from 'react';\r\n\r\n\r\n\r\n// Type\r\nimport {H1, H2, H3,H4, P, S} from \"Pages/Auth/Components/Type\"\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\n\r\n\r\nconst Notes = [{\r\n    Title:\"Notes\",\r\n    Release:\"14\",\r\n    Description:\"Description\",\r\n    Date:\"1/1/21\"\r\n}]\r\n\r\nconst ReleaseNotes = ()=>{\r\n    return(\r\n        <div className=\"OuterContainer\">\r\n            <div className=\"InnerFrame\">\r\n                    <H2 Copy={`AnalytiQ Release Notes`}/>\r\n\r\n                    {\r\n                        Notes.map((note,i)=>{\r\n                            return(\r\n                                <Section key={i}>\r\n                                        <H3 Copy={note.Title} />\r\n                                        <P Copy={note.Description}/>\r\n                                        <P Copy={note.Date}/>\r\n                                </Section>\r\n                            )\r\n                        })\r\n                    }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReleaseNotes;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Pipeline.js",["2541","2542"],"import React from 'react';\r\n\r\n\r\n\r\n// Type\r\nimport {H1, H2, H3,H4, P, S} from \"Pages/Auth/Components/Type\"\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\n\r\n\r\nconst Pipe=[\r\n    {\r\n        title:\"Public\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n        \r\n    },{\r\n        title:\"User Account\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"General\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"Create Model\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"View Model\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"Compare Models\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"Compare Models\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    }\r\n]\r\n\r\n\r\nconst Pipeline = ()=>{\r\n    return(\r\n        <div className=\"OuterContainer\">\r\n            <div className=\"InnerFrame\">\r\n                    <H2 Copy={`Front End Pipeline`}/>\r\n                    <Section>\r\n                        <H3 Copy={`Build : Dolores`} />\r\n                        <H3 Copy={`Phase : One`} />\r\n                        <H3 Copy={`Current Build : Alpha 14`} />\r\n                        <ul>\r\n                            {\r\n                                Pipe.map((item,i)=>{\r\n                                    return(\r\n                                        <li key={i}>\r\n                                            <H4 Copy={item.title} />\r\n                                            <P Copy={item.Description} />\r\n                                            <ul>\r\n                                            {\r\n                                                item.line.map((line,i)=>{\r\n                                                    return(\r\n                                                        <li key={i}>\r\n                                                              <H4 Copy={ line.item } />\r\n                                                              <P Copy={line.brief} />\r\n                                                              <P Copy={`priority : ${line.priority}`} />\r\n                                                              <P Copy={`eta : ${line.eta}`} />\r\n                                                        </li>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            </ul>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </Section>\r\n                    \r\n                    <H2 Copy={`Back End Pipeline`}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pipeline;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMMUNICATION.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMMS.js",["2543"],"import React ,  { createContext, useContext, useMemo }from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n\r\nReducer State\r\n\r\n\r\n*/\r\n// Create Draft Context for provider\r\n\r\nexport const Context_COMMS_FULL = createContext()\r\n\r\n// Custom Hooks\r\n\r\nexport const useContext_COMMS_FULL = ()=>{\r\n    return useContext(Context_COMMS_FULL)\r\n}\r\n\r\n \r\nexport const COMMSContextProvider = ({children})=>{\r\n    const COMMS = useSelector(state => state.COMMS );\r\n\r\n    useMemo(()=>{  },[COMMS]) \r\n\r\n    return(\r\n            <Context_COMMS_FULL.Provider value={COMMS}>\r\n                {children}            \r\n            </Context_COMMS_FULL.Provider>     \r\n    )\r\n}","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoNetwork.js",["2544","2545","2546"],"import React, { useEffect }  from 'react'\r\nimport { ResponsiveNetwork } from '@nivo/network'\r\n\r\nimport { NivoNetwork } from 'actions/CreateSingleViewModel';\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\n\r\nconst NivoPie=()=>{\r\n   \r\n    \r\n    useEffect(()=>{\r\n           //console.log(NivoNetwork())\r\n    },[NivoNetwork()])\r\n\r\n    return(\r\n        <ResponsiveNetwork\r\n            nodes={NivoNetwork().node}\r\n            links={NivoNetwork().links}\r\n            margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\r\n            repulsivity={70}\r\n            iterations={90}\r\n            distanceMax={70}\r\n       \r\n            nodeColor={function(e){return e.color}}\r\n            nodeBorderWidth={1}\r\n            nodeBorderColor={{ from: 'color', modifiers: [ [ 'darker', 0.8 ] ] }}\r\n            linkThickness={function(e){return 2*(2-e.source.depth)}}\r\n            linkDistance={10}\r\n            motionStiffness={90}\r\n            motionDamping={10}\r\n            />\r\n    )\r\n}\r\n\r\nexport default NivoPie;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Network.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CostsandPricings.js",["2547","2548","2549"],"// Private Functions\r\nimport store from \"../store/index\"\r\nimport { workingDaysBetweenDates,numberWithCommas} from \"actions/HandleUX\";\r\nimport {WorkorderTotals, OBJ_SITE_GLOBAL,OBJ_RESOURCES_GLOBAL} from \"actions/CreateSingleViewModel\"\r\nimport { findIndex,sumBy} from 'lodash'; \r\n\r\n\r\n/* ********************************************************************************* */\r\n// Costs and Pricings\r\n/* ********************************************************************************* */\r\n\r\nexport function SingleRecourseCostOverModel(){\r\n  \r\n    const MODEL = store.getState().SCANSTATE\r\n    const WorkingDays = workingDaysBetweenDates(MODEL.SelectedModelMeta.DateStart,MODEL.SelectedModelMeta.DateEnd)\r\n  \r\n    const CostPerHour = 50;\r\n    const HourPerDay = 8;\r\n    //console.log((WorkingDays*HourPerDay)*CostPerHour)\r\n    return (WorkingDays*HourPerDay)*CostPerHour;\r\n  \r\n  }\r\n  \r\n\r\n  export function CostPerWorkOrder(){\r\n    const TotalResources = parseFloat(sumBy(OBJ_SITE_GLOBAL(), function(o) { return o['Resources']; }).toFixed(2));\r\n    const TotalWorkorders = parseFloat(WorkorderTotals()[0].toFixed(2));\r\n    const SingleRecourseCost = SingleRecourseCostOverModel()\r\n    //console.log(TotalResources, TotalWorkorders,SingleRecourseCost )\r\n\r\n        return (( TotalResources*SingleRecourseCost ) / TotalWorkorders).toFixed(2)\r\n  }\r\n\r\n\r\n\r\n\r\n  ","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_CostAnalysis.js",["2550","2551","2552","2553"],"import React  from 'react'\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H2,P} from \"Pages/Auth/Components/Type\";\r\n\r\nimport Cost_Resources from \"Pages/Auth/SingleModelResult/components/Cost_Resources\";\r\nimport Cost_Resource_PieCharts from \"Pages/Auth/SingleModelResult/components/Cost_Resource_PieCharts\";\r\nimport Cost_Resource_OverTime from \"Pages/Auth/SingleModelResult/components/Cost_Resource_OverTime\";\r\nimport Cost_Trade_Heatmap from \"../Maps/Cost_Trade_Heatmap\";\r\n\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/ReviewGlobalFilter\";\r\nimport ModelMeta from \"Pages/Auth/SingleModelResult/Layout/ModelMeta\";\r\nimport AppBar from \"Pages/Auth/SingleModelResult/Layout/AppBar\"\r\n\r\nconst SubSection_Workorders = ()=>{\r\n\r\n    return(\r\n        <>\r\n            <div className=\"InnerFrame\">\r\n            <H2 Copy={`Cost Analysis`} />\r\n            <P Copy={`For Development Purposes ONLY!!! `}/>\r\n            <P Copy={`The Figures in the follow section are not based on real world figures.`}/>\r\n            \r\n\r\n            <Section>\r\n                <Cost_Resources />\r\n                 <Cost_Resource_PieCharts />\r\n                 <Cost_Resource_OverTime />\r\n                 <Cost_Trade_Heatmap />\r\n                \r\n                \r\n                    MORE TO COME... \r\n            </Section>  \r\n            </div>\r\n            <AppBar />\r\n            <div className=\"SideBarRight\"> \r\n                <ModelMeta />\r\n                <GlobalFilter />\r\n            </div>\r\n        </>\r\n    )  \r\n}\r\n/*\r\n\r\n         individual trade\r\n                \r\n                Location\r\n                bar Chart\r\n\r\n                Client\r\n                break down\r\n                pie\r\n                individual client   \r\n*/\r\nexport default SubSection_Workorders;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Cost_Resources.js",["2554","2555","2556","2557"],"import React,{useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport { workingDaysBetweenDates,numberWithCommas} from \"actions/HandleUX\";\r\nimport {SingleRecourseCostOverModel, CostPerWorkOrder} from 'actions/CostsandPricings';\r\n// Actions\r\nimport {WorkorderTotals, OBJ_SITE_GLOBAL,OBJ_RESOURCES_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n\r\n// Template\r\nimport {H4,H3, P,S} from \"Pages/Auth/Components/Type\";\r\n\r\nimport {sumBy} from 'lodash'\r\n\r\nconst ResourceAllocationRatios = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n   // const SCAN = useContext_SCAN_FULL();\r\n    //const [WorkingDays, setWorkingDays] = useState(0)\r\n    const [ResourceSum, setResourceSum] = useState(0)\r\n    \r\n\r\n    const RecourseCost= SingleRecourseCostOverModel()    \r\n    const [CostperWO, setCost]= useState(0)\r\n    \r\n\r\n    useEffect(()=>{\r\n\r\n       //console.log(`Singler Resource Cost over the Model ${SingleRecourseCostOverModel()}`)\r\n       //console.log(OBJ_RESOURCES_GLOBAL(['ByClusterType','ByClient']))\r\n        setResourceSum(sumBy(OBJ_SITE_GLOBAL(), function(o) { return o['Resources']; }).toFixed(2))\r\n        \r\n    },[UX]) \r\n\r\n    useEffect(()=>{  setCost(CostPerWorkOrder()) },[ResourceSum]) \r\n   \r\n    return(\r\n        <>  \r\n       \r\n            <H3 Copy={`Resource Costs`} />\r\n            <ul className=\"Pod_List\">\r\n\r\n                <li className=\"Pod\">\r\n                    <div className=\"Data\"><P Copy={`$${numberWithCommas(SingleRecourseCostOverModel())}`}/></div>\r\n                    <div className=\"Title\"><H4 Copy={`1x Resource cost (Model)`}/></div>\r\n                    <div className=\"Title\"><S Copy={`(Days in Model * Hours) * Price Per Hour`}/></div>\r\n                </li> \r\n\r\n                \r\n                <li className=\"Pod\">\r\n                    <div className=\"Data\"><P Copy={`$${numberWithCommas((CostperWO*ResourceSum).toFixed(2))}`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Total Resource Cost`}/></div>\r\n                    <div className=\"Title\"><S Copy={`(Cost per WO * Resources)`}/></div>\r\n                </li> \r\n\r\n                <li className=\"Pod\">\r\n                    <div className=\"Data\"><P Copy={`$${numberWithCommas(CostperWO)}`}/></div>\r\n                    <div className=\"Title\"> <H4 Copy={`Cost per Work Order`}/></div>\r\n                    <div className=\"Title\"><S Copy={`( Resources * Resource Cost ) / WOs`}/></div>\r\n                </li> \r\n\r\n            </ul>\r\n            <ul className=\"Pod_List\">\r\n                {\r\n                    OBJ_RESOURCES_GLOBAL(['ByClusterType','ByClient']).map((resource,i)=>{\r\n                        return(\r\n                            <li className=\"Pod\" key={i}>\r\n                                <div className=\"Data\"><P Copy={`$${numberWithCommas((resource.ResourceCost).toFixed(2))}`}/></div>\r\n                                <div className=\"Title\"> <H4 Copy={`${resource.name}`}/></div>\r\n                                <div className=\"Title\"><S Copy={`(Cost per WO * ${resource.name} Allocation )`}/></div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n            \r\n        </>  \r\n    )\r\n} \r\n\r\nexport default ResourceAllocationRatios;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Cost_Resource_PieCharts.js",["2558","2559","2560"],"import React, {useEffect} from 'react'\r\n\r\n// Actions\r\nimport {OBJ_RESOURCES_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\n\r\nimport Resources_Radial_Resources from \"Pages/Auth/SingleModelResult/Charts/Resource_Radial_Resources\"\r\nimport Cost_Pie_ResourceAllocationCost from \"Pages/Auth/SingleModelResult/Charts/Cost_Pie_ResourceAllocationCost\"\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n\r\n    useEffect(()=>{},[]) \r\n    \r\n    return(\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <Cost_Pie_ResourceAllocationCost />\r\n            </div>\r\n \r\n            <Stats_Bar data={OBJ_RESOURCES_GLOBAL(['ByClusterType','ByClient'])} name={`name`} value={`ResourceCost`}/>\r\n        </DiagramContainer>\r\n    )\r\n}\r\nexport default Trade_Radial_Charts;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cost_Pie_ResourceAllocationCost.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Cost_Resource_OverTime.js",["2561","2562","2563","2564"],"import React, {useEffect} from 'react'\r\n\r\n// Actions\r\nimport {OBJ_RESOURCES_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\n\r\nimport Resources_Radial_Resources from \"Pages/Auth/SingleModelResult/Charts/Resource_Radial_Resources\"\r\nimport Cost_Resources_OverTime from \"Pages/Auth/SingleModelResult/Charts/Cost_Resources_OverTime\"\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n\r\n    useEffect(()=>{},[]) \r\n    \r\n    return(\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <Cost_Resources_OverTime />\r\n            </div>\r\n \r\n            \r\n        </DiagramContainer>\r\n    )\r\n}\r\nexport default Trade_Radial_Charts;","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cost_Resources_OverTime.js",["2565","2566","2567","2568","2569","2570","2571"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {CreateOBJ_Client_WO_Overtime, OBJ_DATESPREAD_TRADE} from \"actions/CreateSingleViewModel\"\r\nimport {colorArray} from \"actions/HandleUX\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport {orderBy} from 'lodash'\r\n\r\nimport {\r\n    ComposedChart, Line, Area, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n  } from 'recharts';\r\n\r\n\r\nconst Chart1={\r\n    Icon:'bar',\r\n    Header:\"Resource Cost over time\",\r\n    Tip:\"Use the Filters\",\r\n    filters:['cluster','resource',],\r\n    Copy:`This Composition chart shows the resource cost for the selected model or cluster over the time of the model`\r\n}\r\n\r\n\r\nconst Client_Line_Workorders=()=>{\r\n\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n\r\n    const str='_cost'\r\n    const FindLabels = ()=>{\r\n        let Labels=[]  \r\n\r\n        CategoryOccurance.map((item,i)=>{\r\n            Object.keys(item).map((key,ii)=>{  \r\n                if(key.includes(str)){\r\n                    if(Labels.indexOf(key.replace(str,'')) === -1){\r\n                        Labels.push(key.replace(str,''))\r\n                    } \r\n                }\r\n            }) \r\n         })\r\n         return Labels;\r\n    }\r\n\r\n    useEffect(()=>{          \r\n        //console.log(OBJ_DATESPREAD_TRADE());\r\n        setCategoryOccurance(OBJ_DATESPREAD_TRADE())    \r\n    },[UX,MODEL]) \r\n    \r\n    useEffect(()=>{},[CategoryOccurance])\r\n\r\n    return(\r\n        <div>\r\n            <ChartHeader  {...Chart1}/>\r\n\r\n            <div style={{ width: '100%', height: 400 }}>\r\n                <ResponsiveContainer>\r\n                    <ComposedChart\r\n                        data={orderBy(CategoryOccurance,'UnixDate')}\r\n                        margin={{\r\n                        top: 5, right: 0, left: 0, bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis /> \r\n                        <Tooltip />\r\n                        <Legend /> \r\n                            \r\n                            {\r\n                                FindLabels().map((label,i)=>{\r\n                                    return(\r\n                                        <Line type=\"monotone\" name={`${label}`} dataKey={`${label}${str}`} stroke={colorArray[i]} />\r\n                                    )\r\n                                })\r\n                            }\r\n                    </ComposedChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Client_Line_Workorders;\r\n//<Bar dataKey={'ResourceCost'} opacity={0.3} fill={colorArray[3]} />\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Cost_Trade_Heatmap.js",[],"D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Sunburst.js",["2572"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {OBJ_CLIENT_GLOBAL_Filter,NivoSunBurst } from \"actions/CreateSingleViewModel\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Nivo \r\nimport NivoSunburst from \"venders/Nivo/NivoSunburst\"\r\n \r\nconst Chart1={ \r\n    Icon:'pie',\r\n    Header:\"Client Sunburst\",\r\n    Tip:\"Use the Filters\",\r\n    filters:['cluster','resource','client'],\r\n    Copy:\"Graph shows the Ratio of Clients Work orders to Resources and Clusters as a percentage over there share over the model\"\r\n}\r\n\r\nconst Client_Pie_Resources= ()=>{\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [ClientBreakDown,setClientBreakDown ] = useState([[]]) \r\n    \r\n    useEffect(()=>{ \r\n         \r\n        setClientBreakDown(OBJ_CLIENT_GLOBAL_Filter())  \r\n    \r\n    },[UX,MODEL])\r\n    \r\n \r\n    return(\r\n        <div>\r\n            <ChartHeader  {...Chart1}/>\r\n            <div style={{height: 300}}>\r\n                <NivoSunburst data={NivoSunBurst()} id={`name`} value={'Resources'} />\r\n            </div> \r\n        </div> \r\n    )\r\n}\r\nexport default Client_Pie_Resources;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoSunburst.js",["2573","2574","2575","2576","2577","2578"],"import React, { useEffect }  from 'react'\r\nimport { ResponsivePie } from '@nivo/pie'\r\nimport { ResponsiveSunburst } from '@nivo/sunburst'\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\nconst NivoSunburst=(props)=>{\r\n\r\n    const {data,id,value} = props\r\n    const [NivoData, setNivoData] = useState([])\r\n\r\n\r\n    useEffect(()=>{ \r\n        //console.log(data)\r\n     },[data])\r\n\r\n\r\n    return(\r\n        <ResponsiveSunburst\r\n            data={data}\r\n            margin={{ top: 10, right: 10, bottom: 10, left: 10 }}\r\n            id=\"name\"\r\n            value=\"loc\"\r\n            cornerRadius={2}\r\n            borderWidth={1}\r\n            borderColor=\"white\"\r\n            colors={function(e){return e.color} }\r\n            childColor={{ from: 'color', modifiers: [['brighter', 0.30]] }}\r\n            //childColor={function(e){return e.color} }\r\n            //childColor=\"noinherit\"\r\n            animate={true}\r\n            motionConfig=\"wobbly\"\r\n            isInteractive={true}\r\n        />\r\n    )\r\n}\r\n\r\nexport default NivoSunburst;\r\n","D:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetMapBtn.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\index.js",["2579"],["2580","2581"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\reportWebVitals.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\App.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\UX.js",["2582"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\PrototypeLoader.js",["2583"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\authUser.js",["2584","2585","2586"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\index.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\index.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Landing\\index.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\index.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\History.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\index.js",["2587","2588","2589","2590"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Loading\\Loading.js",["2591","2592"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\index.js",["2593","2594","2595","2596","2597","2598","2599","2600"],"import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_AUTH_FULL} from \"Context/AUTH\";\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\n\r\n// actions\r\nimport {FetchDataIntegrity} from \"actions/authUser\";\r\n// Components\r\nimport history from  '../../History'\r\nimport DashBoard from \"../../Template/AuthDashboard\"\r\n\r\n// Dataloading\r\nimport {LogoMainWhite} from \"../../Assets/logo\"\r\n\r\n// Routes \r\nimport ComponentLanding from \"./Landing\";\r\nimport ComponentDataDump from \"./DataDump\"\r\nimport ComponentCreateModel from \"./CreateModel\";\r\nimport ComponentViewModels from \"./ViewModels\";\r\nimport CompareComponent from \"./CompareModels\";\r\nimport ComponentScan from \"./ResourceAllocationScan\"\r\nimport UIComponents from \"./UICompnents/index\"\r\n//import ResultsComponent from \"./MarkerBasedScan/MarkerBasedScan\";\r\nimport ResultsComponent from \"./SingleModelResult\";\r\nimport ReleaseNotes from \"./ReleaseNotes\";\r\nimport Pipeline from \"./Pipeline\"\r\nimport LocationDeepDive from \"./LocationDeepDive\"\r\nimport ClientDeepDive from \"./ClientDeepDive\"\r\n\r\nconst routes = [\r\n    { Rpath: \"/\", component: ComponentLanding, exact:true},\r\n    { Rpath: \"/view-models\", component: ComponentViewModels, exact:true},\r\n    { Rpath: \"/create-model\", component: ComponentCreateModel, exact:false},\r\n    { Rpath: \"/compare-models\", component: CompareComponent, exact:false},\r\n    { Rpath: \"/location-Deep-Dive\", component: LocationDeepDive, exact:false},\r\n    { Rpath: \"/client-deep-dive\", component: ClientDeepDive, exact:false},\r\n    { Rpath: \"/MarkerBasedScan\", component: ComponentScan, exact:false},\r\n    { Rpath: \"/integrity\", component: ComponentDataDump, exact:false},\r\n    { Rpath: \"/results\", component: ResultsComponent, exact:false},\r\n    { Rpath: \"/UIComponents\", component: UIComponents, exact:false},\r\n    { Rpath: \"/release-notes\", component: ReleaseNotes, exact:false},\r\n    { Rpath: \"/pipeline\", component: Pipeline, exact:false},\r\n   \r\n];\r\n\r\nconst Auth = (props)=>{\r\n\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const Pushhistory = useHistory();\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n\r\n    const [DataStatus, setDataStatus] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        //console.log(AUTH)\r\n        if(AUTH.jwt === false){\r\n            console.log(\"USER DENIED\")\r\n            //Pushhistory.push(\"/demo/login\");\r\n            Pushhistory.push(\"/\");\r\n        }else{ \r\n            console.log(\"USER AUTHED\")\r\n        } \r\n    }, [AUTH])\r\n\r\n\r\n    const checkDataStatus=()=>{\r\n        let DS=true\r\n        Object.keys( STRAPI.UserData).map(function(key, index) { \r\n            if(STRAPI.UserData[key] === false){\r\n                DS = STRAPI.UserData[key] \r\n            }\r\n        });\r\n        setDataStatus(DS)\r\n    }\r\n\r\n    useEffect(()=>{ checkDataStatus() },[STRAPI.UserData])\r\n\r\n    return(\r\n           <>\r\n            { DataStatus ? <AuthRouters {...props} />:<FetchData /> }\r\n           </>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n//   </Switch> \r\n\r\n\r\nconst FetchData=()=>{\r\n\r\n    const [Fetch, setFetch] = useState(null)\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n\r\n    useEffect(()=>{\r\n        if(Fetch === null){\r\n            FetchDataIntegrity()\r\n            setFetch(true)\r\n        }\r\n    },[])\r\n    return( \r\n        <div className=\"DataLoad\">\r\n            <div className=\"LoadThis\">    \r\n                <LoadingCopy />\r\n                <div className=\"loader\">\r\n                <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>\r\n                <LogoMainWhite />\r\n                \r\n                {\r\n                    STRAPI.DataError ? 'There was an Error loading the data. Please try again later':''\r\n                }\r\n              <Disclaimer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst LoadingCopy=()=>{\r\n    return(\r\n      <div>\r\n           <h1>Intact AnalytiQ</h1>\r\n            <h2>Fetching Data</h2>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const Disclaimer = ()=>{\r\n      return(\r\n            <div className=\"disclaimer\">\r\n                <p>This is a prototype build of Intact Analyiq alpha v0.1 </p>\r\n                <p>Please wait whilst we fire up the Dyno's and fetch your profile</p>\r\n            </div>\r\n      )\r\n  }\r\n\r\n\r\nconst AuthRouters = (props)=>{\r\n\r\n    const AUTH = useContext_AUTH_FULL();\r\n    const MODEL = useContext_SCAN_FULL()\r\n    const Pushhistory = useHistory();\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n\r\n    const [DataStatus, setDataStatus] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        //console.log(AUTH)\r\n        if(AUTH.jwt === false){\r\n            //console.log(\"USER DENIED\")\r\n            //Pushhistory.push(\"/demo/login\");\r\n            Pushhistory.push(\"/\");\r\n        }else{ \r\n            //console.log(\"USER AUTHED\")\r\n        }\r\n    }, [AUTH])\r\n\r\n    useEffect(()=>{\r\n        //console.log(MODEL.SelectedModel)\r\n    },[MODEL])\r\n    return(\r\n      \r\n        <Router  basename={'/auth/'} >\r\n            <Switch history={history}>\r\n                <DashBoard>\r\n                { \r\n                    routes.map((route, i) => (\r\n                            <Route \r\n                                key={i}  \r\n                                exact={route.exact} \r\n                                path={route.Rpath} \r\n                                render={()=> <route.component {... props}/> }\r\n                            /> \r\n                        \r\n                        ))\r\n                }\r\n                </DashBoard>\r\n                </Switch>\r\n        </Router>\r\n    \r\n)\r\n}","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\UX.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMMUNICATION.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SCAN.js",["2601"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMMS.js",["2602"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\SCANSTATE.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\AUTH.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\SINGLE.js",["2603"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\ModelSingleReview.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\COMPARE.js",["2604"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\AUTH.js",["2605"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\COMPARE.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\store\\reducers\\STRAPI.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Context\\STRAPI.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan.js",["2606","2607","2608","2609"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {ScanSites} from \"actions/HandleMarkerBasedScan\";\r\n\r\n// Components\r\nimport ResourceAllocationMap from \"./ResourceAllocationScan/Map\";\r\n\r\nconst RenderScamSites = new ScanSites();\r\n\r\nconst RecourseAllocationScan = ()=>{\r\n\r\n    \r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n\r\n\r\n    const Scan = ()=>{\r\n        //console.log(STRAPI.sites);\r\n        // Pass only fully loaded sites\r\n        let SiteList=[]\r\n        STRAPI.sites.map((site)=>{\r\n                //console.log(site.count)\r\n    \r\n                // Add any new rules if required\r\n                if(site.count.length!== 0){\r\n                    SiteList.push(site)\r\n                }\r\n        })\r\n        RenderScamSites.SiteList=SiteList;\r\n        RenderScamSites.Search();\r\n    }\r\n\r\n\r\n    useEffect(()=>{ if(SCAN.active){Scan() }},[SCAN.active])\r\n\r\n    return(\r\n        <>\r\n            {SCAN.MarkerScanResults ?  <ResourceAllocationMap />: false}\r\n        </>\r\n    )\r\n}\r\n//  <ScanBtn />\r\nexport default RecourseAllocationScan;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Landing.js",["2610","2611","2612"],"import React, { useEffect } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_AUTH_FULL} from \"Context/AUTH\";\r\nimport Footer from \"Pages/Auth/Components/Layout/Footer\";\r\nimport Auth from 'Pages/Auth';\r\n\r\nconst Profile = ()=>{    \r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const AUTH = useContext_AUTH_FULL()\r\n    useEffect(()=>{\r\n        //console.log(AUTH)\r\n    },[AUTH])\r\n\r\n    return( \r\n    <>\r\n        <div className=\"OuterContainer\">\r\n            <div className=\"InnerFrame\">\r\n            \r\n                <div className=\"Content\">\r\n                    <ArticleContainer title={`Disclaimer!!`}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n                    </ArticleContainer>\r\n                    <ArticleContainer title={`About AnalytiQ`}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n                    </ArticleContainer>\r\n                    <ArticleContainer title={`What is a Model`}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n                    </ArticleContainer>\r\n                    <ArticleContainer title={`Viewing saved Models`}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n                    </ArticleContainer>\r\n                    <ArticleContainer title={`Comparing Models`}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\r\n                    </ArticleContainer>\r\n                   \r\n                </div>\r\n                \r\n               \r\n            </div>\r\n            <div className=\"SideBarRight\">\r\n                <h2>User : {AUTH.user.username}</h2>\r\n             \r\n            </div>\r\n           \r\n        </div>\r\n        <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\nconst ArticleContainer = (props)=>{\r\n    const{title} = props\r\n    return(\r\n        <div className=\"ArticleContainer\">\r\n            <h2>{title}</h2>\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ViewModels.js",["2613","2614","2615","2616","2617","2618","2619"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\DataDump.js",["2620","2621"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\About\\about.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\unAuth\\UnAuth.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\Contact\\contact.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Public\\AuthLogin\\index.js",["2622","2623","2624"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CompareModels.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\PublicLayout.js",["2625","2626","2627","2628","2629","2630"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ReleaseNotes.js",["2631","2632","2633"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Pipeline.js",["2634","2635"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Assets\\logo.js",["2636","2637","2638","2639","2640"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult.js",["2641","2642","2643","2644","2645","2646","2647","2648","2649","2650","2651","2652"],"import React, { useEffect } from 'react'\r\nimport { Route, Switch,useRouteMatch } from \"react-router-dom\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// Layout \r\nimport AppBar from \"Pages/Auth/SingleModelResult/Layout/AppBar\"\r\nimport HeaderTitles from \"Pages/Auth/SingleModelResult/Layout/HeaderTitle\"\r\nimport {H1} from \"Pages/Auth/Components/Type\";\r\nimport Footer from \"Pages/Auth/Components/Layout/Footer\";\r\n// Sub Sections \r\n import SubSection_Locations from \"Pages/Auth/SingleModelResult/SubSections/SubSection_Locations\";\r\n import SubSection_Client from \"Pages/Auth/SingleModelResult/SubSections/SubSection_Client\";\r\n import SubSection_FullMap from \"Pages/Auth/SingleModelResult/SubSections/SubSection_FullMap\";\r\n import SubSection_Clusters from \"Pages/Auth/SingleModelResult/SubSections/SubSection_Clusters\";\r\n import SubSection_Trade from \"Pages/Auth/SingleModelResult/SubSections/SubSection_Trade\";\r\n import SubSection_Workorders from \"Pages/Auth/SingleModelResult/SubSections/SubSection_Workorders\";\r\n import SubSection_CostAnalysis from \"Pages/Auth/SingleModelResult/SubSections/SubSection_CostAnalysis\"\r\n\r\n import FilterChips from \"Pages/Auth/SingleModelResult/Layout/FilterChips\";\r\n\r\nconst ModelCheck = ()=>{\r\n    const MODEL = useContext_SCAN_FULL()\r\n    let match = useRouteMatch(); \r\n    const Pushhistory = useHistory();\r\n    useEffect(()=>{\r\n            if(MODEL.SelectedModel === null){\r\n                Pushhistory.push(\"/view-models\");\r\n            } \r\n\r\n            console.log(MODEL.SelectedModel)\r\n    },[MODEL])\r\n    return(\r\n        <div>\r\n            { MODEL.SelectedModel === null ? false:<SingleModelResult />}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SingleModelResult = ()=>{ \r\n    let match = useRouteMatch(); \r\n    return(\r\n        <>\r\n          \r\n                <div className=\"OuterContainer\">\r\n                    <Switch> \r\n                        <Route path={`${match.path}/locations`}>\r\n                            <SubSection_Locations /> \r\n                        </Route> \r\n                        \r\n                        <Route path={`${match.path}/trades`}>\r\n                            <SubSection_Trade />\r\n                        </Route>  \r\n                        \r\n                        <Route path={`${match.path}/clients`}>\r\n                            <SubSection_Client />\r\n                        </Route>  \r\n\r\n                        <Route path={`${match.path}/workorders`}>\r\n                            <SubSection_Workorders />\r\n                        </Route>\r\n\r\n                        <Route path={`${match.path}/map`}>\r\n                            <SubSection_FullMap />\r\n                        </Route>\r\n\r\n                        <Route path={`${match.path}/cluster`}>\r\n                            <SubSection_Clusters />\r\n                        </Route>\r\n\r\n                        <Route path={`${match.path}/costs`}>\r\n                            <SubSection_CostAnalysis />\r\n                        </Route>\r\n                    </Switch>  \r\n                    <FilterChips />\r\n                </div>\r\n         <Footer />\r\n        </>\r\n    ) \r\n}\r\n\r\nexport default ModelCheck; \r\n//   <AppBar />\r\n//   <HeaderTitles />\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\AuthDashboard.js",["2653","2654"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\UICompnents\\index.js",["2655"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Map.js",["2656","2657"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Navigation\\SideBar.js",["2658","2659"],"import React, {useEffect} from 'react'\r\nimport { Link} from \"react-router-dom\";\r\nimport { NavLink } from 'react-router-dom'\r\nimport List from '@material-ui/core/List';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ApartmentIcon from '@material-ui/icons/Apartment';\r\nimport BlurCircularIcon from '@material-ui/icons/BlurCircular';\r\n//import DataUsageIcon from '@material-ui/icons/DataUsage';\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\nimport CompareIcon from '@material-ui/icons/Compare';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport PinDropIcon from '@material-ui/icons/PinDrop';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\n\r\n\r\n\r\nconst SideNavItems=[\r\n    {\r\n        to:'/',\r\n        title:'Profile',\r\n        icon:<PersonPinIcon />\r\n    },\r\n    {\r\n        to:'/create-model',\r\n        title:'Create a Model',\r\n        icon:<BlurCircularIcon />\r\n    },\r\n    {\r\n        to:'/view-models',\r\n        title:'View a Model',\r\n        icon:<ApartmentIcon />\r\n    },\r\n    {\r\n        to:'/compare-models',\r\n        title:'Compare Models',\r\n        icon:<CompareIcon />\r\n    },\r\n    {\r\n        to:'/location-Deep-Dive',\r\n        title:'Deep Dive : locations',\r\n        icon:<PinDropIcon />\r\n    },\r\n    {\r\n        to:'/client-deep-dive',\r\n        title:'Deep Dive : Clients',\r\n        icon:<SupervisedUserCircleIcon />\r\n    },\r\n    {\r\n        to:'/release-notes',\r\n        title:'Release Notes',\r\n        icon:<BuildIcon />\r\n    },\r\n    {\r\n        to:'/pipeline',\r\n        title:'Pipeline',\r\n        icon:<AccountTreeIcon />\r\n    },\r\n    {\r\n        to:'/UIComponents',\r\n        title:'UI Components',\r\n        icon:<DashboardIcon />\r\n    }\r\n]\r\nconst Login = ()=>{\r\n\r\n    useEffect(()=>{},[])\r\n    return( \r\n \r\n        <List className=\"AuthNavigation\">\r\n\r\n                {\r\n                    SideNavItems.map((item, i)=>{\r\n                        return(\r\n                            <NavLink to={item.to} key={i}  exact activeClassName=\"selected\">\r\n                                <ListItem button key={item.title}>\r\n                                    <ListItemIcon>\r\n                                        <Tooltip title={item.title}>\r\n                                            {item.icon}\r\n                                        </Tooltip>\r\n                                    </ListItemIcon>\r\n                            </ListItem> \r\n                            </NavLink>\r\n                        )\r\n                    })\r\n                }\r\n\r\n        </List>\r\n    )\r\n}\r\nexport default Login","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Type.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\HistoryRerfresh.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ViewSingleResultBtn.js",["2660"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Template\\Public\\Navigation.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SelectModels.js",["2661","2662","2663","2664","2665","2666"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"Context/COMPARE\";\r\n\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\n\r\nimport Footer from \"Pages/Auth/Components/Layout/Footer\";\r\nimport SelectCompare from \"../Components/selects/SelectCompare\"\r\nimport ConfirmCompareBtn from \"../Components/buttons/ConfirmCompareBtn\";\r\n\r\n const CompareModels=()=>{\r\n\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    // useContext_COMPARE_FULL\r\n    const [ModelLimit, setLimit] = useState(2)\r\n    const [ModelsSelected, setModelsSelected] = useState(2)\r\n    const [ModelSelects, setModelSelects] = useState([])\r\n    const [Warning, setWarning] = useState(null)\r\n\r\n\r\n    \r\n\r\n    const CreateSelects = ()=>{\r\n        let i=0\r\n        let temp=[]\r\n        while(i<ModelLimit){\r\n            \r\n            temp.push(<SelectCompare pos={i}/>)\r\n            i++;\r\n        } \r\n        setModelSelects(temp)\r\n    }\r\n\r\n\r\n    const ValidCompare=()=>{\r\n        let obj=true\r\n        \r\n            if( COMPARE.CompareData.UserSelected[0] === COMPARE.CompareData.UserSelected[1]){\r\n                obj=false;\r\n            }\r\n\r\n            COMPARE.CompareData.UserSelected.map((check,i)=>{\r\n                if(typeof check !== 'object')\r\n                    obj=false\r\n            })\r\n    \r\n        return obj\r\n    }\r\n\r\n    useEffect(()=>{  CreateSelects() },[ModelsSelected])\r\n    useEffect(()=>{  \r\n        //console.log(COMPARE.CompareData.UserSelected.length) \r\n    },[COMPARE])\r\n\r\n\r\n    return(\r\n        <>\r\n        <div className=\"OuterContainer\">\r\n            \r\n            <div className=\"InnerFrame\">\r\n                <div className=\"SectionHeaderWithControls\">\r\n                    <h2>Compare Models</h2>\r\n                    <ModelList />\r\n                  \r\n                    {\r\n                         ValidCompare() ? <ConfirmCompareBtn /> :  false\r\n                    }\r\n\r\n                    <p>{Warning}</p> \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"SideBarRight\">\r\n                <div className=\"controls\">\r\n                    <div className=\"SelectComparables\">\r\n                        <h3>Select comparable models</h3>\r\n                        {ModelSelects}\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n       \r\n        </div>\r\n        <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompareModels\r\n\r\n \r\nconst ModelList = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const icons=[<StarRateIcon />,<CompareArrowsIcon />]\r\n    return(\r\n        <div className=\"ComparedSelectedItems\">\r\n\r\n                        <ul className=\"ComparableItem\">\r\n                            <li></li>\r\n                            <li>Model Name</li>\r\n                            <li>Clients</li>\r\n                            <li>Clusters</li>\r\n                            <li>Sites</li>\r\n                            <li>Description</li>\r\n                        </ul>   \r\n \r\n                        {\r\n                            COMPARE.CompareData.UserSelected.map((model,i)=>{\r\n                                return(\r\n                                    <ul key={i} className=\"ComparableItem\">\r\n                                            <li>{icons[i]}</li>\r\n                                            <li>{model.Name}</li>\r\n                                            <li>{model.IntClients}</li>\r\n                                            <li>{model.IntCluster}</li>\r\n                                            <li>{model.IntSites}</li>\r\n                                            <li>{model.Description}</li>\r\n                                    </ul>    \r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n    )\r\n}","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Section.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Footer.js",["2667"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareModels.js",["2668","2669","2670","2671","2672","2673"],"import React, {useEffect} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"Context/COMPARE\";\r\n\r\nimport ResetModels from \"Pages/Auth/Components/buttons/ResetCompareModels\"\r\nimport Footer from \"Pages/Auth/Components/Layout/Footer\";\r\n// Import Table\r\nimport TableHeader from \"Pages/Auth/Compare/Layout/TableHeader\"\r\nimport FilterChips from \"Pages/Auth/SingleModelResult/Layout/FilterChips\";\r\n// Filter\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/CompareGlobalFilter\";\r\n    // Clusters\r\nimport Clusters_Main from \"Pages/Auth/Compare/SubSections/Clusters_Main\";\r\n    // Work Orders\r\nimport WorkOrders_Main from \"Pages/Auth/Compare/SubSections/WorkOrders_Main\";\r\n    // Locations\r\nimport Locations_Main from \"Pages/Auth/Compare/SubSections/Locations_Main\"\r\n    // Resources\r\nimport Resources_Main from \"Pages/Auth/Compare/SubSections/Resources_Main\"\r\n    // Clients\r\nimport Clients_Main from \"Pages/Auth/Compare/SubSections/Clients_Main\";\r\n\r\nimport NivoNetwork from \"venders/Nivo/NivoNetwork\"\r\nimport LocationsNetwork from \"Pages/Auth/SingleModelResult/components/Locations_Network\";\r\nconst ModelComparision = ()=>{\r\n   \r\n    const COMPARE = useContext_COMPARE_FULL();\r\n   \r\n    useEffect(()=>{\r\n        //console.log(COMPARE.CompareData.UserSelected.length)\r\n    },[COMPARE])\r\n    \r\n    return( \r\n        <>\r\n        <div className=\"OuterContainer\">\r\n            <div className=\"InnerFrame\">\r\n                <h2>Comparison Results</h2>\r\n                <div className=\"ModelComparisonContainer\">\r\n                    <div className=\"ModelComparisonTable\">\r\n                   \r\n                        <TableHeader />\r\n                        <LocationsNetwork /> \r\n                         \r\n                        <Locations_Main /> \r\n                        <Resources_Main />\r\n                        <WorkOrders_Main />\r\n                        <Clients_Main />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"SideBarRight\">\r\n                <div className=\"controls\">\r\n                    <h4>Filters</h4>\r\n                    <GlobalFilter />\r\n                    <ResetModels />\r\n                </div>\r\n            </div>  \r\n        \r\n            <FilterChips />\r\n            \r\n        </div>\r\n        <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModelComparision;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleMarkerBasedScan.js",["2674","2675","2676","2677","2678","2679","2680","2681","2682","2683","2684","2685","2686","2687"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetCompareModels.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateSingleScanBtn.js",["2688"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleUX.js",["2689","2690","2691","2692","2693","2694","2695","2696","2697","2698","2699","2700","2701","2702","2703","2704","2705","2706","2707","2708","2709","2710","2711","2712","2713","2714","2715","2716","2717","2718","2719","2720","2721","2722","2723","2724","2725","2726","2727","2728"],"// Private Functions\r\nimport store from \"../store/index\"\r\n\r\n//import axios from 'axios';\r\nimport {distancetoPoint} from \"./GeoLocationActions\"\r\nimport { findIndex} from 'lodash'; \r\n\r\n// Icons\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\n\r\n//export const colorArray = ['#030303', '#787878', '#575757', '#999A9A', '#D4D4D3', '#313231', '#777777', '#575757', '#3A3A3A', '#444444',];\r\nexport const colorArray = ['#89b2c3', '#D2B953','#D29653','#386E85','#514592', '#3F9F54', '#3C6289', '#D25F53', '#575757', '#D29F53', '#40598D',];\r\n\r\nexport const LocationcolorArray = ['#514592', '#D29653', '#D2B953','#386E85', '#3F9F54', '#3C6289', '#D25F53', '#575757', '#D29F53', '#40598D',];\r\n\r\nexport const TradecolorArray = ['#3F5A8C', '#40A151', '#FCF889','#D25C53'];\r\n\r\n\r\nexport function ResourceColor(Trade){\r\n  switch (Trade) {\r\n      case 'HandyMan':\r\n            return '#3F5A8C' \r\n            break;\r\n      case 'Electrician':\r\n              return '#40A151'\r\n        break;\r\n      case 'Plumber':\r\n              return '#FCF889'\r\n          break;\r\n      case 'Specialized':\r\n              return '#D25C53'\r\n          break;\r\n      case 'CombinedCluster':\r\n              return '#ff0000'\r\n          break;\r\n  \r\n  }\r\n}\r\nexport function RegionColor(region){\r\n  switch (region) {\r\n      case 'SameBuilding':\r\n            return '#B2007C' \r\n            break;\r\n      case 'CBD':\r\n              return '#DC000B'\r\n        break;\r\n      case 'InnerCity':\r\n              return '#04419B'\r\n          break;\r\n      case 'Metro':\r\n              return '#11B700'\r\n          break;\r\n      case 'OuterMetro':\r\n              return '#330193'\r\n          break;\r\n        case 'Regional':\r\n          return '#FF7400'\r\n          break;\r\n        case 'Remote':\r\n          return '#3D1324'\r\n          break; \r\n      case 'ExtremeRemote':\r\n            return '#111D2F'\r\n          break;   \r\n  }\r\n}\r\n\r\n\r\nexport const ChartIcon =(Icon)=>{\r\n  let DisplayIcon; \r\n  switch (Icon) {\r\n    case 'bar':\r\n        DisplayIcon = <AssessmentIcon />\r\n      break;\r\n      case 'pie':\r\n        DisplayIcon = <PieChartIcon />\r\n      break;\r\n      case 'radial':\r\n        DisplayIcon = <BubbleChartIcon />\r\n      break;\r\n      case 'map':\r\n        DisplayIcon = <MapIcon />\r\n      break;\r\n      case 'funnel':\r\n        DisplayIcon = <FilterListIcon />\r\n      break;\r\n      case 'line':\r\n        DisplayIcon = <TimelineIcon />\r\n      break;\r\n\r\n      \r\n      default:\r\n        DisplayIcon = <AssessmentIcon />\r\n    \r\n  }\r\n  return DisplayIcon;\r\n}\r\n\r\n\r\nexport function setMainMapLocation(Location){\r\n  const NewLocation = {\r\n    LatLngBoundaries:Location.Center,\r\n    BoundaryCenterPoint:null,\r\n    zoom:Location.Zoom,\r\n    Location:Location.Name\r\n}\r\n  store.dispatch({ type:'STOREMAPPARAMETERS', payload:NewLocation});\r\n}\r\n\r\n\r\n\r\n/* ********************************************************************************* */\r\n// Handle Various  Filters\r\n/* ********************************************************************************* */\r\nexport const SetMapClusterType = (type)=>{\r\n  store.dispatch({ type:'SETMAPCLUSTERTYPE', payload:type});\r\n}\r\n\r\n\r\nexport const SetMapResourceType = (type)=>{\r\n  //console.log(type)\r\n  store.dispatch({ type:'SETMAPRESOURCETYPE', payload:type});\r\n}\r\n\r\nexport const SetFilterClient = (type)=>{\r\n  //console.log(type)\r\n  store.dispatch({ type:'SETFILTERCLIENT', payload:type});\r\n}\r\n\r\nexport const SetFilterModel = (type)=>{\r\n  //console.log('SetFilterModel', type)\r\n  store.dispatch({ type:'SETFILTERMODEL', payload:type});\r\n}\r\n\r\nexport const SetFilterPolygon = (type)=>{\r\n  //console.log('SETFILTERPOLYGON', type)\r\n  store.dispatch({ type:'SETFILTERPOLYGON', payload:type});\r\n  \r\n}\r\n\r\nexport const SetFilterMarkerType = (type)=>{\r\n  //console.log('SETFILTERMARKERTYPE', type)\r\n  store.dispatch({ type:'SETFILTERMARKERTYPE', payload:type});\r\n}\r\n\r\nexport const SetFilterColorSchemeType = (type)=>{\r\n  //console.log('SETFILTERCOLORSCHEME', type)\r\n  store.dispatch({ type:'SETFILTERCOLORSCHEME', payload:type});\r\n}\r\n\r\n\r\nexport const SetSelectedCluster = (type)=>{\r\n  //console.log('SETSELECTEDCLUSTER', type)\r\n  store.dispatch({ type:'SETSELECTEDCLUSTER', payload:type});\r\n}\r\n\r\n\r\n/* ********************************************************************************* */\r\n// END Filters\r\n/* ********************************************************************************* */\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport const gl=(data)=>{ return data.length }\r\n\r\nexport function AreaFilter(type, value){\r\n    //console.log('AreaFilter', value)\r\n    store.dispatch({ type:type, payload:value});\r\n}\r\n\r\nexport function ScanState(value){\r\n   //console.log('ScanState', value)\r\n    store.dispatch({ type:'SCANSTATE', payload:value});\r\n}\r\n\r\nexport function SelectedRegion(SelectedRegion){\r\n\r\n    //console.log(SelectedRegion)\r\n    store.dispatch({ type:'STORESELECTEDAREA', payload:SelectedRegion});\r\n\r\n}\r\n\r\nexport function RemoveClusterItem(Haystack, Needle){ \r\n\r\n    //console.log(\"Delete Cluster\");\r\n    //console.log(Haystack, Needle);\r\n    let index = findIndex( Haystack, function(o) { return o.Boundary === Needle; })\r\n    //console.log(index);\r\n\r\n    Haystack.splice(index, 1)\r\n    //console.log(Haystack);\r\n    store.dispatch({ type:'STORERESULTS', payload:Haystack}); \r\n}\r\n\r\n \r\nexport function CreateMapParameters(DATA){\r\n\r\n            // USe this function to create ALL of the possible Map Data and Meta points.\r\n            // Try to limit the use on the UX.SelectedArea around the APP\r\n            // Instead focus on using UX.MapParameters\r\n\r\n            let centerLatArray = [];\r\n            let centerLngArray = [];\r\n            let Storesites=[]\r\n\r\n            //console.log(DATA)\r\n            DATA.map((Region, i)=>{\r\n                //console.log(\"Region\", Region)\r\n                Region.sites.map((marker,i)=>{\r\n                    Storesites.push(marker)\r\n                    if(!isNaN(parseFloat(marker.lat))){\r\n                        centerLatArray.push(parseFloat(marker.lat))\r\n                        centerLngArray.push(parseFloat(marker.long))\r\n                    }\r\n                })\r\n                //return false\r\n            })\r\n\r\n\r\n            let centerLat = ((Math.min(...centerLatArray) + Math.max(...centerLatArray))/2)\r\n            let centerLng = ((Math.min(...centerLngArray) + Math.max(...centerLngArray))/2)\r\n            let LatLngBoundaries = [Math.min(...centerLatArray),Math.max(...centerLatArray),Math.min(...centerLngArray),Math.max(...centerLngArray)]\r\n            \r\n            let distance = distancetoPoint(LatLngBoundaries[0],LatLngBoundaries[2], LatLngBoundaries[1],LatLngBoundaries[3],'K')\r\n           \r\n           //console.log('distance', (distance*1000), setZoomLevel((distance*1000).toFixed(0)));\r\n           \r\n            let zoom = setZoomLevel((distance*1000).toFixed(0))\r\n            let SetMap = true\r\n            //console.log('Storesites', Storesites)\r\n            \r\n            let MapParameters = {\r\n                LatLngBoundaries:LatLngBoundaries,\r\n                BoundaryCenterPoint:[centerLat, centerLng],\r\n                zoom:zoom,\r\n                SetMap:SetMap,\r\n                markers:Storesites\r\n            }\r\n\r\n            //console.log(\"MapParameters\", MapParameters)\r\n           //store.dispatch({ type:'STOREMAPPARAMETERS', payload:MapParameters});\r\n}\r\n\r\n\r\n\r\nfunction setZoomLevel(meters) { \r\n    //console.log(`Zoom level set meters: ${meters}`); \r\n\r\n    switch (meters) {\r\n        case (meters < 1128):\r\n            return 15;\r\n          break;\r\n        case ((meters > 1128) && (meters < 2256)):\r\n            return 14;\r\n          break;\r\n        case ((meters > 2256) && (meters < 4513)):\r\n            return 13;\r\n          break;\r\n        case ((meters > 4513) && (meters < 9027)):\r\n            return 12;\r\n          break; \r\n        case ((meters > 9027) && (meters < 18055)) :\r\n            return 11;\r\n          break;\r\n        case ((meters > 18055) && (meters < 36111)) :\r\n            return 10;\r\n          break; \r\n        case ((meters > 36111) && (meters < 72223)) :\r\n            return 9;\r\n          break;      \r\n        case ((meters > 72223) && (meters < 144447)) :\r\n            return 8;\r\n          break;   \r\n        case ((meters > 144447) && (meters < 288895)) :\r\n            return 7;\r\n          break;    \r\n        case ((meters > 288895) && (meters < 577790)) :\r\n            return 6;\r\n          break;  \r\n          case ((meters > 577790) && (meters < 1155581)) :\r\n            return 5;\r\n          break;     \r\n          default:\r\n            return 4;\r\n      }\r\n\r\n\r\n    //return zoomfactor;\r\n}\r\n\r\nexport function NumberReducer (labelValue) {\r\n\r\n    // Nine Zeroes for Billions\r\n    return Math.abs(Number(labelValue)) >= 1.0e+9\r\n\r\n    ? Math.abs(Number(labelValue)) / 1.0e+9 + \"B\"\r\n    // Six Zeroes for Millions \r\n    : Math.abs(Number(labelValue)) >= 1.0e+6\r\n\r\n    ? Math.abs(Number(labelValue)) / 1.0e+6 + \"M\"\r\n    // Three Zeroes for Thousands\r\n    : Math.abs(Number(labelValue)) >= 1.0e+3\r\n\r\n    ? Math.abs(Number(labelValue)) / 1.0e+3 + \"K\"\r\n\r\n    : Math.abs(Number(labelValue));\r\n\r\n}\r\n\r\n\r\nexport function HandleFilterChange(TYPE, VALUE){\r\n    //console.log(TYPE, VALUE)\r\n    store.dispatch({ type:TYPE, payload:VALUE});\r\n}\r\n\r\n\r\n\r\n\r\nexport const getDate=(timeStamp)=>{ \r\n\r\n  const milliseconds = timeStamp * 1000 \r\n\r\n  const dateObject = new Date(milliseconds)\r\n  //console.log(dateObject.getFullYear())\r\n  //let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n  let options = { year: 'numeric', month: 'numeric', day: 'numeric' };\r\n  const humanDateFormat = dateObject.toLocaleString('en-UK',options) //2019-12-9 10:30:15\r\n\r\n  return humanDateFormat\r\n }\r\n\r\n export const monthDiff = (d1, d2) => {\r\n  var months;\r\n\r\n  months = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n  months -= d1.getMonth();\r\n  months += d2.getMonth();\r\n\r\n  //months = months+1\r\n  return months <= 0 ? 0 : months;\r\n}\r\n\r\n\r\n\r\nfunction parseDate(input) {\r\n  // Transform date from text to date\r\nvar parts = input.match(/(\\d+)/g);\r\n// new Date(year, month [, date [, hours[, minutes[, seconds[, ms]]]]])\r\nreturn new Date(parts[0], parts[1]-1, parts[2]); // months are 0-based\r\n}\r\n\r\n\r\nexport const workingDaysBetweenDates = (S1, E1) => {\r\n  const S1Date = S1 * 1000; \r\n  const E1Date = E1 * 1000;\r\n  \r\n  const S1dateObject = new Date(S1Date)\r\n  const E1dateObject = new Date(E1Date)\r\n\r\n  let d0 = `${S1dateObject.getFullYear()}/${S1dateObject.getMonth()}/${S1dateObject.getDay()}`\r\n  let d1= `${E1dateObject.getFullYear()}/${E1dateObject.getMonth()}/${E1dateObject.getDay()}`\r\n  /* Two working days and an sunday (not working day) */\r\n // var holidays = ['2018-05-03', '2018-05-05', '2018-05-07'];\r\n  var holidays = [''];\r\n  var startDate = parseDate(d0);\r\n  var endDate = parseDate(d1);  \r\n\r\n// Validate input\r\n  if (endDate <= startDate) {\r\n    return 0;\r\n  }\r\n\r\n// Calculate days between dates\r\n  var millisecondsPerDay = 86400 * 1000; // Day in milliseconds\r\n  startDate.setHours(0, 0, 0, 1);  // Start just after midnight\r\n  endDate.setHours(23, 59, 59, 999);  // End just before midnight\r\n  var diff = endDate - startDate;  // Milliseconds between datetime objects    \r\n  var days = Math.ceil(diff / millisecondsPerDay);\r\n\r\n  // Subtract two weekend days for every week in between\r\n  var weeks = Math.floor(days / 7);\r\n  days -= weeks * 2;\r\n\r\n  // Handle special cases\r\n  var startDay = startDate.getDay();\r\n  var endDay = endDate.getDay();\r\n    \r\n  // Remove weekend not previously removed.   \r\n  if (startDay - endDay > 1) {\r\n    days -= 2;\r\n  }\r\n  // Remove start day if span starts on Sunday but ends before Saturday\r\n  if (startDay == 0 && endDay != 6) {\r\n    days--;  \r\n  }\r\n  // Remove end day if span ends on Saturday but starts after Sunday\r\n  if (endDay == 6 && startDay != 0) {\r\n    days--;\r\n  }\r\n  /* Here is the code */\r\n  holidays.forEach(day => {\r\n    if ((day >= d0) && (day <= d1)) {\r\n      /* If it is not saturday (6) or sunday (0), substract it */\r\n      if ((parseDate(day).getDay() % 6) != 0) {\r\n        days--;\r\n      }\r\n    }\r\n  });\r\n\r\n  return days\r\n}\r\n\r\n\r\n\r\nexport const GroupArrayByOccurances =(arr) =>{\r\n  var a = [],b = [],prev;\r\n  arr.sort();\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (arr[i] !== prev) {\r\n      a.push(arr[i]);\r\n      b.push(1);\r\n    } else {\r\n      b[b.length - 1]++;\r\n    }\r\n    prev = arr[i];\r\n  }\r\n  return [a, b];\r\n}\r\n\r\nexport const HandleTZDate = (DATE)=>{\r\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\" }\r\n  return new Date(DATE).toLocaleDateString(undefined, options)\r\n\r\n // let NewDate = DATE.split('T');\r\n\r\n // return NewDate[0]\r\n}\r\n\r\n// CLient Name for Filter\r\nexport const FindClientList = ()=>{\r\n  const MODEL = store.getState().SCANSTATE;\r\n  let ClientNames = []\r\n  MODEL.SelectedModel.STOREMARKERCENTERPOINTS.map((model,i)=>{\r\n      Object.keys(model.ClientGroupedBy).map(function(key, index) {\r\n          model.ClientGroupedBy[key].map((c,ii)=>{\r\n              if(ClientNames.indexOf(c.Customer) === -1){\r\n                  ClientNames.push(c.Customer)\r\n              }\r\n          })\r\n      })\r\n  })\r\n  return ClientNames\r\n}\r\n\r\n// UX Filters\r\n export const HandleResourceFilter=(item, filter)=>{\r\n    if(findIndex(item.resourceQuota, function(o) { return o.Trade === filter}) === -1)\r\n      return false  \r\n        return true\r\n }","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\SelectandReview.js",["2729","2730","2731","2732","2733"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\HeaderTitle.js",["2734","2735","2736","2737","2738"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Workorders.js",["2739","2740","2741"],"import React  from 'react'\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H2} from \"Pages/Auth/Components/Type\";\r\n\r\nimport WorkOrders_Basics from \"Pages/Auth/SingleModelResult/components/WorkOrders_Basics\";\r\nimport WorkOrder_Radial_Charts from \"Pages/Auth/SingleModelResult/components/WorkOrder_Radial_Charts\";\r\nimport WorkOrder_Basic_Charts from \"Pages/Auth/SingleModelResult/components/WorkOrders_Basic_Charts\";\r\n\r\nimport WorkordersOverTime from \"Pages/Auth/SingleModelResult/components/WorkOrders_OverTime\";\r\nimport WorkOrderHeatMap from   \"Pages/Auth/SingleModelResult/Maps/WorkOrder_Heatmap\";\r\n\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/ReviewGlobalFilter\";\r\nimport ModelMeta from \"Pages/Auth/SingleModelResult/Layout/ModelMeta\";\r\nimport AppBar from \"Pages/Auth/SingleModelResult/Layout/AppBar\"\r\n\r\nconst SubSection_Workorders = ()=>{\r\n\r\n    return(\r\n        <>\r\n            <div className=\"InnerFrame\">\r\n            <H2 Copy={`Work Orders`} /> \r\n            <Section>\r\n                <WorkOrders_Basics />\r\n                <WorkOrder_Radial_Charts /> \r\n                <WorkOrder_Basic_Charts />\r\n                <WorkOrderHeatMap />\r\n                <WorkordersOverTime />  \r\n            </Section> \r\n            </div>\r\n            <AppBar />\r\n            <div className=\"SideBarRight\"> \r\n                <ModelMeta />\r\n                <GlobalFilter />\r\n            </div>\r\n        </>\r\n    )  \r\n}\r\n/*\r\n\r\n            \r\n*/\r\nexport default SubSection_Workorders;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\FilterChips.js",["2742","2743","2744","2745","2746"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\AppBar.js",["2747","2748","2749","2750","2751","2752","2753"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Clusters.js",["2754","2755","2756","2757","2758","2759","2760","2761"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_CostAnalysis.js",["2762","2763","2764","2765"],"import React  from 'react'\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H2,P} from \"Pages/Auth/Components/Type\";\r\n\r\nimport Cost_Resources from \"Pages/Auth/SingleModelResult/components/Cost_Resources\";\r\nimport Cost_Resource_PieCharts from \"Pages/Auth/SingleModelResult/components/Cost_Resource_PieCharts\";\r\nimport Cost_Resource_OverTime from \"Pages/Auth/SingleModelResult/components/Cost_Resource_OverTime\";\r\nimport Cost_Trade_Heatmap from \"../Maps/Cost_Trade_Heatmap\";\r\n\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/ReviewGlobalFilter\";\r\nimport ModelMeta from \"Pages/Auth/SingleModelResult/Layout/ModelMeta\";\r\nimport AppBar from \"Pages/Auth/SingleModelResult/Layout/AppBar\"\r\n\r\nconst SubSection_Workorders = ()=>{\r\n\r\n    return(\r\n        <>\r\n            <div className=\"InnerFrame\">\r\n            <H2 Copy={`Cost Analysis`} />\r\n            <P Copy={`For Development Purposes ONLY!!! `}/>\r\n            <P Copy={`The Figures in the follow section are not based on real world figures.`}/>\r\n            \r\n \r\n            <Section>\r\n                <Cost_Resources />\r\n                 <Cost_Resource_PieCharts />\r\n                 <Cost_Resource_OverTime />\r\n                 <Cost_Trade_Heatmap />\r\n                \r\n                \r\n                    MORE TO COME... \r\n            </Section>  \r\n            </div>\r\n            <AppBar />\r\n            <div className=\"SideBarRight\"> \r\n                <ModelMeta />\r\n                <GlobalFilter />\r\n            </div>\r\n        </>\r\n    )  \r\n}\r\n/*\r\n\r\n         individual trade\r\n                \r\n                Location\r\n                bar Chart\r\n\r\n                Client\r\n                break down\r\n                pie\r\n                individual client   \r\n*/\r\nexport default SubSection_Workorders;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Locations.js",["2766","2767","2768","2769"],"import React  from 'react'\r\n\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H2} from \"Pages/Auth/Components/Type\";\r\n\r\n\r\n// components\r\nimport Locations_Basic_Stats from \"../components/Locations_Basic_Stats\"\r\nimport Locations_Basic_Charts from \"../components/Locations_Basic_Charts\";\r\n\r\nimport LocationHeatMap from \"../Maps/Location_Heatmap\";\r\nimport Location_ResourceSpread from \"../components/Location_ResourceSpread\";\r\nimport Location_WorkorderSpread from \"../components/Location_WorkOrderSpread\";\r\nimport LocationsNetwork from \"Pages/Auth/SingleModelResult/components/Locations_Network\";\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/ReviewGlobalFilter\";\r\nimport ModelMeta from \"Pages/Auth/SingleModelResult/Layout/ModelMeta\";\r\nimport AppBar from \"Pages/Auth/SingleModelResult/Layout/AppBar\"\r\n\r\nconst SubSection_Locations = ()=>{\r\n\r\n    return(\r\n        <>\r\n            <div className=\"InnerFrame\">\r\n                <H2 Copy={`Locations`} /> \r\n                \r\n                 \r\n                <Section>\r\n                    <Locations_Basic_Stats />    \r\n                    <LocationsNetwork />  \r\n                    <Locations_Basic_Charts />\r\n                    <LocationHeatMap />\r\n                    <Location_ResourceSpread />      \r\n                    <Location_WorkorderSpread /> \r\n                </Section> \r\n            </div>\r\n            <AppBar />\r\n            <div className=\"SideBarRight\"> \r\n                <ModelMeta />\r\n                <GlobalFilter />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// <Location_CLusterSpreadbyClient />\r\nexport default SubSection_Locations;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Client.js",["2770"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_FullMap.js",["2771","2772","2773","2774","2775","2776","2777","2778","2779"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\LocationMarkers.js",["2780","2781","2782","2783","2784","2785","2786","2787","2788","2789"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\SubSections\\SubSection_Trade.js",["2790","2791","2792","2793","2794","2795","2796","2797"],"import React  from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H1,H2,H4,P} from \"Pages/Auth/Components/Type\";\r\n\r\nimport Trade_ResourceAllocation from \"Pages/Auth/SingleModelResult/components/Trade_ResourceAllocation\";\r\nimport Trade_Radial_Charts from \"Pages/Auth/SingleModelResult/components/Trade_Radial_Charts\";\r\nimport Trade_Radial_Clients from \"Pages/Auth/SingleModelResult/components/Trade_Radial_Clients\";\r\nimport Trade_ResourceAllocationOverTime from \"Pages/Auth/SingleModelResult/components/Trade_AllocationOverTime\";\r\nimport TradeSpecific_ClientBreakdown from \"Pages/Auth/SingleModelResult/components/Trade_Specific_ClientBreakdown\";\r\nimport TradeSpecific_Overview from \"Pages/Auth/SingleModelResult/components/Trade_Specific_Overview\";\r\nimport Trade_Ratios from \"Pages/Auth/SingleModelResult/components/Trade_Ratios\";\r\nimport TradeHeatMap from  \"Pages/Auth/SingleModelResult/Maps/Trade_Heatmap\";\r\nimport FaceIcon from '@material-ui/icons/Face';\r\n\r\n\r\nimport GlobalFilter from \"Pages/Auth/Components/Layout/ReviewGlobalFilter\";\r\nimport ModelMeta from \"Pages/Auth/SingleModelResult/Layout/ModelMeta\";\r\nimport AppBar from \"Pages/Auth/SingleModelResult/Layout/AppBar\"\r\n\r\nconst SubSection_Trade = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n    \r\n    return(\r\n        <>\r\n        <div className=\"InnerFrame\">\r\n            <H2 Copy={`Resources`} /> \r\n            <Section>           \r\n                <Trade_ResourceAllocation />  \r\n                <Trade_Radial_Charts />\r\n                <Trade_Radial_Clients />     \r\n                <TradeHeatMap /> \r\n                <Section>\r\n                    { UX.AreaSelectFilter.ByResourceType === false ? <SelectATrade /> :<TradeSpecificComponents />}\r\n                </Section>\r\n            </Section>  \r\n            </div>\r\n            <AppBar />\r\n            <div className=\"SideBarRight\">  \r\n                <ModelMeta />\r\n                <GlobalFilter />\r\n            </div>\r\n       </>  \r\n    ) \r\n}\r\n\r\n//  <Trade_Ratios />\r\nexport default SubSection_Trade;\r\n\r\n\r\nconst SelectATrade = ()=>{\r\n    return(\r\n        <Section>\r\n            <div className=\"PleaseSelectOption\">\r\n                <FaceIcon />\r\n                <H4 Copy={`No Resource Type Selected`}/>\r\n                <P Copy={`To use this Section a Resource Type must be selected from the Filter Above.`} />\r\n            </div>\r\n            \r\n        </Section>\r\n    )\r\n}\r\n\r\nconst TradeSpecificComponents=()=>{\r\n    return(\r\n        <Section className=\"SelectedItem\"> \r\n                <TradeSpecific_Overview />    \r\n                <TradeSpecific_ClientBreakdown /> \r\n                <Trade_ResourceAllocationOverTime />\r\n                \r\n                break down stats for each resource Type. i.e. handyman section\r\n           </Section>\r\n    )\r\n}","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ColorKey.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkersCenterpoints.js",["2798","2799"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Circle } from '@react-google-maps/api';\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\nimport {RegionColor} from \"actions/HandleUX\"\r\n\r\n\r\n\r\nconst MarkerCenterpoints = ()=>{\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [Centerpoints, setCenterpoints] = useState(null)\r\n    \r\n    const CreateCenterpoints = ()=>{\r\n        let StorePoints=[]       \r\n        SCAN.MarkerScanCenterPoints.map((center,i)=>{\r\n        \r\n/*\r\n                        {\r\n                            name:site.name,\r\n                            center:{\r\n                                lat: site.lat,\r\n                                lng: site.long\r\n                              },\r\n                            range:Range.range[1]\r\n                        }\r\n            */\r\n           //console.log(center.center, center.range)\r\n           \r\n           \r\n\r\n           let options = {\r\n               strokeColor: RegionColor(center.scanCategory),\r\n               strokeOpacity: 0.9,\r\n               strokeWeight: 1,\r\n               fillColor: RegionColor(center.scanCategory),\r\n               fillOpacity: 0.2,\r\n               radius: ((center.range*1000)),\r\n               zIndex: 1\r\n             }\r\n            let Featheroptions = {\r\n                strokeColor: RegionColor(center.scanCategory),\r\n                strokeOpacity: 0.7,\r\n                strokeWeight: 3,\r\n                fillColor: RegionColor(center.scanCategory),\r\n                fillOpacity: 0.01,\r\n                radius: (( (center.range+((center.feather/100)*center.range)) *1000)),  \r\n                zIndex: 1\r\n              }\r\n           StorePoints.push(\r\n                <span key={i}>\r\n                    <Circle center={center.center} options={options}/>\r\n                    <Circle center={center.center} options={Featheroptions}/>\r\n                </span>\r\n           )\r\n            \r\n        })\r\n        setCenterpoints(StorePoints)\r\n        \r\n    }\r\n    \r\n    \r\n    useEffect(()=>{  CreateCenterpoints() },[SCAN.MarkerScanCenterPoints])\r\n\r\n    useEffect(()=>{},[ Centerpoints])\r\n\r\n    return(\r\n        <>\r\n        {Centerpoints}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerCenterpoints;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\MarkerBasedResults.js",["2800"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\MapComponents\\ResidualLocationMarkers.js",["2801","2802","2803","2804","2805","2806","2807","2808","2809"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoRadial.js",["2810","2811","2812","2813"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\LoginForm.js",["2814","2815","2816"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ConfirmCompareBtn.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompare.js",["2817"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\GeoLocationActions.js",["2818","2819","2820","2821","2822","2823","2824","2825"],"import { Circle } from '@react-google-maps/api';\r\nimport store from \"../store/index\"\r\nimport {ClusterAnalysis} from \"./ClusterAnalysis\";\r\n\r\n\r\n\r\n/*\r\n    This class should deal with Geolocation Processes ONLY\r\n    all result filtering to be handled in phase two\r\n\r\n*/\r\n\r\n\r\n// find the distance in KM from 1 point to another\r\nexport function distancetoPoint(lat1, lon1, lat2, lon2, unit) {\r\n    if ((lat1 == lat2) && (lon1 == lon2)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var radlat1 = Math.PI * lat1/180;\r\n        var radlat2 = Math.PI * lat2/180;\r\n        var theta = lon1-lon2;\r\n        var radtheta = Math.PI * theta/180;\r\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n        if (dist > 1) {\r\n            dist = 1;\r\n        }\r\n        dist = Math.acos(dist);\r\n        dist = dist * 180/Math.PI;\r\n        dist = dist * 60 * 1.1515;\r\n        if (unit==\"K\") { dist = dist * 1.609344 }\r\n        if (unit==\"N\") { dist = dist * 0.8684 }\r\n        return dist;\r\n    }\r\n}\r\n\r\n// use to find the scan box area.\r\n// this function return the corosponding lnglat to a given point\r\n\r\n\r\nexport  function llFromDistance(latitude, longitude, distance, bearing) {\r\n    // taken from: https://stackoverflow.com/a/46410871/13549 \r\n    // distance in KM, bearing in degrees\r\n  \r\n    const R = 6378.1; // Radius of the Earth\r\n    const brng = bearing * Math.PI / 180; // Convert bearing to radian\r\n    let lat = latitude * Math.PI / 180; // Current coords to radians\r\n    let lon = longitude * Math.PI / 180;\r\n  \r\n    // Do the math magic\r\n    lat = Math.asin(Math.sin(lat) * Math.cos(distance / R) + Math.cos(lat) * Math.sin(distance / R) * Math.cos(brng));\r\n    lon += Math.atan2(Math.sin(brng) * Math.sin(distance / R) * Math.cos(lat), Math.cos(distance / R) - Math.sin(lat) * Math.sin(lat));\r\n  \r\n    // Coords back to degrees and return\r\n    return [(lat * 180 / Math.PI), (lon * 180 / Math.PI)];\r\n  \r\n  }\r\n\r\n\r\n  export const TestBoundaries = (site, Area)=>{\r\n    let found=false;\r\n    if(site.lat <=  Area.north && site.lat >= Area.south && site.long >= Area.west && site.long <= Area.east ){found=true}\r\n    return found\r\n}\r\n\r\n\r\n\r\n\r\n\r\n \r\n// Main Scan Class\r\nexport function PreformScan(){\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /* Variables */\r\n    /* *************************************************************************************************************** */        \r\n    \r\n    //this.Area=.5\r\n    //this.ScanDistanceArea=this.Area;\r\n    //this.SearchRadius = .5\r\n    //this.minSites=2\r\n    //this.WorkOrderVariants = [500,1500];\r\n    this.FilterVariables=null\r\n\r\n\r\n    this.Boundaries=null;\r\n    this.setGridpoints=null;\r\n    this.setGridPointer=null;\r\n\r\n    this.TestAgainstSites=null;\r\n    this.ScanResults=[];\r\n    this.setScanResults=null\r\n    this.sleepFor=10;\r\n    this.NESW={ north: null, south: null, east: null,  west: null }\r\n    \r\n    \r\n    this.PointOptions={\r\n        strokeColor: '#FF0000',\r\n        strokeOpacity: 0.5,\r\n        strokeWeight: 1,\r\n        fillColor: '#FF0000',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 10,\r\n        zIndex: 1\r\n      }\r\n         \r\n     this.GridPointerOptions = {\r\n        strokeColor: '#00ff00',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 1,\r\n        fillColor: '#00ff00',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 100,\r\n        zIndex: 10\r\n      }\r\n\r\n      this.GridResultOptions={\r\n        strokeColor: '#00ff00',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 1,\r\n        fillColor: '#00ff00',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 1000,\r\n        zIndex: 10\r\n      }\r\n\r\n      this.recOptions={\r\n        strokeColor: '#6094ff',\r\n        strokeOpacity: 0.9,\r\n        strokeWeight: 1,\r\n        fillColor: '#6094ff',\r\n        fillOpacity: 0.15,\r\n      }\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /*  AUX Functions*/\r\n    /* *************************************************************************************************************** */        \r\n\r\n    this.sleep = ()=>{  return new Promise(resolve => setTimeout(resolve, this.sleepFor)) }\r\n    \r\n    this.BreakBoundaries=(Boundaries)=>{\r\n        this.NESW = {  north: Boundaries[1], south: Boundaries[0], east: Boundaries[3], west: Boundaries[2] }\r\n    }\r\n\r\n    this.arePointsNear = (checkPoint, centerPoint, km) => {\r\n                var ky = 40000 / 360;\r\n                var kx = Math.cos(Math.PI * centerPoint.lat / 180.0) * ky;\r\n                var dx = Math.abs(centerPoint.lng - checkPoint.lng) * kx;\r\n                var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\r\n                return Math.sqrt(dx * dx + dy * dy) <= km;\r\n            }\r\n\r\n    this.RemoveDuplicates =()=>{\r\n\r\n    }\r\n\r\n    /* *************************************************************************************************************** */        \r\n    /* Process */\r\n    /* *************************************************************************************************************** */        \r\n\r\n    this.Scan=()=>{\r\n            //console.log(\"START SCAN \")\r\n            //console.log(\"Scan Filters\", this.FilterVariables)\r\n            \r\n            this.BreakBoundaries(this.Boundaries)\r\n            //console.log(this.NESW)\r\n            \r\n            \r\n            //console.log(this.FilterVariables.Area, this.FilterVariables);\r\n            let Xiterations = distancetoPoint(this.NESW.north,this.NESW.west, this.NESW.north, this.NESW.east,'K')/this.FilterVariables.GridSpacing;\r\n            let Yiterations = distancetoPoint(this.NESW.north,this.NESW.west, this.NESW.south, this.NESW.west,'K')/this.FilterVariables.GridSpacing;\r\n\r\n            //console.log( Xiterations, Yiterations);\r\n            //let ScanBoxStartingPosition = llFromDistance(this.NESW.north, this.NESW.west, Math.sqrt(2)*this.Area, 135)\r\n            \r\n            //let LargestSurfaceArea = Math.max(Math.ceil(Xiterations), Math.ceil(Yiterations))\r\n\r\n            this.setGridPointer(<Circle options={this.GridPointerOptions}  center={{ lat: this.NESW.north, lng: this.NESW.west }} />)\r\n            this.FindScanPoints(Math.ceil(Xiterations), Math.ceil(Yiterations))\r\n            \r\n        }\r\n\r\n\r\n\r\n    this.FindScanPoints = (Xiterations, Yiterations)=>{\r\n\r\n        //console.log(Xiterations, Yiterations);\r\n\r\n        let LargestSurfaceArea = Math.max(Xiterations, Yiterations)\r\n        let i=0;\r\n        let Points = []\r\n        let ReturnedLngLat;\r\n\r\n      \r\n        while( i < LargestSurfaceArea){\r\n           \r\n            ReturnedLngLat = llFromDistance(this.NESW.north, this.NESW.west, (Math.sqrt(2)*(i*this.FilterVariables.GridSpacing)), 135)\r\n            //console.log(ReturnedLngLat[0],ReturnedLngLat[1])\r\n            Points.push([ReturnedLngLat[0],ReturnedLngLat[1]]) \r\n            \r\n            i++\r\n        }\r\n\r\n        //console.log(Points);\r\n        this.MapScanPoints(Points, Xiterations, Yiterations)\r\n    }\r\n\r\n\r\n\r\n    this.MapScanPoints=(Points, Xiterations, Yiterations)=>{\r\n\r\n        let MapGrid=[]\r\n        let createCircles=[];\r\n\r\n\r\n        let ii=0;\r\n\r\n        while(ii < Yiterations){\r\n            let Row=0, Col=0, iii=0\r\n            while(iii < Xiterations){\r\n                Row=ii;\r\n                Col=iii\r\n                    //console.log([Row,Col])\r\n                    MapGrid.push([Points[Row][0], Points[Col][1]])\r\n                    createCircles.push(<Circle key={ii+iii} options={this.PointOptions}  center={{ lat: Points[Row][0], lng: Points[Col][1] }} />)\r\n                    iii++\r\n            }\r\n            ii++\r\n        }\r\n        //console.log(MapGrid);\r\n        this.setGridpoints(createCircles)\r\n        this.RunScanTest (MapGrid)\r\n    }\r\n\r\n\r\n    this.RunScanTest = async(MapGrid)=>{\r\n        \r\n        // Variables\r\n        this.setScanResults(null)\r\n        let i=0\r\n        // run loop to scan through Grid points\r\n        while(i<MapGrid.length){\r\n            // Hold scan point for FE show only\r\n            await this.sleep()\r\n            // find\r\n          //  let ScanBoxNewPosition = llFromDistance(MapGrid[i][0], MapGrid[i][1], Math.sqrt(2)*this.Area, 135)\r\n          //  south: ScanBoxNewPosition[0],east: ScanBoxNewPosition[1],\r\n            this.setGridPointer(<Circle options={this.GridPointerOptions}  center={{ lat: MapGrid[i][0], lng: MapGrid[i][1] }} />)\r\n            \r\n            // Create Circle Center point to scan in next function hand off.\r\n            let ScanBoundary = { north: MapGrid[i][0],  west: MapGrid[i][1] }\r\n            \r\n            this.scanTestDiameter(ScanBoundary)\r\n            \r\n            i++\r\n        }\r\n\r\n        this.setGridPointer(<Circle visible={false} options={this.GridPointerOptions}   />)\r\n        this.StoreResults()\r\n        ClusterAnalysis(this.ScanResults)\r\n        \r\n    }\r\n\r\n\r\n\r\n    this.scanTestDiameter = (ScanBoundary)=>{\r\n\r\n        // This function checks to see if a site is within the Radius of the center point in the scan\r\n        // it should check each site lng/lst. if true then store in array this.ScanResults;\r\n       \r\n        // Outer Global Variables\r\n        let CollectSites=[];\r\n        let long=[],lat=[],GroupedBoxBoundaryLimits=[];\r\n       // Variables\r\n       let WorkOrderCount = 0;\r\n\r\n        // Loop known sites in this area for matches\r\n        this.TestAgainstSites.map((site,i)=>{\r\n            \r\n            \r\n            if(this.arePointsNear({ lat: site.lat, lng: site.long}, { lat: ScanBoundary.north, lng: ScanBoundary.west }, this.FilterVariables.SearchRadius)){\r\n\r\n                //console.log(site)\r\n\r\n                // Push Values into Arrays\r\n                long.push(site.long);\r\n                lat.push(site.lat)\r\n                CollectSites.push(site);\r\n                \r\n                //console.log(site)\r\n                //if(site.count[0] !== null) WorkOrderCount = WorkOrderCount + site.count[0].WorkOrders;\r\n               \r\n              \r\n            } // close if true\r\n           \r\n          })  // close Map\r\n\r\n            // Limit Boundaries to outer most\r\n            GroupedBoxBoundaryLimits.push([Math.max(...long), Math.min(...long), Math.max(...lat), Math.min(...lat)])\r\n            // if work orders !0 ship it off for processing\r\n            /*\r\n            if( WorkOrderCount >= this.FilterVariables.MinWorkOrder \r\n                && WorkOrderCount <= this.FilterVariables.MaxOrderOrders \r\n                && CollectSites.length>=this.FilterVariables.minSites)\r\n                { }\r\n            */\r\n                this.ProcessGridBoundary(CollectSites, GroupedBoxBoundaryLimits, ScanBoundary)\r\n        }\r\n\r\n \r\n\r\n    this.ProcessGridBoundary=(Sites, GroupedBoxBoundaryLimits, ScanBoundary)=>{\r\n     \r\n        // Variables\r\n        let tmp = [];\r\n        let remove=[];\r\n        let removeDuplicateBoundaryLimits;\r\n        \r\n        // remove any dupliactes from arrays\r\n        removeDuplicateBoundaryLimits = GroupedBoxBoundaryLimits.filter(function (v, i) {\r\n            if (tmp.indexOf(v.toString()) < 0) \r\n                { \r\n                    tmp.push(v.toString());\r\n                    return v;\r\n                }else{\r\n                    remove.push(i)\r\n                }\r\n        });\r\n\r\n        remove.map((id,i)=>{ Sites.splice(id, 1);})\r\n\r\n        // only add items with a site count\r\n        if(Sites.length>0){\r\n            this.ScanResults.push({\r\n                Sites:Sites,\r\n                SiteCount:Sites.length,\r\n                Boundary:ScanBoundary,\r\n                //WorkOrderCount:WorkOrderCount,\r\n                GroupedBoxBoundaryLimits:removeDuplicateBoundaryLimits[0]\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    this.StoreResults = ()=>{\r\n\r\n\r\n        //console.log(\"Scan End Num\", this.ScanResults.length)\r\n        // Store Results\r\n        store.dispatch({ type:'SCANSTATE', payload:false}); \r\n        \r\n        \r\n        //store.dispatch({ type:'STORERESULTS', payload:this.ScanResults});        \r\n \r\n    }\r\n\r\n} ","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanReviewSelectedItems.js",["2826","2827","2828","2829","2830","2831"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoNetwork.js",["2832","2833","2834"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\CompareGlobalFilter.js",["2835","2836"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Resources_Main.js",["2837","2838","2839","2840"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Clients_Main.js",["2841","2842","2843","2844","2845"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Clusters_Main.js",["2846","2847","2848"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\WorkOrders_Main.js",["2849","2850","2851","2852","2853"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Network.js",["2854","2855"],"import React  from 'react'\r\nimport {useContext_COMMS_FULL} from 'Context/COMMS'\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport NivoNetwork from \"venders/Nivo/NivoNetwork\"\r\n\r\n\r\n\r\nconst LocationsNetwork = ()=>{\r\n    const CHARTSETUP = useContext_COMMS_FULL().ChartSetup\r\n    const CHARTMETA = useContext_COMMS_FULL().ChartMeta\r\n\r\n    return( \r\n        <>\r\n        \r\n            <ChartHeader Section='Locations' Chart='Network' Meta='Network'/>\r\n            <div style={{height: 400, width:'100%'}}><NivoNetwork /></div>\r\n        </>\r\n    ) \r\n\r\n}\r\n\r\nexport default LocationsNetwork; ","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\SubSections\\Locations_Main.js",["2856","2857","2858","2859","2860"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\TableHeader.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ResourceAllocationScan\\Results\\ClusterResults.js",["2861","2862","2863","2864"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport{NumberReducer} from \"actions/HandleUX\";\r\n\r\n//import DeleteClusterBtn from \"../Controls/buttons/DeleteClusterBtn\";\r\n//import BacktoMap from \"../Controls/buttons/BacktoMapBtn\";\r\n//import ClusterMap from \"../../Prototype/Components/Map/clusterMap/clustermap\"\r\n//import MoreInfo from \"./MoreInfo\";\r\n\r\n\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nconst ClusterResult = (props)=>{\r\n\r\n    const {result, i} = props;\r\n    const [Multiplier, setMultiplier]= useState(1000)\r\n    const [ClusterTotal, setClusterTotal] = useState(0)\r\n\r\n\r\n    const FindClusterTotal = (result)=>{\r\n        let total=0;\r\n        result.ClusterCost.map((type,i)=>{ total = total + type[1] })\r\n        \r\n        setClusterTotal(NumberReducer(parseFloat((total*Multiplier).toFixed(2))))\r\n    }\r\n\r\n\r\n    useEffect(()=>{ \r\n        //FindClusterTotal(result) \r\n        //console.log(result)\r\n    },[result])\r\n\r\n    return(\r\n        <>\r\n            <h3><LocationCityIcon /> Cluster { (i+1) }  - <strong>{result.scanCategory}</strong></h3>\r\n            <h3>Cluster Resource Quota : <strong>{result.resourceQuota.toFixed(2)}</strong></h3> \r\n            <h3>est Cluster Cost : <strong>${0}</strong></h3>\r\n            <div className=\"ListResultContainer\">\r\n                <div className=\"Title\">\r\n                <h3> {result.name}</h3>\r\n                </div>\r\n                Add Map and Cluster Details once Data dump has been completed\r\n\r\n            </div>\r\n                \r\n               \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClusterResult;\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleScanProcess.js",["2865"],"\r\n// Private Functions\r\nimport store from \"../store/index\"\r\nimport axios from 'axios';\r\nimport {useAPILOCATION} from \"./authUser\"\r\n\r\n\r\n\r\nexport const CreateNewScan = (value)=>{  store.dispatch({ type:'CREATENEWDATASET', payload:value});} \r\n\r\n\r\nexport const SetSelected = (value)=>{\r\n    store.dispatch({ type:'USERDATASETSELECTEDDATABASE', payload:value});\r\n    \r\n}\r\n\r\nexport const StoreSelected_Single =(Data)=>{\r\n\r\n    //console.log(Data);\r\n    store.dispatch({ type:'USERSTORESINGLEDATASET', payload:Data});\r\n} \r\n\r\nexport const BacktoScanOptions = ()=>{\r\n        //console.log(\"BACK\");\r\n        CreateNewScan(false)\r\n        SetSelected(false)\r\n        StoreSelected_Single([])    \r\n}\r\n\r\nexport const BacktoAddItemsSingle = ()=>{\r\n    //console.log(\"BACK to Select\");\r\n    \r\n    SetSelected(false)\r\n   // StoreSelected_Single([]) \r\n}\r\n\r\n\r\nexport const ResetCreateNewModel = ()=>{\r\n\r\n  \r\n    store.dispatch({ type:'CREATENEWDATASET', payload:false})\r\n    store.dispatch({ type:'USERDATASETSELECTEDDATABASE', payload:false})\r\n    store.dispatch({ type:'USERSTORESINGLEDATASET', payload:[]})\r\n    store.dispatch({ type:'USERSCANPROCESSING', payload:false})\r\n}\r\n\r\nexport const FetchSelectedItems = async  (DATA, TITLE, DESCRIPTION, S,E)=>{\r\n\r\n    let IDStr=[];\r\n    DATA.map((customer,i)=>{\r\n            IDStr.push(customer.id)\r\n    })\r\n\r\n    const ENDPOINT=useAPILOCATION()+'sites/scan'\r\n    const JWTToken = store.getState().AUTH.jwt;\r\n    const AuthUSer = store.getState().AUTH.user\r\n    const axiosHeader = {Authorization: \"Bearer \" + JWTToken}\r\n\r\n    \r\n    \r\n\r\n    //console.log(\"Items sent to Strapi \", IDStr.length)\r\n    //console.log(AuthUSer.id,  TITLE, DESCRIPTION)\r\n    const ScanName=TITLE\r\n    const ScanDescription=DESCRIPTION\r\n    \r\n    \r\n    store.dispatch({ type:'USERSCANPROCESSING', payload:true}); \r\n\r\n    //await axios.get(ENDPOINT+IDStr.toString()) \r\n\r\n   await axios({ url: ENDPOINT+'/'+[S,E].toString()+'/'+ScanName+'/'+ScanDescription+'/'+AuthUSer.id+'/'+IDStr.toString(), method: 'get', headers: axiosHeader})\r\n        .then(function (res) {\r\n            //console.log(\"Create Model Return Value from Server\", res.data);\r\n            \r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n        .then(function () {\r\n            // always executed\r\n        });\r\n}","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\HandleCompare.js",["2866","2867"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_WorkOrderSpread.js",["2868"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Charts.js",["2869","2870","2871","2872"],"import React, {useEffect} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\n// Actions\r\nimport {OBJ_SITE_GLOBAL,OBJ_CLUSTER_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n// Template\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\n\r\n// Chart\r\nimport Locaction_Radial_Clusters from 'Pages/Auth/SingleModelResult/Charts/Location_Radial_Clusters'\r\nimport Chart_Pie_OutofScope from 'Pages/Auth/SingleModelResult/Charts/Location_Pie_OutofScope'\r\n\r\nconst Locations_Radial_Pie_Charts=()=>{\r\n\r\n    const UX = useContext_UX_FULL();  \r\n\r\n    useEffect(()=>{  },[UX]);\r\n    return(\r\n        <DiagramContainer>\r\n            \r\n            <div className=\"resultCharts\">\r\n                <Locaction_Radial_Clusters />\r\n                <Chart_Pie_OutofScope />\r\n            </div> \r\n             \r\n            <Stats_Bar data={OBJ_CLUSTER_GLOBAL()} name={`name`} value={`Appearances`}/>\r\n            \r\n        </DiagramContainer> \r\n    )\r\n}\r\n\r\nexport default Locations_Radial_Pie_Charts;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\ReviewGlobalFilter.js",["2873","2874","2875"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\ClusterAnalysis.js",["2876","2877","2878","2879","2880","2881","2882","2883","2884","2885","2886","2887","2888","2889","2890","2891","2892","2893","2894","2895","2896","2897","2898","2899"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Location_ResourceSpread.js",["2900"],"import React, {useEffect} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\n\r\n// Layout\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\n// Charts\r\nimport ClusterSwarmPlot from 'Pages/Auth/SingleModelResult/Charts/Clusters_SwarmPlot_Numbers'\r\nimport ClusterBar_ResourceAllocation from 'Pages/Auth/SingleModelResult/Charts/Cluster_Bar_ResourceAllocation'\r\n\r\n\r\nconst LocationResourceSpread = ()=>{\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL()\r\n    useEffect(()=>{ },[UX, MODEL]) \r\n\r\n    return(\r\n        <>\r\n        <DiagramContainer>\r\n            <ClusterSwarmPlot />\r\n        </DiagramContainer>\r\n        <DiagramContainer>\r\n          <ClusterBar_ResourceAllocation /> \r\n        </DiagramContainer>\r\n        </>\r\n        \r\n    ) \r\n}\r\nexport default LocationResourceSpread;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_SingleSelectedComponents.js",["2901","2902","2903"],"import React, { useEffect, useState }  from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\nimport {findClientName} from \"actions/ClusterAnalysis\"\r\nimport {      \r\n    ClientOutOfScopeNum,\r\n    OBJ_CLIENT_GLOBAL_Filter\r\n} from \"actions/CreateSingleViewModel\"\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport {H2,H3,H4, P} from \"Pages/Auth/Components/Type\";\r\n\r\nimport ClientResourceDistribution from \"Pages/Auth/SingleModelResult/components/Client_ResourceDistribution\";\r\nimport Client_WorkOrderDistribution from \"Pages/Auth/SingleModelResult/components/Client_WorkOrderDistribution\";\r\nimport Client_Selected_ClusterSpread from \"Pages/Auth/SingleModelResult/components/Client_Selected_ClusterSpread\";\r\n\r\nimport {find} from 'lodash'\r\n\r\n/* ************************************** */\r\n// Client specific section\r\n// Move to own file\r\n\r\n\r\nconst ClientSpecificComponents = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n\r\n    return( \r\n        <Section className=\"SelectedItem\">\r\n             <H2 Copy={`Selected Client : ${findClientName(UX.AreaSelectFilter.ByClient)}`}/>\r\n             <P copy={`The following is a breakdown of how ${findClientName(UX.AreaSelectFilter.ByClient)} fits into the Model`} />\r\n\r\n                <ByClientBaseNumbers /> \r\n                <ClientResourceDistribution /> \r\n                <Client_WorkOrderDistribution />\r\n                <Client_Selected_ClusterSpread /> \r\n                  \r\n        </Section>\r\n    ) \r\n}\r\n\r\n\r\nconst ByClientBaseNumbers = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const [ClientResources,setClientResources ] = useState(null) \r\n\r\n    useEffect(()=>{\r\n        setClientResources(find(OBJ_CLIENT_GLOBAL_Filter(), function(o) { return o.name === findClientName(UX.AreaSelectFilter.ByClient)}));\r\n    },[UX])\r\n\r\n    return(\r\n        <> { ClientResources !== null ? <DisplayNumbers ClientResources={ClientResources}/>:false }</>\r\n    )\r\n}\r\n\r\nexport default ClientSpecificComponents;\r\n\r\nconst DisplayNumbers = (props)=>{\r\n\r\n    const {ClientResources} = props\r\n\r\n    useEffect(()=>{},[ClientResources])\r\n    return(\r\n        <ul className=\"Pod_List\">\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy= {ClientResources.Resources}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`Resources`}/></div>\r\n            </li>\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy={ClientResources['Work Orders']}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`Work Orders`}/></div>\r\n            </li>\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy={ClientResources.Clusters}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`found in Clusters`}/></div>\r\n            </li>\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy={ClientOutOfScopeNum()[0]}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`Sites Out of Scope`}/></div>\r\n            </li>\r\n            <li className=\"Pod\">\r\n                <div className=\"Data\"><P Copy={ClientOutOfScopeNum()[1]}/></div>\r\n                <div className=\"Title\"> <H4 Copy={`Uncounted Work Orders`}/></div>\r\n            </li>\r\n        </ul>\r\n    )\r\n}","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Layout\\ModelMeta.js",["2904"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Locations_Basic_Stats.js",["2905","2906","2907","2908","2909"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMMS_FULL} from 'Context/COMMS'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { numberWithCommas, gl} from \"actions/HandleUX\";\r\nimport {OBJ_SITE_GLOBAL} from 'actions/CreateSingleViewModel'\r\n\r\nimport {H4,H3, P} from \"Pages/Auth/Components/Type\"\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst HeaderLocations=()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const COMMS = useContext_COMMS_FULL()\r\n\r\n    const INFO = COMMS.information;\r\n\r\n    const MODEL = SCAN.SelectedModel\r\n    const [SiteBreakdown, setSiteBreakdown] = useState([])\r\n    const [totalLocations, setTotalLocations] = useState(0)\r\n    const SiteNum=()=>{\r\n        let SiteCount=[];\r\n        MODEL.STOREMARKERCENTERPOINTS.map((model,i)=>{ SiteCount.push(model.StripedSites.length) })\r\n        return SiteCount.reduce((a, b) => a + b, 0)\r\n    }\r\n\r\n    useEffect(()=>{ \r\n        setSiteBreakdown(OBJ_SITE_GLOBAL()) \r\n        setTotalLocations(MODEL.SITESINSCOPE+MODEL.SITESINPARCITALSCOPE+MODEL.SITESOUTOFSCOPE)\r\n        console.log(MODEL.SITESINSCOPE)\r\n    },[UX]);\r\n\r\n\r\n\r\n    const Numbers=[\r\n        {\r\n            info:INFO.CLUSTER,\r\n            number:gl(MODEL.STOREMARKERCENTERPOINTS),\r\n            label:'Clusters',\r\n            perc:null\r\n        },{\r\n            info:INFO.TOTALLOCATIONS,\r\n            number:totalLocations,\r\n            label:'Total Locations',\r\n            perc:null\r\n        },{\r\n            info:INFO.LOCATIONSINSCOPE,\r\n            number:MODEL.SITESINSCOPE, \r\n            label:'Locations Inscope',\r\n            perc:`${((MODEL.SITESINSCOPE/totalLocations*100)).toFixed(2)} %`\r\n        },{\r\n            info:INFO.LOCATIONSOUTSCOPE,\r\n            number:numberWithCommas(MODEL.SITESINPARCITALSCOPE),\r\n            label:'Partital Scope',\r\n            perc:`${((MODEL.SITESINPARCITALSCOPE/totalLocations*100)).toFixed(2)} %`\r\n        },{\r\n            info:INFO.LOCATIONSOUTSCOPE,\r\n            number:numberWithCommas(MODEL.SITESOUTOFSCOPE),\r\n            label:'Out of Scope',\r\n            perc:`${((MODEL.SITESOUTOFSCOPE/totalLocations*100)).toFixed(2)} %`\r\n        },{\r\n            info:INFO.EXCLUDEDLOCATIONS,\r\n            number:numberWithCommas((gl(MODEL.USERSELECTEDLIST) - totalLocations)  ),\r\n            label:'Excluded Locations',\r\n            perc:null\r\n        },{\r\n            info:INFO.FULLPORTFOLIO,\r\n            number:numberWithCommas( gl(MODEL.USERSELECTEDLIST) ),\r\n            label:'Full Portfolio',\r\n            perc:null\r\n        }\r\n    ]\r\n\r\n    return(\r\n        <>       \r\n                <ul className=\"Pod_List\">\r\n                    {\r\n                        Numbers.map((number,i)=>{\r\n                            return(\r\n                                <Tooltip title={number.info} key={i}>\r\n                                    <li className=\"Pod\">\r\n                                        <div className=\"Data\"><P Copy= {number.number}/></div>\r\n                                        <div className=\"Title\"> <H4 Copy={number.label}/></div>\r\n                                        <div className=\"Data Strong\"><P Copy={number.perc} /></div>\r\n                                        \r\n                                        <HelpOutlineIcon />\r\n                                    </li> \r\n                                </Tooltip>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n        </>\r\n    )\r\n}\r\nexport default HeaderLocations;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_ResourceAllocationOverTime.js",["2910"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Cost_Trade_Heatmap.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_WorkordersOverTime.js",["2911"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_Basic_Differences.js",["2912","2913","2914","2915"],"import React from 'react'\r\n\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\n// Charts\r\nimport Client_Sunburst from 'Pages/Auth/SingleModelResult/Charts/Client_Sunburst'\r\nimport Client_Pie_Resources from 'Pages/Auth/SingleModelResult/Charts/Client_Pie_Resources'\r\nimport Client_Pie_Sites from 'Pages/Auth/SingleModelResult/Charts/Client_Pie_Sites'\r\nimport Client_Pie_WorkOrders from 'Pages/Auth/SingleModelResult/Charts/Client_Pie_WorkOrders'\r\nimport ClientResourceSiteStatsBar from \"Pages/Auth/SingleModelResult/components/Clients_Site_Resource_StatsBar\";\r\n\r\nconst Client_Wrapup= ()=>{\r\n\r\n \r\n    return(\r\n        <>\r\n        <Client_Sunburst />\r\n        <DiagramContainer>\r\n                \r\n            <div className=\"resultCharts\">\r\n                <Client_Pie_Resources /> \r\n                <Client_Pie_Sites />\r\n                <Client_Pie_WorkOrders />\r\n            </div>\r\n            <ClientResourceSiteStatsBar /> \r\n        </DiagramContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Client_Wrapup; ","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Location_Heatmap.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\CreateNewModel.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_ResourceAllocation.js",["2916","2917","2918","2919"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Specific_ClientBreakdown.js",["2920","2921","2922","2923"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Ratios.js",["2924","2925","2926","2927","2928"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Cost_Resource_OverTime.js",["2929","2930","2931","2932"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Radial_Clients.js",["2933","2934","2935"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {OBJ_CLIENT_RESOURCES, fixNumber} from \"actions/CreateSingleViewModel\"\r\nimport {colorArray} from \"actions/HandleUX\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\n\r\nimport {partial,sumBy} from 'lodash';\r\nimport { Radar, RadarChart, PolarGrid,PieChart,Pie,Cell, PolarAngleAxis, PolarRadiusAxis,ResponsiveContainer,Legend, Tooltip} from 'recharts';\r\nimport NivoWaffle from \"venders/Nivo/NivoWaffle\"\r\nimport { H2 } from 'Pages/Auth/Components/Type';\r\n\r\nconst Chart1={\r\n    Icon:'radial',\r\n    Header:\"Resources Allocation to Clients\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:`The Graph shows the number of Resource Allocations by Cluster Type in a given model. \r\n            Use the 'Cluster Type' and 'Resource type' filters to find Resource Allocation numbers for specific Clients.`\r\n}\r\n\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n\r\n\r\n    const SingleValues = (category)=>{\r\n         let Total = sumBy([category], partial(sumBy, CategoryOccurance));\r\n         if(Total !== undefined)\r\n             return Total.toFixed(2)\r\n                return 0\r\n       }\r\n\r\n    useEffect(()=>{  setCategoryOccurance(OBJ_CLIENT_RESOURCES())   },[UX]) \r\n     \r\n\r\n    useEffect(()=>{\r\n        //console.log(CategoryOccurance)\r\n        //console.log(UX.AreaSelectFilter.ByResourceType)\r\n    },[CategoryOccurance])\r\n    return(\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <div>\r\n                    \r\n\r\n                <ChartHeader Section='Resources' Chart='Waffle'   Meta='Waffle'/>\r\n                \r\n                    <div style={{height: 300}}>\r\n                        {\r\n                            UX.AreaSelectFilter.ByResourceType === false ? <SelectResource /> :<NivoWaffle data={CategoryOccurance} id={`name`} value={UX.AreaSelectFilter.ByResourceType} />\r\n                        }\r\n                        \r\n                    </div>\r\n                   \r\n                </div> \r\n            </div> \r\n\r\n\r\n            <ul className=\"Stat_Bar Column grouped\">\r\n                {\r\n                    CategoryOccurance.map((trade,i)=>{\r\n                        const {name, HandyMan, Electrician, Plumber, Specialized} = trade\r\n                        return(\r\n                            <li key={i}>\r\n                               \r\n                                <span> {name}</span>\r\n                                <span>{`HandyMan`} : {fixNumber(HandyMan)}</span>\r\n                                <span> {`Electrician`} : {fixNumber(Electrician)}</span>\r\n                                <span>{`Plumber`} : {fixNumber(Plumber)}</span>\r\n                                <span>{`Specialized`} : {fixNumber(Specialized)}</span>\r\n                                \r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                            <li>\r\n                                <span>Totals</span>\r\n                                <span>{SingleValues('HandyMan')}</span>\r\n                                <span>{SingleValues('Electrician')}</span>\r\n                                <span>{SingleValues('Plumber')}</span>\r\n                                <span>{SingleValues('Specialized')}</span>\r\n                            </li> \r\n                   \r\n            </ul>\r\n        </DiagramContainer>  \r\n    )\r\n}\r\nexport default Trade_Radial_Charts;\r\n\r\n\r\n\r\n\r\nconst SelectResource = ()=>{\r\n    return(\r\n        <div>\r\n            <H2 Copy={`Select a Resource Type to use this Graph`} />\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * \r\n *  {\r\n                       OBJ_CLIENT_RESOURCES().length>2 ? <Gtr2Radial CategoryOccurance={CategoryOccurance}/> : <Min2Pie  CategoryOccurance={CategoryOccurance}/>\r\n                    }\r\n */\r\n\r\nconst Min2Pie=(props)=>{\r\n    const {CategoryOccurance} = props\r\n\r\n    return(\r\n        <ResponsiveContainer width='100%' height={300}>\r\n        <PieChart >\r\n            <Pie dataKey=\"Sum\" isAnimationActive={false} data={CategoryOccurance}  outerRadius={80} fill=\"#ffbf00\" label >\r\n            {\r\n                CategoryOccurance.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={colorArray[index]}/>\r\n                ))\r\n            }   \r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend /> \r\n        </PieChart>\r\n        \r\n    </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nconst Gtr2Radial = (props)=>{\r\n    const {CategoryOccurance} = props\r\n    return(\r\n        <ResponsiveContainer width='100%' height={300}>\r\n        <RadarChart  outerRadius={100}  data={CategoryOccurance}>\r\n            <PolarGrid />\r\n            <PolarAngleAxis dataKey=\"name\" />\r\n            <PolarRadiusAxis />\r\n                <Radar name={`HandyMan`} dataKey=\"HandyMan\" stroke={colorArray[0]} fill={colorArray[0]} fillOpacity={0.6} />\r\n                <Radar name={`Electrician`} dataKey=\"Electrician\" stroke={colorArray[1]} fill={colorArray[1]} fillOpacity={0.6} />\r\n                <Radar name={`Plumber`} dataKey=\"Plumber\" stroke={colorArray[2]} fill={colorArray[2]} fillOpacity={0.6} />\r\n                <Radar name={`Specialized`} dataKey=\"Specialized\" stroke={colorArray[3]} fill={colorArray[3]} fillOpacity={0.6} /> \r\n            \r\n            <Tooltip />\r\n            <Legend />\r\n        </RadarChart>\r\n    </ResponsiveContainer>\r\n    )\r\n}","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_AllocationOverTime.js",["2936"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Specific_Overview.js",["2937","2938","2939","2940","2941"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Trade_Radial_Charts.js",["2942","2943","2944"],"import React, {useEffect} from 'react'\r\n\r\n// Actions\r\nimport {OBJ_RESOURCES_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\n\r\nimport Resources_Radial_Resources from \"Pages/Auth/SingleModelResult/Charts/Resource_Radial_Resources\"\r\nimport Resources_Bar_ResourceAllocation from \"Pages/Auth/SingleModelResult/Charts/Resources_Pie_ResourceAllocation\"\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n\r\n    useEffect(()=>{},[]) \r\n    \r\n    return(\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <Resources_Radial_Resources /> \r\n                <Resources_Bar_ResourceAllocation />\r\n            </div>\r\n  \r\n            <Stats_Bar data={OBJ_RESOURCES_GLOBAL(['ByClusterType','ByClient'])} name={`name`} value={`Resources`}/>\r\n        </DiagramContainer>\r\n    )\r\n}\r\nexport default Trade_Radial_Charts;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\Trade_Heatmap.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Maps\\WorkOrder_Heatmap.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Cost_Resource_PieCharts.js",["2945","2946","2947"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\SectionCharts.js",["2948","2949","2950","2951","2952"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Pie_ResourceAllocation.js",["2953"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\n// Actions\r\nimport {OBJ_RESOURCES_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n\r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={\r\n    Icon:'pie',\r\n    Header:\"Resources Allocation to Cluster Type\",\r\n    Tip:\"Use the Filters\",\r\n    filters:['cluster'],\r\n    Copy:\"The Pie Graph shows \"\r\n}\r\n\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const MODEL = useContext_SCAN_FULL();\r\n    const [ResourceSpread,setResourceSpread ] = useState([[]]) \r\n\r\n    useEffect(()=>{\r\n        setResourceSpread(OBJ_RESOURCES_GLOBAL(['ByClusterType','ByClient']))  \r\n    },[UX,MODEL]) \r\n    \r\n    return(\r\n        <div>\r\n            <ChartHeader  Section='Resources' Chart='Pie'  Meta='Pie_Locations'/>\r\n            <div style={{height: 300}}>\r\n                <NivoPie data={ResourceSpread} id={`name`} value={'Resources'} />\r\n            </div>\r\n       </div>\r\n\r\n    )\r\n}\r\nexport default Trade_Radial_Charts;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_line_ResourcesOvertime.js",["2954","2955","2956","2957","2958","2959"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {CreateOBJ_Client_WO_Overtime} from \"actions/CreateSingleViewModel\"\r\nimport {colorArray} from \"actions/HandleUX\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport {orderBy} from 'lodash'\r\n\r\nimport {\r\n    ComposedChart, Line, Area, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n  } from 'recharts';\r\n\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n\r\n    const Ignore=['UnixDate','name','Resource Allocation']\r\n    const str='Resource_Count_'\r\n    const FindLabels = ()=>{\r\n        let Labels=[]  \r\n        CategoryOccurance.map((item,i)=>{\r\n            //console.log(item, 'name')\r\n              \r\n            Object.keys(item).map((key,ii)=>{\r\n                if(key.includes(str)){\r\n                    if(Labels.indexOf(key.replace(str,'')) === -1){\r\n                        Labels.push(key.replace(str,''))\r\n                    } \r\n                }\r\n                })\r\n         })\r\n\r\n         return Labels;\r\n    }\r\n\r\n    useEffect(()=>{ setCategoryOccurance(CreateOBJ_Client_WO_Overtime())},[UX,MODEL]) \r\n    useEffect(()=>{\r\n     \r\n     },[CategoryOccurance])\r\n\r\n    return(\r\n        <div>\r\n               <ChartHeader  Section='Clients' Chart='Line'  Meta='Line_ResourcesAllocation_Overtime'/>\r\n \r\n                <div style={{ width: '100%', height: 400 }}>\r\n                    <ResponsiveContainer>\r\n                        <ComposedChart\r\n                            data={orderBy(CategoryOccurance,'UnixDate')}\r\n                            margin={{\r\n                            top: 5, right: 0, left: 0, bottom: 5,\r\n                            }}\r\n                        >\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"name\" />\r\n                            <YAxis />\r\n                            <Tooltip />\r\n                            <Legend />\r\n                                <Bar dataKey={`Resource Allocation`} opacity={0.3} fill={colorArray[3]} />\r\n                                {\r\n                                    FindLabels().map((label,i)=>{\r\n                                        return(\r\n                                            <Line type=\"monotone\" name={`${label}`} dataKey={`${str}${label}`} stroke={colorArray[i]} />\r\n                                        )\r\n                                    })\r\n                                }\r\n                        </ComposedChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Trade_Radial_Charts;\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Pie_ClientsBreakdown.js",["2960"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\nimport {\r\n    OBJ_CLIENT_RESOURCES,\r\n\r\n} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n\r\n// Nivo \r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={\r\n    Icon:'pie',\r\n   \r\n    Tip:\"Use the Filters\",\r\n    filters:['cluster'],\r\n   \r\n}\r\n\r\nconst Resources_Pie_ClientBreakdown = ()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const MODEL = useContext_SCAN_FULL();\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n    useEffect(()=>{ setCategoryOccurance(OBJ_CLIENT_RESOURCES())   },[UX,MODEL]) \r\n\r\n    return( \r\n                <div>   \r\n                    <ChartHeader Section='Resources' Chart='Pie'  Meta='Pie_Selected_Locations'/>\r\n                    <div style={{height: 300}}>\r\n                        <NivoPie data={CategoryOccurance} id={`name`} value={'Sum'} />\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Resources_Pie_ClientBreakdown;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_WorkOrders.js",["2961"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {OBJ_CLIENT_GLOBAL_Filter } from \"actions/CreateSingleViewModel\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Nivo \r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={ \r\n    Icon:'pie',\r\n    Header:\"By Work Orders\",\r\n    Tip:\"Use the Filters\",\r\n    filters:['cluster','resource',],\r\n    Copy:\"Graph shows the Work Order spread for each client within the Model\"\r\n}\r\n\r\n\r\nconst Client_Pie_Workorders= ()=>{\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [ClientBreakDown,setClientBreakDown ] = useState([[]]) \r\n    \r\n    useEffect(()=>{  setClientBreakDown(OBJ_CLIENT_GLOBAL_Filter())  },[UX,MODEL])\r\n    \r\n    return(\r\n        <div>\r\n            <ChartHeader  Section='Clients' Chart='Pie'  Meta='Pie_Workorders'/>  \r\n            <div style={{height: 300}}>\r\n                        <NivoPie data={ClientBreakDown} id={`name`} value={'Work Orders'} />\r\n                </div>\r\n        </div> \r\n    ) \r\n}\r\nexport default Client_Pie_Workorders;\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Map_Full_MAin.js",["2962"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_line_WorkordersOvertime.js",["2963","2964","2965","2966","2967"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {CreateOBJ_Client_WO_Overtime} from \"actions/CreateSingleViewModel\"\r\nimport {colorArray} from \"actions/HandleUX\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport {orderBy} from 'lodash'\r\n\r\nimport {\r\n    ComposedChart, Line, Area, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n  } from 'recharts';\r\n\r\n\r\n\r\n\r\n\r\nconst Client_Line_Workorders=()=>{\r\n\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n\r\n    const str='WorkOrder_Count_'\r\n    const FindLabels = ()=>{\r\n        let Labels=[]  \r\n\r\n        CategoryOccurance.map((item,i)=>{\r\n            Object.keys(item).map((key,ii)=>{  \r\n                if(key.includes(str)){\r\n                    if(Labels.indexOf(key.replace(str,'')) === -1){\r\n                        Labels.push(key.replace(str,''))\r\n                    } \r\n                }\r\n            }) \r\n         })\r\n         return Labels;\r\n    }\r\n\r\n    useEffect(()=>{          \r\n        setCategoryOccurance(CreateOBJ_Client_WO_Overtime())   \r\n    },[UX,MODEL]) \r\n    \r\n    useEffect(()=>{},[CategoryOccurance])\r\n\r\n    return(\r\n        <div>\r\n            <ChartHeader  Section='Clients' Chart='Line'  Meta='Line_Workorders_Overtime'/>\r\n\r\n            <div style={{ width: '100%', height: 400 }}>\r\n                <ResponsiveContainer>\r\n                    <ComposedChart\r\n                        data={orderBy(CategoryOccurance,'UnixDate')}\r\n                        margin={{\r\n                        top: 5, right: 0, left: 0, bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                            <Bar dataKey={'Work Orders'} opacity={0.3} fill={colorArray[3]} />\r\n                            {\r\n                                FindLabels().map((label,i)=>{\r\n                                    return(\r\n                                        <Line type=\"monotone\" name={`${label}`} dataKey={`${str}${label}`} stroke={colorArray[i]} />\r\n                                    )\r\n                                })\r\n                            }\r\n                    </ComposedChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Client_Line_Workorders;\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Cost_Resources.js",["2968","2969","2970","2971"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CreateSingleViewModel.js",["2972","2973","2974","2975","2976","2977","2978","2979","2980","2981","2982","2983","2984","2985","2986","2987","2988","2989","2990","2991","2992","2993","2994","2995","2996","2997","2998","2999","3000","3001","3002","3003","3004","3005","3006","3007","3008","3009","3010","3011","3012","3013","3014","3015","3016","3017","3018","3019","3020","3021","3022","3023","3024","3025","3026","3027","3028","3029","3030","3031","3032"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectCompareModel.js",["3033","3034","3035","3036"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectClusterType.js",["3037"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectResourceType.js",["3038"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cluster_Bar_Workorders.js",["3039"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n// Actions\r\nimport {OBJ_CLUSTER_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport {colorArray} from \"actions/HandleUX\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer } from 'recharts';\r\n\r\n  const Chart1={\r\n    Header:\"Work Orders Spread over Cluster Type\",\r\n    Tip:\"Use the Filters\",\r\n    Icon:'bar',\r\n    filters:['client','resource',],\r\n    Copy:\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.\"\r\n}\r\n\r\nconst LocationResourceSpread = ()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const [BarData, setBarData] = useState([])\r\n   \r\n    useEffect(()=>{ setBarData(OBJ_CLUSTER_GLOBAL())   },[UX])\r\n\r\n    useEffect(()=>{},[UX])\r\n    return(\r\n        <div>\r\n            <ChartHeader  Section='Locations' Chart='Bar'  Meta='Bar_WorkOrder'/>\r\n            <ResponsiveContainer width='100%' height={300}>\r\n                <BarChart data={BarData} margin={{  top: 20, right: 0, left: 0, bottom: 0,}}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n\r\n                        <Bar dataKey=\"work_order_HandyMan\" name=\"HandyMan\" stackId=\"a\" fill={colorArray[0]} />\r\n                        <Bar dataKey=\"work_order_Electrician\" name=\"Electrician\" stackId=\"a\" fill={colorArray[1]} />\r\n                        <Bar dataKey=\"work_order_Plumber\" name=\"Plumber\" stackId=\"a\" fill={colorArray[2]} />\r\n                        <Bar dataKey=\"work_order_Specialized\" name=\"Specialized\" stackId=\"a\" fill={colorArray[3]} />\r\n                    \r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    ) \r\n}\r\nexport default LocationResourceSpread;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cluster_Bar_ResourceAllocation.js",["3040"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {OBJ_CLUSTER_GLOBAL,} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Charts\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer} from 'recharts';\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\nconst Chart1={\r\n    Header:\"Resource Allocation by Cluster Type\",\r\n    Tip:\"Use the Filters\",\r\n    Icon:'bar',\r\n    filters:['client','resource',],\r\n    Copy:\"Chart shows the Rescourse Allocation by the specific cluster types. Use the 'Resource Type' Filter to view a specific resource break down per Cluster Type\"\r\n}\r\n\r\nconst Cluster_Bar_ResourceAllocation = ()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [BarData, setBarData] = useState([])\r\n \r\n    useEffect(()=>{ \r\n        setBarData(OBJ_CLUSTER_GLOBAL()) \r\n    },[UX,MODEL]) \r\n\r\n    return(\r\n        <div>\r\n        <ChartHeader Section='Locations' Chart='Bar' Meta='Bar_Resource'/>  \r\n              \r\n        <ResponsiveContainer width='100%' height={300}>\r\n                <BarChart\r\n                        data={BarData}\r\n                        margin={{ top: 20, right: 0, left: 0, bottom: 0 }}\r\n                    > \r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                            <Bar dataKey=\"Resource_Count_HandyMan\" name=\"HandyMan\" stackId=\"a\" fill={colorArray[0]} />\r\n                            <Bar dataKey=\"Resource_Count_Electrician\" name=\"Electrician\" stackId=\"a\" fill={colorArray[1]} />\r\n                            <Bar dataKey=\"Resource_Count_Plumber\" name=\"Plumber\" stackId=\"a\" fill={colorArray[2]} />\r\n                            <Bar dataKey=\"Resource_Count_Specialized\" name=\"Specialized\" stackId=\"a\" fill={colorArray[3]} />\r\n                    \r\n                    </BarChart>\r\n                    </ResponsiveContainer>\r\n        </div>\r\n    ) \r\n}\r\nexport default Cluster_Bar_ResourceAllocation;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Clusters_SwarmPlot_Numbers.js",["3041"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport NivoSwarmPlot from \"venders/Nivo/NivoSwarmPlot\"\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n\r\n\r\nconst ClusterSwarmPlot = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const MODEL = useContext_SCAN_FULL()\r\n\r\n    useEffect(()=>{},[UX,MODEL]);\r\n    return(\r\n        <>\r\n            <ChartHeader  Section='Locations' Chart='Swarm'  Meta='Swarm'/>\r\n            <div style={{height: 400}}>\r\n                <NivoSwarmPlot data={MODEL.SelectedModel.STOREMARKERCENTERPOINTS} Group={`scanCategory`} value={'Work Orders'} Volume={`StripedSites`} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClusterSwarmPlot;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Location_Pie_OutofScope.js",["3042"],"import React, {useEffect,useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\n// Actions\r\nimport {OBJ_SITE_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n\r\n// nivo\r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart_Pie_OutofScope = ()=>{\r\n\r\n    const UX = useContext_UX_FULL();  \r\n    const SCAN = useContext_SCAN_FULL();\r\n    const MODEL = SCAN.SelectedModel;\r\n\r\n    const [SiteBreakdown, setSiteBreakdown] = useState([])\r\n\r\n    let ChartData = [\r\n        {  \"id\": 'InScope', \"value\": MODEL.SITESINSCOPE }, \r\n        { \"id\": 'Out of Scope', \"value\": MODEL.SITESOUTOFSCOPE },\r\n        { \"id\": 'Partial Scope ', \"value\": MODEL.SITESINPARCITALSCOPE },\r\n      ]\r\n\r\n      useEffect(()=>{ setSiteBreakdown(OBJ_SITE_GLOBAL()) },[UX,SCAN]);\r\n\r\n    return(\r\n        <div> \r\n            <ChartHeader  Section='Locations' Chart='Pie'  Meta='Pie'/>\r\n            \r\n            <div style={{height: 300}}>\r\n                <NivoPie data={ChartData} id={`id`} value={'value'}/>\r\n            </div>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Chart_Pie_OutofScope;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Location_Radial_Clusters.js",["3043","3044"],"import React, {useEffect} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_COMMS_FULL} from 'Context/COMMS'\r\n// Actions\r\nimport {OBJ_CLUSTER_GLOBAL} from \"actions/CreateSingleViewModel\"\r\nimport NivoRadial from \"venders/Nivo/NivoRadial\"\r\n\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n\r\nconst Chart1={\r\n    Icon:'radial',\r\n    Header:\"Clusters as a Radial\",\r\n    Tip:\"Use the Filters\",\r\n    filters:[''],\r\n    Copy:\"The Radial Graph shows the number of clusters per cluster type in a given model.\"\r\n}\r\n\r\nconst Chart_Radial_Location_Clusters = ()=>{\r\n\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL();\r\n   \r\n    useEffect(()=>{},[UX, MODEL])\r\n \r\n    return(\r\n        <div>\r\n            <ChartHeader  Section='Locations' Chart='Radial' Meta='Radial'/>\r\n\r\n            <div style={{height: 300}}>\r\n                <NivoRadial \r\n                    data={OBJ_CLUSTER_GLOBAL()} \r\n                    id={`name`} \r\n                    value={'Appearances'} \r\n                    Label={'Clusters'}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart_Radial_Location_Clusters;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Clusters_Pie_ClusterNumbers.js",["3045"],"import React, {useEffect} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {OBJ_CLUSTER_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n\r\n// nivo\r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart2={\r\n    Icon:'pie',\r\n    Header:\"Sites covered in Model\",\r\n    Tip:\"Use the Filters\",\r\n    filters:['client','resource',],\r\n    Copy:\"...Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.\"\r\n}\r\n\r\nconst Chart_Pie_OutofScope = ()=>{\r\n    const MODEL = useContext_SCAN_FULL();\r\n    const UX = useContext_UX_FULL();  \r\n    useEffect(()=>{console.log(OBJ_CLUSTER_GLOBAL())},[UX,MODEL]);\r\n\r\n    return(\r\n        <div>\r\n            <ChartHeader Section='Locations' Chart='Pie'  Meta='Pie'/>\r\n            <div style={{height: 300}}>\r\n                <NivoPie data={OBJ_CLUSTER_GLOBAL()} id={`name`} value={'Appearances'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart_Pie_OutofScope; ","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\ChartHeader.js",["3046","3047","3048","3049","3050","3051","3052","3053"],"import React from 'react'\r\nimport {useContext_COMMS_FULL} from 'Context/COMMS'\r\n\r\n// Icons\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport {ChartIcon} from 'actions/HandleUX';\r\n\r\n\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\n\r\n\r\nimport {H4, P} from \"Pages/Auth/Components/Type\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nconst ChartHeader=(props)=>{\r\n    const{ Section, Chart, Meta} = props\r\n\r\n    const CHARTSETUP = useContext_COMMS_FULL().ChartSetup\r\n    const CHARTMETA = useContext_COMMS_FULL().ChartMeta\r\n\r\n    let DisplayIcon = ChartIcon(CHARTSETUP[Chart].icon);\r\n    \r\n    return(\r\n        <div className=\"ChartHeader\">\r\n            <div className=\"InfoIcons\">\r\n                <Tooltip title={CHARTSETUP[Chart].tip}>\r\n                    <LiveHelpIcon  className=\"help\"/> \r\n                </Tooltip>\r\n\r\n                <Filters filters={CHARTMETA[Section][Meta].Filters}/>\r\n\r\n                <Tooltip title=\"Chart is Interactive\">\r\n                    <TouchAppIcon className=\"interactive\" />\r\n                </Tooltip>\r\n            </div>\r\n            <div className=\"Content\">\r\n                {DisplayIcon}\r\n                <div>\r\n                    <H4 Copy={CHARTMETA[Section][Meta].title} />\r\n                    <P Copy={CHARTMETA[Section][Meta].Description}/> \r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartHeader;\r\n\r\nconst Filters = (props)=>{\r\n    const {filters} = props\r\n    const Chips={\r\n        cluster:<Tooltip title=\"Chart can be affected by Cluster  Filter\"><LocationCityIcon className=\"warning\"/></Tooltip>,\r\n        resource:<Tooltip title=\"Chart can be affected by Resource Filter\"><FaceIcon className=\"warning\"/></Tooltip>,\r\n        client:<Tooltip title=\"Chart can be affected by Client Filter\"><PeopleAltIcon className=\"warning\"/></Tooltip>\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {\r\n                filters.map((filter,i)=>{\r\n                    return(\r\n                        <> { Chips[filter]} </>\r\n                    )\r\n                })\r\n            }\r\n        </>      \r\n    )\r\n}\r\n\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Radial_Cluster.js",["3054"],"import React, { useEffect }  from 'react'\r\n// Context\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\nimport {OBJ_CLUSTER_GLOBAL} from 'actions/CreateSingleViewModel'\r\n\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Nivo \r\n\r\nimport NivoRadial from \"venders/Nivo/NivoRadial\"\r\n\r\nconst Chart1={\r\n    Icon:'radial',\r\n    \r\n    Tip:\"Use the Filters\",\r\n    filters:['resource','client'],\r\n    \r\n}\r\n\r\nconst WorkOrder_Radial_Cluster=()=>{\r\n\r\n    const MODEL = useContext_SCAN_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    useEffect(()=>{ },[UX,MODEL])\r\n    return(\r\n        <div>\r\n        <ChartHeader  Section='WorkOrders' Chart='Radial'  Meta='Radial_Workorder_Spread'/>\r\n        <div style={{height: 300}}>\r\n            <NivoRadial \r\n                data={OBJ_CLUSTER_GLOBAL()} \r\n                id={`name`} \r\n                value={'Work Orders'} \r\n                Label={'Work Orders'}\r\n            />\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default WorkOrder_Radial_Cluster;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_pie_outofscope.js",["3055","3056"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {OBJ_RESOURCES_GLOBAL, WorkorderTotals} from \"actions/CreateSingleViewModel\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n\r\n// Nivo \r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={\r\n    Icon:'radial',\r\n    \r\n    Tip:\"Use the Filters\",\r\n    filters:[''],\r\n    Header:\"Work Orders Spread over Resource Type\",\r\n    Copy:\"The Radial Graph shows the Work Order Spread over specific Resource Types. Use the 'Cluster Type' filter to find Work Order numbers for a specific resource.\"\r\n}\r\n\r\n\r\nconst Workorder_pie_outofscope=()=>{\r\n\r\n    const MODEL = useContext_SCAN_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const [PieData, setPieData] = useState([])\r\n  \r\n  \r\n    useEffect(()=>{ \r\n        setPieData([{ name: 'Work Orders In Scope',value: WorkorderTotals()[0]}, { name: 'Work Orders Out of Scope', value:WorkorderTotals()[1] }])\r\n    },[UX,MODEL]) \r\n    \r\n    return(\r\n        <div>\r\n            <ChartHeader Section='WorkOrders' Chart='Pie'  Meta='Pie_Workorders_Inscope'/>                       \r\n            <div style={{height: 300}}>\r\n                <NivoPie data={PieData} id={`name`} value={'value'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Workorder_pie_outofscope;\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Bar_Overtime.js",["3057"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n// Actions\r\nimport {CreateOBJ_WO_Overtime} from \"actions/CreateSingleViewModel\"\r\nimport {colorArray} from \"actions/HandleUX\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n\r\nimport {orderBy} from 'lodash'\r\n\r\nimport {\r\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n  } from 'recharts';\r\n\r\n\r\nconst Workorder_Bar_Overtime=()=>{\r\n \r\n    const UX = useContext_UX_FULL();\r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n    useEffect(()=>{  setCategoryOccurance(CreateOBJ_WO_Overtime())   },[UX,MODEL]) \r\n    useEffect(()=>{},[CategoryOccurance])\r\n\r\n    return(\r\n        <div>\r\n                    <ChartHeader  Section='WorkOrders' Chart='Bar'  Meta='Bar_Workorders_Overtime'/>\r\n                \r\n                    <div style={{ width: '100%', height: 400 }}>\r\n                        <ResponsiveContainer>\r\n                            <BarChart\r\n                                data={orderBy(CategoryOccurance,'UnixDate')}\r\n                                margin={{\r\n                                top: 5, right: 0, left: 0, bottom: 5,\r\n                                }}\r\n                            >\r\n                                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis />\r\n                                <Tooltip />\r\n                                <Legend />              \r\n                                    <Bar dataKey={'Work Orders'} fill={colorArray[0]} />\r\n                                 \r\n                            \r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\nexport default Workorder_Bar_Overtime;\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_Radial_Workorders.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Clusters_Totals.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Locations_CompareTotals.js",["3058","3059","3060","3061","3062","3063","3064"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"Context/COMPARE\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {OBJ_CLUSTER_GLOBAL, FindPercentageBewtweenTwoNumbers} from 'actions/CreateCompareModelView'\r\n\r\nimport {H2} from \"Pages/Auth/Components/Type\"\r\nconst TableWorkOrders = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL().CompareData.FetchedModels\r\n    const UX = useContext_UX_FULL()\r\n    const [Locations, setLocations] = useState([[],[],[],[]])\r\n    const [OOS, setOOS] = useState([])\r\n    \r\n    const LocationTotals=()=>{\r\n        let TotalLocs = [],InScopeLocs = [], PartialLocs = [], OOSLocs = []\r\n\r\n        COMPARE.map((model,i)=>{\r\n            console.log(model.SITESINPARCITALSCOPE+model.SITESINSCOPE+model.SITESOUTOFSCOPE);\r\n            TotalLocs.push(model.SITESINPARCITALSCOPE+model.SITESINSCOPE+model.SITESOUTOFSCOPE)\r\n            InScopeLocs.push(model.SITESINSCOPE)\r\n            PartialLocs.push(model.SITESINPARCITALSCOPE)\r\n            OOSLocs.push(model.SITESOUTOFSCOPE)\r\n        })\r\n\r\n            OBJ_CLUSTER_GLOBAL().map((model,i)=>{\r\n               let collectSites=[]\r\n               console.log(COMPARE)\r\n                model.map((sites,ii)=>{ \r\n                    if(sites.Sites != undefined){  collectSites.push(sites.Sites.length)  }\r\n                })\r\n               // Locs.push(collectSites.reduce((a, b) => a + b, 0))\r\n            })\r\n\r\n            setLocations([TotalLocs,InScopeLocs,PartialLocs,OOSLocs])\r\n    }\r\n\r\n    const OOSTotals=()=>{\r\n        let Locs = []\r\n        COMPARE.map((oos,i)=>{ Locs.push(oos.STORERESIDUALMARKERS.length) })\r\n        setOOS(Locs)\r\n    }\r\n\r\n    useEffect(()=>{ LocationTotals(); OOSTotals()},[UX])\r\n    useEffect(()=>{\r\n        console.log(Locations)\r\n    },[COMPARE,Locations]);\r\n\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n             <div className=\"ShowInt\"> <H2 Copy={`Total Site Number`} /></div>\r\n                {\r\n                    Locations[0].map((locs,i)=>{\r\n                        return(\r\n                            <div key={i} className=\"ShowInt\"> \r\n                                {locs} {FindPercentageBewtweenTwoNumbers(Locations[0],i)}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n             <div className=\"ShowInt\"> <H2 Copy={`Locations inScope`} /></div>\r\n                {\r\n                    Locations[1].map((locs,i)=>{\r\n                        return(\r\n                            <div key={i} className=\"ShowInt\"> \r\n                                {locs} {FindPercentageBewtweenTwoNumbers(Locations[1],i)}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n \r\n            <div className=\"ShowInt\"> <H2 Copy={`Locations Partial Scope`} /></div>\r\n                {\r\n                    Locations[2].map((locs,i)=>{\r\n                        return(\r\n                            <div key={i} className=\"ShowInt\"> \r\n                                {locs} {FindPercentageBewtweenTwoNumbers(Locations[2],i)}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                <div className=\"ShowInt\"> <H2 Copy={`Locations Out of Scope`} /></div>\r\n                {\r\n                    Locations[3].map((locs,i)=>{\r\n                        return(\r\n                            <div key={i} className=\"ShowInt\"> \r\n                                {locs} {FindPercentageBewtweenTwoNumbers(Locations[3],i)}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n        </div> \r\n    ) \r\n} \r\n  \r\nexport default TableWorkOrders;\r\n\r\n\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\SelectClient.js",["3065"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_Selected_ClusterSpread.js",["3066","3067","3068","3069","3070","3071","3072","3073","3074","3075","3076","3077","3078","3079","3080"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n// Actions\r\nimport { OBJ_CLUSTER_GLOBAL,} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\"; \r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport {H3} from \"Pages/Auth/Components/Type\";\r\n\r\n// Chart\r\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis,ResponsiveContainer,Legend, Tooltip, FunnelChart , Funnel,LabelList} from 'recharts';\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\nimport NivoRadial from \"venders/Nivo/NivoRadial\"\r\nimport NivoFunnel from \"venders/Nivo/NivoFunnel\"\r\n\r\nconst Chart1={\r\n    Icon:'radial',\r\n   \r\n    Tip:\"Use the Filters\",\r\n   \r\n}\r\n\r\nconst Chart2={\r\n    Icon:'funnel',\r\n    \r\n    Tip:\"Use the Filters\",\r\n    \r\n}\r\n\r\nconst Locations_Radial_Pie_Charts=()=>{\r\n    const UX = useContext_UX_FULL(); \r\n    const [ClientClusterSpread,setClientClusterSpread ] = useState([[]]) \r\n    \r\n    useEffect(()=>{ setClientClusterSpread(OBJ_CLUSTER_GLOBAL()) },[UX]) \r\n    useEffect(()=>{ },[ClientClusterSpread])\r\n \r\n    return(\r\n        <>\r\n        <H3 Copy={`Cluster distribution `}/>\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <div>\r\n                    <ChartHeader Section='Clients' Chart='Radial'  Meta='Radial_Selected_WorkordersByCluster' />\r\n                   \r\n                     \r\n                    <div style={{height: 300}}>\r\n                    <NivoRadial \r\n                            data={ClientClusterSpread} \r\n                            id={`name`} \r\n                            value={'Sum'} \r\n                            Label={'Clusters'}\r\n                        />\r\n                        </div>\r\n                </div>\r\n                <div>\r\n                    <DisplayFunnel />\r\n                </div>\r\n        </div>\r\n            { ClientClusterSpread.length !== 0 ? <ClientStatBar ClientClusterSpread={ClientClusterSpread}/>: false }\r\n            </DiagramContainer>\r\n        </>\r\n    )\r\n} \r\nexport default Locations_Radial_Pie_Charts;\r\n\r\n\r\nconst DisplayFunnel=()=>{\r\n    const UX = useContext_UX_FULL(); \r\n    const [ClusterOccurances,setClusterOccurances ] = useState([[]]) \r\n\r\n    useEffect(()=>{  setClusterOccurances(OBJ_CLUSTER_GLOBAL())},[UX]) \r\n\r\n    useEffect(()=>{},[ClusterOccurances])\r\n\r\n    return(\r\n        <div>\r\n            <ChartHeader Section='Clients' Chart='Funnel'  Meta='Funnel_Selected_WorkordersByCluster'/>\r\n                <div style={{height: 300}}>\r\n                    <NivoFunnel data={ClusterOccurances} id={`name`} value={'Sum'} />\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst ClientStatBar = (props)=>{\r\n    const {ClientClusterSpread} = props\r\n    return(\r\n       <>\r\n            <Stats_Bar data={ClientClusterSpread} name={`name`} value={`Sum`}/>\r\n       </>\r\n    )\r\n}","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_WorkOrderDistribution.js",["3081","3082","3083","3084","3085","3086","3087","3088","3089","3090","3091"],"import React, { useEffect, useState }  from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\nimport {\r\n    OBJ_CLUSTER_GLOBAL,\r\n    OBJ_RESOURCES_GLOBAL\r\n    \r\n} from \"actions/CreateSingleViewModel\"\r\n// Template\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nimport {H3} from \"Pages/Auth/Components/Type\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Chart\r\n//import PieChart from \"venders/apexCharts/SimplePie\";\r\nimport { ResponsiveContainer,PieChart, Pie,Legend, Tooltip,Cell} from 'recharts';\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\n// Nivo \r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={\r\n    Icon:'pie',\r\n    \r\n    Tip:\"Use the Filters\",\r\n    \r\n}\r\n\r\nconst Chart2={\r\n    Icon:'pie',\r\n    \r\n    Tip:\"Use the Filters\",\r\n    \r\n}\r\n\r\n/* ************************************** */\r\n// CLient specific section\r\n// Move to own file\r\n\r\n\r\nconst ClientWOrkOrderSpread = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n\r\n    const [ClientSpread, setClientSpread] = useState([])\r\n    const [ClientClusterSpread, setClientClusterSpread] = useState([])\r\n    useEffect(()=>{\r\n        setClientSpread(OBJ_RESOURCES_GLOBAL())\r\n        setClientClusterSpread(OBJ_CLUSTER_GLOBAL())\r\n    },[UX])\r\n\r\n    return(\r\n        <>\r\n        <H3 Copy={`Work Order Spread distribution `}/>\r\n        <DiagramContainer>\r\n        <div className=\"resultCharts\">\r\n            <div>\r\n                <ChartHeader Section='Clients' Chart='Pie'  Meta='Pie_Selected_WorkordersByClient' />\r\n                <div style={{height: 300}}>\r\n                        <NivoPie data={ClientSpread} id={`name`} value={'Work Orders'} />\r\n                    </div>\r\n\r\n                \r\n            </div>\r\n            <div>\r\n                <ChartHeader Section='Clients' Chart='Pie'   Meta='Pie_Selected_WorkordersByCluster'/>\r\n\r\n                <div style={{height: 300}}>\r\n                        <NivoPie data={ClientClusterSpread} id={`name`} value={'Work Orders'} />\r\n                    </div>\r\n                \r\n            </div>\r\n        </div>\r\n        { ClientSpread.length !== 0 ? <ClientStatBar ClientSpread={ClientSpread} ClientClusterSpread={ClientClusterSpread}/>: false }\r\n        </DiagramContainer>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ClientWOrkOrderSpread;\r\n\r\nconst ClientStatBar = (props)=>{\r\n    const {ClientClusterSpread, ClientSpread} = props\r\n    return(<>\r\n            <Stats_Bar data={ClientSpread} name={`name`} value={`Work Orders`}/>\r\n            <Stats_Bar data={ClientClusterSpread} name={`name`} value={`Work Orders`}/> \r\n        </>\r\n    )\r\n}","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clients_Site_Resource_StatsBar.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\DiagramContainer.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_Sites.js",["3092"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {OBJ_CLIENT_GLOBAL_Filter } from \"actions/CreateSingleViewModel\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Nivo \r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={ \r\n    Icon:'pie',\r\n    Header:\"By Location\",\r\n    Tip:\"Use the Filters\",\r\n    filters:['cluster','resource',],\r\n    Copy:\"Graph shows the Location spread of each client within the Model\"\r\n}\r\n\r\n\r\nconst Client_Pie_Sites= ()=>{\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [ClientBreakDown,setClientBreakDown ] = useState([[]]) \r\n    \r\n    useEffect(()=>{ \r\n        setClientBreakDown(OBJ_CLIENT_GLOBAL_Filter()) \r\n     \r\n    },[UX,MODEL])\r\n    \r\n \r\n    return(\r\n        <div>\r\n            <ChartHeader Section='Clients' Chart='Pie'  Meta='Pie_Locations'/>            \r\n            <div style={{height: 300}}>\r\n                <NivoPie data={ClientBreakDown} id={`name`} value={'Total Sites'} />\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\nexport default Client_Pie_Sites;\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Pie_Resources.js",["3093"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\"; \r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {OBJ_CLIENT_GLOBAL_Filter } from \"actions/CreateSingleViewModel\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Nivo \r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={ \r\n    Icon:'pie',\r\n   \r\n    Tip:\"Use the Filters\",\r\n    filters:['cluster','resource',],\r\n    \r\n}\r\n\r\nconst Client_Pie_Resources= ()=>{\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [ClientBreakDown,setClientBreakDown ] = useState([[]]) \r\n    \r\n    useEffect(()=>{ setClientBreakDown(OBJ_CLIENT_GLOBAL_Filter())  },[UX,MODEL])\r\n    \r\n \r\n    return(\r\n        <div> \r\n            <ChartHeader Section='Clients' Chart='Pie'  Meta='Pie_Resources'/>\r\n            <div style={{height: 300}}>\r\n                <NivoPie data={ClientBreakDown} id={`name`} value={'Resources'} />\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\nexport default Client_Pie_Resources;\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Client_Sunburst.js",["3094"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {OBJ_CLIENT_GLOBAL_Filter,NivoSunBurst } from \"actions/CreateSingleViewModel\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Nivo \r\nimport NivoSunburst from \"venders/Nivo/NivoSunburst\"\r\n\r\nconst Client_Pie_Resources= ()=>{\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [ClientBreakDown,setClientBreakDown ] = useState([[]]) \r\n    \r\n    useEffect(()=>{ \r\n         \r\n        setClientBreakDown(OBJ_CLIENT_GLOBAL_Filter())  \r\n    \r\n    },[UX,MODEL])\r\n    \r\n \r\n    return(\r\n        <div>\r\n            <ChartHeader Section='Clients' Chart='Sunburst'  Meta='Sunburst'/>\r\n            <div style={{height: 300}}>\r\n                <NivoSunburst data={NivoSunBurst()} id={`name`} value={'Resources'} />\r\n            </div> \r\n        </div> \r\n    )\r\n}\r\nexport default Client_Pie_Resources;\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\ResetMapBtn.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Client_ResourceDistribution.js",["3095","3096","3097","3098","3099","3100","3101","3102","3103","3104","3105","3106","3107","3108"],"import React, { useEffect, useState }  from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\nimport {\r\n    OBJ_CLIENT_GLOBAL_Filter,\r\n    OBJ_RESOURCES_GLOBAL,\r\n    OBJ_CLUSTER_GLOBAL\r\n} from \"actions/CreateSingleViewModel\"\r\n// Template\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\nimport {H2,H3,H4, P} from \"Pages/Auth/Components/Type\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Chart\r\n//import PieChart from \"venders/apexCharts/SimplePie\";\r\nimport { ResponsiveContainer,PieChart, Pie,Legend, Tooltip,Cell} from 'recharts';\r\nimport {colorArray} from \"actions/HandleUX\";\r\n\r\n// Nivo \r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\n/* ************************************** */\r\n// CLient specific section\r\n// Move to own file\r\n\r\n\r\nconst ClientResourceSpread = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n\r\n    const [ClientSpread, setClientSpread] = useState([])\r\n    const [ClientClusterSpread, setClientClusterSpread] = useState([])\r\n    \r\n    useEffect(()=>{\r\n        setClientSpread(OBJ_RESOURCES_GLOBAL())\r\n        setClientClusterSpread(OBJ_CLUSTER_GLOBAL())\r\n        //console.log(OBJ_CLUSTER_GLOBAL())\r\n    },[UX])\r\n\r\n    return(\r\n        <>\r\n        <H3 Copy={`Resource Spread`}/>\r\n        <DiagramContainer>\r\n            \r\n        <div className=\"resultCharts\">\r\n            <div>\r\n                <ChartHeader Section='Clients' Chart='Pie'  Meta='Pie_Selected_Client_Inscope'/>\r\n                    <div style={{height: 300}}>\r\n                        <NivoPie data={ClientSpread} id={`name`} value={'Resources'} />\r\n                    </div>\r\n\r\n              \r\n            </div> \r\n            <div>\r\n               \r\n                <ChartHeader Section='Clients' Chart='Pie'  Meta='Pie_Selected_Client_Rescourse'/>\r\n                <div style={{height: 300}}>\r\n                        <NivoPie data={ClientClusterSpread} id={`name`} value={'Resource'} />\r\n                    </div>\r\n            </div>\r\n        </div>\r\n            { ClientSpread.length !== 0 ? <ClientStatBar ClientSpread={ClientSpread} ClientClusterSpread={ClientClusterSpread}/>: false }\r\n        </DiagramContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClientResourceSpread;\r\n\r\nconst ClientStatBar = (props)=>{\r\n    const {ClientClusterSpread, ClientSpread} = props\r\n    return(<>\r\n                <Stats_Bar data={ClientSpread} name={`name`} value={`Resources`}/>\r\n                <Stats_Bar data={ClientClusterSpread} name={`name`} value={`Resource`}/>\r\n        </>\r\n    )\r\n}\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByCapitalCities.js",["3109","3110"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Cluster_Funnel.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resources_Line_Allocation_OverTime.js",["3111"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {OBJ_DATESPREAD_TRADE} from \"actions/CreateSingleViewModel\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport {orderBy} from 'lodash'\r\n\r\n// NIvo\r\nimport NivoLine from \"venders/Nivo/NivoLine\";\r\n\r\n\r\nconst Chart1={\r\n    Icon:'line',\r\n    \r\n    Tip:\"Use the Filters\",\r\n    filters:['cluster'],\r\n    Header:\"Resources Allocation over time\",\r\n    Copy:`The Bar Graph shows the number of Resource Allocations over the time period of the Model.`\r\n}\r\n\r\n\r\nconst Trade_Radial_Charts=()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const MODEL = useContext_SCAN_FULL();\r\n    const [ResourcesOverTime,setResourcesOverTime ] = useState([[]]) \r\n\r\n    useEffect(()=>{ setResourcesOverTime(OBJ_DATESPREAD_TRADE()) },[UX,MODEL]) \r\n    \r\n    useEffect(()=>{},[ResourcesOverTime]) \r\n\r\n    return(\r\n        <div className=\"resultCharts\">\r\n        <div>\r\n           <ChartHeader  Section='Resources' Chart='Line'  Meta='Line_Resources_OverTime'/>\r\n            <div style={{height: 400}}>\r\n                <NivoLine \r\n                    data={orderBy(ResourcesOverTime,'UnixDate')} \r\n                    Xaxis={`name`} \r\n                    Yaxis={UX.AreaSelectFilter.ByResourceType} \r\n                    value={'Resources'}\r\n                    label = {`Resource Allocation`}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Trade_Radial_Charts;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoWaffle.js",["3112","3113","3114"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Resource_Radial_Resources.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cost_Resources_OverTime.js",["3115","3116","3117","3118","3119","3120","3121"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n// Actions\r\nimport {CreateOBJ_Client_WO_Overtime, OBJ_DATESPREAD_TRADE} from \"actions/CreateSingleViewModel\"\r\nimport {colorArray} from \"actions/HandleUX\";\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport {orderBy} from 'lodash'\r\n\r\nimport {\r\n    ComposedChart, Line, Area, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n  } from 'recharts';\r\n\r\nconst Client_Line_Workorders=()=>{\r\n\r\n    const UX = useContext_UX_FULL(); \r\n    const MODEL = useContext_SCAN_FULL()\r\n    const [CategoryOccurance,setCategoryOccurance ] = useState([[]]) \r\n\r\n    const str='_cost'\r\n    const FindLabels = ()=>{\r\n        let Labels=[]  \r\n\r\n        CategoryOccurance.map((item,i)=>{\r\n            Object.keys(item).map((key,ii)=>{  \r\n                if(key.includes(str)){\r\n                    if(Labels.indexOf(key.replace(str,'')) === -1){\r\n                        Labels.push(key.replace(str,''))\r\n                    } \r\n                }\r\n            }) \r\n         })\r\n         return Labels;\r\n    }\r\n\r\n    useEffect(()=>{          \r\n        //console.log(OBJ_DATESPREAD_TRADE());\r\n        setCategoryOccurance(OBJ_DATESPREAD_TRADE())    \r\n    },[UX,MODEL]) \r\n    \r\n    useEffect(()=>{},[CategoryOccurance])\r\n\r\n    return(\r\n        <div>\r\n            <ChartHeader Section='Costs' Chart='Line'  Meta='Line_ResourceCosts_Overtime'/>\r\n\r\n            <div style={{ width: '100%', height: 400 }}>\r\n                <ResponsiveContainer>\r\n                    <ComposedChart\r\n                        data={orderBy(CategoryOccurance,'UnixDate')}\r\n                        margin={{\r\n                        top: 5, right: 0, left: 0, bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis /> \r\n                        <Tooltip />\r\n                        <Legend /> \r\n                            \r\n                            {\r\n                                FindLabels().map((label,i)=>{\r\n                                    return(\r\n                                        <Line type=\"monotone\" name={`${label}`} dataKey={`${label}${str}`} stroke={colorArray[i]} />\r\n                                    )\r\n                                })\r\n                            }\r\n                    </ComposedChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Client_Line_Workorders;\r\n//<Bar dataKey={'ResourceCost'} opacity={0.3} fill={colorArray[3]} />\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Layout\\Stats_Bar.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Cost_Pie_ResourceAllocationCost.js",["3122"],"import React, {useEffect, useState} from 'react'\r\n// Context\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\n// Actions\r\nimport {OBJ_RESOURCES_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n\r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={\r\n    Icon:'pie',\r\n    \r\n    Tip:\"Use the Filters\",\r\n    filters:['cluster'],\r\n    \r\n}\r\n\r\n\r\nconst Cost_ResourcePie_Charts=()=>{\r\n\r\n    const UX = useContext_UX_FULL();\r\n    const MODEL = useContext_SCAN_FULL();\r\n    const [ResourceSpread,setResourceSpread ] = useState([[]]) \r\n\r\n    useEffect(()=>{\r\n        setResourceSpread(OBJ_RESOURCES_GLOBAL(['ByClusterType','ByClient']))  \r\n    },[UX,MODEL]) \r\n    \r\n    return(\r\n        <div>\r\n            <ChartHeader  Section='Costs' Chart='Pie'  Meta='Pie_ResourceCosts'/>\r\n            <div style={{height: 300}}>\r\n                <NivoPie data={ResourceSpread} id={`name`} value={'ResourceCost'} />\r\n            </div>\r\n       </div>\r\n\r\n    )\r\n} \r\nexport default Cost_ResourcePie_Charts;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoPie.js",["3123","3124"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapMainFilter.js",["3125","3126"],"import React, { useEffect, useState } from 'react';\r\n\r\n// Filters \r\nimport ByResourceType from \"Pages/Auth/Components/Maps/Filters/Filter_ByResourceType\";\r\nimport ByClusterType from \"Pages/Auth/Components/Maps/Filters/Filter_ByClusterType\";\r\nimport ByCapitalCities from \"Pages/Auth/Components/Maps/Filters/Filter_ByCapitalCities\";\r\nimport ByMarkers from \"Pages/Auth/Components/Maps/Filters/Filter_ByMarkerType\";\r\nimport ByColorScheme from \"Pages/Auth/Components/Maps/Filters/Filter_ByColorScheme\";\r\n\r\n\r\nconst MapFilter=()=>{\r\n    return(\r\n        <>\r\n            <ul className=\"Stat_Bar\">\r\n                <li><ByColorScheme /> </li>\r\n                <li><ByMarkers /> </li>\r\n                <li><ByCapitalCities /> </li>\r\n                <li><ByClusterType/></li>\r\n                <li> <ByResourceType /></li>\r\n            </ul>\r\n         \r\n        </>\r\n        )\r\n}\r\n\r\nexport default MapFilter;\r\n\r\n\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\MapColorKey.js",["3127"],"import React from 'react'\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {RegionColor, ResourceColor} from \"actions/HandleUX\"\r\n\r\nconst ColorKey = ()=>{\r\n    \r\n    const UX = useContext_UX_FULL();\r\n\r\n    const Opacity=(type)=>{\r\n        if(UX.AreaSelectFilter.ByClusterType === type || UX.AreaSelectFilter.ByClusterType === undefined)\r\n            return 1\r\n                return 0.1;\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n              <ClusterColorKey />\r\n              <ResourceColorKey />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ColorKey;\r\n\r\n\r\n\r\nconst ResourceColorKey = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const Opacity=(type)=>{\r\n        if(UX.AreaSelectFilter.ByResourceType === type || UX.AreaSelectFilter.ByResourceType === undefined)\r\n            return 1\r\n                return 0.1;\r\n    }\r\n\r\n    return(\r\n        <div className=\"MapColorKey\">\r\n         <div >\r\n                  <span style={{backgroundColor:ResourceColor('HandyMan'), opacity:Opacity('HandyMan')}}></span>\r\n                  <h2>Handy Man</h2>\r\n              </div>\r\n              <div >\r\n                  <span style={{backgroundColor:ResourceColor('Electrician'),opacity:Opacity('Electrician')}}></span>\r\n                  <h2>Electrician</h2>\r\n              </div>\r\n              <div >\r\n                  <span style={{backgroundColor:ResourceColor('Plumber'),opacity:Opacity('Plumber')}}></span>\r\n                  <h2>Plumber</h2>\r\n              </div>\r\n              <div>\r\n                  <span  style={{backgroundColor:ResourceColor('Specialized'),opacity:Opacity('Specialized')}}></span>\r\n                  <h2>Specialized</h2>\r\n              </div>\r\n              <div>\r\n                  <span style={{backgroundColor:ResourceColor('CombinedCluster'),opacity:Opacity('CombinedCluster')}}></span>\r\n                  <h2>CombinedCluster</h2>\r\n              </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ClusterColorKey = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const Opacity=(type)=>{\r\n        if(UX.AreaSelectFilter.ByClusterType === type || UX.AreaSelectFilter.ByClusterType === undefined)\r\n            return 1\r\n                return 0.1;\r\n    }\r\n\r\n    return(\r\n        <div className=\"MapColorKey\">\r\n         <div >\r\n                  <span style={{backgroundColor:RegionColor('SameBuilding'), opacity:Opacity('SameBuilding')}}></span>\r\n                  <h2>SameBuilding</h2>\r\n              </div>\r\n              <div >\r\n                  <span style={{backgroundColor:RegionColor('CBD'),opacity:Opacity('CBD')}}></span>\r\n                  <h2>CBD</h2>\r\n              </div>\r\n              <div >\r\n                  <span style={{backgroundColor:RegionColor('InnerCity'),opacity:Opacity('InnerCity')}}></span>\r\n                  <h2>InnerCity</h2>\r\n              </div>\r\n              <div>\r\n                  <span  style={{backgroundColor:RegionColor('Metro'),opacity:Opacity('Metro')}}></span>\r\n                  <h2>Metro</h2>\r\n              </div>\r\n              <div >\r\n                  <span style={{backgroundColor:RegionColor('OuterMetro'),opacity:Opacity('OuterMetro')}}></span>\r\n                  <h2>OuterMetro</h2>\r\n              </div>\r\n              <div >\r\n                  <span style={{backgroundColor:RegionColor('Regional'),opacity:Opacity('Regional')}}></span>\r\n                  <h2>Regional</h2>\r\n              </div>\r\n              <div >\r\n                  <span style={{backgroundColor:RegionColor('Remote'),opacity:Opacity('Remote')}}></span>\r\n                  <h2>Remote</h2>\r\n              </div>\r\n              \r\n              <div >\r\n                  <span style={{backgroundColor:RegionColor('ExtremeRemote'),opacity:Opacity('ExtremeRemote')}}></span>\r\n                  <h2>ExtremeRemote</h2>\r\n              </div>\r\n        </div>\r\n    )\r\n}","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Map_SingleModelReview_FULLModel.js",["3128","3129","3130","3131","3132","3133"],"import React, { useEffect, useRef } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport { GoogleMap } from '@react-google-maps/api';\r\nimport {findClientName} from \"actions/ClusterAnalysis\";\r\n// Components\r\n\r\nimport Markers from \"Pages/Auth/Components/Maps/LocationMarkers\";\r\nimport ResidualMarkers from \"Pages/Auth/Components/Maps/ResidualLocationMarkers\";\r\n//import CenterPoints from \"Pages/Auth/Components/Maps/MarkersCenterpoints\";\r\n//import MarkerBasedResults from \"Pages/Auth/Components/Maps/MarkerBasedResults\";\r\nimport Polygons from \"Pages/Auth/Components/Maps/Polygons\"\r\nimport { useState } from 'react';\r\n\r\nconst containerStyle = { height: \"550px\", width: \"auto\" };\r\nconst Map=()=>{\r\n    const UX = useContext_UX_FULL();\r\n\r\n    useEffect(()=>{\r\n        //console.log(UX.ClusterParameters.SelectedCluster)\r\n    },[UX])\r\n        return(\r\n                <div className=\"\" id=\"MainMap\">\r\n                        <GoogleMap \r\n                            mapContainerStyle={containerStyle} \r\n                            center={UX.MapParameters.LatLngBoundaries}\r\n                            zoom={UX.MapParameters.zoom}\r\n                        >\r\n                            { /* Child components, such as markers, info windows, etc. */ }\r\n                            \r\n                            <Markers />\r\n                            \r\n                            <Polygons /> \r\n                        </GoogleMap>   \r\n                        \r\n                        <MapClusterContainer /> \r\n                        \r\n                    </div> \r\n                )\r\n}\r\n\r\n //  <ResidualMarkers />\r\nexport default Map;\r\n\r\n\r\n\r\nconst MapClusterContainer =()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const [Class,setClass] = useState('hide');\r\n\r\n    useEffect(()=>{\r\n        //console.log(UX.ClusterParameters.SelectedCluster)\r\n\r\n        UX.ClusterParameters.SelectedCluster == false ? setClass('hide'): setClass('show')\r\n\r\n    },[UX])\r\n\r\n\r\n    return(\r\n        <div className={`${Class} InfoBox`}>\r\n               {UX.ClusterParameters.SelectedCluster === false ? false: <MapClusterInfo />}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MapClusterInfo = ()=>{\r\n    const UX = useContext_UX_FULL();\r\n    const SELECTED = UX.ClusterParameters.SelectedCluster;\r\n\r\n\r\n    const WOS = (Trade)=>{\r\n        let Count=[]\r\n        //console.log('SELECTED',SELECTED.ResourcesGroupedBy[Trade])\r\n        SELECTED.ResourcesGroupedBy[Trade].map((wos,i)=>{\r\n            Count.push(wos.WOS)\r\n        })\r\n        //console.log(Count, Count.reduce((a, b) => a + b, 0))\r\n        return Count.reduce((a, b) => a + b, 0)\r\n    }\r\n\r\n\r\n    const Clients=()=>{\r\n        let Count=[]\r\n        \r\n        Object.keys(SELECTED.ClientGroupedBy).map((key,value)=>{\r\n            //console.log(key)\r\n            Count.push(findClientName(key))\r\n        })\r\n        return Count\r\n    }\r\n\r\n\r\n    const CenterPoint = ()=>{\r\n        let Add;\r\n        SELECTED.StripedSites.map((geo,i)=>{\r\n            //console.log(geo.lat,SELECTED.center.lat ,geo.long , SELECTED.center.lng)\r\n            if(geo.lat === SELECTED.center.lat && geo.long === SELECTED.center.lng) { Add = geo.name }\r\n        })\r\n\r\n        return Add\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        //console.log(SELECTED)\r\n    },[UX])\r\n\r\n    return(\r\n        <div>\r\n            <h3>Cluster Info Box</h3>\r\n      \r\n            <ul>\r\n                <li><span>Name : </span> {SELECTED.name}</li>\r\n                <li><span>Category : </span>{SELECTED.scanCategory} </li>\r\n                <li><span>Locations : </span>{SELECTED.StripedSites.length} </li>\r\n                <li><span>Center Point Address : </span>{CenterPoint()} </li>\r\n                <li><span>Clients in Cluster : </span>\r\n                        <ul>\r\n                            {Clients().map((q,i)=>{\r\n                                return(\r\n                                    <li key={i}>\r\n                                        {q}\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                         </ul> \r\n                         {} \r\n                </li>      \r\n            \r\n\r\n                \r\n                <li><span>Resource Quota : </span> \r\n                        <ul>\r\n                            {SELECTED.resourceQuota.map((q,i)=>{\r\n                                return(\r\n                                    <li key={i}>\r\n                                        <span>{q.Trade} </span> {(q.ResourceAllocation).toFixed(2)}\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                         </ul>   \r\n                </li>\r\n\r\n                <li><span>Work Orders :</span>\r\n                \r\n                <ul>\r\n                            {SELECTED.resourceQuota.map((q,i)=>{\r\n                                return(\r\n                                    <li key={i}>\r\n                                        <span>{q.Trade} </span> { WOS(q.Trade)}\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                         </ul> \r\n                </li>    \r\n            </ul>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\n\r\n*/","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CostsandPricings.js",["3134","3135","3136"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoSwarmPlot.js",["3137","3138"],"import React, { useEffect }  from 'react'\r\nimport { ResponsiveSwarmPlot } from '@nivo/swarmplot'\r\nimport { useState } from 'react'\r\nimport {colorArray} from \"actions/HandleUX\";\r\nimport {sumBy} from 'lodash'\r\nconst NivoPie=(props)=>{\r\n\r\n  \r\n    const {data,Volume, Group} = props\r\n    const [NivoData, setNivoData] = useState([])\r\n    const [NivoRadialKeys, setNivoRadialKeys] = useState([])\r\n    const [VolumeSize, setVolumeSize] = useState([])\r\n    const [ValueSize, setValueSize] = useState([])\r\n    const CreateNivoData=()=>{\r\n\r\n            let Nivo=[]\r\n            let NivoRadialKeys=[]\r\n            let CreateVolumeSize=[]\r\n            let CreateValueSize=[]\r\n            data.map((row,i)=>{\r\n               //console.log(sumBy(row.resourceQuota, function(o) { return o.ResourceAllocation; }))\r\n               //console.log(row.resourceQuota)\r\n                Nivo.push({\r\n                    \"id\":`${i}_${row[Group]}`,\r\n                    \"group\": row[Group],\r\n                    \"value\": sumBy(row.StripedSites, function(o) { return o.SumWorkOrder; }),\r\n                    \"volume\": row[Volume].length,\r\n                })\r\n                CreateVolumeSize.push( row[Volume].length)\r\n                CreateValueSize.push(sumBy(row.StripedSites, function(o) { return o.SumWorkOrder; }))\r\n\r\n                if(NivoRadialKeys.indexOf(row[Group]) === -1){\r\n                    NivoRadialKeys.push(row[Group])\r\n                }\r\n               \r\n            }) \r\n            setNivoData(Nivo)\r\n\r\n           //console.log(Nivo)\r\n           //console.log(NivoRadialKeys)\r\n            setNivoRadialKeys(NivoRadialKeys)\r\n            setVolumeSize(CreateVolumeSize)\r\n            setValueSize(CreateValueSize)\r\n\r\n\r\n           //console.log(CreateVolumeSize, [ Math.min(...CreateVolumeSize), Math.max(...CreateVolumeSize) ])\r\n    }\r\n\r\n    useEffect(()=>{ CreateNivoData() },[data])\r\n\r\n\r\n    return(\r\n        <ResponsiveSwarmPlot\r\n        data={NivoData}\r\n        groups={NivoRadialKeys}\r\n        value=\"value\"\r\n        valueFormat=\"\"\r\n        valueScale={{ type: 'linear', min: Math.min(...ValueSize), max: Math.max(...ValueSize), reverse: false }}\r\n        size={{ key: 'volume', values: [ Math.min(...VolumeSize), Math.max(...VolumeSize) ], sizes: [ 6, 20 ] }}\r\n        forceStrength={1}\r\n        simulationIterations={100}\r\n        colors={colorArray}\r\n        borderColor={{\r\n            from: 'color',\r\n            modifiers: [\r\n                [\r\n                    'darker',\r\n                    0.6\r\n                ],\r\n                [\r\n                    'opacity',\r\n                    0.5\r\n                ]\r\n            ]\r\n        }}\r\n        margin={{ top: 80, right: 100, bottom: 80, left: 100 }}\r\n       \r\n       \r\n        axisBottom={{\r\n            orient: 'bottom',\r\n            tickSize: 10,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'Vertical  =  Number of Work orders,  Horizontal = Cluster Type',\r\n            legendPosition: 'middle',\r\n            legendOffset: 46\r\n        }}\r\n       \r\n        motionStiffness={50}\r\n        motionDamping={10}\r\n    />\r\n    )\r\n}\r\n\r\nexport default NivoPie;\r\n/*\r\n  legends={[\r\n                {\r\n                    anchor: 'bottom-left',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 56,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: '#999',\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 1,\r\n                    symbolSize: 18,\r\n                    symbolShape: 'circle',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemTextColor: '#000'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n*/","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\actions\\CreateCompareModelView.js",["3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\WorkOrders_Totals.js",["3163","3164","3165","3166","3167"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_COMPARE_FULL} from \"Context/COMPARE\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {OBJ_RESOURCES_GLOBAL, FindTotals, FindPercentageBewtweenTwoNumbers, WorkorderTotals} from 'actions/CreateCompareModelView'\r\nimport {H2} from \"Pages/Auth/Components/Type\"\r\n\r\nconst WorkOrderComparison = ()=>{\r\n    const COMPARE = useContext_COMPARE_FULL();\r\n    const UX = useContext_UX_FULL()\r\n    const MODELS = COMPARE.CompareData.FetchedModels;\r\n\r\n    const [InModel, setInModel] = useState([])\r\n    const [Total, setTotal] = useState([])\r\n    const [OutofScope, setOutofScope] = useState([])\r\n\r\n    const Calculate = ()=>{\r\n        let StoreInModel=[]\r\n        let StoreTotal=[]\r\n        let StoreOOS=[]\r\n        MODELS.map((model,i)=>{\r\n            StoreTotal.push(WorkorderTotals(model.STOREMARKERCENTERPOINTS,model.STORERESIDUALMARKERS).reduce((a, b) => a + b, 0))\r\n            StoreInModel.push(WorkorderTotals(model.STOREMARKERCENTERPOINTS,model.STORERESIDUALMARKERS)[0])\r\n            StoreOOS.push(WorkorderTotals(model.STOREMARKERCENTERPOINTS,model.STORERESIDUALMARKERS)[1])\r\n            //console.log(WorkorderTotals(model.STOREMARKERCENTERPOINTS,model.STORERESIDUALMARKERS))\r\n        })\r\n\r\n       \r\n        setTotal(StoreTotal)\r\n        setInModel(StoreInModel)\r\n        setOutofScope(StoreOOS)\r\n    } \r\n\r\n\r\n    useEffect(()=>{\r\n        Calculate() \r\n       //console.log(MODELS)\r\n       //console.log(WorkorderTotals(MODELS[0].STOREMARKERCENTERPOINTS,MODELS[0].STORERESIDUALMARKERS))\r\n     },[COMPARE, UX])\r\n\r\n    const [RAW, setRAW] = useState([])\r\n\r\n    useEffect(()=>{  setRAW(FindTotals(OBJ_RESOURCES_GLOBAL(),'Work Orders' )) },[])\r\n\r\n    return(\r\n        <div className=\"ComparisonRow\">\r\n            <div className=\"ShowInt\"> <H2 Copy={`Work Order covered in Model`} /></div>\r\n                {\r\n                    InModel.map((int,i)=>{\r\n                        return(\r\n                            <div key={i} className=\"ShowInt\">\r\n                                {int}  {FindPercentageBewtweenTwoNumbers(InModel,i)}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            <div className=\"ShowInt\"> <H2 Copy={`Work Order Out of Scope`} /></div>\r\n         \r\n                {\r\n                    OutofScope.map((int,i)=>{\r\n                        return(\r\n                            <div key={i} className=\"ShowInt\">\r\n                                {int}  {FindPercentageBewtweenTwoNumbers(OutofScope,i)}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            <div className=\"ShowInt\"> <H2 Copy={`Total Work Orders`} /></div>\r\n            \r\n                {\r\n                    Total.map((int,i)=>{\r\n                        return(\r\n                            <div key={i} className=\"ShowInt\">\r\n                                {int}  {FindPercentageBewtweenTwoNumbers(Total,i)}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n    \r\n                <WorkOrderNumbers />\r\n            </div>\r\n    )\r\n}  \r\nexport default WorkOrderComparison;\r\n\r\n\r\nconst WorkOrderNumbers = ()=>{\r\n\r\n    const [Workorders, setWorkorders] = useState([])\r\n   \r\n    const Calculate = ()=>{\r\n        let stored={}\r\n\r\n        OBJ_RESOURCES_GLOBAL().map((model,i)=>{\r\n            model.map((res,ii)=>{\r\n                if(stored[res.name] === undefined){ stored[res.name]=[0,0] }\r\n                stored[res.name][i] = res['Work Orders']\r\n            })\r\n        })\r\n    \r\n        setWorkorders(stored)\r\n    }\r\n\r\n    useEffect(()=>{ Calculate() },[])\r\n\r\n    return(\r\n        <>\r\n            <div className=\"FullWidth\">\r\n                <H2 Copy={`By Resource Type`} />\r\n            </div>\r\n        \r\n                 {\r\n                        Object.keys(Workorders).map((key,i)=>{\r\n                           \r\n                               return  (\r\n                                   <>\r\n                                        <div className=\"ShowInt\"> <H2 Copy={key} /></div>\r\n                                        <div className=\"ShowInt\">{Workorders[key][0]}</div>\r\n                                        <div className=\"ShowInt\">\r\n                                                {Workorders[key][1]} {FindPercentageBewtweenTwoNumbers(Workorders[key],1)}\r\n                                        </div>\r\n                                    </>\r\n                               )\r\n                        })\r\n                    }\r\n        </>\r\n    )\r\n}","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoFunnel.js",["3168","3169","3170","3171"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\MaterialUI\\Forms\\CreateScanoptions.js",["3172","3173","3174","3175"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoSunburst.js",["3176","3177","3178","3179","3180","3181"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\venders\\Nivo\\NivoLine.js",["3182","3183","3184"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Cluster_ResourcesBar.js",["3185","3186"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\Charts\\Workorder_pie_Clients.js",["3187"],"import React, { useEffect }  from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {OBJ_CLIENT_RESOURCES} from 'actions/CreateSingleViewModel'\r\n\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\n// Nivo \r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\nconst Chart1={\r\n    Icon:'pie',\r\n    \r\n    Tip:\"Use the Filters\",\r\n    filters:['cluster','resource'],\r\n   \r\n}\r\n\r\nconst WorkOrder_Pie_ByClient=()=>{\r\n    const MODEL = useContext_SCAN_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    useEffect(()=>{ },[UX,MODEL])\r\n    return(\r\n        <div>\r\n            <ChartHeader  Section='WorkOrders' Chart='Pie'  Meta='Pie_Client_Workorders'/> \r\n            <div style={{height: 300}}>\r\n                <NivoPie data={OBJ_CLIENT_RESOURCES()} id={`name`} value={'Work Orders'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default WorkOrder_Pie_ByClient;\r\n\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\ClusterComparisonRadial.js",["3188"],"import React from 'react'\r\n\r\nimport {OBJ_CLUSTER_GLOBAL} from \"actions/CreateCompareModelView\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n// Nivo\r\nimport NivoRadial from \"venders/Nivo/NivoRadial\"\r\n\r\nconst Chart1={ \r\n    Icon:'pie',\r\n    Header:\"Cluster Comparison\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"Graph shows the Cluster Comparison within the Model\"\r\n}\r\n\r\n\r\n    const ClusterComparisonRadials =()=>{\r\n        return(\r\n            <DiagramContainer>\r\n            <ChartHeader Section='Locations' Chart='Pie' Meta='Pie'/>\r\n            <div className=\"ComparisonRow\">\r\n                {\r\n                    OBJ_CLUSTER_GLOBAL().map((SELETCED, i )=>{\r\n                         \r\n                        return(\r\n                            <div style={{height: 300}}>\r\n                            <NivoRadial \r\n                                    data={SELETCED} \r\n                                    id={`name`} \r\n                                    value={'Appearances'} \r\n                                    Label={'Clusters'}\r\n                                />\r\n                                </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            </DiagramContainer>\r\n        )\r\n    }\r\n\r\n    export default ClusterComparisonRadials;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByMarkerType.js",["3189","3190"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Polygons.js",["3191","3192","3193","3194","3195","3196","3197","3198","3199","3200"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {Polygon} from '@react-google-maps/api';\r\nimport {findIndex} from 'lodash'; \r\nimport {RegionColor,ResourceColor,SetFilterPolygon,SetSelectedCluster} from \"actions/HandleUX\";\r\n\r\nconst options = {\r\n    fillColor: \"lightblue\",\r\n    fillOpacity: .1,\r\n    strokeColor: \"red\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 2,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false, \r\n    zIndex: 1\r\n  }\r\n \r\n\r\nconst Polygons = ()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const [DisplayPolygons, setPolygons] = useState([])\r\n\r\n\r\n    const FindColor = (type, cluster, resource)=>{\r\n        let FixedColor\r\n            if(type === 'Cluster'){\r\n                FixedColor = RegionColor(cluster)\r\n            }else{\r\n                if(resource.length===1){\r\n                    console.log(resource[0].Trade)\r\n                    FixedColor = ResourceColor(resource[0].Trade)\r\n                }\r\n                else{\r\n                    console.log(\"RESOURCE MIXED\")\r\n                    FixedColor = ResourceColor('CombinedCluster')\r\n                }\r\n            }\r\n\r\n        return FixedColor;\r\n    }\r\n\r\n\r\n    const handleClick=(centerpoint)=>{\r\n        console.log(\"Polygon Clicked\", centerpoint)\r\n        SetFilterPolygon(centerpoint.name)\r\n        SetSelectedCluster(centerpoint)\r\n    }\r\n\r\n    const CreatePolygons = ()=>{\r\n        let CreatePolyPaths=[]\r\n        SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((centerpoint,i)=>{\r\n\r\n  \r\n            \r\n/* ******************************************************************************** */         \r\n// Map Filters\r\n        //console.log(UX.AreaSelectFilter.ByColorScheme) \r\n        //console.log(centerpoint)\r\n        // Filter Results by Cluster Type    \r\n        if(UX.AreaSelectFilter.ByPolygon !== false)  \r\n            if(centerpoint.name != UX.AreaSelectFilter.ByPolygon)\r\n                return\r\n\r\n\r\n        if(UX.AreaSelectFilter.ByClusterType !== false)  \r\n            if(centerpoint.scanCategory != UX.AreaSelectFilter.ByClusterType)\r\n                return\r\n\r\n        // Filter Results by Reource Type  \r\n        if(UX.AreaSelectFilter.ByResourceType !== false)  \r\n            if(findIndex(centerpoint.resourceQuota, function(o) { return o.Trade === UX.AreaSelectFilter.ByResourceType}) === -1)\r\n                 return\r\n\r\n\r\n// End Map Filters\r\n/* ******************************************************************************** */         \r\n\r\n\r\n                let options = {\r\n                    strokeColor: FindColor(UX.AreaSelectFilter.ByColorScheme, centerpoint.scanCategory, centerpoint.resourceQuota),\r\n                    strokeOpacity: 1,\r\n                    strokeWeight: 1.5,\r\n                    fillColor:  FindColor(UX.AreaSelectFilter.ByColorScheme, centerpoint.scanCategory, centerpoint.resourceQuota),\r\n                    fillOpacity: 0.1,\r\n                  \r\n                    zIndex: 1\r\n                  }\r\n\r\n                let PolygonPath=[]\r\n                centerpoint.polygon.map((point,i)=>{\r\n                    //console.log(point)\r\n                    PolygonPath.push({ lat: point[0], lng: point[1]})\r\n                })\r\n                CreatePolyPaths.push(\r\n                    <Polygon \r\n                        onClick={()=>{handleClick(centerpoint)}}    \r\n                        paths={PolygonPath} \r\n                        key={`Polygon_${i}`}\r\n                        options={options} />\r\n                )\r\n                \r\n        })\r\n\r\n        setPolygons(CreatePolyPaths)\r\n    }\r\n\r\n\r\n\r\n     useEffect(()=>{ CreatePolygons() },[SCAN.SelectedModel])\r\n     useEffect(()=>{},[DisplayPolygons])\r\n     useEffect(()=>{ CreatePolygons() },[UX])\r\n    return(\r\n        <>\r\n            {DisplayPolygons}\r\n        </>\r\n    )\r\n} \r\n\r\nexport default Polygons;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ResidualLocationMarkers.js",["3201","3202","3203","3204","3205","3206","3207","3208","3209"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_STRAPI_FULL} from \"Context/STRAPI\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker  } from '@react-google-maps/api';\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {uniqBy} from 'lodash'; \r\n\r\n\r\nconst divStyle = {\r\n    background: `white`,\r\n    padding: 1\r\n  }\r\n \r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkersALL = ()=>{\r\n\r\n    const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n   \r\n    let Targeticon = { };\r\n\r\n    const onLoadMarker = marker => {console.log('marker Created')}\r\n    const OnMarkerClick=(name)=>{console.log(\"Marker Clicked\", name) }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n       //console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n\r\n      const CreateMarkers = (markers)=>{\r\n\r\n        //console.log(\"markers\", markers)\r\n        \r\n        let StoreMarkers=[]         \r\n                markers.map((site,i)=>{\r\n                    Targeticon = {\r\n                        //path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                        path:\"M-24-48h48v48h-48z\",\r\n                        fillColor: '#3D3D3D',\r\n                        fillOpacity: 1,\r\n                        anchor: new window.google.maps.Point(0,0),\r\n                        strokeWeight: 0,\r\n                        scale: .2,\r\n                        zIndex:10\r\n                    };\r\n                    StoreMarkers.push( \r\n                        \r\n                            <Marker\r\n                                key={i}\r\n                                onLoad={onLoadMarker}\r\n                                title={site.name}\r\n                                //label={site.name}\r\n                                icon={Targeticon}\r\n                                onClick={()=>{OnMarkerClick(site.name)}}\r\n                                position={{\r\n                                        lat: parseFloat(site.lat),\r\n                                        lng: parseFloat(site.long)\r\n                                    }}\r\n                            />\r\n                    )\r\n                })\r\n        setDisplayMarkers(StoreMarkers);\r\n        }\r\n\r\n      useEffect(()=>{  CreateMarkers(SCAN.SelectedModel.STORERESIDUALMARKERS)},[SCAN.SelectedModel])\r\n\r\n      return(  <>{DisplayMarkers}</>) \r\n\r\n}\r\n\r\nexport default MarkerBasedLocationMarkersALL;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByClusterType.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\LocationMarkers.js",["3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224"],"\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\n\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {  Marker, MarkerClusterer,InfoWindow  } from '@react-google-maps/api';\r\n\r\n//const iconBase =\"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\r\nimport {findIndex} from 'lodash'; \r\nimport {RegionColor,ResourceColor} from \"actions/HandleUX\"\r\nimport {findClientName} from \"actions/ClusterAnalysis\";\r\n\r\nconst divStyle = {\r\n  background: `yellow`,\r\n  border: `1px solid #ccc`,\r\n  padding: 15\r\n}\r\n \r\n  const mcOptions = {\r\n    styles: [{\r\n        height: 53,\r\n        url: \"/clusters/m1.png\",\r\n        width: 53, \r\n\r\n      },\r\n      {\r\n        height: 56,\r\n        url: \"/clusters/m2.png\",\r\n        width: 56,\r\n      },\r\n      {\r\n        height: 66,\r\n        url: \"/clusters/m3.png\",    \r\n        width: 66, \r\n      },\r\n      {\r\n        height: 78,\r\n        url: \"/clusters/m4.png\",\r\n        width: 78,\r\n      },\r\n      {\r\n        height: 90,\r\n        url: \"/clusters/m5.png\",\r\n        width: 90,\r\n      }\r\n    ]\r\n  }\r\n\r\n/** Loop Markers */ \r\nconst MarkerBasedLocationMarkers = ()=>{\r\n\r\n    //const STRAPI = useContext_STRAPI_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [DisplayMarkers,setDisplayMarkers] = useState(null)\r\n    const [ShowInfoWindow, setShowInfoWindow] = useState(false)\r\n    const [InfoWindowContent, setInfoWindowContent] = useState(false)\r\n\r\n\r\n\r\n\r\n    let Targeticon = { };\r\n    let Homeicon={}\r\n    const onLoadMarker = marker => {\r\n      //console.log('marker Created')\r\n    }\r\n\r\n    const OnMarkerClick=(point, Region)=>{\r\n      //console.log(\"Marker Clicked\", point, Region)  \r\n      \r\n      setInfoWindowContent(point)\r\n      setShowInfoWindow(true)\r\n    \r\n    }\r\n\r\n\r\n      const ColorMe = (val)=>{\r\n        let color = interpolate(\"#466dfb\", \"#ff6d6d\")\r\n        return  color((val).toFixed(2))\r\n      }\r\n\r\n      const FindMinMax=(Data)=>{\r\n        let arr=[]\r\n\r\n        //console.log(\"FindMinMax\", Data)\r\n        Data.map((marker,i)=>{ \r\n       \r\n            if(marker.count[0] != null){\r\n              //console.log(marker.count[0])\r\n              //console.log(marker.count[0].WorkOrders)\r\n              arr.push(marker.count[0].WorkOrders) \r\n            }\r\n          })\r\n        return [Math.min(...arr),Math.max(...arr)]\r\n      }\r\n\r\n      const FindColor = (type, cluster, resource)=>{\r\n        let FixedColor\r\n            if(type === 'Cluster'){\r\n                FixedColor = RegionColor(cluster)\r\n            }else{\r\n                if(resource.length===1){\r\n                    console.log(resource[0].Trade)\r\n                    FixedColor = ResourceColor(resource[0].Trade)\r\n                }\r\n                else{\r\n                    console.log(\"RESOURCE MIXED\")\r\n                    FixedColor = ResourceColor('CombinedCluster')\r\n                }\r\n            }\r\n\r\n        return FixedColor;\r\n    }\r\n\r\n\r\n      const CreateMarkers = (markers,  clusterer)=>{\r\n\r\n       \r\n        let StoreMarkers=[];\r\n\r\n        markers.map((centerPoint,i)=>{\r\n\r\n         //console.log(\"centerPoint\", centerPoint)\r\n\r\n  \r\n/* ******************************************************************************** */         \r\n// Map Filters\r\n// Filter Results by Polygon Select\r\n    if(UX.AreaSelectFilter.ByPolygon !== false)  \r\n            if(centerPoint.name != UX.AreaSelectFilter.ByPolygon)\r\n                return\r\n// Filter Results by Cluster Type\r\n          if(UX.AreaSelectFilter.ByClusterType !== false)  \r\n            if(centerPoint.scanCategory != UX.AreaSelectFilter.ByClusterType)\r\n              return\r\n// Filter Results by Reource Type \r\n\r\n            if(UX.AreaSelectFilter.ByResourceType !== false)  \r\n             if(findIndex(centerPoint.resourceQuota, function(o) { return o.Trade === UX.AreaSelectFilter.ByResourceType}) === -1)\r\n              return\r\n// End Map Filters\r\n/* ******************************************************************************** */  \r\n\r\n          if(UX.AreaSelectFilter.ByMarkerType === 'Center Points Only'){\r\n\r\n            Homeicon = {\r\n              //path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n              path:\"M38.8823 0.384155L0.579987 34.26H10.06V74.76H66.94V34.26H76.42L38.8823 0.384155Z\",\r\n              fillColor: FindColor(UX.AreaSelectFilter.ByColorScheme, centerPoint.scanCategory, centerPoint.resourceQuota),\r\n              fillOpacity: .9,\r\n              anchor: new window.google.maps.Point(50,50),\r\n              strokeWeight: 0,\r\n              scale: .3\r\n          }; \r\n    \r\n      \r\n                StoreMarkers.push( \r\n                    \r\n                        <Marker\r\n                            clusterer={clusterer}\r\n                            key={`${centerPoint.scanCategory} ${centerPoint.name}`}\r\n                            onLoad={onLoadMarker}\r\n                            title={centerPoint.name}\r\n                            //label={site.name}\r\n                            icon={Homeicon}\r\n                            //onClick={()=>{OnMarkerClick(centerPoint)}}\r\n                            position={{\r\n                                    lat: parseFloat(centerPoint.center.lat),\r\n                                    lng: parseFloat(centerPoint.center.lng)\r\n                                }}\r\n                        />\r\n                  )\r\n\r\n\r\n          }else{\r\n            centerPoint.StripedSites.map((site,ii)=>{\r\n\r\n              Targeticon = {\r\n                //path: \"M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z\",\r\n                path:\"M-24-48h48v48h-48z\",\r\n                fillColor: FindColor(UX.AreaSelectFilter.ByColorScheme, centerPoint.scanCategory, centerPoint.resourceQuota),\r\n                \r\n                fillOpacity: .9,\r\n                anchor: new window.google.maps.Point(0,0),\r\n                strokeWeight: 0,\r\n                scale: .3\r\n            }; \r\n      \r\n            \r\n           \r\n                  StoreMarkers.push( \r\n                        \r\n                          <Marker\r\n                              clusterer={clusterer}\r\n                              key={`Site ${centerPoint.scanCategory}${site.name}`}\r\n                           \r\n                              onLoad={onLoadMarker}\r\n                              title={site.name}\r\n                              //label={site.name}\r\n                              icon={Targeticon}\r\n                              onClick={()=>{OnMarkerClick(site, centerPoint.scanCategory)}}\r\n                              position={{\r\n                                      lat: parseFloat(site.lat),\r\n                                      lng: parseFloat(site.long)\r\n                                  }}\r\n                          />\r\n                    )\r\n              })\r\n\r\n          }// end ByMarkerType Filter ELSE\r\n          \r\n          \r\n          \r\n          \r\n          })\r\n          return StoreMarkers;\r\n        }\r\n\r\n      useEffect(()=>{ \r\n        if(CreateMarkers(SCAN.SelectedModel.STOREMARKERCENTERPOINTS) != undefined)\r\n          CreateMarkers(SCAN.SelectedModel.STOREMARKERCENTERPOINTS)\r\n      },[SCAN.SelectedModel])\r\n\r\n\r\n      const onLoad = infoWindow => {\r\n        //console.log('infoWindow: ', infoWindow)\r\n      }\r\n      \r\n      const onClose = (infoWindow)=>{\r\n        //console.log('onClose: ',infoWindow)\r\n        setShowInfoWindow(false)\r\n      }\r\n\r\n\r\n      useEffect(()=>{ },[UX])\r\n      return(  <>\r\n               \r\n              {\r\n                ShowInfoWindow ? <InfoWindow  onLoad={onLoad} position={ { lat: InfoWindowContent.lat, lng: InfoWindowContent.long }}  onCloseClick={onClose}>\r\n                                    <div style={{ }}>\r\n                                        <InfoWindowDetails InfoWindowContent={InfoWindowContent}/>\r\n                                    </div>\r\n                                </InfoWindow> : false\r\n              }\r\n                \r\n\r\n                 <MarkerClusterer options={mcOptions} maxZoom={12} minimumClusterSize={30}>\r\n                    {(clusterer) =>\r\n                       CreateMarkers(SCAN.SelectedModel.STOREMARKERCENTERPOINTS, clusterer)\r\n                    }\r\n                  </MarkerClusterer>\r\n                </>\r\n                )\r\n\r\n}\r\n\r\nexport default MarkerBasedLocationMarkers;\r\n\r\n\r\n\r\nconst InfoWindowDetails = (props)=>{\r\n  const {InfoWindowContent} = props\r\n  return(\r\n      <div  className=\"SiteInfoWindow\" >\r\n          <h3>Site Info</h3>\r\n          <ul>\r\n              <li>\r\n                  <span>Address : </span>\r\n                  <span>{InfoWindowContent.name}</span>\r\n              </li>\r\n              <li>\r\n                  <span>Work Orders : </span>\r\n                  <span>{InfoWindowContent.SumWorkOrder}</span>\r\n              </li>\r\n              <li>\r\n                  <span>Clients : </span>\r\n                  <span>\r\n                    <ul>\r\n                        <li>\r\n                              {\r\n                                InfoWindowContent.customers.map((customer,i)=>{\r\n                                  return(\r\n                                    <li key={i}>\r\n                                        {findClientName(customer)}\r\n                                    </li>\r\n                                  )\r\n                                })\r\n                              }\r\n                          </li> \r\n                  </ul></span>\r\n              </li>\r\n              \r\n          </ul>\r\n      </div>\r\n  )\r\n}","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\CLusters_ComparisionPie.js",["3225"],"import React from 'react'\r\n\r\nimport {OBJ_CLUSTER_GLOBAL} from \"actions/CreateCompareModelView\"\r\n// Layout\r\nimport ChartHeader from \"Pages/Auth/Components/Layout/ChartHeader\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n// Nivo\r\nimport NivoPie from \"venders/Nivo/NivoPie\"\r\n\r\nconst Chart1={ \r\n    Icon:'pie',\r\n    Header:\"Cluster Comparison\",\r\n    Tip:\"Use the Filters\",\r\n    Copy:\"Graph shows the Cluster Comparison within the Model\"\r\n}\r\n\r\nconst ClusterComparisonPie =()=>{\r\n    return(\r\n        <DiagramContainer> \r\n            <ChartHeader Section='Locations' Chart='Pie' Meta='Pie'/>\r\n            <div className=\"ComparisonRow\">\r\n                {\r\n                    OBJ_CLUSTER_GLOBAL().map((SELETCED, i )=>{\r\n                        \r\n                        return(\r\n                            <div style={{height: 300}} key={i}>\r\n                                <NivoPie data={SELETCED} id={`name`} value={'Appearances'} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </DiagramContainer>\r\n    )\r\n}\r\n\r\nexport default ClusterComparisonPie;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\CompareTable\\Resource_Totals.js",["3226","3227","3228","3229","3230","3231"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByResourceType.js",["3232","3233","3234"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoAddItemsSingleScan.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\CreateModel\\ScanSelectItems.js",["3235","3236","3237","3238","3239"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\SetSelectedBtn.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clusters_List.js",["3240"],"import React, {useEffect, useState} from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {OBJ_CENTERPOINTS} from 'actions/CreateSingleViewModel';\r\nimport {RegionColor, SetFilterPolygon,SetSelectedCluster,setMainMapLocation} from \"actions/HandleUX\";\r\nimport {H2} from \"Pages/Auth/Components/Type\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {orderBy} from 'lodash'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nconst ClusterList = ()=>{\r\n   // const SCAN = useContext_SCAN_FULL();\r\n\r\n   const [ReorderBy, setReorderBy] = useState('type')\r\n   const Pushhistory = useHistory();\r\n   useEffect(()=>{\r\n        //console.log(OBJ_CENTERPOINTS())\r\n    },[ReorderBy])\r\n\r\n    const handleSelect=(centerpoint)=>{\r\n     \r\n        SetFilterPolygon(centerpoint.name)\r\n        SetSelectedCluster(centerpoint.model)\r\n        setMainMapLocation( {Center:centerpoint.model.center, Zoom:14,Name:centerpoint.name} )\r\n        Pushhistory.push(\"/results/map\");\r\n    }\r\n\r\n    const handleReorder=(item)=>{\r\n        setReorderBy(item)\r\n    }\r\n\r\n\r\n    const arrow=(item)=>{\r\n        if(item === ReorderBy){\r\n            return <ArrowDropDownIcon />\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n         <H2 Copy={`Cluster Breakdown`}/>\r\n        <DiagramContainer>\r\n        \r\n        <ul className=\"clusterList\">\r\n            <li className=\"Header\">\r\n                <div>Cluster Name</div>\r\n                <div className=\"sortable\" onClick={()=>{handleReorder('sites')}} >Sites {arrow('sites')}</div>\r\n                <div className=\"sortable\" onClick={()=>{handleReorder('type')}} >Cluster Type {arrow('type')} </div>\r\n                \r\n                <div  className=\"sortable\" onClick={()=>{handleReorder('clients')}} >Clients {arrow('clients')}</div>\r\n                <div>Trades</div>\r\n                <div className=\"sortable\" onClick={()=>{handleReorder('resourceQuotaTotal')}} >Resources {arrow('resourceQuotaTotal')}</div>\r\n                <div></div>\r\n            </li>\r\n\r\n            {\r\n                //orderBy(OBJ_CENTERPOINTS(), ['resourceQuotaTotal', 'type'], ['asc', 'desc'])\r\n                orderBy(OBJ_CENTERPOINTS(), [ReorderBy], ['desc','asc']).map((center,i)=>{\r\n                    return(\r\n                        <li key={i}>\r\n                           <div>{ center.name }</div>\r\n                           <div >{ center.sites }</div>\r\n                           <div style={{color: RegionColor(center.type)}}>{ center.type }</div>\r\n                           \r\n                           <div>{ center.clients }</div>\r\n\r\n                           <div>\r\n                               { \r\n                               center.resourceQuota.map((type,i)=>{\r\n                                return(<span>{type.Trade}</span>)\r\n                                }) \r\n                               }\r\n                            </div>\r\n\r\n                            <div>{center.resourceQuotaTotal.toFixed(2)}</div>\r\n                            \r\n                            <div>\r\n                                <IconButton aria-label=\"refresh\" onClick={()=>{handleSelect(center)}}>\r\n                                    <VisibilityIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n        </DiagramContainer>\r\n        </>\r\n    )\r\n}\r\nexport default ClusterList;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\Clusters_ResultsList.js",["3241","3242","3243"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basic_Charts.js",["3244","3245","3246","3247"],"import React, { useEffect }  from 'react'\r\n\r\nimport {OBJ_CLIENT_RESOURCES, OBJ_CLUSTER_GLOBAL} from 'actions/CreateSingleViewModel'\r\n\r\n// Chart\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\n// Charts \r\nimport Workorder_pie_Clients from 'Pages/Auth/SingleModelResult/Charts/Workorder_pie_Clients'\r\nimport Workorder_Radial_Cluster from 'Pages/Auth/SingleModelResult/Charts/Workorder_Radial_Cluster'\r\n\r\n\r\nconst WorkOrderByClient=()=>{\r\n    useEffect(()=>{ },[])\r\n    return(\r\n        <DiagramContainer> \r\n        \r\n            <div className=\"resultCharts\">  \r\n                <Workorder_pie_Clients /> \r\n               <Workorder_Radial_Cluster />\r\n            </div>\r\n\r\n            <Stats_Bar data={OBJ_CLIENT_RESOURCES()} name={`name`} value={`Work Orders`}/> \r\n            <Stats_Bar data={OBJ_CLUSTER_GLOBAL()} name={`name`} value={`Work Orders`}/> \r\n        </DiagramContainer>\r\n    )\r\n}\r\nexport default WorkOrderByClient;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrder_Radial_Charts.js",["3248","3249","3250"],"import React, {useEffect } from 'react'\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\n\r\nimport {OBJ_RESOURCES_GLOBAL} from \"actions/CreateSingleViewModel\"\r\n// Layout\r\n\r\nimport Stats_Bar from \"Pages/Auth/Components/Layout/Stats_Bar\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\n\r\n\r\n// Charts \r\nimport Workorders_Radial_Workorders from 'Pages/Auth/SingleModelResult/Charts/Workorder_Radial_Workorders'\r\nimport Workorder_pie_outofscope from 'Pages/Auth/SingleModelResult/Charts/Workorder_pie_outofscope' \r\n\r\n\r\nconst WorkOrderTradeCharts=()=>{\r\n\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const UX = useContext_UX_FULL();\r\n    useEffect(()=>{ },[UX,SCAN]) \r\n    \r\n    return(\r\n        <DiagramContainer>\r\n            <div className=\"resultCharts\">\r\n                <Workorders_Radial_Workorders /> \r\n                <Workorder_pie_outofscope />\r\n            </div>\r\n\r\n            <Stats_Bar data={OBJ_RESOURCES_GLOBAL(['ByClusterType'])} name={`name`} value={`Work Orders`}/> \r\n           \r\n     </DiagramContainer>\r\n    )\r\n}\r\n\r\nexport default WorkOrderTradeCharts;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_OverTime.js",["3251"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\SingleModelResult\\components\\WorkOrders_Basics.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\selects\\Select_CreateModelFilter.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\buttons\\BacktoScanType.js",[],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterResults.js",["3252","3253","3254","3255","3256"],"import React, { useEffect, useState } from 'react'\r\nimport{NumberReducer, RegionColor, GroupArrayByOccurances} from \"actions/HandleUX\";\r\nimport {findClientName, FindTradeTypeAllocation} from \"actions/ClusterAnalysis\";\r\nimport ClusterMiniMap from \"Pages/Auth/Components/Maps/ClusterMiniMapResults/ClusterMiniMap\"\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\n\r\nconst ClusterResult = (props)=>{\r\n\r\n    const {result, i} = props;\r\n    const [WorkOrderTotal, setWorkOrderTotal] = useState(0)\r\n   \r\n    const SumWorkorders = (data)=>{\r\n        let total = []\r\n        data.map((site)=>{\r\n            if(!isNaN(site.SumWorkOrder))\r\n                total.push(site.SumWorkOrder)\r\n        })\r\n        setWorkOrderTotal(total.reduce((a, b) => a + b, 0))\r\n    }\r\n\r\n    const SumTradeType = ()=>{\r\n\r\n    }\r\n \r\n    useEffect(()=>{ \r\n        //console.log(result)\r\n        //FindClusterTotal(result)\r\n        SumWorkorders(result.sites) \r\n        SumTradeType(result.sites)\r\n        \r\n    },[result])\r\n \r\n    return(\r\n        <>\r\n            \r\n            <div className=\"colorkey\" style={{backgroundColor:RegionColor(result.scanCategory)}}>\r\n             <strong>{result.scanCategory}</strong>\r\n            </div>\r\n          \r\n            <h3><LocationCityIcon /> Cluster { (i+1) }</h3>            \r\n            <ul className=\"ListStats\">\r\n                <li>Sites: <strong>{result.sites.length}</strong></li>\r\n                <li>Total Work Orders: <strong>{WorkOrderTotal}</strong></li>\r\n                <li>Resource Quota : <strong>{result.resourceQuota.toFixed(2)}</strong></li> \r\n               \r\n               <li>\r\n                   Clients\r\n                   <GetClientName clients = {GroupArrayByOccurances(JSON.parse(result.sites[0].count[0].Customers))}/></li>\r\n                <li>\r\n                    Trade Types %\r\n                   <GetTradeName Trades = {FindTradeTypeAllocation([{sites:result.sites}])}/></li>\r\n               \r\n             \r\n            </ul>\r\n            <h4></h4> \r\n           \r\n            \r\n            \r\n            <div className=\"ListResultContainer\">\r\n               <ClusterMiniMap result={result}/>\r\n            </div>\r\n                \r\n               \r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\n   <li>est Cost : <strong>$?</strong></li>\r\n  <CenterPoints />\r\n                        <Markers />\r\n                        <ResidualMarkers />\r\n*/\r\nexport default ClusterResult;\r\n\r\n//<h3> {result.name}</h3>\r\n\r\nconst GetTradeName = (props)=>{\r\n    const {Trades} = props\r\n    const [TradeAllocationTotal, setTradeAllocationTotal] = useState(0)\r\n    const TradeWoRatioForDemo=(num)=>{\r\n        return ((num/TradeAllocationTotal)*100).toFixed(2)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let TWV=0\r\n        Trades[1].map((value,i)=>{TWV= TWV+value})\r\n        setTradeAllocationTotal(TWV)\r\n    },[])\r\n\r\n    return(\r\n        <ul>\r\n            {\r\n                Trades[0].map((trade,i)=>{\r\n                    return(\r\n                        <li key={i}>\r\n                            {trade} <strong>{ TradeWoRatioForDemo(Trades[1][i]) }%</strong>\r\n                        </li>\r\n                    )\r\n                })\r\n\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n \r\n\r\nconst GetClientName = (props)=>{\r\n    const {clients} = props\r\n    return(\r\n        <ul>\r\n            {\r\n                clients[0].map((client, i )=>{\r\n                    return(\r\n                        <li key={i}><strong>{findClientName(client)}</strong></li>\r\n                    )\r\n                })\r\n\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\ClusterMiniMapResults\\ClusterMiniMap.js",["3257","3258","3259","3260","3261"],"E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\LocationDeepDive.js",["3262","3263","3264","3265","3266"],"import React from 'react';\r\n\r\n\r\n\r\n// Type\r\nimport {H1, H2, H3,H4, P, S} from \"Pages/Auth/Components/Type\"\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\n\r\n\r\nconst Pipe=[\r\n    {\r\n        title:\"Public\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n        \r\n    },{\r\n        title:\"User Account\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"General\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"Create Model\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"View Model\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"Compare Models\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"Compare Models\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    }\r\n]\r\n\r\n\r\nconst Pipeline = ()=>{\r\n    return(\r\n        <div className=\"OuterContainer\">\r\n            <div className=\"InnerFrame\">\r\n                    <H2 Copy={`Location Deep Dive`}/>\r\n                    <Section>\r\n                        <H3 Copy={`Building Soon`} />\r\n                        \r\n                    </Section>\r\n                    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pipeline;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\ClientDeepDive.js",["3267","3268","3269","3270","3271"],"import React from 'react';\r\n\r\n\r\n\r\n// Type\r\nimport {H1, H2, H3,H4, P, S} from \"Pages/Auth/Components/Type\"\r\nimport Section from \"Pages/Auth/Components/Layout/Section\"\r\n\r\n\r\nconst Pipe=[\r\n    {\r\n        title:\"Public\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n        \r\n    },{\r\n        title:\"User Account\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"General\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"Create Model\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"View Model\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"Compare Models\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    },\r\n    {\r\n        title:\"Compare Models\",\r\n        Description:\"Description\",\r\n        line:[{\r\n            item:\"Item\",\r\n            brief:\"Brief on Item\",\r\n            priority:\"Low\",\r\n            eta:\"NA\",\r\n        }],\r\n    }\r\n]\r\n\r\n\r\nconst Pipeline = ()=>{\r\n    return(\r\n        <div className=\"OuterContainer\">\r\n            <div className=\"InnerFrame\">\r\n                    <H2 Copy={`Client Deep Dive`}/>\r\n                    <Section>\r\n                        <H3 Copy={`Building Soon`} />\r\n                        \r\n                    </Section>\r\n                    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pipeline;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Components\\Maps\\Filters\\Filter_ByColorScheme.js",["3272","3273"],"import React, { useEffect, useState } from 'react';\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport { SetFilterColorSchemeType } from \"actions/HandleUX\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {find} from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nconst ByCapitalCities = ()=>{\r\n    const UX = useContext_UX_FULL()\r\n    const MarkerTypes=['Cluster', 'Resource']\r\n\r\n    const classes = useStyles();\r\n    const [Selected, setMarkerType] = useState(UX.AreaSelectFilter.ByColorScheme);\r\n  \r\n    const handleChange = (event) => { \r\n        SetFilterColorSchemeType(event.target.value); \r\n        setMarkerType(event.target.value)\r\n    };\r\n \r\n\r\n    return(\r\n       <FormControl variant=\"outlined\" className={`${classes.formControl} Map_Filters`}>\r\n        <InputLabel id=\"MarkerType\">Select Color Scheme</InputLabel>\r\n             <Select\r\n                labelId=\"Marker Type\"\r\n                id=\"MarkerType-outlined\"\r\n                value={Selected}\r\n                onChange={handleChange}\r\n                label=\"Select Marker Type\"\r\n                >\r\n          <MenuItem value=\"\"> <em>Select</em> </MenuItem>\r\n\r\n          {\r\n              MarkerTypes.map((marker,i)=>{\r\n                  return(\r\n                    <MenuItem key={i} value={marker}>{marker}</MenuItem>\r\n                  )\r\n              })\r\n          }\r\n\r\n        </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ByCapitalCities;","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\MapClusterResults.js",["3274","3275","3276","3277","3278","3279","3280","3281"],"import React, {useEffect, useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useContext_UX_FULL} from \"Context/UX\";\r\nimport {useContext_SCAN_FULL} from \"Context/SCAN\";\r\nimport {RegionColor, SetFilterPolygon,SetSelectedCluster,setMainMapLocation} from \"actions/HandleUX\";\r\nimport {findIndex} from 'lodash'; \r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {H2} from \"Pages/Auth/Components/Type\";\r\nimport DiagramContainer from \"Pages/Auth/Components/Layout/DiagramContainer\"\r\nconst ClusterResults = ()=>{\r\n    const UX = useContext_UX_FULL()\r\n    const SCAN = useContext_SCAN_FULL();\r\n    const [ShowResults, setResults] = useState([])\r\n    const Pushhistory = useHistory();\r\n\r\n    const handleSelect=(centerpoint)=>{\r\n        console.log(centerpoint);\r\n\r\n        SetFilterPolygon(centerpoint.name)\r\n        SetSelectedCluster(centerpoint)\r\n        setMainMapLocation( {Center:centerpoint.center, Zoom:14,Name:centerpoint.name} )\r\n        Pushhistory.push(\"/results/map\");\r\n    }\r\n\r\n\r\n\r\n    const GetResourceNum =(Cluster)=>{\r\n        let Total=[];\r\n        Cluster.map((res,i)=>{Total.push(res.ResourceAllocation);})\r\n\r\n        return (Total.reduce((a, b) => a + b, 0))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let Results=[]\r\n        SCAN.SelectedModel.STOREMARKERCENTERPOINTS.map((centerpoint,i)=>{\r\n        /* ******************************************************************************** */         \r\n        // Map Filters\r\n                //console.log(UX.AreaSelectFilter.ByColorScheme) \r\n                //console.log(centerpoint)\r\n                // Filter Results by Cluster Type    \r\n                if(UX.AreaSelectFilter.ByPolygon !== false)  \r\n                    if(centerpoint.name != UX.AreaSelectFilter.ByPolygon)\r\n                        return\r\n\r\n\r\n                if(UX.AreaSelectFilter.ByClusterType !== false)  \r\n                    if(centerpoint.scanCategory != UX.AreaSelectFilter.ByClusterType)\r\n                        return\r\n\r\n                // Filter Results by Reource Type  \r\n                if(UX.AreaSelectFilter.ByResourceType !== false)  \r\n                    if(findIndex(centerpoint.resourceQuota, function(o) { return o.Trade === UX.AreaSelectFilter.ByResourceType}) === -1)\r\n                        return\r\n\r\n\r\n        // End Map Filters\r\n        /* ******************************************************************************** */    \r\n\r\n            Results.push(centerpoint)\r\n        })\r\n\r\n        setResults(Results)\r\n    },[UX])\r\n\r\n    return(\r\n        <DiagramContainer>\r\n            <H2 Copy={`Clusters : ${ShowResults.length}`} />\r\n            \r\n\r\n            <ul className=\"clusterList\">\r\n            <li className=\"Header\">\r\n                <div>Cluster Name</div>\r\n                <div>Sites</div>\r\n                <div>Resource Allocation</div>\r\n                <div></div>\r\n            </li>\r\n                {\r\n                    ShowResults.map((center,i)=>{\r\n                       console.log(center)\r\n                        return(\r\n                            <li key={i}>\r\n                               <div style={{color: RegionColor(center.scanCategory)}}>{ center.scanCategory }</div>\r\n                               <div >{ center.StripedSites.length }</div>\r\n                               <div>{GetResourceNum(center.resourceQuota)}</div>\r\n                               <div>\r\n                                    <IconButton aria-label=\"refresh\" onClick={()=>{handleSelect(center)}}>\r\n                                        <VisibilityIcon />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n\r\n      \r\n        </DiagramContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default ClusterResults;\r\n\r\n/*\r\n\r\n                               <div >{ center.sites }</div>\r\n                               \r\n                              \r\n                               <div>{ center.clients }</div>\r\n    \r\n                               <div>\r\n                                   { \r\n                                   center.resourceQuota.map((type,i)=>{\r\n                                    return(<span>{type.Trade}</span>)\r\n                                    }) \r\n                                   }\r\n                                </div>\r\n    \r\n                                <div>{center.resourceQuotaTotal.toFixed(2)}</div>\r\n                                \r\n                               \r\n*/","E:\\htdoc\\Intact AnaltyiQ\\analtyiq\\src\\Pages\\Auth\\Compare\\Layout\\ViewSelectedClusterSites.js",[],{"ruleId":"3282","severity":1,"message":"3283","line":22,"column":7,"nodeType":"3284","messageId":"3285","endLine":22,"endColumn":15},{"ruleId":"3286","replacedBy":"3287"},{"ruleId":"3288","replacedBy":"3289"},{"ruleId":"3290","severity":1,"message":"3291","line":153,"column":42,"nodeType":"3292","messageId":"3293","endLine":153,"endColumn":44},{"ruleId":"3282","severity":1,"message":"3294","line":2,"column":10,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3295","line":8,"column":8,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":20},{"ruleId":"3296","severity":1,"message":"3297","line":16,"column":15,"nodeType":"3298","messageId":"3299","endLine":16,"endColumn":17},{"ruleId":"3296","severity":1,"message":"3297","line":16,"column":33,"nodeType":"3298","messageId":"3299","endLine":16,"endColumn":35},{"ruleId":"3296","severity":1,"message":"3297","line":31,"column":17,"nodeType":"3298","messageId":"3299","endLine":31,"endColumn":19},{"ruleId":"3296","severity":1,"message":"3297","line":32,"column":17,"nodeType":"3298","messageId":"3299","endLine":32,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3300","line":287,"column":12,"nodeType":"3284","messageId":"3285","endLine":287,"endColumn":26},{"ruleId":"3290","severity":1,"message":"3291","line":290,"column":43,"nodeType":"3292","messageId":"3293","endLine":290,"endColumn":45},{"ruleId":"3290","severity":1,"message":"3301","line":332,"column":73,"nodeType":"3302","messageId":"3303","endLine":332,"endColumn":82},{"ruleId":"3290","severity":1,"message":"3291","line":342,"column":26,"nodeType":"3292","messageId":"3293","endLine":342,"endColumn":28},{"ruleId":"3304","severity":1,"message":"3305","line":26,"column":22,"nodeType":"3306","endLine":26,"endColumn":26,"suggestions":"3307"},{"ruleId":"3282","severity":1,"message":"3308","line":12,"column":8,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3309","line":13,"column":8,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3310","line":14,"column":8,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":20},{"ruleId":"3290","severity":1,"message":"3291","line":161,"column":33,"nodeType":"3292","messageId":"3293","endLine":161,"endColumn":35},{"ruleId":"3290","severity":1,"message":"3291","line":163,"column":44,"nodeType":"3292","messageId":"3293","endLine":163,"endColumn":46},{"ruleId":"3282","severity":1,"message":"3311","line":186,"column":17,"nodeType":"3284","messageId":"3285","endLine":186,"endColumn":30},{"ruleId":"3312","severity":1,"message":"3313","line":206,"column":11,"nodeType":"3314","messageId":"3315","endLine":206,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":209,"column":11,"nodeType":"3314","messageId":"3315","endLine":209,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":212,"column":11,"nodeType":"3314","messageId":"3315","endLine":212,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":215,"column":11,"nodeType":"3314","messageId":"3315","endLine":215,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":218,"column":11,"nodeType":"3314","messageId":"3315","endLine":218,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":221,"column":11,"nodeType":"3314","messageId":"3315","endLine":221,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":224,"column":11,"nodeType":"3314","messageId":"3315","endLine":224,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":227,"column":11,"nodeType":"3314","messageId":"3315","endLine":227,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":230,"column":11,"nodeType":"3314","messageId":"3315","endLine":230,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":233,"column":11,"nodeType":"3314","messageId":"3315","endLine":233,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":236,"column":11,"nodeType":"3314","messageId":"3315","endLine":236,"endColumn":17},{"ruleId":"3316","severity":1,"message":"3317","line":271,"column":3,"nodeType":"3318","messageId":"3319","endLine":297,"endColumn":4},{"ruleId":"3312","severity":1,"message":"3313","line":274,"column":13,"nodeType":"3314","messageId":"3315","endLine":274,"endColumn":19},{"ruleId":"3312","severity":1,"message":"3313","line":277,"column":9,"nodeType":"3314","messageId":"3315","endLine":277,"endColumn":15},{"ruleId":"3312","severity":1,"message":"3313","line":280,"column":11,"nodeType":"3314","messageId":"3315","endLine":280,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":283,"column":11,"nodeType":"3314","messageId":"3315","endLine":283,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":286,"column":11,"nodeType":"3314","messageId":"3315","endLine":286,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":289,"column":11,"nodeType":"3314","messageId":"3315","endLine":289,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":292,"column":11,"nodeType":"3314","messageId":"3315","endLine":292,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":295,"column":11,"nodeType":"3314","messageId":"3315","endLine":295,"endColumn":17},{"ruleId":"3296","severity":1,"message":"3297","line":375,"column":16,"nodeType":"3298","messageId":"3299","endLine":375,"endColumn":18},{"ruleId":"3296","severity":1,"message":"3320","line":375,"column":31,"nodeType":"3298","messageId":"3299","endLine":375,"endColumn":33},{"ruleId":"3296","severity":1,"message":"3297","line":379,"column":14,"nodeType":"3298","messageId":"3299","endLine":379,"endColumn":16},{"ruleId":"3296","severity":1,"message":"3320","line":379,"column":31,"nodeType":"3298","messageId":"3299","endLine":379,"endColumn":33},{"ruleId":"3296","severity":1,"message":"3320","line":386,"column":41,"nodeType":"3298","messageId":"3299","endLine":386,"endColumn":43},{"ruleId":"3290","severity":1,"message":"3291","line":425,"column":60,"nodeType":"3292","messageId":"3293","endLine":425,"endColumn":62},{"ruleId":"3290","severity":1,"message":"3321","line":426,"column":46,"nodeType":"3302","messageId":"3293","endLine":426,"endColumn":54},{"ruleId":"3290","severity":1,"message":"3291","line":427,"column":48,"nodeType":"3292","messageId":"3293","endLine":427,"endColumn":50},{"ruleId":"3304","severity":1,"message":"3322","line":24,"column":22,"nodeType":"3306","endLine":24,"endColumn":28,"suggestions":"3323"},{"ruleId":"3286","replacedBy":"3324"},{"ruleId":"3288","replacedBy":"3325"},{"ruleId":"3282","severity":1,"message":"3326","line":3,"column":18,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":22},{"ruleId":"3286","replacedBy":"3327"},{"ruleId":"3288","replacedBy":"3328"},{"ruleId":"3290","severity":1,"message":"3291","line":33,"column":26,"nodeType":"3292","messageId":"3293","endLine":33,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3329","line":41,"column":9,"nodeType":"3284","messageId":"3285","endLine":41,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3330","line":71,"column":11,"nodeType":"3284","messageId":"3285","endLine":71,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3291","line":73,"column":29,"nodeType":"3292","messageId":"3293","endLine":73,"endColumn":31},{"ruleId":"3290","severity":1,"message":"3291","line":105,"column":24,"nodeType":"3292","messageId":"3293","endLine":105,"endColumn":26},{"ruleId":"3290","severity":1,"message":"3291","line":106,"column":35,"nodeType":"3292","messageId":"3293","endLine":106,"endColumn":37},{"ruleId":"3290","severity":1,"message":"3291","line":112,"column":53,"nodeType":"3292","messageId":"3293","endLine":112,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3291","line":122,"column":26,"nodeType":"3292","messageId":"3293","endLine":122,"endColumn":28},{"ruleId":"3290","severity":1,"message":"3291","line":140,"column":29,"nodeType":"3292","messageId":"3293","endLine":140,"endColumn":31},{"ruleId":"3282","severity":1,"message":"3331","line":150,"column":7,"nodeType":"3284","messageId":"3285","endLine":150,"endColumn":22},{"ruleId":"3290","severity":1,"message":"3291","line":152,"column":24,"nodeType":"3292","messageId":"3293","endLine":152,"endColumn":26},{"ruleId":"3290","severity":1,"message":"3291","line":160,"column":40,"nodeType":"3292","messageId":"3293","endLine":160,"endColumn":42},{"ruleId":"3296","severity":1,"message":"3320","line":163,"column":19,"nodeType":"3298","messageId":"3299","endLine":163,"endColumn":21},{"ruleId":"3282","severity":1,"message":"3332","line":178,"column":9,"nodeType":"3284","messageId":"3285","endLine":178,"endColumn":17},{"ruleId":"3290","severity":1,"message":"3291","line":192,"column":34,"nodeType":"3292","messageId":"3293","endLine":192,"endColumn":36},{"ruleId":"3290","severity":1,"message":"3291","line":196,"column":37,"nodeType":"3292","messageId":"3293","endLine":196,"endColumn":39},{"ruleId":"3296","severity":1,"message":"3297","line":213,"column":94,"nodeType":"3298","messageId":"3299","endLine":213,"endColumn":96},{"ruleId":"3296","severity":1,"message":"3320","line":215,"column":30,"nodeType":"3298","messageId":"3299","endLine":215,"endColumn":32},{"ruleId":"3282","severity":1,"message":"3333","line":267,"column":9,"nodeType":"3284","messageId":"3285","endLine":267,"endColumn":27},{"ruleId":"3290","severity":1,"message":"3291","line":269,"column":28,"nodeType":"3292","messageId":"3293","endLine":269,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3291","line":287,"column":27,"nodeType":"3292","messageId":"3293","endLine":287,"endColumn":29},{"ruleId":"3290","severity":1,"message":"3291","line":289,"column":37,"nodeType":"3292","messageId":"3293","endLine":289,"endColumn":39},{"ruleId":"3290","severity":1,"message":"3291","line":303,"column":25,"nodeType":"3292","messageId":"3293","endLine":303,"endColumn":27},{"ruleId":"3290","severity":1,"message":"3291","line":305,"column":35,"nodeType":"3292","messageId":"3293","endLine":305,"endColumn":37},{"ruleId":"3334","severity":1,"message":"3335","line":5,"column":13,"nodeType":"3336","endLine":5,"endColumn":73},{"ruleId":"3334","severity":1,"message":"3335","line":9,"column":13,"nodeType":"3336","endLine":9,"endColumn":69},{"ruleId":"3334","severity":1,"message":"3335","line":13,"column":13,"nodeType":"3336","endLine":13,"endColumn":79},{"ruleId":"3334","severity":1,"message":"3335","line":17,"column":13,"nodeType":"3336","endLine":17,"endColumn":72},{"ruleId":"3334","severity":1,"message":"3335","line":21,"column":13,"nodeType":"3336","endLine":21,"endColumn":78},{"ruleId":"3296","severity":1,"message":"3297","line":6,"column":15,"nodeType":"3298","messageId":"3299","endLine":6,"endColumn":17},{"ruleId":"3296","severity":1,"message":"3297","line":6,"column":33,"nodeType":"3298","messageId":"3299","endLine":6,"endColumn":35},{"ruleId":"3296","severity":1,"message":"3297","line":21,"column":17,"nodeType":"3298","messageId":"3299","endLine":21,"endColumn":19},{"ruleId":"3296","severity":1,"message":"3297","line":22,"column":17,"nodeType":"3298","messageId":"3299","endLine":22,"endColumn":19},{"ruleId":"3290","severity":1,"message":"3291","line":59,"column":35,"nodeType":"3292","messageId":"3293","endLine":59,"endColumn":37},{"ruleId":"3337","severity":1,"message":"3338","line":108,"column":28,"nodeType":"3339","messageId":"3340","endLine":108,"endColumn":30},{"ruleId":"3337","severity":1,"message":"3338","line":108,"column":58,"nodeType":"3339","messageId":"3340","endLine":108,"endColumn":60},{"ruleId":"3290","severity":1,"message":"3291","line":119,"column":42,"nodeType":"3292","messageId":"3293","endLine":119,"endColumn":44},{"ruleId":"3290","severity":1,"message":"3291","line":145,"column":29,"nodeType":"3292","messageId":"3293","endLine":145,"endColumn":31},{"ruleId":"3290","severity":1,"message":"3291","line":146,"column":47,"nodeType":"3292","messageId":"3293","endLine":146,"endColumn":49},{"ruleId":"3290","severity":1,"message":"3341","line":231,"column":46,"nodeType":"3292","messageId":"3303","endLine":231,"endColumn":48},{"ruleId":"3296","severity":1,"message":"3297","line":245,"column":87,"nodeType":"3298","messageId":"3299","endLine":245,"endColumn":89},{"ruleId":"3290","severity":1,"message":"3291","line":295,"column":29,"nodeType":"3292","messageId":"3293","endLine":295,"endColumn":31},{"ruleId":"3296","severity":1,"message":"3297","line":297,"column":80,"nodeType":"3298","messageId":"3299","endLine":297,"endColumn":82},{"ruleId":"3290","severity":1,"message":"3291","line":50,"column":26,"nodeType":"3292","messageId":"3293","endLine":50,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3342","line":182,"column":50,"nodeType":"3284","messageId":"3285","endLine":182,"endColumn":62},{"ruleId":"3282","severity":1,"message":"3343","line":251,"column":7,"nodeType":"3284","messageId":"3285","endLine":251,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3344","line":257,"column":7,"nodeType":"3284","messageId":"3285","endLine":257,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3345","line":4,"column":9,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3346","line":4,"column":36,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":46},{"ruleId":"3304","severity":1,"message":"3347","line":27,"column":73,"nodeType":"3306","endLine":27,"endColumn":79,"suggestions":"3348"},{"ruleId":"3304","severity":1,"message":"3347","line":62,"column":8,"nodeType":"3306","endLine":62,"endColumn":14,"suggestions":"3349"},{"ruleId":"3290","severity":1,"message":"3321","line":67,"column":43,"nodeType":"3302","messageId":"3293","endLine":67,"endColumn":51},{"ruleId":"3304","severity":1,"message":"3350","line":75,"column":41,"nodeType":"3306","endLine":75,"endColumn":58,"suggestions":"3351"},{"ruleId":"3304","severity":1,"message":"3352","line":98,"column":7,"nodeType":"3306","endLine":98,"endColumn":9,"suggestions":"3353"},{"ruleId":"3282","severity":1,"message":"3354","line":141,"column":11,"nodeType":"3284","messageId":"3285","endLine":141,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3355","line":143,"column":12,"nodeType":"3284","messageId":"3285","endLine":143,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3356","line":143,"column":24,"nodeType":"3284","messageId":"3285","endLine":143,"endColumn":37},{"ruleId":"3304","severity":1,"message":"3347","line":154,"column":8,"nodeType":"3306","endLine":154,"endColumn":14,"suggestions":"3357"},{"ruleId":"3282","severity":1,"message":"3358","line":7,"column":8,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3359","line":8,"column":8,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3360","line":9,"column":8,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3361","line":11,"column":8,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":23},{"ruleId":"3304","severity":1,"message":"3362","line":25,"column":22,"nodeType":"3306","endLine":25,"endColumn":28,"suggestions":"3363"},{"ruleId":"3282","severity":1,"message":"3364","line":7,"column":9,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":18},{"ruleId":"3282","severity":1,"message":"3365","line":8,"column":8,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3366","line":3,"column":8,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3367","line":4,"column":8,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3368","line":5,"column":8,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3369","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3370","line":10,"column":8,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3365","line":12,"column":8,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3345","line":5,"column":9,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3364","line":5,"column":18,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":27},{"ruleId":"3282","severity":1,"message":"3371","line":56,"column":11,"nodeType":"3284","messageId":"3285","endLine":56,"endColumn":18},{"ruleId":"3282","severity":1,"message":"3372","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":12},{"ruleId":"3282","severity":1,"message":"3373","line":9,"column":11,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3374","line":10,"column":11,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3375","line":4,"column":22,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":32},{"ruleId":"3304","severity":1,"message":"3347","line":11,"column":7,"nodeType":"3306","endLine":11,"endColumn":11,"suggestions":"3376"},{"ruleId":"3282","severity":1,"message":"3377","line":1,"column":17,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3378","line":1,"column":28,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":36},{"ruleId":"3282","severity":1,"message":"3378","line":1,"column":27,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":35},{"ruleId":"3282","severity":1,"message":"3373","line":16,"column":11,"nodeType":"3284","messageId":"3285","endLine":16,"endColumn":13},{"ruleId":"3290","severity":1,"message":"3291","line":24,"column":32,"nodeType":"3292","messageId":"3293","endLine":24,"endColumn":34},{"ruleId":"3304","severity":1,"message":"3379","line":37,"column":47,"nodeType":"3306","endLine":37,"endColumn":60,"suggestions":"3380"},{"ruleId":"3282","severity":1,"message":"3378","line":1,"column":27,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":35},{"ruleId":"3282","severity":1,"message":"3381","line":15,"column":7,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3382","line":11,"column":9,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3383","line":14,"column":7,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3354","line":23,"column":11,"nodeType":"3284","messageId":"3285","endLine":23,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3373","line":24,"column":11,"nodeType":"3284","messageId":"3285","endLine":24,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3384","line":34,"column":13,"nodeType":"3284","messageId":"3285","endLine":34,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3385","line":39,"column":13,"nodeType":"3284","messageId":"3285","endLine":39,"endColumn":23},{"ruleId":"3290","severity":1,"message":"3291","line":43,"column":28,"nodeType":"3292","messageId":"3293","endLine":43,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3291","line":60,"column":37,"nodeType":"3292","messageId":"3293","endLine":60,"endColumn":39},{"ruleId":"3304","severity":1,"message":"3386","line":91,"column":51,"nodeType":"3306","endLine":91,"endColumn":76,"suggestions":"3387"},{"ruleId":"3304","severity":1,"message":"3388","line":30,"column":7,"nodeType":"3306","endLine":30,"endColumn":13,"suggestions":"3389"},{"ruleId":"3282","severity":1,"message":"3382","line":10,"column":9,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3383","line":13,"column":7,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3373","line":23,"column":11,"nodeType":"3284","messageId":"3285","endLine":23,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3384","line":33,"column":13,"nodeType":"3284","messageId":"3285","endLine":33,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3385","line":38,"column":13,"nodeType":"3284","messageId":"3285","endLine":38,"endColumn":23},{"ruleId":"3290","severity":1,"message":"3291","line":42,"column":28,"nodeType":"3292","messageId":"3293","endLine":42,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3291","line":59,"column":36,"nodeType":"3292","messageId":"3293","endLine":59,"endColumn":38},{"ruleId":"3290","severity":1,"message":"3291","line":61,"column":42,"nodeType":"3292","messageId":"3293","endLine":61,"endColumn":44},{"ruleId":"3296","severity":1,"message":"3320","line":104,"column":55,"nodeType":"3298","messageId":"3299","endLine":104,"endColumn":57},{"ruleId":"3304","severity":1,"message":"3386","line":106,"column":9,"nodeType":"3306","endLine":106,"endColumn":38,"suggestions":"3390"},{"ruleId":"3290","severity":1,"message":"3291","line":16,"column":51,"nodeType":"3292","messageId":"3293","endLine":16,"endColumn":53},{"ruleId":"3304","severity":1,"message":"3391","line":63,"column":45,"nodeType":"3306","endLine":63,"endColumn":74,"suggestions":"3392"},{"ruleId":"3282","severity":1,"message":"3393","line":15,"column":24,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":37},{"ruleId":"3282","severity":1,"message":"3394","line":16,"column":12,"nodeType":"3284","messageId":"3285","endLine":16,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3395","line":19,"column":11,"nodeType":"3284","messageId":"3285","endLine":19,"endColumn":27},{"ruleId":"3290","severity":1,"message":"3291","line":21,"column":40,"nodeType":"3292","messageId":"3293","endLine":21,"endColumn":42},{"ruleId":"3282","severity":1,"message":"3396","line":96,"column":10,"nodeType":"3284","messageId":"3285","endLine":96,"endColumn":16},{"ruleId":"3282","severity":1,"message":"3397","line":19,"column":11,"nodeType":"3284","messageId":"3285","endLine":19,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3377","line":2,"column":17,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3398","line":12,"column":3,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":21},{"ruleId":"3282","severity":1,"message":"3399","line":41,"column":7,"nodeType":"3284","messageId":"3285","endLine":41,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3371","line":75,"column":11,"nodeType":"3284","messageId":"3285","endLine":75,"endColumn":18},{"ruleId":"3304","severity":1,"message":"3400","line":51,"column":7,"nodeType":"3306","endLine":51,"endColumn":16,"suggestions":"3401"},{"ruleId":"3282","severity":1,"message":"3402","line":2,"column":9,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":31},{"ruleId":"3282","severity":1,"message":"3403","line":3,"column":9,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3404","line":5,"column":8,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3405","line":8,"column":9,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3406","line":8,"column":17,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3407","line":8,"column":20,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3408","line":64,"column":14,"nodeType":"3284","messageId":"3285","endLine":64,"endColumn":21},{"ruleId":"3282","severity":1,"message":"3409","line":5,"column":10,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":11},{"ruleId":"3290","severity":1,"message":"3291","line":22,"column":32,"nodeType":"3292","messageId":"3293","endLine":22,"endColumn":34},{"ruleId":"3304","severity":1,"message":"3410","line":25,"column":22,"nodeType":"3306","endLine":25,"endColumn":31,"suggestions":"3411"},{"ruleId":"3282","severity":1,"message":"3412","line":4,"column":8,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":23},{"ruleId":"3282","severity":1,"message":"3413","line":16,"column":24,"nodeType":"3284","messageId":"3285","endLine":16,"endColumn":32},{"ruleId":"3282","severity":1,"message":"3414","line":17,"column":28,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3415","line":19,"column":21,"nodeType":"3284","messageId":"3285","endLine":19,"endColumn":31},{"ruleId":"3290","severity":1,"message":"3291","line":43,"column":59,"nodeType":"3292","messageId":"3293","endLine":43,"endColumn":61},{"ruleId":"3304","severity":1,"message":"3416","line":51,"column":40,"nodeType":"3306","endLine":51,"endColumn":56,"suggestions":"3417"},{"ruleId":"3282","severity":1,"message":"3418","line":12,"column":8,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":21},{"ruleId":"3282","severity":1,"message":"3419","line":22,"column":8,"nodeType":"3284","messageId":"3285","endLine":22,"endColumn":19},{"ruleId":"3420","severity":1,"message":"3421","line":42,"column":25,"nodeType":"3336","endLine":42,"endColumn":43},{"ruleId":"3420","severity":1,"message":"3422","line":43,"column":25,"nodeType":"3336","endLine":43,"endColumn":43},{"ruleId":"3420","severity":1,"message":"3423","line":44,"column":25,"nodeType":"3336","endLine":44,"endColumn":44},{"ruleId":"3420","severity":1,"message":"3424","line":45,"column":25,"nodeType":"3336","endLine":45,"endColumn":41},{"ruleId":"3282","severity":1,"message":"3425","line":3,"column":9,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":25},{"ruleId":"3282","severity":1,"message":"3425","line":3,"column":9,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":25},{"ruleId":"3282","severity":1,"message":"3425","line":12,"column":9,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":25},{"ruleId":"3282","severity":1,"message":"3426","line":13,"column":9,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":23},{"ruleId":"3282","severity":1,"message":"3368","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3427","line":7,"column":8,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3405","line":8,"column":9,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3428","line":22,"column":9,"nodeType":"3284","messageId":"3285","endLine":22,"endColumn":14},{"ruleId":"3304","severity":1,"message":"3347","line":28,"column":7,"nodeType":"3306","endLine":28,"endColumn":14,"suggestions":"3429"},{"ruleId":"3420","severity":1,"message":"3430","line":44,"column":29,"nodeType":"3336","endLine":44,"endColumn":53},{"ruleId":"3420","severity":1,"message":"3431","line":48,"column":29,"nodeType":"3336","endLine":48,"endColumn":49},{"ruleId":"3420","severity":1,"message":"3432","line":52,"column":29,"nodeType":"3336","endLine":52,"endColumn":50},{"ruleId":"3420","severity":1,"message":"3433","line":56,"column":29,"nodeType":"3336","endLine":56,"endColumn":54},{"ruleId":"3420","severity":1,"message":"3434","line":60,"column":29,"nodeType":"3336","endLine":60,"endColumn":51},{"ruleId":"3420","severity":1,"message":"3435","line":64,"column":29,"nodeType":"3336","endLine":64,"endColumn":52},{"ruleId":"3420","severity":1,"message":"3436","line":68,"column":29,"nodeType":"3336","endLine":68,"endColumn":56},{"ruleId":"3282","severity":1,"message":"3437","line":5,"column":10,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3345","line":3,"column":20,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3438","line":194,"column":7,"nodeType":"3284","messageId":"3285","endLine":194,"endColumn":13},{"ruleId":"3420","severity":1,"message":"3439","line":29,"column":21,"nodeType":"3336","endLine":29,"endColumn":46},{"ruleId":"3420","severity":1,"message":"3440","line":31,"column":21,"nodeType":"3336","endLine":31,"endColumn":47},{"ruleId":"3420","severity":1,"message":"3441","line":33,"column":21,"nodeType":"3336","endLine":33,"endColumn":48},{"ruleId":"3420","severity":1,"message":"3442","line":34,"column":21,"nodeType":"3336","endLine":34,"endColumn":49},{"ruleId":"3282","severity":1,"message":"3443","line":4,"column":10,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3444","line":7,"column":8,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3445","line":13,"column":12,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":21},{"ruleId":"3282","severity":1,"message":"3446","line":14,"column":12,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3447","line":15,"column":12,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":23},{"ruleId":"3282","severity":1,"message":"3294","line":2,"column":10,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3368","line":5,"column":8,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3369","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3448","line":8,"column":8,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":16},{"ruleId":"3282","severity":1,"message":"3449","line":9,"column":8,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":18},{"ruleId":"3282","severity":1,"message":"3450","line":10,"column":8,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":16},{"ruleId":"3282","severity":1,"message":"3451","line":20,"column":8,"nodeType":"3284","messageId":"3285","endLine":20,"endColumn":19},{"ruleId":"3420","severity":1,"message":"3452","line":30,"column":16,"nodeType":"3336","endLine":30,"endColumn":52},{"ruleId":"3420","severity":1,"message":"3453","line":35,"column":16,"nodeType":"3336","endLine":35,"endColumn":50},{"ruleId":"3420","severity":1,"message":"3454","line":40,"column":16,"nodeType":"3336","endLine":40,"endColumn":49},{"ruleId":"3420","severity":1,"message":"3455","line":45,"column":16,"nodeType":"3336","endLine":45,"endColumn":41},{"ruleId":"3420","severity":1,"message":"3456","line":50,"column":16,"nodeType":"3336","endLine":50,"endColumn":50},{"ruleId":"3420","severity":1,"message":"3457","line":55,"column":16,"nodeType":"3336","endLine":55,"endColumn":37},{"ruleId":"3420","severity":1,"message":"3458","line":60,"column":16,"nodeType":"3336","endLine":60,"endColumn":43},{"ruleId":"3420","severity":1,"message":"3459","line":65,"column":16,"nodeType":"3336","endLine":65,"endColumn":42},{"ruleId":"3420","severity":1,"message":"3460","line":80,"column":17,"nodeType":"3336","endLine":80,"endColumn":34},{"ruleId":"3282","severity":1,"message":"3405","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3461","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3462","line":9,"column":8,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3463","line":9,"column":15,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3464","line":9,"column":24,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3373","line":18,"column":11,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3465","line":19,"column":11,"nodeType":"3284","messageId":"3285","endLine":19,"endColumn":16},{"ruleId":"3420","severity":1,"message":"3466","line":29,"column":17,"nodeType":"3336","endLine":29,"endColumn":41},{"ruleId":"3420","severity":1,"message":"3467","line":30,"column":17,"nodeType":"3336","endLine":30,"endColumn":34},{"ruleId":"3420","severity":1,"message":"3468","line":24,"column":17,"nodeType":"3336","endLine":24,"endColumn":38},{"ruleId":"3420","severity":1,"message":"3469","line":25,"column":17,"nodeType":"3336","endLine":25,"endColumn":44},{"ruleId":"3420","severity":1,"message":"3470","line":26,"column":17,"nodeType":"3336","endLine":26,"endColumn":43},{"ruleId":"3282","severity":1,"message":"3405","line":5,"column":9,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3471","line":13,"column":8,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":20},{"ruleId":"3420","severity":1,"message":"3472","line":30,"column":17,"nodeType":"3336","endLine":30,"endColumn":45},{"ruleId":"3420","severity":1,"message":"3473","line":31,"column":17,"nodeType":"3336","endLine":31,"endColumn":40},{"ruleId":"3420","severity":1,"message":"3474","line":32,"column":17,"nodeType":"3336","endLine":32,"endColumn":41},{"ruleId":"3420","severity":1,"message":"3475","line":68,"column":17,"nodeType":"3336","endLine":68,"endColumn":43},{"ruleId":"3420","severity":1,"message":"3476","line":69,"column":17,"nodeType":"3336","endLine":69,"endColumn":50},{"ruleId":"3420","severity":1,"message":"3477","line":70,"column":17,"nodeType":"3336","endLine":70,"endColumn":53},{"ruleId":"3282","severity":1,"message":"3406","line":8,"column":12,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":14},{"ruleId":"3290","severity":1,"message":"3291","line":24,"column":52,"nodeType":"3292","messageId":"3293","endLine":24,"endColumn":54},{"ruleId":"3282","severity":1,"message":"3478","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":24},{"ruleId":"3420","severity":1,"message":"3479","line":24,"column":17,"nodeType":"3336","endLine":24,"endColumn":46},{"ruleId":"3420","severity":1,"message":"3480","line":25,"column":17,"nodeType":"3336","endLine":25,"endColumn":41},{"ruleId":"3420","severity":1,"message":"3481","line":28,"column":13,"nodeType":"3336","endLine":28,"endColumn":89},{"ruleId":"3420","severity":1,"message":"3482","line":20,"column":17,"nodeType":"3336","endLine":20,"endColumn":42},{"ruleId":"3420","severity":1,"message":"3483","line":21,"column":16,"nodeType":"3336","endLine":21,"endColumn":44},{"ruleId":"3420","severity":1,"message":"3481","line":24,"column":13,"nodeType":"3336","endLine":24,"endColumn":91},{"ruleId":"3420","severity":1,"message":"3481","line":25,"column":13,"nodeType":"3336","endLine":25,"endColumn":89},{"ruleId":"3290","severity":1,"message":"3291","line":13,"column":52,"nodeType":"3292","messageId":"3293","endLine":13,"endColumn":54},{"ruleId":"3290","severity":1,"message":"3291","line":14,"column":37,"nodeType":"3292","messageId":"3293","endLine":14,"endColumn":39},{"ruleId":"3304","severity":1,"message":"3484","line":27,"column":32,"nodeType":"3306","endLine":27,"endColumn":38,"suggestions":"3485"},{"ruleId":"3286","replacedBy":"3486"},{"ruleId":"3288","replacedBy":"3487"},{"ruleId":"3282","severity":1,"message":"3425","line":4,"column":34,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":50},{"ruleId":"3282","severity":1,"message":"3488","line":7,"column":42,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":62},{"ruleId":"3282","severity":1,"message":"3489","line":10,"column":18,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":19},{"ruleId":"3304","severity":1,"message":"3490","line":26,"column":7,"nodeType":"3306","endLine":26,"endColumn":11,"suggestions":"3491"},{"ruleId":"3282","severity":1,"message":"3407","line":7,"column":9,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3409","line":7,"column":16,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3492","line":14,"column":28,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":46},{"ruleId":"3290","severity":1,"message":"3291","line":22,"column":80,"nodeType":"3292","messageId":"3293","endLine":22,"endColumn":82},{"ruleId":"3304","severity":1,"message":"3493","line":24,"column":7,"nodeType":"3306","endLine":24,"endColumn":9,"suggestions":"3494"},{"ruleId":"3420","severity":1,"message":"3495","line":15,"column":17,"nodeType":"3336","endLine":15,"endColumn":52},{"ruleId":"3282","severity":1,"message":"3496","line":1,"column":28,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":34},{"ruleId":"3296","severity":1,"message":"3297","line":54,"column":46,"nodeType":"3298","messageId":"3299","endLine":54,"endColumn":48},{"ruleId":"3290","severity":1,"message":"3291","line":74,"column":55,"nodeType":"3292","messageId":"3293","endLine":74,"endColumn":57},{"ruleId":"3290","severity":1,"message":"3291","line":85,"column":62,"nodeType":"3292","messageId":"3293","endLine":85,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3291","line":95,"column":42,"nodeType":"3292","messageId":"3293","endLine":95,"endColumn":44},{"ruleId":"3282","severity":1,"message":"3383","line":15,"column":7,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3497","line":57,"column":12,"nodeType":"3284","messageId":"3285","endLine":57,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3498","line":57,"column":27,"nodeType":"3284","messageId":"3285","endLine":57,"endColumn":44},{"ruleId":"3282","severity":1,"message":"3384","line":81,"column":13,"nodeType":"3284","messageId":"3285","endLine":81,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3385","line":86,"column":13,"nodeType":"3284","messageId":"3285","endLine":86,"endColumn":23},{"ruleId":"3290","severity":1,"message":"3291","line":90,"column":28,"nodeType":"3292","messageId":"3293","endLine":90,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3341","line":107,"column":36,"nodeType":"3292","messageId":"3303","endLine":107,"endColumn":38},{"ruleId":"3296","severity":1,"message":"3320","line":116,"column":33,"nodeType":"3298","messageId":"3299","endLine":116,"endColumn":35},{"ruleId":"3290","severity":1,"message":"3291","line":117,"column":17,"nodeType":"3499","messageId":"3500","endLine":117,"endColumn":23},{"ruleId":"3296","severity":1,"message":"3320","line":120,"column":41,"nodeType":"3298","messageId":"3299","endLine":120,"endColumn":43},{"ruleId":"3290","severity":1,"message":"3291","line":121,"column":15,"nodeType":"3499","messageId":"3500","endLine":121,"endColumn":21},{"ruleId":"3290","severity":1,"message":"3291","line":126,"column":15,"nodeType":"3499","messageId":"3500","endLine":126,"endColumn":21},{"ruleId":"3290","severity":1,"message":"3291","line":162,"column":51,"nodeType":"3292","messageId":"3293","endLine":162,"endColumn":53},{"ruleId":"3296","severity":1,"message":"3320","line":205,"column":70,"nodeType":"3298","messageId":"3299","endLine":205,"endColumn":72},{"ruleId":"3304","severity":1,"message":"3386","line":207,"column":9,"nodeType":"3306","endLine":207,"endColumn":29,"suggestions":"3501"},{"ruleId":"3282","severity":1,"message":"3382","line":11,"column":9,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3383","line":14,"column":7,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3354","line":23,"column":11,"nodeType":"3284","messageId":"3285","endLine":23,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3373","line":24,"column":11,"nodeType":"3284","messageId":"3285","endLine":24,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3384","line":34,"column":13,"nodeType":"3284","messageId":"3285","endLine":34,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3385","line":39,"column":13,"nodeType":"3284","messageId":"3285","endLine":39,"endColumn":23},{"ruleId":"3290","severity":1,"message":"3291","line":43,"column":28,"nodeType":"3292","messageId":"3293","endLine":43,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3291","line":60,"column":37,"nodeType":"3292","messageId":"3293","endLine":60,"endColumn":39},{"ruleId":"3304","severity":1,"message":"3386","line":90,"column":80,"nodeType":"3306","endLine":90,"endColumn":100,"suggestions":"3502"},{"ruleId":"3282","severity":1,"message":"3503","line":8,"column":7,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":14},{"ruleId":"3290","severity":1,"message":"3341","line":36,"column":71,"nodeType":"3292","messageId":"3303","endLine":36,"endColumn":73},{"ruleId":"3296","severity":1,"message":"3320","line":46,"column":33,"nodeType":"3298","messageId":"3299","endLine":46,"endColumn":35},{"ruleId":"3290","severity":1,"message":"3291","line":47,"column":17,"nodeType":"3499","messageId":"3500","endLine":47,"endColumn":23},{"ruleId":"3296","severity":1,"message":"3320","line":51,"column":41,"nodeType":"3298","messageId":"3299","endLine":51,"endColumn":43},{"ruleId":"3290","severity":1,"message":"3291","line":52,"column":17,"nodeType":"3499","messageId":"3500","endLine":52,"endColumn":23},{"ruleId":"3290","severity":1,"message":"3291","line":57,"column":18,"nodeType":"3499","messageId":"3500","endLine":57,"endColumn":24},{"ruleId":"3290","severity":1,"message":"3291","line":75,"column":50,"nodeType":"3292","messageId":"3293","endLine":75,"endColumn":52},{"ruleId":"3304","severity":1,"message":"3504","line":94,"column":41,"nodeType":"3306","endLine":94,"endColumn":61,"suggestions":"3505"},{"ruleId":"3304","severity":1,"message":"3504","line":96,"column":41,"nodeType":"3306","endLine":96,"endColumn":45,"suggestions":"3506"},{"ruleId":"3290","severity":1,"message":"3291","line":16,"column":66,"nodeType":"3292","messageId":"3293","endLine":16,"endColumn":68},{"ruleId":"3304","severity":1,"message":"3391","line":63,"column":45,"nodeType":"3306","endLine":63,"endColumn":65,"suggestions":"3507"},{"ruleId":"3286","replacedBy":"3508"},{"ruleId":"3288","replacedBy":"3509"},{"ruleId":"3304","severity":1,"message":"3388","line":45,"column":7,"nodeType":"3306","endLine":45,"endColumn":13,"suggestions":"3510"},{"ruleId":"3282","severity":1,"message":"3377","line":1,"column":16,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":25},{"ruleId":"3282","severity":1,"message":"3378","line":1,"column":27,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":35},{"ruleId":"3282","severity":1,"message":"3461","line":7,"column":9,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3511","line":11,"column":12,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":19},{"ruleId":"3304","severity":1,"message":"3388","line":27,"column":7,"nodeType":"3306","endLine":27,"endColumn":13,"suggestions":"3512"},{"ruleId":"3282","severity":1,"message":"3513","line":2,"column":8,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":21},{"ruleId":"3290","severity":1,"message":"3291","line":15,"column":24,"nodeType":"3292","messageId":"3293","endLine":15,"endColumn":26},{"ruleId":"3514","severity":1,"message":"3515","line":56,"column":13,"nodeType":"3336","endLine":56,"endColumn":17},{"ruleId":"3290","severity":1,"message":"3291","line":88,"column":32,"nodeType":"3292","messageId":"3293","endLine":88,"endColumn":34},{"ruleId":"3304","severity":1,"message":"3516","line":90,"column":7,"nodeType":"3306","endLine":90,"endColumn":9,"suggestions":"3517"},{"ruleId":"3282","severity":1,"message":"3518","line":2,"column":21,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":27},{"ruleId":"3282","severity":1,"message":"3503","line":14,"column":9,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":16},{"ruleId":"3290","severity":1,"message":"3291","line":31,"column":37,"nodeType":"3292","messageId":"3293","endLine":31,"endColumn":39},{"ruleId":"3290","severity":1,"message":"3291","line":79,"column":43,"nodeType":"3292","messageId":"3293","endLine":79,"endColumn":45},{"ruleId":"3304","severity":1,"message":"3519","line":92,"column":9,"nodeType":"3306","endLine":92,"endColumn":11,"suggestions":"3520"},{"ruleId":"3282","severity":1,"message":"3378","line":1,"column":28,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":36},{"ruleId":"3282","severity":1,"message":"3521","line":4,"column":10,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3522","line":4,"column":20,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3523","line":5,"column":8,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3354","line":13,"column":11,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":17},{"ruleId":"3296","severity":1,"message":"3320","line":31,"column":75,"nodeType":"3298","messageId":"3299","endLine":31,"endColumn":77},{"ruleId":"3296","severity":1,"message":"3320","line":43,"column":73,"nodeType":"3298","messageId":"3299","endLine":43,"endColumn":75},{"ruleId":"3304","severity":1,"message":"3524","line":53,"column":7,"nodeType":"3306","endLine":53,"endColumn":36,"suggestions":"3525"},{"ruleId":"3304","severity":1,"message":"3526","line":65,"column":7,"nodeType":"3306","endLine":65,"endColumn":15,"suggestions":"3527"},{"ruleId":"3420","severity":1,"message":"3528","line":73,"column":17,"nodeType":"3336","endLine":73,"endColumn":62},{"ruleId":"3282","severity":1,"message":"3521","line":3,"column":10,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3522","line":3,"column":20,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3529","line":14,"column":12,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3530","line":14,"column":22,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":33},{"ruleId":"3282","severity":1,"message":"3529","line":46,"column":12,"nodeType":"3284","messageId":"3285","endLine":46,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3530","line":46,"column":22,"nodeType":"3284","messageId":"3285","endLine":46,"endColumn":33},{"ruleId":"3286","replacedBy":"3531"},{"ruleId":"3288","replacedBy":"3532"},{"ruleId":"3282","severity":1,"message":"3533","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":16},{"ruleId":"3282","severity":1,"message":"3409","line":10,"column":13,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3534","line":12,"column":9,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":13},{"ruleId":"3290","severity":1,"message":"3291","line":58,"column":39,"nodeType":"3292","messageId":"3293","endLine":58,"endColumn":41},{"ruleId":"3282","severity":1,"message":"3535","line":61,"column":21,"nodeType":"3284","messageId":"3285","endLine":61,"endColumn":31},{"ruleId":"3290","severity":1,"message":"3291","line":64,"column":70,"nodeType":"3292","messageId":"3293","endLine":64,"endColumn":72},{"ruleId":"3290","severity":1,"message":"3291","line":76,"column":52,"nodeType":"3292","messageId":"3293","endLine":76,"endColumn":54},{"ruleId":"3290","severity":1,"message":"3291","line":77,"column":62,"nodeType":"3292","messageId":"3293","endLine":77,"endColumn":64},{"ruleId":"3282","severity":1,"message":"3536","line":97,"column":11,"nodeType":"3284","messageId":"3285","endLine":97,"endColumn":18},{"ruleId":"3304","severity":1,"message":"3537","line":101,"column":43,"nodeType":"3306","endLine":101,"endColumn":45,"suggestions":"3538"},{"ruleId":"3304","severity":1,"message":"3388","line":102,"column":38,"nodeType":"3306","endLine":102,"endColumn":44,"suggestions":"3539"},{"ruleId":"3286","replacedBy":"3540"},{"ruleId":"3288","replacedBy":"3541"},{"ruleId":"3282","severity":1,"message":"3542","line":9,"column":18,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":22},{"ruleId":"3420","severity":1,"message":"3543","line":26,"column":11,"nodeType":"3336","endLine":26,"endColumn":44},{"ruleId":"3282","severity":1,"message":"3326","line":3,"column":18,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3544","line":4,"column":10,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3545","line":4,"column":30,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":47},{"ruleId":"3282","severity":1,"message":"3374","line":24,"column":11,"nodeType":"3284","messageId":"3285","endLine":24,"endColumn":15},{"ruleId":"3290","severity":1,"message":"3291","line":93,"column":36,"nodeType":"3292","messageId":"3293","endLine":93,"endColumn":38},{"ruleId":"3304","severity":1,"message":"3546","line":97,"column":37,"nodeType":"3306","endLine":97,"endColumn":39,"suggestions":"3547"},{"ruleId":"3282","severity":1,"message":"3374","line":24,"column":11,"nodeType":"3284","messageId":"3285","endLine":24,"endColumn":15},{"ruleId":"3420","severity":1,"message":"3548","line":13,"column":13,"nodeType":"3336","endLine":13,"endColumn":38},{"ruleId":"3282","severity":1,"message":"3549","line":3,"column":8,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3550","line":4,"column":8,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3551","line":5,"column":8,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":23},{"ruleId":"3282","severity":1,"message":"3309","line":7,"column":8,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3552","line":9,"column":8,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3553","line":10,"column":8,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3554","line":17,"column":8,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":23},{"ruleId":"3282","severity":1,"message":"3555","line":18,"column":8,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":18},{"ruleId":"3282","severity":1,"message":"3556","line":4,"column":8,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3409","line":5,"column":9,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":10},{"ruleId":"3420","severity":1,"message":"3557","line":19,"column":21,"nodeType":"3336","endLine":19,"endColumn":47},{"ruleId":"3296","severity":1,"message":"3320","line":40,"column":50,"nodeType":"3298","messageId":"3299","endLine":40,"endColumn":52},{"ruleId":"3296","severity":1,"message":"3320","line":41,"column":49,"nodeType":"3298","messageId":"3299","endLine":41,"endColumn":51},{"ruleId":"3296","severity":1,"message":"3320","line":42,"column":44,"nodeType":"3298","messageId":"3299","endLine":42,"endColumn":46},{"ruleId":"3296","severity":1,"message":"3320","line":43,"column":43,"nodeType":"3298","messageId":"3299","endLine":43,"endColumn":45},{"ruleId":"3296","severity":1,"message":"3320","line":44,"column":45,"nodeType":"3298","messageId":"3299","endLine":44,"endColumn":47},{"ruleId":"3282","severity":1,"message":"3374","line":24,"column":11,"nodeType":"3284","messageId":"3285","endLine":24,"endColumn":15},{"ruleId":"3420","severity":1,"message":"3558","line":20,"column":17,"nodeType":"3336","endLine":20,"endColumn":47},{"ruleId":"3420","severity":1,"message":"3559","line":21,"column":17,"nodeType":"3336","endLine":21,"endColumn":53},{"ruleId":"3420","severity":1,"message":"3481","line":24,"column":13,"nodeType":"3336","endLine":24,"endColumn":117},{"ruleId":"3304","severity":1,"message":"3560","line":24,"column":22,"nodeType":"3306","endLine":24,"endColumn":30,"suggestions":"3561"},{"ruleId":"3282","severity":1,"message":"3562","line":9,"column":9,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":31},{"ruleId":"3282","severity":1,"message":"3425","line":9,"column":55,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":71},{"ruleId":"3282","severity":1,"message":"3563","line":9,"column":96,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":111},{"ruleId":"3282","severity":1,"message":"3462","line":11,"column":19,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3463","line":11,"column":33,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":40},{"ruleId":"3282","severity":1,"message":"3534","line":11,"column":41,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3522","line":11,"column":47,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":53},{"ruleId":"3296","severity":1,"message":"3320","line":16,"column":16,"nodeType":"3298","messageId":"3299","endLine":16,"endColumn":18},{"ruleId":"3296","severity":1,"message":"3320","line":29,"column":19,"nodeType":"3298","messageId":"3299","endLine":29,"endColumn":21},{"ruleId":"3296","severity":1,"message":"3320","line":30,"column":23,"nodeType":"3298","messageId":"3299","endLine":30,"endColumn":25},{"ruleId":"3290","severity":1,"message":"3291","line":75,"column":62,"nodeType":"3292","messageId":"3293","endLine":75,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3291","line":85,"column":60,"nodeType":"3292","messageId":"3293","endLine":85,"endColumn":62},{"ruleId":"3290","severity":1,"message":"3341","line":87,"column":54,"nodeType":"3292","messageId":"3303","endLine":87,"endColumn":56},{"ruleId":"3290","severity":1,"message":"3341","line":156,"column":62,"nodeType":"3292","messageId":"3303","endLine":156,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":162,"column":55,"nodeType":"3302","messageId":"3293","endLine":162,"endColumn":63},{"ruleId":"3290","severity":1,"message":"3341","line":163,"column":57,"nodeType":"3292","messageId":"3303","endLine":163,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3341","line":232,"column":62,"nodeType":"3292","messageId":"3303","endLine":232,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":246,"column":51,"nodeType":"3302","messageId":"3293","endLine":246,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3341","line":249,"column":53,"nodeType":"3292","messageId":"3303","endLine":249,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3341","line":318,"column":62,"nodeType":"3292","messageId":"3303","endLine":318,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":336,"column":51,"nodeType":"3302","messageId":"3293","endLine":336,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3341","line":339,"column":53,"nodeType":"3292","messageId":"3303","endLine":339,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3341","line":428,"column":62,"nodeType":"3292","messageId":"3303","endLine":428,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":440,"column":56,"nodeType":"3302","messageId":"3293","endLine":440,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3341","line":442,"column":58,"nodeType":"3292","messageId":"3303","endLine":442,"endColumn":60},{"ruleId":"3290","severity":1,"message":"3321","line":494,"column":48,"nodeType":"3302","messageId":"3293","endLine":494,"endColumn":56},{"ruleId":"3290","severity":1,"message":"3291","line":500,"column":28,"nodeType":"3292","messageId":"3293","endLine":500,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3341","line":508,"column":62,"nodeType":"3292","messageId":"3303","endLine":508,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3341","line":552,"column":62,"nodeType":"3292","messageId":"3303","endLine":552,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3291","line":559,"column":38,"nodeType":"3292","messageId":"3293","endLine":559,"endColumn":40},{"ruleId":"3290","severity":1,"message":"3341","line":582,"column":61,"nodeType":"3292","messageId":"3303","endLine":582,"endColumn":63},{"ruleId":"3290","severity":1,"message":"3341","line":594,"column":42,"nodeType":"3292","messageId":"3303","endLine":594,"endColumn":44},{"ruleId":"3290","severity":1,"message":"3341","line":628,"column":62,"nodeType":"3292","messageId":"3303","endLine":628,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3341","line":640,"column":43,"nodeType":"3292","messageId":"3303","endLine":640,"endColumn":45},{"ruleId":"3290","severity":1,"message":"3341","line":678,"column":61,"nodeType":"3292","messageId":"3303","endLine":678,"endColumn":63},{"ruleId":"3290","severity":1,"message":"3321","line":691,"column":46,"nodeType":"3302","messageId":"3293","endLine":691,"endColumn":54},{"ruleId":"3290","severity":1,"message":"3341","line":692,"column":49,"nodeType":"3292","messageId":"3303","endLine":692,"endColumn":51},{"ruleId":"3282","severity":1,"message":"3373","line":732,"column":11,"nodeType":"3284","messageId":"3285","endLine":732,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3564","line":735,"column":11,"nodeType":"3284","messageId":"3285","endLine":735,"endColumn":24},{"ruleId":"3290","severity":1,"message":"3291","line":747,"column":62,"nodeType":"3292","messageId":"3293","endLine":747,"endColumn":64},{"ruleId":"3296","severity":1,"message":"3297","line":750,"column":54,"nodeType":"3298","messageId":"3299","endLine":750,"endColumn":56},{"ruleId":"3290","severity":1,"message":"3341","line":789,"column":62,"nodeType":"3292","messageId":"3303","endLine":789,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":800,"column":51,"nodeType":"3302","messageId":"3293","endLine":800,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3341","line":803,"column":53,"nodeType":"3292","messageId":"3303","endLine":803,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3341","line":883,"column":62,"nodeType":"3292","messageId":"3303","endLine":883,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":896,"column":51,"nodeType":"3302","messageId":"3293","endLine":896,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3341","line":899,"column":53,"nodeType":"3292","messageId":"3303","endLine":899,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3341","line":956,"column":62,"nodeType":"3292","messageId":"3303","endLine":956,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":968,"column":48,"nodeType":"3302","messageId":"3293","endLine":968,"endColumn":56},{"ruleId":"3290","severity":1,"message":"3341","line":971,"column":50,"nodeType":"3292","messageId":"3303","endLine":971,"endColumn":52},{"ruleId":"3290","severity":1,"message":"3341","line":1022,"column":62,"nodeType":"3292","messageId":"3303","endLine":1022,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":1030,"column":48,"nodeType":"3302","messageId":"3293","endLine":1030,"endColumn":56},{"ruleId":"3290","severity":1,"message":"3341","line":1033,"column":50,"nodeType":"3292","messageId":"3303","endLine":1033,"endColumn":52},{"ruleId":"3290","severity":1,"message":"3341","line":1088,"column":62,"nodeType":"3292","messageId":"3303","endLine":1088,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3291","line":1118,"column":57,"nodeType":"3292","messageId":"3293","endLine":1118,"endColumn":59},{"ruleId":"3296","severity":1,"message":"3320","line":1119,"column":63,"nodeType":"3298","messageId":"3299","endLine":1119,"endColumn":65},{"ruleId":"3282","severity":1,"message":"3373","line":1129,"column":11,"nodeType":"3284","messageId":"3285","endLine":1129,"endColumn":13},{"ruleId":"3290","severity":1,"message":"3291","line":1137,"column":48,"nodeType":"3292","messageId":"3293","endLine":1137,"endColumn":50},{"ruleId":"3290","severity":1,"message":"3321","line":1143,"column":51,"nodeType":"3302","messageId":"3293","endLine":1143,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3291","line":1144,"column":53,"nodeType":"3292","messageId":"3293","endLine":1144,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3291","line":1150,"column":45,"nodeType":"3292","messageId":"3293","endLine":1150,"endColumn":47},{"ruleId":"3420","severity":1,"message":"3565","line":26,"column":17,"nodeType":"3336","endLine":26,"endColumn":49},{"ruleId":"3420","severity":1,"message":"3566","line":27,"column":17,"nodeType":"3336","endLine":27,"endColumn":45},{"ruleId":"3420","severity":1,"message":"3481","line":30,"column":13,"nodeType":"3336","endLine":30,"endColumn":108},{"ruleId":"3282","severity":1,"message":"3567","line":113,"column":7,"nodeType":"3284","messageId":"3285","endLine":113,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3568","line":134,"column":7,"nodeType":"3284","messageId":"3285","endLine":134,"endColumn":17},{"ruleId":"3420","severity":1,"message":"3569","line":15,"column":17,"nodeType":"3336","endLine":15,"endColumn":55},{"ruleId":"3420","severity":1,"message":"3570","line":28,"column":21,"nodeType":"3336","endLine":28,"endColumn":54},{"ruleId":"3420","severity":1,"message":"3571","line":29,"column":21,"nodeType":"3336","endLine":29,"endColumn":48},{"ruleId":"3420","severity":1,"message":"3481","line":32,"column":17,"nodeType":"3336","endLine":32,"endColumn":87},{"ruleId":"3420","severity":1,"message":"3481","line":33,"column":17,"nodeType":"3336","endLine":33,"endColumn":134},{"ruleId":"3282","severity":1,"message":"3405","line":8,"column":9,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3461","line":8,"column":12,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3409","line":8,"column":18,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3374","line":14,"column":11,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":15},{"ruleId":"3296","severity":1,"message":"3297","line":20,"column":80,"nodeType":"3298","messageId":"3299","endLine":20,"endColumn":82},{"ruleId":"3420","severity":1,"message":"3572","line":17,"column":9,"nodeType":"3336","endLine":17,"endColumn":28},{"ruleId":"3420","severity":1,"message":"3573","line":21,"column":17,"nodeType":"3336","endLine":21,"endColumn":41},{"ruleId":"3420","severity":1,"message":"3574","line":22,"column":17,"nodeType":"3336","endLine":22,"endColumn":37},{"ruleId":"3420","severity":1,"message":"3455","line":23,"column":17,"nodeType":"3336","endLine":23,"endColumn":42},{"ruleId":"3420","severity":1,"message":"3575","line":11,"column":17,"nodeType":"3336","endLine":11,"endColumn":43},{"ruleId":"3420","severity":1,"message":"3576","line":11,"column":17,"nodeType":"3336","endLine":11,"endColumn":43},{"ruleId":"3420","severity":1,"message":"3454","line":9,"column":17,"nodeType":"3336","endLine":9,"endColumn":50},{"ruleId":"3282","severity":1,"message":"3465","line":25,"column":11,"nodeType":"3284","messageId":"3285","endLine":25,"endColumn":16},{"ruleId":"3282","severity":1,"message":"3577","line":5,"column":5,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3556","line":10,"column":8,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3461","line":12,"column":9,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3407","line":12,"column":15,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3409","line":12,"column":19,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3578","line":18,"column":10,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3533","line":18,"column":30,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":38},{"ruleId":"3282","severity":1,"message":"3579","line":18,"column":40,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":43},{"ruleId":"3282","severity":1,"message":"3580","line":18,"column":44,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":50},{"ruleId":"3282","severity":1,"message":"3581","line":18,"column":52,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":59},{"ruleId":"3282","severity":1,"message":"3326","line":18,"column":60,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":64},{"ruleId":"3282","severity":1,"message":"3582","line":19,"column":9,"nodeType":"3284","messageId":"3285","endLine":19,"endColumn":19},{"ruleId":"3420","severity":1,"message":"3481","line":91,"column":17,"nodeType":"3336","endLine":91,"endColumn":83},{"ruleId":"3420","severity":1,"message":"3481","line":92,"column":17,"nodeType":"3336","endLine":92,"endColumn":89},{"ruleId":"3282","severity":1,"message":"3406","line":11,"column":12,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":14},{"ruleId":"3420","severity":1,"message":"3583","line":34,"column":17,"nodeType":"3336","endLine":34,"endColumn":49},{"ruleId":"3420","severity":1,"message":"3584","line":35,"column":17,"nodeType":"3336","endLine":35,"endColumn":50},{"ruleId":"3282","severity":1,"message":"3585","line":14,"column":10,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3586","line":14,"column":17,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":27},{"ruleId":"3282","severity":1,"message":"3587","line":14,"column":29,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":38},{"ruleId":"3282","severity":1,"message":"3588","line":14,"column":40,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":54},{"ruleId":"3282","severity":1,"message":"3589","line":14,"column":56,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":71},{"ruleId":"3282","severity":1,"message":"3578","line":14,"column":72,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":91},{"ruleId":"3282","severity":1,"message":"3580","line":14,"column":92,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":98},{"ruleId":"3282","severity":1,"message":"3581","line":14,"column":100,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":107},{"ruleId":"3282","severity":1,"message":"3590","line":14,"column":109,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":120},{"ruleId":"3282","severity":1,"message":"3591","line":14,"column":123,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":129},{"ruleId":"3282","severity":1,"message":"3592","line":14,"column":130,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":139},{"ruleId":"3282","severity":1,"message":"3582","line":15,"column":9,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":19},{"ruleId":"3420","severity":1,"message":"3481","line":94,"column":13,"nodeType":"3336","endLine":94,"endColumn":80},{"ruleId":"3282","severity":1,"message":"3578","line":17,"column":10,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3533","line":17,"column":30,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":38},{"ruleId":"3282","severity":1,"message":"3579","line":17,"column":40,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":43},{"ruleId":"3282","severity":1,"message":"3580","line":17,"column":44,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":50},{"ruleId":"3282","severity":1,"message":"3581","line":17,"column":52,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":59},{"ruleId":"3282","severity":1,"message":"3326","line":17,"column":60,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":64},{"ruleId":"3282","severity":1,"message":"3582","line":18,"column":9,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":19},{"ruleId":"3420","severity":1,"message":"3481","line":86,"column":13,"nodeType":"3336","endLine":86,"endColumn":81},{"ruleId":"3420","severity":1,"message":"3481","line":87,"column":13,"nodeType":"3336","endLine":87,"endColumn":88},{"ruleId":"3290","severity":1,"message":"3291","line":11,"column":29,"nodeType":"3292","messageId":"3293","endLine":11,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3593","line":21,"column":40,"nodeType":"3306","endLine":21,"endColumn":46,"suggestions":"3594"},{"ruleId":"3282","severity":1,"message":"3595","line":9,"column":12,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":26},{"ruleId":"3290","severity":1,"message":"3291","line":14,"column":29,"nodeType":"3292","messageId":"3293","endLine":14,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3593","line":31,"column":28,"nodeType":"3306","endLine":31,"endColumn":34,"suggestions":"3596"},{"ruleId":"3597","severity":1,"message":"3598","line":56,"column":13,"nodeType":"3599","endLine":56,"endColumn":32},{"ruleId":"3282","severity":1,"message":"3600","line":7,"column":27,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":32},{"ruleId":"3290","severity":1,"message":"3291","line":14,"column":29,"nodeType":"3292","messageId":"3293","endLine":14,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3593","line":31,"column":7,"nodeType":"3306","endLine":31,"endColumn":13,"suggestions":"3601"},{"ruleId":"3282","severity":1,"message":"3600","line":7,"column":27,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":32},{"ruleId":"3282","severity":1,"message":"3602","line":9,"column":12,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":27},{"ruleId":"3290","severity":1,"message":"3291","line":14,"column":29,"nodeType":"3292","messageId":"3293","endLine":14,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3593","line":33,"column":7,"nodeType":"3306","endLine":33,"endColumn":13,"suggestions":"3603"},{"ruleId":"3282","severity":1,"message":"3582","line":4,"column":9,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":19},{"ruleId":"3290","severity":1,"message":"3291","line":15,"column":29,"nodeType":"3292","messageId":"3293","endLine":15,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3593","line":29,"column":28,"nodeType":"3306","endLine":29,"endColumn":34,"suggestions":"3604"},{"ruleId":"3290","severity":1,"message":"3291","line":20,"column":29,"nodeType":"3292","messageId":"3293","endLine":20,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3593","line":49,"column":40,"nodeType":"3306","endLine":49,"endColumn":46,"suggestions":"3605"},{"ruleId":"3282","severity":1,"message":"3562","line":2,"column":9,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":31},{"ruleId":"3282","severity":1,"message":"3606","line":2,"column":33,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":53},{"ruleId":"3282","severity":1,"message":"3463","line":3,"column":33,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":40},{"ruleId":"3282","severity":1,"message":"3534","line":3,"column":41,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3522","line":3,"column":47,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":53},{"ruleId":"3282","severity":1,"message":"3426","line":4,"column":9,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":23},{"ruleId":"3296","severity":1,"message":"3320","line":16,"column":16,"nodeType":"3298","messageId":"3299","endLine":16,"endColumn":18},{"ruleId":"3290","severity":1,"message":"3291","line":29,"column":28,"nodeType":"3292","messageId":"3293","endLine":29,"endColumn":30},{"ruleId":"3296","severity":1,"message":"3320","line":61,"column":19,"nodeType":"3298","messageId":"3299","endLine":61,"endColumn":21},{"ruleId":"3296","severity":1,"message":"3320","line":62,"column":23,"nodeType":"3298","messageId":"3299","endLine":62,"endColumn":25},{"ruleId":"3282","severity":1,"message":"3465","line":96,"column":11,"nodeType":"3284","messageId":"3285","endLine":96,"endColumn":16},{"ruleId":"3290","severity":1,"message":"3291","line":101,"column":41,"nodeType":"3292","messageId":"3293","endLine":101,"endColumn":43},{"ruleId":"3290","severity":1,"message":"3291","line":104,"column":56,"nodeType":"3292","messageId":"3293","endLine":104,"endColumn":58},{"ruleId":"3290","severity":1,"message":"3291","line":114,"column":64,"nodeType":"3292","messageId":"3293","endLine":114,"endColumn":66},{"ruleId":"3290","severity":1,"message":"3341","line":115,"column":58,"nodeType":"3292","messageId":"3303","endLine":115,"endColumn":60},{"ruleId":"3290","severity":1,"message":"3291","line":197,"column":41,"nodeType":"3292","messageId":"3293","endLine":197,"endColumn":43},{"ruleId":"3290","severity":1,"message":"3341","line":199,"column":52,"nodeType":"3292","messageId":"3303","endLine":199,"endColumn":54},{"ruleId":"3290","severity":1,"message":"3321","line":212,"column":55,"nodeType":"3302","messageId":"3293","endLine":212,"endColumn":63},{"ruleId":"3290","severity":1,"message":"3341","line":215,"column":57,"nodeType":"3292","messageId":"3303","endLine":215,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3291","line":288,"column":31,"nodeType":"3292","messageId":"3293","endLine":288,"endColumn":33},{"ruleId":"3290","severity":1,"message":"3321","line":290,"column":51,"nodeType":"3302","messageId":"3293","endLine":290,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3291","line":291,"column":53,"nodeType":"3292","messageId":"3293","endLine":291,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3291","line":297,"column":35,"nodeType":"3292","messageId":"3293","endLine":297,"endColumn":37},{"ruleId":"3296","severity":1,"message":"3320","line":298,"column":31,"nodeType":"3298","messageId":"3299","endLine":298,"endColumn":33},{"ruleId":"3290","severity":1,"message":"3291","line":16,"column":47,"nodeType":"3292","messageId":"3293","endLine":16,"endColumn":49},{"ruleId":"3290","severity":1,"message":"3291","line":18,"column":37,"nodeType":"3292","messageId":"3293","endLine":18,"endColumn":39},{"ruleId":"3296","severity":1,"message":"3320","line":19,"column":36,"nodeType":"3298","messageId":"3299","endLine":19,"endColumn":38},{"ruleId":"3290","severity":1,"message":"3291","line":29,"column":28,"nodeType":"3292","messageId":"3293","endLine":29,"endColumn":30},{"ruleId":"3304","severity":1,"message":"3607","line":33,"column":52,"nodeType":"3306","endLine":33,"endColumn":56,"suggestions":"3608"},{"ruleId":"3420","severity":1,"message":"3480","line":20,"column":12,"nodeType":"3336","endLine":20,"endColumn":36},{"ruleId":"3420","severity":1,"message":"3479","line":25,"column":12,"nodeType":"3336","endLine":25,"endColumn":41},{"ruleId":"3420","severity":1,"message":"3609","line":32,"column":12,"nodeType":"3336","endLine":32,"endColumn":43},{"ruleId":"3420","severity":1,"message":"3543","line":54,"column":12,"nodeType":"3336","endLine":54,"endColumn":45},{"ruleId":"3420","severity":1,"message":"3548","line":61,"column":12,"nodeType":"3336","endLine":61,"endColumn":37},{"ruleId":"3282","severity":1,"message":"3610","line":5,"column":8,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3611","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":31},{"ruleId":"3282","severity":1,"message":"3612","line":7,"column":8,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":37},{"ruleId":"3282","severity":1,"message":"3378","line":1,"column":27,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":35},{"ruleId":"3282","severity":1,"message":"3425","line":10,"column":9,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":25},{"ruleId":"3290","severity":1,"message":"3291","line":26,"column":28,"nodeType":"3292","messageId":"3293","endLine":26,"endColumn":30},{"ruleId":"3282","severity":1,"message":"3613","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3614","line":13,"column":7,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":13},{"ruleId":"3420","severity":1,"message":"3558","line":18,"column":12,"nodeType":"3336","endLine":18,"endColumn":42},{"ruleId":"3420","severity":1,"message":"3452","line":23,"column":12,"nodeType":"3336","endLine":23,"endColumn":48},{"ruleId":"3420","severity":1,"message":"3570","line":33,"column":12,"nodeType":"3336","endLine":33,"endColumn":45},{"ruleId":"3420","severity":1,"message":"3569","line":39,"column":12,"nodeType":"3336","endLine":39,"endColumn":50},{"ruleId":"3282","severity":1,"message":"3406","line":6,"column":13,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":15},{"ruleId":"3290","severity":1,"message":"3291","line":21,"column":53,"nodeType":"3292","messageId":"3293","endLine":21,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3291","line":22,"column":30,"nodeType":"3292","messageId":"3293","endLine":22,"endColumn":32},{"ruleId":"3304","severity":1,"message":"3615","line":29,"column":36,"nodeType":"3306","endLine":29,"endColumn":40,"suggestions":"3616"},{"ruleId":"3290","severity":1,"message":"3291","line":90,"column":45,"nodeType":"3292","messageId":"3293","endLine":90,"endColumn":47},{"ruleId":"3290","severity":1,"message":"3291","line":91,"column":31,"nodeType":"3292","messageId":"3293","endLine":91,"endColumn":33},{"ruleId":"3420","severity":1,"message":"3565","line":15,"column":12,"nodeType":"3336","endLine":15,"endColumn":44},{"ruleId":"3420","severity":1,"message":"3566","line":20,"column":12,"nodeType":"3336","endLine":20,"endColumn":40},{"ruleId":"3420","severity":1,"message":"3482","line":25,"column":12,"nodeType":"3336","endLine":25,"endColumn":37},{"ruleId":"3420","severity":1,"message":"3483","line":30,"column":12,"nodeType":"3336","endLine":30,"endColumn":40},{"ruleId":"3420","severity":1,"message":"3576","line":40,"column":12,"nodeType":"3336","endLine":40,"endColumn":38},{"ruleId":"3290","severity":1,"message":"3291","line":20,"column":29,"nodeType":"3292","messageId":"3293","endLine":20,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3617","line":38,"column":8,"nodeType":"3306","endLine":38,"endColumn":21,"suggestions":"3618"},{"ruleId":"3282","severity":1,"message":"3619","line":40,"column":12,"nodeType":"3284","messageId":"3285","endLine":40,"endColumn":15},{"ruleId":"3290","severity":1,"message":"3291","line":94,"column":45,"nodeType":"3292","messageId":"3293","endLine":94,"endColumn":47},{"ruleId":"3290","severity":1,"message":"3291","line":95,"column":31,"nodeType":"3292","messageId":"3293","endLine":95,"endColumn":33},{"ruleId":"3282","severity":1,"message":"3377","line":1,"column":16,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":25},{"ruleId":"3420","severity":1,"message":"3574","line":12,"column":12,"nodeType":"3336","endLine":12,"endColumn":32},{"ruleId":"3420","severity":1,"message":"3455","line":17,"column":12,"nodeType":"3336","endLine":17,"endColumn":37},{"ruleId":"3420","severity":1,"message":"3575","line":22,"column":12,"nodeType":"3336","endLine":22,"endColumn":38},{"ruleId":"3420","severity":1,"message":"3573","line":27,"column":12,"nodeType":"3336","endLine":27,"endColumn":36},{"ruleId":"3420","severity":1,"message":"3454","line":32,"column":12,"nodeType":"3336","endLine":32,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3620","line":15,"column":8,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3621","line":17,"column":7,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":16},{"ruleId":"3304","severity":1,"message":"3622","line":41,"column":7,"nodeType":"3306","endLine":41,"endColumn":9,"suggestions":"3623"},{"ruleId":"3282","severity":1,"message":"3534","line":15,"column":9,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":13},{"ruleId":"3296","severity":1,"message":"3297","line":41,"column":87,"nodeType":"3298","messageId":"3299","endLine":41,"endColumn":89},{"ruleId":"3290","severity":1,"message":"3291","line":53,"column":41,"nodeType":"3292","messageId":"3293","endLine":53,"endColumn":43},{"ruleId":"3304","severity":1,"message":"3546","line":61,"column":7,"nodeType":"3306","endLine":61,"endColumn":9,"suggestions":"3624"},{"ruleId":"3282","severity":1,"message":"3378","line":1,"column":27,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":35},{"ruleId":"3282","severity":1,"message":"3488","line":4,"column":9,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3326","line":13,"column":20,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3625","line":13,"column":26,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":30},{"ruleId":"3282","severity":1,"message":"3626","line":13,"column":32,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":40},{"ruleId":"3282","severity":1,"message":"3326","line":13,"column":47,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":51},{"ruleId":"3290","severity":1,"message":"3291","line":37,"column":39,"nodeType":"3292","messageId":"3293","endLine":37,"endColumn":41},{"ruleId":"3290","severity":1,"message":"3291","line":38,"column":43,"nodeType":"3292","messageId":"3293","endLine":38,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3625","line":13,"column":26,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":30},{"ruleId":"3282","severity":1,"message":"3626","line":13,"column":32,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":40},{"ruleId":"3282","severity":1,"message":"3326","line":13,"column":47,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":51},{"ruleId":"3282","severity":1,"message":"3627","line":33,"column":11,"nodeType":"3284","messageId":"3285","endLine":33,"endColumn":17},{"ruleId":"3290","severity":1,"message":"3291","line":37,"column":39,"nodeType":"3292","messageId":"3293","endLine":37,"endColumn":41},{"ruleId":"3290","severity":1,"message":"3291","line":40,"column":43,"nodeType":"3292","messageId":"3293","endLine":40,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3556","line":4,"column":8,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3409","line":5,"column":9,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":10},{"ruleId":"3282","severity":1,"message":"3377","line":1,"column":17,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3534","line":10,"column":9,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3403","line":2,"column":9,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3444","line":7,"column":8,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3405","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3407","line":6,"column":20,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3489","line":6,"column":27,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3405","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3489","line":6,"column":27,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":28},{"ruleId":"3304","severity":1,"message":"3628","line":24,"column":22,"nodeType":"3306","endLine":24,"endColumn":29,"suggestions":"3629"},{"ruleId":"3282","severity":1,"message":"3378","line":5,"column":10,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":18},{"ruleId":"3282","severity":1,"message":"3582","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":19},{"ruleId":"3304","severity":1,"message":"3630","line":14,"column":8,"nodeType":"3631","endLine":14,"endColumn":21},{"ruleId":"3282","severity":1,"message":"3425","line":3,"column":34,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":50},{"ruleId":"3282","severity":1,"message":"3488","line":4,"column":42,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":62},{"ruleId":"3282","severity":1,"message":"3632","line":5,"column":10,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":19},{"ruleId":"3420","severity":1,"message":"3633","line":26,"column":17,"nodeType":"3336","endLine":26,"endColumn":35},{"ruleId":"3420","severity":1,"message":"3458","line":27,"column":18,"nodeType":"3336","endLine":27,"endColumn":45},{"ruleId":"3420","severity":1,"message":"3459","line":28,"column":18,"nodeType":"3336","endLine":28,"endColumn":44},{"ruleId":"3420","severity":1,"message":"3634","line":29,"column":18,"nodeType":"3336","endLine":29,"endColumn":40},{"ruleId":"3282","severity":1,"message":"3403","line":2,"column":9,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3635","line":4,"column":10,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":33},{"ruleId":"3282","severity":1,"message":"3636","line":7,"column":9,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3637","line":21,"column":11,"nodeType":"3284","messageId":"3285","endLine":21,"endColumn":23},{"ruleId":"3282","severity":1,"message":"3638","line":10,"column":8,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":34},{"ruleId":"3420","severity":1,"message":"3639","line":20,"column":17,"nodeType":"3336","endLine":20,"endColumn":52},{"ruleId":"3420","severity":1,"message":"3481","line":23,"column":13,"nodeType":"3336","endLine":23,"endColumn":120},{"ruleId":"3282","severity":1,"message":"3488","line":4,"column":9,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3640","line":8,"column":8,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3638","line":10,"column":8,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":34},{"ruleId":"3420","severity":1,"message":"3641","line":20,"column":17,"nodeType":"3336","endLine":20,"endColumn":44},{"ruleId":"3282","severity":1,"message":"3642","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":37},{"ruleId":"3282","severity":1,"message":"3625","line":13,"column":26,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":30},{"ruleId":"3282","severity":1,"message":"3626","line":13,"column":32,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":40},{"ruleId":"3282","severity":1,"message":"3643","line":13,"column":42,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3326","line":13,"column":47,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":51},{"ruleId":"3290","severity":1,"message":"3291","line":36,"column":39,"nodeType":"3292","messageId":"3293","endLine":36,"endColumn":41},{"ruleId":"3290","severity":1,"message":"3291","line":37,"column":43,"nodeType":"3292","messageId":"3293","endLine":37,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3644","line":23,"column":12,"nodeType":"3284","messageId":"3285","endLine":23,"endColumn":27},{"ruleId":"3282","severity":1,"message":"3645","line":2,"column":10,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":23},{"ruleId":"3282","severity":1,"message":"3582","line":5,"column":9,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3646","line":9,"column":17,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3647","line":9,"column":20,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":25},{"ruleId":"3282","severity":1,"message":"3648","line":10,"column":12,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3649","line":10,"column":22,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":33},{"ruleId":"3282","severity":1,"message":"3283","line":22,"column":7,"nodeType":"3284","messageId":"3285","endLine":22,"endColumn":15},{"ruleId":"3286","replacedBy":"3650"},{"ruleId":"3288","replacedBy":"3651"},{"ruleId":"3304","severity":1,"message":"3305","line":26,"column":22,"nodeType":"3306","endLine":26,"endColumn":26,"suggestions":"3652"},{"ruleId":"3290","severity":1,"message":"3291","line":153,"column":42,"nodeType":"3292","messageId":"3293","endLine":153,"endColumn":44},{"ruleId":"3282","severity":1,"message":"3342","line":182,"column":50,"nodeType":"3284","messageId":"3285","endLine":182,"endColumn":62},{"ruleId":"3282","severity":1,"message":"3343","line":251,"column":7,"nodeType":"3284","messageId":"3285","endLine":251,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3344","line":257,"column":7,"nodeType":"3284","messageId":"3285","endLine":257,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3358","line":7,"column":8,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3359","line":8,"column":8,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3360","line":9,"column":8,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3361","line":11,"column":8,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":23},{"ruleId":"3282","severity":1,"message":"3375","line":4,"column":22,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":32},{"ruleId":"3304","severity":1,"message":"3347","line":11,"column":7,"nodeType":"3306","endLine":11,"endColumn":11,"suggestions":"3653"},{"ruleId":"3304","severity":1,"message":"3347","line":66,"column":8,"nodeType":"3306","endLine":66,"endColumn":14,"suggestions":"3654"},{"ruleId":"3290","severity":1,"message":"3321","line":71,"column":43,"nodeType":"3302","messageId":"3293","endLine":71,"endColumn":51},{"ruleId":"3304","severity":1,"message":"3350","line":79,"column":41,"nodeType":"3306","endLine":79,"endColumn":58,"suggestions":"3655"},{"ruleId":"3304","severity":1,"message":"3352","line":102,"column":7,"nodeType":"3306","endLine":102,"endColumn":9,"suggestions":"3656"},{"ruleId":"3282","severity":1,"message":"3354","line":145,"column":11,"nodeType":"3284","messageId":"3285","endLine":145,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3355","line":147,"column":12,"nodeType":"3284","messageId":"3285","endLine":147,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3356","line":147,"column":24,"nodeType":"3284","messageId":"3285","endLine":147,"endColumn":37},{"ruleId":"3304","severity":1,"message":"3347","line":158,"column":8,"nodeType":"3306","endLine":158,"endColumn":14,"suggestions":"3657"},{"ruleId":"3304","severity":1,"message":"3322","line":24,"column":22,"nodeType":"3306","endLine":24,"endColumn":28,"suggestions":"3658"},{"ruleId":"3304","severity":1,"message":"3628","line":24,"column":22,"nodeType":"3306","endLine":24,"endColumn":29,"suggestions":"3659"},{"ruleId":"3304","severity":1,"message":"3560","line":24,"column":22,"nodeType":"3306","endLine":24,"endColumn":30,"suggestions":"3660"},{"ruleId":"3304","severity":1,"message":"3410","line":25,"column":22,"nodeType":"3306","endLine":25,"endColumn":31,"suggestions":"3661"},{"ruleId":"3304","severity":1,"message":"3362","line":25,"column":22,"nodeType":"3306","endLine":25,"endColumn":28,"suggestions":"3662"},{"ruleId":"3282","severity":1,"message":"3378","line":1,"column":27,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":35},{"ruleId":"3282","severity":1,"message":"3373","line":16,"column":11,"nodeType":"3284","messageId":"3285","endLine":16,"endColumn":13},{"ruleId":"3290","severity":1,"message":"3291","line":24,"column":32,"nodeType":"3292","messageId":"3293","endLine":24,"endColumn":34},{"ruleId":"3304","severity":1,"message":"3379","line":37,"column":47,"nodeType":"3306","endLine":37,"endColumn":60,"suggestions":"3663"},{"ruleId":"3282","severity":1,"message":"3372","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":12},{"ruleId":"3282","severity":1,"message":"3373","line":9,"column":11,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3374","line":10,"column":11,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3402","line":2,"column":9,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":31},{"ruleId":"3282","severity":1,"message":"3403","line":3,"column":9,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3404","line":5,"column":8,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3405","line":8,"column":9,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3406","line":8,"column":17,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3407","line":8,"column":20,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3408","line":64,"column":14,"nodeType":"3284","messageId":"3285","endLine":64,"endColumn":21},{"ruleId":"3282","severity":1,"message":"3377","line":1,"column":17,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3378","line":1,"column":28,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":36},{"ruleId":"3282","severity":1,"message":"3345","line":4,"column":9,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3346","line":4,"column":36,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":46},{"ruleId":"3304","severity":1,"message":"3347","line":27,"column":73,"nodeType":"3306","endLine":27,"endColumn":79,"suggestions":"3664"},{"ruleId":"3282","severity":1,"message":"3366","line":3,"column":8,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3367","line":4,"column":8,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3368","line":5,"column":8,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3369","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3370","line":10,"column":8,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3365","line":12,"column":8,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3405","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3407","line":6,"column":20,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3489","line":6,"column":27,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3405","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3489","line":6,"column":27,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":28},{"ruleId":"3334","severity":1,"message":"3335","line":5,"column":13,"nodeType":"3336","endLine":5,"endColumn":73},{"ruleId":"3334","severity":1,"message":"3335","line":9,"column":13,"nodeType":"3336","endLine":9,"endColumn":69},{"ruleId":"3334","severity":1,"message":"3335","line":13,"column":13,"nodeType":"3336","endLine":13,"endColumn":79},{"ruleId":"3334","severity":1,"message":"3335","line":17,"column":13,"nodeType":"3336","endLine":17,"endColumn":72},{"ruleId":"3334","severity":1,"message":"3335","line":21,"column":13,"nodeType":"3336","endLine":21,"endColumn":78},{"ruleId":"3282","severity":1,"message":"3368","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3427","line":7,"column":8,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3405","line":8,"column":9,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3428","line":23,"column":9,"nodeType":"3284","messageId":"3285","endLine":23,"endColumn":14},{"ruleId":"3304","severity":1,"message":"3347","line":31,"column":7,"nodeType":"3306","endLine":31,"endColumn":14,"suggestions":"3665"},{"ruleId":"3420","severity":1,"message":"3430","line":47,"column":29,"nodeType":"3336","endLine":47,"endColumn":53},{"ruleId":"3420","severity":1,"message":"3431","line":51,"column":29,"nodeType":"3336","endLine":51,"endColumn":49},{"ruleId":"3420","severity":1,"message":"3432","line":55,"column":29,"nodeType":"3336","endLine":55,"endColumn":50},{"ruleId":"3420","severity":1,"message":"3433","line":59,"column":29,"nodeType":"3336","endLine":59,"endColumn":54},{"ruleId":"3420","severity":1,"message":"3434","line":63,"column":29,"nodeType":"3336","endLine":63,"endColumn":51},{"ruleId":"3420","severity":1,"message":"3435","line":67,"column":29,"nodeType":"3336","endLine":67,"endColumn":52},{"ruleId":"3420","severity":1,"message":"3436","line":71,"column":29,"nodeType":"3336","endLine":71,"endColumn":56},{"ruleId":"3282","severity":1,"message":"3364","line":7,"column":9,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":18},{"ruleId":"3282","severity":1,"message":"3365","line":8,"column":8,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3438","line":194,"column":7,"nodeType":"3284","messageId":"3285","endLine":194,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3378","line":1,"column":27,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":35},{"ruleId":"3282","severity":1,"message":"3381","line":15,"column":7,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3294","line":2,"column":10,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3295","line":8,"column":8,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3396","line":96,"column":10,"nodeType":"3284","messageId":"3285","endLine":96,"endColumn":16},{"ruleId":"3282","severity":1,"message":"3412","line":4,"column":8,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":23},{"ruleId":"3282","severity":1,"message":"3413","line":16,"column":24,"nodeType":"3284","messageId":"3285","endLine":16,"endColumn":32},{"ruleId":"3282","severity":1,"message":"3414","line":17,"column":28,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3415","line":19,"column":21,"nodeType":"3284","messageId":"3285","endLine":19,"endColumn":31},{"ruleId":"3290","severity":1,"message":"3291","line":43,"column":59,"nodeType":"3292","messageId":"3293","endLine":43,"endColumn":61},{"ruleId":"3304","severity":1,"message":"3416","line":51,"column":40,"nodeType":"3306","endLine":51,"endColumn":56,"suggestions":"3666"},{"ruleId":"3282","severity":1,"message":"3345","line":3,"column":20,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3418","line":12,"column":8,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":21},{"ruleId":"3282","severity":1,"message":"3419","line":22,"column":8,"nodeType":"3284","messageId":"3285","endLine":22,"endColumn":19},{"ruleId":"3420","severity":1,"message":"3421","line":43,"column":25,"nodeType":"3336","endLine":43,"endColumn":43},{"ruleId":"3420","severity":1,"message":"3422","line":44,"column":25,"nodeType":"3336","endLine":44,"endColumn":43},{"ruleId":"3420","severity":1,"message":"3423","line":45,"column":25,"nodeType":"3336","endLine":45,"endColumn":44},{"ruleId":"3420","severity":1,"message":"3424","line":46,"column":25,"nodeType":"3336","endLine":46,"endColumn":41},{"ruleId":"3296","severity":1,"message":"3297","line":6,"column":15,"nodeType":"3298","messageId":"3299","endLine":6,"endColumn":17},{"ruleId":"3296","severity":1,"message":"3297","line":6,"column":33,"nodeType":"3298","messageId":"3299","endLine":6,"endColumn":35},{"ruleId":"3296","severity":1,"message":"3297","line":21,"column":17,"nodeType":"3298","messageId":"3299","endLine":21,"endColumn":19},{"ruleId":"3296","severity":1,"message":"3297","line":22,"column":17,"nodeType":"3298","messageId":"3299","endLine":22,"endColumn":19},{"ruleId":"3290","severity":1,"message":"3291","line":59,"column":35,"nodeType":"3292","messageId":"3293","endLine":59,"endColumn":37},{"ruleId":"3337","severity":1,"message":"3338","line":108,"column":28,"nodeType":"3339","messageId":"3340","endLine":108,"endColumn":30},{"ruleId":"3337","severity":1,"message":"3338","line":108,"column":58,"nodeType":"3339","messageId":"3340","endLine":108,"endColumn":60},{"ruleId":"3290","severity":1,"message":"3291","line":119,"column":42,"nodeType":"3292","messageId":"3293","endLine":119,"endColumn":44},{"ruleId":"3290","severity":1,"message":"3291","line":145,"column":29,"nodeType":"3292","messageId":"3293","endLine":145,"endColumn":31},{"ruleId":"3290","severity":1,"message":"3291","line":146,"column":47,"nodeType":"3292","messageId":"3293","endLine":146,"endColumn":49},{"ruleId":"3290","severity":1,"message":"3341","line":231,"column":46,"nodeType":"3292","messageId":"3303","endLine":231,"endColumn":48},{"ruleId":"3296","severity":1,"message":"3297","line":245,"column":87,"nodeType":"3298","messageId":"3299","endLine":245,"endColumn":89},{"ruleId":"3290","severity":1,"message":"3291","line":295,"column":29,"nodeType":"3292","messageId":"3293","endLine":295,"endColumn":31},{"ruleId":"3296","severity":1,"message":"3297","line":297,"column":80,"nodeType":"3298","messageId":"3299","endLine":297,"endColumn":82},{"ruleId":"3282","severity":1,"message":"3397","line":19,"column":11,"nodeType":"3284","messageId":"3285","endLine":19,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3308","line":12,"column":8,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3309","line":13,"column":8,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3310","line":14,"column":8,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":20},{"ruleId":"3316","severity":1,"message":"3317","line":28,"column":3,"nodeType":"3318","messageId":"3319","endLine":45,"endColumn":4},{"ruleId":"3312","severity":1,"message":"3313","line":31,"column":13,"nodeType":"3314","messageId":"3315","endLine":31,"endColumn":19},{"ruleId":"3312","severity":1,"message":"3313","line":34,"column":9,"nodeType":"3314","messageId":"3315","endLine":34,"endColumn":15},{"ruleId":"3312","severity":1,"message":"3313","line":37,"column":11,"nodeType":"3314","messageId":"3315","endLine":37,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":40,"column":11,"nodeType":"3314","messageId":"3315","endLine":40,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":43,"column":11,"nodeType":"3314","messageId":"3315","endLine":43,"endColumn":17},{"ruleId":"3316","severity":1,"message":"3317","line":48,"column":3,"nodeType":"3318","messageId":"3319","endLine":73,"endColumn":4},{"ruleId":"3312","severity":1,"message":"3313","line":51,"column":13,"nodeType":"3314","messageId":"3315","endLine":51,"endColumn":19},{"ruleId":"3312","severity":1,"message":"3313","line":54,"column":9,"nodeType":"3314","messageId":"3315","endLine":54,"endColumn":15},{"ruleId":"3312","severity":1,"message":"3313","line":57,"column":11,"nodeType":"3314","messageId":"3315","endLine":57,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":60,"column":11,"nodeType":"3314","messageId":"3315","endLine":60,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":63,"column":11,"nodeType":"3314","messageId":"3315","endLine":63,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":66,"column":11,"nodeType":"3314","messageId":"3315","endLine":66,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":69,"column":11,"nodeType":"3314","messageId":"3315","endLine":69,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":72,"column":11,"nodeType":"3314","messageId":"3315","endLine":72,"endColumn":17},{"ruleId":"3290","severity":1,"message":"3291","line":216,"column":33,"nodeType":"3292","messageId":"3293","endLine":216,"endColumn":35},{"ruleId":"3290","severity":1,"message":"3291","line":218,"column":44,"nodeType":"3292","messageId":"3293","endLine":218,"endColumn":46},{"ruleId":"3282","severity":1,"message":"3311","line":241,"column":17,"nodeType":"3284","messageId":"3285","endLine":241,"endColumn":30},{"ruleId":"3312","severity":1,"message":"3313","line":261,"column":11,"nodeType":"3314","messageId":"3315","endLine":261,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":264,"column":11,"nodeType":"3314","messageId":"3315","endLine":264,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":267,"column":11,"nodeType":"3314","messageId":"3315","endLine":267,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":270,"column":11,"nodeType":"3314","messageId":"3315","endLine":270,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":273,"column":11,"nodeType":"3314","messageId":"3315","endLine":273,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":276,"column":11,"nodeType":"3314","messageId":"3315","endLine":276,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":279,"column":11,"nodeType":"3314","messageId":"3315","endLine":279,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":282,"column":11,"nodeType":"3314","messageId":"3315","endLine":282,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":285,"column":11,"nodeType":"3314","messageId":"3315","endLine":285,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":288,"column":11,"nodeType":"3314","messageId":"3315","endLine":288,"endColumn":17},{"ruleId":"3312","severity":1,"message":"3313","line":291,"column":11,"nodeType":"3314","messageId":"3315","endLine":291,"endColumn":17},{"ruleId":"3296","severity":1,"message":"3297","line":402,"column":16,"nodeType":"3298","messageId":"3299","endLine":402,"endColumn":18},{"ruleId":"3296","severity":1,"message":"3320","line":402,"column":31,"nodeType":"3298","messageId":"3299","endLine":402,"endColumn":33},{"ruleId":"3296","severity":1,"message":"3297","line":406,"column":14,"nodeType":"3298","messageId":"3299","endLine":406,"endColumn":16},{"ruleId":"3296","severity":1,"message":"3320","line":406,"column":31,"nodeType":"3298","messageId":"3299","endLine":406,"endColumn":33},{"ruleId":"3296","severity":1,"message":"3320","line":413,"column":41,"nodeType":"3298","messageId":"3299","endLine":413,"endColumn":43},{"ruleId":"3290","severity":1,"message":"3291","line":452,"column":60,"nodeType":"3292","messageId":"3293","endLine":452,"endColumn":62},{"ruleId":"3290","severity":1,"message":"3321","line":453,"column":46,"nodeType":"3302","messageId":"3293","endLine":453,"endColumn":54},{"ruleId":"3290","severity":1,"message":"3291","line":454,"column":48,"nodeType":"3292","messageId":"3293","endLine":454,"endColumn":50},{"ruleId":"3282","severity":1,"message":"3378","line":1,"column":28,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":36},{"ruleId":"3282","severity":1,"message":"3521","line":4,"column":10,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3522","line":4,"column":20,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3523","line":5,"column":8,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3354","line":13,"column":11,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3443","line":4,"column":10,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3444","line":7,"column":8,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3445","line":13,"column":12,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":21},{"ruleId":"3282","severity":1,"message":"3446","line":14,"column":12,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3447","line":15,"column":12,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":23},{"ruleId":"3420","severity":1,"message":"3468","line":24,"column":17,"nodeType":"3336","endLine":24,"endColumn":38},{"ruleId":"3420","severity":1,"message":"3469","line":25,"column":17,"nodeType":"3336","endLine":25,"endColumn":44},{"ruleId":"3420","severity":1,"message":"3470","line":26,"column":17,"nodeType":"3336","endLine":26,"endColumn":43},{"ruleId":"3296","severity":1,"message":"3320","line":40,"column":50,"nodeType":"3298","messageId":"3299","endLine":40,"endColumn":52},{"ruleId":"3296","severity":1,"message":"3320","line":41,"column":49,"nodeType":"3298","messageId":"3299","endLine":41,"endColumn":51},{"ruleId":"3296","severity":1,"message":"3320","line":42,"column":44,"nodeType":"3298","messageId":"3299","endLine":42,"endColumn":46},{"ruleId":"3296","severity":1,"message":"3320","line":43,"column":43,"nodeType":"3298","messageId":"3299","endLine":43,"endColumn":45},{"ruleId":"3296","severity":1,"message":"3320","line":44,"column":45,"nodeType":"3298","messageId":"3299","endLine":44,"endColumn":47},{"ruleId":"3282","severity":1,"message":"3294","line":2,"column":10,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3368","line":5,"column":8,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3369","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3448","line":8,"column":8,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":16},{"ruleId":"3282","severity":1,"message":"3449","line":9,"column":8,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":18},{"ruleId":"3282","severity":1,"message":"3450","line":10,"column":8,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":16},{"ruleId":"3282","severity":1,"message":"3451","line":20,"column":8,"nodeType":"3284","messageId":"3285","endLine":20,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3461","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3462","line":9,"column":8,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3463","line":9,"column":15,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3464","line":9,"column":24,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3373","line":18,"column":11,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3465","line":19,"column":11,"nodeType":"3284","messageId":"3285","endLine":19,"endColumn":16},{"ruleId":"3420","severity":1,"message":"3466","line":29,"column":17,"nodeType":"3336","endLine":29,"endColumn":41},{"ruleId":"3420","severity":1,"message":"3467","line":30,"column":17,"nodeType":"3336","endLine":30,"endColumn":34},{"ruleId":"3420","severity":1,"message":"3633","line":26,"column":17,"nodeType":"3336","endLine":26,"endColumn":35},{"ruleId":"3420","severity":1,"message":"3458","line":27,"column":18,"nodeType":"3336","endLine":27,"endColumn":45},{"ruleId":"3420","severity":1,"message":"3459","line":28,"column":18,"nodeType":"3336","endLine":28,"endColumn":44},{"ruleId":"3420","severity":1,"message":"3634","line":29,"column":18,"nodeType":"3336","endLine":29,"endColumn":40},{"ruleId":"3420","severity":1,"message":"3439","line":29,"column":21,"nodeType":"3336","endLine":29,"endColumn":46},{"ruleId":"3420","severity":1,"message":"3440","line":31,"column":21,"nodeType":"3336","endLine":31,"endColumn":47},{"ruleId":"3420","severity":1,"message":"3441","line":33,"column":21,"nodeType":"3336","endLine":33,"endColumn":48},{"ruleId":"3420","severity":1,"message":"3442","line":34,"column":21,"nodeType":"3336","endLine":34,"endColumn":49},{"ruleId":"3282","severity":1,"message":"3405","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":11},{"ruleId":"3420","severity":1,"message":"3452","line":32,"column":16,"nodeType":"3336","endLine":32,"endColumn":52},{"ruleId":"3420","severity":1,"message":"3453","line":37,"column":16,"nodeType":"3336","endLine":37,"endColumn":50},{"ruleId":"3420","severity":1,"message":"3454","line":42,"column":16,"nodeType":"3336","endLine":42,"endColumn":49},{"ruleId":"3420","severity":1,"message":"3455","line":47,"column":16,"nodeType":"3336","endLine":47,"endColumn":41},{"ruleId":"3420","severity":1,"message":"3456","line":52,"column":16,"nodeType":"3336","endLine":52,"endColumn":50},{"ruleId":"3420","severity":1,"message":"3457","line":57,"column":16,"nodeType":"3336","endLine":57,"endColumn":37},{"ruleId":"3420","severity":1,"message":"3458","line":62,"column":16,"nodeType":"3336","endLine":62,"endColumn":43},{"ruleId":"3420","severity":1,"message":"3459","line":67,"column":16,"nodeType":"3336","endLine":67,"endColumn":42},{"ruleId":"3420","severity":1,"message":"3460","line":82,"column":17,"nodeType":"3336","endLine":82,"endColumn":34},{"ruleId":"3282","severity":1,"message":"3382","line":10,"column":9,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3383","line":13,"column":7,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3373","line":23,"column":11,"nodeType":"3284","messageId":"3285","endLine":23,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3384","line":33,"column":13,"nodeType":"3284","messageId":"3285","endLine":33,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3385","line":38,"column":13,"nodeType":"3284","messageId":"3285","endLine":38,"endColumn":23},{"ruleId":"3290","severity":1,"message":"3291","line":42,"column":28,"nodeType":"3292","messageId":"3293","endLine":42,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3291","line":59,"column":36,"nodeType":"3292","messageId":"3293","endLine":59,"endColumn":38},{"ruleId":"3290","severity":1,"message":"3291","line":61,"column":42,"nodeType":"3292","messageId":"3293","endLine":61,"endColumn":44},{"ruleId":"3296","severity":1,"message":"3320","line":104,"column":55,"nodeType":"3298","messageId":"3299","endLine":104,"endColumn":57},{"ruleId":"3304","severity":1,"message":"3386","line":106,"column":9,"nodeType":"3306","endLine":106,"endColumn":38,"suggestions":"3667"},{"ruleId":"3282","severity":1,"message":"3405","line":5,"column":9,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3471","line":13,"column":8,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":20},{"ruleId":"3420","severity":1,"message":"3472","line":30,"column":17,"nodeType":"3336","endLine":30,"endColumn":45},{"ruleId":"3420","severity":1,"message":"3473","line":31,"column":17,"nodeType":"3336","endLine":31,"endColumn":40},{"ruleId":"3420","severity":1,"message":"3474","line":32,"column":17,"nodeType":"3336","endLine":32,"endColumn":41},{"ruleId":"3420","severity":1,"message":"3475","line":68,"column":17,"nodeType":"3336","endLine":68,"endColumn":43},{"ruleId":"3420","severity":1,"message":"3476","line":69,"column":17,"nodeType":"3336","endLine":69,"endColumn":50},{"ruleId":"3420","severity":1,"message":"3477","line":70,"column":17,"nodeType":"3336","endLine":70,"endColumn":53},{"ruleId":"3290","severity":1,"message":"3291","line":16,"column":51,"nodeType":"3292","messageId":"3293","endLine":16,"endColumn":53},{"ruleId":"3304","severity":1,"message":"3391","line":63,"column":45,"nodeType":"3306","endLine":63,"endColumn":74,"suggestions":"3668"},{"ruleId":"3304","severity":1,"message":"3388","line":30,"column":7,"nodeType":"3306","endLine":30,"endColumn":13,"suggestions":"3669"},{"ruleId":"3282","severity":1,"message":"3382","line":11,"column":9,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3383","line":14,"column":7,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3354","line":23,"column":11,"nodeType":"3284","messageId":"3285","endLine":23,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3373","line":24,"column":11,"nodeType":"3284","messageId":"3285","endLine":24,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3384","line":34,"column":13,"nodeType":"3284","messageId":"3285","endLine":34,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3385","line":39,"column":13,"nodeType":"3284","messageId":"3285","endLine":39,"endColumn":23},{"ruleId":"3290","severity":1,"message":"3291","line":43,"column":28,"nodeType":"3292","messageId":"3293","endLine":43,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3291","line":60,"column":37,"nodeType":"3292","messageId":"3293","endLine":60,"endColumn":39},{"ruleId":"3304","severity":1,"message":"3386","line":91,"column":51,"nodeType":"3306","endLine":91,"endColumn":76,"suggestions":"3670"},{"ruleId":"3282","severity":1,"message":"3595","line":9,"column":12,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":26},{"ruleId":"3290","severity":1,"message":"3291","line":14,"column":29,"nodeType":"3292","messageId":"3293","endLine":14,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3593","line":31,"column":28,"nodeType":"3306","endLine":31,"endColumn":34,"suggestions":"3671"},{"ruleId":"3597","severity":1,"message":"3598","line":56,"column":13,"nodeType":"3599","endLine":56,"endColumn":32},{"ruleId":"3282","severity":1,"message":"3345","line":5,"column":9,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3364","line":5,"column":18,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":27},{"ruleId":"3282","severity":1,"message":"3371","line":56,"column":11,"nodeType":"3284","messageId":"3285","endLine":56,"endColumn":18},{"ruleId":"3304","severity":1,"message":"3400","line":51,"column":7,"nodeType":"3306","endLine":51,"endColumn":16,"suggestions":"3672"},{"ruleId":"3296","severity":1,"message":"3297","line":16,"column":15,"nodeType":"3298","messageId":"3299","endLine":16,"endColumn":17},{"ruleId":"3296","severity":1,"message":"3297","line":16,"column":33,"nodeType":"3298","messageId":"3299","endLine":16,"endColumn":35},{"ruleId":"3296","severity":1,"message":"3297","line":31,"column":17,"nodeType":"3298","messageId":"3299","endLine":31,"endColumn":19},{"ruleId":"3296","severity":1,"message":"3297","line":32,"column":17,"nodeType":"3298","messageId":"3299","endLine":32,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3300","line":287,"column":12,"nodeType":"3284","messageId":"3285","endLine":287,"endColumn":26},{"ruleId":"3290","severity":1,"message":"3291","line":290,"column":43,"nodeType":"3292","messageId":"3293","endLine":290,"endColumn":45},{"ruleId":"3290","severity":1,"message":"3301","line":332,"column":73,"nodeType":"3302","messageId":"3303","endLine":332,"endColumn":82},{"ruleId":"3290","severity":1,"message":"3291","line":342,"column":26,"nodeType":"3292","messageId":"3293","endLine":342,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3521","line":3,"column":10,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3522","line":3,"column":20,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3529","line":14,"column":12,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3530","line":14,"column":22,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":33},{"ruleId":"3282","severity":1,"message":"3529","line":46,"column":12,"nodeType":"3284","messageId":"3285","endLine":46,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3530","line":46,"column":22,"nodeType":"3284","messageId":"3285","endLine":46,"endColumn":33},{"ruleId":"3282","severity":1,"message":"3378","line":5,"column":10,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":18},{"ruleId":"3282","severity":1,"message":"3582","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":19},{"ruleId":"3304","severity":1,"message":"3630","line":14,"column":8,"nodeType":"3631","endLine":14,"endColumn":21},{"ruleId":"3282","severity":1,"message":"3556","line":4,"column":8,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3409","line":5,"column":9,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":10},{"ruleId":"3420","severity":1,"message":"3558","line":18,"column":12,"nodeType":"3336","endLine":18,"endColumn":42},{"ruleId":"3420","severity":1,"message":"3452","line":23,"column":12,"nodeType":"3336","endLine":23,"endColumn":48},{"ruleId":"3420","severity":1,"message":"3570","line":33,"column":12,"nodeType":"3336","endLine":33,"endColumn":45},{"ruleId":"3420","severity":1,"message":"3569","line":39,"column":12,"nodeType":"3336","endLine":39,"endColumn":50},{"ruleId":"3420","severity":1,"message":"3574","line":12,"column":12,"nodeType":"3336","endLine":12,"endColumn":32},{"ruleId":"3420","severity":1,"message":"3455","line":17,"column":12,"nodeType":"3336","endLine":17,"endColumn":37},{"ruleId":"3420","severity":1,"message":"3575","line":22,"column":12,"nodeType":"3336","endLine":22,"endColumn":38},{"ruleId":"3420","severity":1,"message":"3573","line":27,"column":12,"nodeType":"3336","endLine":27,"endColumn":36},{"ruleId":"3420","severity":1,"message":"3454","line":32,"column":12,"nodeType":"3336","endLine":32,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3610","line":5,"column":8,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3611","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":31},{"ruleId":"3282","severity":1,"message":"3612","line":7,"column":8,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":37},{"ruleId":"3420","severity":1,"message":"3565","line":15,"column":12,"nodeType":"3336","endLine":15,"endColumn":44},{"ruleId":"3420","severity":1,"message":"3566","line":20,"column":12,"nodeType":"3336","endLine":20,"endColumn":40},{"ruleId":"3420","severity":1,"message":"3482","line":25,"column":12,"nodeType":"3336","endLine":25,"endColumn":37},{"ruleId":"3420","severity":1,"message":"3483","line":30,"column":12,"nodeType":"3336","endLine":30,"endColumn":40},{"ruleId":"3420","severity":1,"message":"3576","line":40,"column":12,"nodeType":"3336","endLine":40,"endColumn":38},{"ruleId":"3282","severity":1,"message":"3673","line":9,"column":11,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":21},{"ruleId":"3282","severity":1,"message":"3674","line":10,"column":11,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":20},{"ruleId":"3420","severity":1,"message":"3480","line":20,"column":12,"nodeType":"3336","endLine":20,"endColumn":36},{"ruleId":"3420","severity":1,"message":"3479","line":25,"column":12,"nodeType":"3336","endLine":25,"endColumn":41},{"ruleId":"3420","severity":1,"message":"3609","line":32,"column":12,"nodeType":"3336","endLine":32,"endColumn":43},{"ruleId":"3420","severity":1,"message":"3543","line":54,"column":12,"nodeType":"3336","endLine":54,"endColumn":45},{"ruleId":"3420","severity":1,"message":"3548","line":61,"column":12,"nodeType":"3336","endLine":61,"endColumn":37},{"ruleId":"3282","severity":1,"message":"3393","line":15,"column":24,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":37},{"ruleId":"3282","severity":1,"message":"3394","line":16,"column":12,"nodeType":"3284","messageId":"3285","endLine":16,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3395","line":19,"column":11,"nodeType":"3284","messageId":"3285","endLine":19,"endColumn":27},{"ruleId":"3290","severity":1,"message":"3291","line":21,"column":40,"nodeType":"3292","messageId":"3293","endLine":21,"endColumn":42},{"ruleId":"3290","severity":1,"message":"3291","line":50,"column":26,"nodeType":"3292","messageId":"3293","endLine":50,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3409","line":5,"column":10,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":11},{"ruleId":"3290","severity":1,"message":"3291","line":22,"column":32,"nodeType":"3292","messageId":"3293","endLine":22,"endColumn":34},{"ruleId":"3420","severity":1,"message":"3548","line":13,"column":13,"nodeType":"3336","endLine":13,"endColumn":38},{"ruleId":"3282","severity":1,"message":"3478","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":24},{"ruleId":"3420","severity":1,"message":"3479","line":24,"column":17,"nodeType":"3336","endLine":24,"endColumn":46},{"ruleId":"3420","severity":1,"message":"3480","line":25,"column":17,"nodeType":"3336","endLine":25,"endColumn":41},{"ruleId":"3420","severity":1,"message":"3481","line":28,"column":13,"nodeType":"3336","endLine":28,"endColumn":89},{"ruleId":"3282","severity":1,"message":"3556","line":4,"column":8,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3409","line":5,"column":9,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":10},{"ruleId":"3420","severity":1,"message":"3557","line":19,"column":21,"nodeType":"3336","endLine":19,"endColumn":47},{"ruleId":"3290","severity":1,"message":"3291","line":33,"column":26,"nodeType":"3292","messageId":"3293","endLine":33,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3329","line":41,"column":9,"nodeType":"3284","messageId":"3285","endLine":41,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3330","line":71,"column":11,"nodeType":"3284","messageId":"3285","endLine":71,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3291","line":73,"column":29,"nodeType":"3292","messageId":"3293","endLine":73,"endColumn":31},{"ruleId":"3290","severity":1,"message":"3291","line":105,"column":24,"nodeType":"3292","messageId":"3293","endLine":105,"endColumn":26},{"ruleId":"3290","severity":1,"message":"3291","line":106,"column":35,"nodeType":"3292","messageId":"3293","endLine":106,"endColumn":37},{"ruleId":"3290","severity":1,"message":"3291","line":112,"column":53,"nodeType":"3292","messageId":"3293","endLine":112,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3291","line":122,"column":26,"nodeType":"3292","messageId":"3293","endLine":122,"endColumn":28},{"ruleId":"3290","severity":1,"message":"3291","line":140,"column":29,"nodeType":"3292","messageId":"3293","endLine":140,"endColumn":31},{"ruleId":"3282","severity":1,"message":"3331","line":150,"column":7,"nodeType":"3284","messageId":"3285","endLine":150,"endColumn":22},{"ruleId":"3290","severity":1,"message":"3291","line":152,"column":24,"nodeType":"3292","messageId":"3293","endLine":152,"endColumn":26},{"ruleId":"3290","severity":1,"message":"3291","line":160,"column":40,"nodeType":"3292","messageId":"3293","endLine":160,"endColumn":42},{"ruleId":"3296","severity":1,"message":"3320","line":163,"column":19,"nodeType":"3298","messageId":"3299","endLine":163,"endColumn":21},{"ruleId":"3282","severity":1,"message":"3332","line":178,"column":9,"nodeType":"3284","messageId":"3285","endLine":178,"endColumn":17},{"ruleId":"3290","severity":1,"message":"3291","line":192,"column":34,"nodeType":"3292","messageId":"3293","endLine":192,"endColumn":36},{"ruleId":"3290","severity":1,"message":"3291","line":196,"column":37,"nodeType":"3292","messageId":"3293","endLine":196,"endColumn":39},{"ruleId":"3296","severity":1,"message":"3297","line":213,"column":94,"nodeType":"3298","messageId":"3299","endLine":213,"endColumn":96},{"ruleId":"3296","severity":1,"message":"3320","line":215,"column":30,"nodeType":"3298","messageId":"3299","endLine":215,"endColumn":32},{"ruleId":"3282","severity":1,"message":"3333","line":267,"column":9,"nodeType":"3284","messageId":"3285","endLine":267,"endColumn":27},{"ruleId":"3290","severity":1,"message":"3291","line":269,"column":28,"nodeType":"3292","messageId":"3293","endLine":269,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3291","line":287,"column":27,"nodeType":"3292","messageId":"3293","endLine":287,"endColumn":29},{"ruleId":"3290","severity":1,"message":"3291","line":289,"column":37,"nodeType":"3292","messageId":"3293","endLine":289,"endColumn":39},{"ruleId":"3290","severity":1,"message":"3291","line":303,"column":25,"nodeType":"3292","messageId":"3293","endLine":303,"endColumn":27},{"ruleId":"3290","severity":1,"message":"3291","line":305,"column":35,"nodeType":"3292","messageId":"3293","endLine":305,"endColumn":37},{"ruleId":"3420","severity":1,"message":"3543","line":26,"column":11,"nodeType":"3336","endLine":26,"endColumn":44},{"ruleId":"3282","severity":1,"message":"3406","line":11,"column":12,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":14},{"ruleId":"3420","severity":1,"message":"3583","line":34,"column":17,"nodeType":"3336","endLine":34,"endColumn":49},{"ruleId":"3420","severity":1,"message":"3584","line":35,"column":17,"nodeType":"3336","endLine":35,"endColumn":50},{"ruleId":"3282","severity":1,"message":"3444","line":7,"column":8,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3406","line":8,"column":12,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3675","line":20,"column":12,"nodeType":"3284","messageId":"3285","endLine":20,"endColumn":25},{"ruleId":"3282","severity":1,"message":"3676","line":22,"column":11,"nodeType":"3284","messageId":"3285","endLine":22,"endColumn":18},{"ruleId":"3290","severity":1,"message":"3291","line":24,"column":52,"nodeType":"3292","messageId":"3293","endLine":24,"endColumn":54},{"ruleId":"3304","severity":1,"message":"3677","line":32,"column":7,"nodeType":"3306","endLine":32,"endColumn":11,"suggestions":"3678"},{"ruleId":"3420","severity":1,"message":"3454","line":9,"column":17,"nodeType":"3336","endLine":9,"endColumn":50},{"ruleId":"3420","severity":1,"message":"3575","line":11,"column":17,"nodeType":"3336","endLine":11,"endColumn":43},{"ruleId":"3420","severity":1,"message":"3572","line":17,"column":9,"nodeType":"3336","endLine":17,"endColumn":28},{"ruleId":"3420","severity":1,"message":"3573","line":21,"column":17,"nodeType":"3336","endLine":21,"endColumn":41},{"ruleId":"3420","severity":1,"message":"3574","line":22,"column":17,"nodeType":"3336","endLine":22,"endColumn":37},{"ruleId":"3420","severity":1,"message":"3455","line":23,"column":17,"nodeType":"3336","endLine":23,"endColumn":42},{"ruleId":"3282","severity":1,"message":"3425","line":4,"column":34,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":50},{"ruleId":"3282","severity":1,"message":"3488","line":7,"column":42,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":62},{"ruleId":"3282","severity":1,"message":"3489","line":10,"column":18,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":19},{"ruleId":"3304","severity":1,"message":"3490","line":26,"column":7,"nodeType":"3306","endLine":26,"endColumn":11,"suggestions":"3679"},{"ruleId":"3420","severity":1,"message":"3570","line":28,"column":21,"nodeType":"3336","endLine":28,"endColumn":54},{"ruleId":"3420","severity":1,"message":"3571","line":29,"column":21,"nodeType":"3336","endLine":29,"endColumn":48},{"ruleId":"3420","severity":1,"message":"3481","line":32,"column":17,"nodeType":"3336","endLine":32,"endColumn":87},{"ruleId":"3420","severity":1,"message":"3481","line":33,"column":17,"nodeType":"3336","endLine":33,"endColumn":134},{"ruleId":"3282","severity":1,"message":"3407","line":7,"column":9,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3409","line":7,"column":16,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3492","line":14,"column":28,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":46},{"ruleId":"3290","severity":1,"message":"3291","line":22,"column":80,"nodeType":"3292","messageId":"3293","endLine":22,"endColumn":82},{"ruleId":"3304","severity":1,"message":"3493","line":24,"column":7,"nodeType":"3306","endLine":24,"endColumn":9,"suggestions":"3680"},{"ruleId":"3282","severity":1,"message":"3488","line":4,"column":9,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3640","line":8,"column":8,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3638","line":10,"column":8,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":34},{"ruleId":"3420","severity":1,"message":"3641","line":20,"column":17,"nodeType":"3336","endLine":20,"endColumn":44},{"ruleId":"3282","severity":1,"message":"3614","line":15,"column":7,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3567","line":113,"column":7,"nodeType":"3284","messageId":"3285","endLine":113,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3568","line":134,"column":7,"nodeType":"3284","messageId":"3285","endLine":134,"endColumn":17},{"ruleId":"3420","severity":1,"message":"3569","line":15,"column":17,"nodeType":"3336","endLine":15,"endColumn":55},{"ruleId":"3282","severity":1,"message":"3405","line":8,"column":9,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3461","line":8,"column":12,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":14},{"ruleId":"3282","severity":1,"message":"3409","line":8,"column":18,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3374","line":14,"column":11,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":15},{"ruleId":"3296","severity":1,"message":"3297","line":20,"column":80,"nodeType":"3298","messageId":"3299","endLine":20,"endColumn":82},{"ruleId":"3420","severity":1,"message":"3558","line":20,"column":17,"nodeType":"3336","endLine":20,"endColumn":47},{"ruleId":"3420","severity":1,"message":"3559","line":21,"column":17,"nodeType":"3336","endLine":21,"endColumn":53},{"ruleId":"3420","severity":1,"message":"3481","line":24,"column":13,"nodeType":"3336","endLine":24,"endColumn":117},{"ruleId":"3282","severity":1,"message":"3638","line":10,"column":8,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":34},{"ruleId":"3420","severity":1,"message":"3639","line":20,"column":17,"nodeType":"3336","endLine":20,"endColumn":52},{"ruleId":"3420","severity":1,"message":"3481","line":23,"column":13,"nodeType":"3336","endLine":23,"endColumn":120},{"ruleId":"3282","severity":1,"message":"3620","line":15,"column":8,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3621","line":17,"column":7,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":16},{"ruleId":"3304","severity":1,"message":"3622","line":42,"column":7,"nodeType":"3306","endLine":42,"endColumn":9,"suggestions":"3681"},{"ruleId":"3282","severity":1,"message":"3682","line":87,"column":7,"nodeType":"3284","messageId":"3285","endLine":87,"endColumn":16},{"ruleId":"3304","severity":1,"message":"3683","line":91,"column":7,"nodeType":"3306","endLine":91,"endColumn":9,"suggestions":"3684"},{"ruleId":"3282","severity":1,"message":"3614","line":14,"column":7,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3625","line":13,"column":26,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":30},{"ruleId":"3282","severity":1,"message":"3626","line":13,"column":32,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":40},{"ruleId":"3282","severity":1,"message":"3326","line":13,"column":47,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":51},{"ruleId":"3282","severity":1,"message":"3627","line":23,"column":11,"nodeType":"3284","messageId":"3285","endLine":23,"endColumn":17},{"ruleId":"3290","severity":1,"message":"3291","line":27,"column":39,"nodeType":"3292","messageId":"3293","endLine":27,"endColumn":41},{"ruleId":"3290","severity":1,"message":"3291","line":30,"column":43,"nodeType":"3292","messageId":"3293","endLine":30,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3614","line":17,"column":7,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3614","line":12,"column":7,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":13},{"ruleId":"3420","severity":1,"message":"3495","line":15,"column":17,"nodeType":"3336","endLine":15,"endColumn":52},{"ruleId":"3282","severity":1,"message":"3625","line":13,"column":26,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":30},{"ruleId":"3282","severity":1,"message":"3626","line":13,"column":32,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":40},{"ruleId":"3282","severity":1,"message":"3326","line":13,"column":47,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":51},{"ruleId":"3290","severity":1,"message":"3291","line":30,"column":39,"nodeType":"3292","messageId":"3293","endLine":30,"endColumn":41},{"ruleId":"3290","severity":1,"message":"3291","line":31,"column":43,"nodeType":"3292","messageId":"3293","endLine":31,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3403","line":2,"column":9,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3635","line":4,"column":10,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":33},{"ruleId":"3282","severity":1,"message":"3636","line":7,"column":9,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3637","line":21,"column":11,"nodeType":"3284","messageId":"3285","endLine":21,"endColumn":23},{"ruleId":"3282","severity":1,"message":"3562","line":9,"column":9,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":31},{"ruleId":"3282","severity":1,"message":"3425","line":9,"column":55,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":71},{"ruleId":"3282","severity":1,"message":"3563","line":9,"column":96,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":111},{"ruleId":"3282","severity":1,"message":"3462","line":11,"column":19,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3463","line":11,"column":33,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":40},{"ruleId":"3282","severity":1,"message":"3534","line":11,"column":41,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3522","line":11,"column":47,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":53},{"ruleId":"3296","severity":1,"message":"3320","line":16,"column":16,"nodeType":"3298","messageId":"3299","endLine":16,"endColumn":18},{"ruleId":"3296","severity":1,"message":"3320","line":29,"column":19,"nodeType":"3298","messageId":"3299","endLine":29,"endColumn":21},{"ruleId":"3296","severity":1,"message":"3320","line":30,"column":23,"nodeType":"3298","messageId":"3299","endLine":30,"endColumn":25},{"ruleId":"3290","severity":1,"message":"3291","line":75,"column":62,"nodeType":"3292","messageId":"3293","endLine":75,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3291","line":85,"column":60,"nodeType":"3292","messageId":"3293","endLine":85,"endColumn":62},{"ruleId":"3290","severity":1,"message":"3341","line":87,"column":54,"nodeType":"3292","messageId":"3303","endLine":87,"endColumn":56},{"ruleId":"3290","severity":1,"message":"3341","line":156,"column":62,"nodeType":"3292","messageId":"3303","endLine":156,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":162,"column":55,"nodeType":"3302","messageId":"3293","endLine":162,"endColumn":63},{"ruleId":"3290","severity":1,"message":"3341","line":163,"column":57,"nodeType":"3292","messageId":"3303","endLine":163,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3341","line":232,"column":62,"nodeType":"3292","messageId":"3303","endLine":232,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":246,"column":51,"nodeType":"3302","messageId":"3293","endLine":246,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3341","line":249,"column":53,"nodeType":"3292","messageId":"3303","endLine":249,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3341","line":318,"column":62,"nodeType":"3292","messageId":"3303","endLine":318,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":336,"column":51,"nodeType":"3302","messageId":"3293","endLine":336,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3341","line":339,"column":53,"nodeType":"3292","messageId":"3303","endLine":339,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3341","line":428,"column":62,"nodeType":"3292","messageId":"3303","endLine":428,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":440,"column":56,"nodeType":"3302","messageId":"3293","endLine":440,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3341","line":442,"column":58,"nodeType":"3292","messageId":"3303","endLine":442,"endColumn":60},{"ruleId":"3290","severity":1,"message":"3321","line":494,"column":48,"nodeType":"3302","messageId":"3293","endLine":494,"endColumn":56},{"ruleId":"3290","severity":1,"message":"3291","line":500,"column":28,"nodeType":"3292","messageId":"3293","endLine":500,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3341","line":508,"column":62,"nodeType":"3292","messageId":"3303","endLine":508,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3341","line":552,"column":62,"nodeType":"3292","messageId":"3303","endLine":552,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3291","line":559,"column":38,"nodeType":"3292","messageId":"3293","endLine":559,"endColumn":40},{"ruleId":"3290","severity":1,"message":"3341","line":582,"column":61,"nodeType":"3292","messageId":"3303","endLine":582,"endColumn":63},{"ruleId":"3290","severity":1,"message":"3341","line":594,"column":42,"nodeType":"3292","messageId":"3303","endLine":594,"endColumn":44},{"ruleId":"3290","severity":1,"message":"3341","line":628,"column":62,"nodeType":"3292","messageId":"3303","endLine":628,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3341","line":640,"column":43,"nodeType":"3292","messageId":"3303","endLine":640,"endColumn":45},{"ruleId":"3290","severity":1,"message":"3341","line":678,"column":61,"nodeType":"3292","messageId":"3303","endLine":678,"endColumn":63},{"ruleId":"3290","severity":1,"message":"3321","line":691,"column":46,"nodeType":"3302","messageId":"3293","endLine":691,"endColumn":54},{"ruleId":"3290","severity":1,"message":"3341","line":692,"column":49,"nodeType":"3292","messageId":"3303","endLine":692,"endColumn":51},{"ruleId":"3282","severity":1,"message":"3373","line":732,"column":11,"nodeType":"3284","messageId":"3285","endLine":732,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3564","line":735,"column":11,"nodeType":"3284","messageId":"3285","endLine":735,"endColumn":24},{"ruleId":"3290","severity":1,"message":"3291","line":747,"column":62,"nodeType":"3292","messageId":"3293","endLine":747,"endColumn":64},{"ruleId":"3296","severity":1,"message":"3297","line":750,"column":54,"nodeType":"3298","messageId":"3299","endLine":750,"endColumn":56},{"ruleId":"3290","severity":1,"message":"3341","line":789,"column":62,"nodeType":"3292","messageId":"3303","endLine":789,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":800,"column":51,"nodeType":"3302","messageId":"3293","endLine":800,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3341","line":803,"column":53,"nodeType":"3292","messageId":"3303","endLine":803,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3341","line":883,"column":62,"nodeType":"3292","messageId":"3303","endLine":883,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":896,"column":51,"nodeType":"3302","messageId":"3293","endLine":896,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3341","line":899,"column":53,"nodeType":"3292","messageId":"3303","endLine":899,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3341","line":956,"column":62,"nodeType":"3292","messageId":"3303","endLine":956,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":968,"column":48,"nodeType":"3302","messageId":"3293","endLine":968,"endColumn":56},{"ruleId":"3290","severity":1,"message":"3341","line":971,"column":50,"nodeType":"3292","messageId":"3303","endLine":971,"endColumn":52},{"ruleId":"3290","severity":1,"message":"3341","line":1022,"column":62,"nodeType":"3292","messageId":"3303","endLine":1022,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3321","line":1030,"column":48,"nodeType":"3302","messageId":"3293","endLine":1030,"endColumn":56},{"ruleId":"3290","severity":1,"message":"3341","line":1033,"column":50,"nodeType":"3292","messageId":"3303","endLine":1033,"endColumn":52},{"ruleId":"3290","severity":1,"message":"3341","line":1088,"column":62,"nodeType":"3292","messageId":"3303","endLine":1088,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3291","line":1118,"column":57,"nodeType":"3292","messageId":"3293","endLine":1118,"endColumn":59},{"ruleId":"3296","severity":1,"message":"3320","line":1119,"column":63,"nodeType":"3298","messageId":"3299","endLine":1119,"endColumn":65},{"ruleId":"3282","severity":1,"message":"3373","line":1129,"column":11,"nodeType":"3284","messageId":"3285","endLine":1129,"endColumn":13},{"ruleId":"3290","severity":1,"message":"3291","line":1137,"column":48,"nodeType":"3292","messageId":"3293","endLine":1137,"endColumn":50},{"ruleId":"3290","severity":1,"message":"3321","line":1143,"column":51,"nodeType":"3302","messageId":"3293","endLine":1143,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3291","line":1144,"column":53,"nodeType":"3292","messageId":"3293","endLine":1144,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3291","line":1150,"column":45,"nodeType":"3292","messageId":"3293","endLine":1150,"endColumn":47},{"ruleId":"3282","severity":1,"message":"3534","line":15,"column":9,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":13},{"ruleId":"3296","severity":1,"message":"3297","line":41,"column":87,"nodeType":"3298","messageId":"3299","endLine":41,"endColumn":89},{"ruleId":"3290","severity":1,"message":"3291","line":53,"column":41,"nodeType":"3292","messageId":"3293","endLine":53,"endColumn":43},{"ruleId":"3304","severity":1,"message":"3546","line":61,"column":7,"nodeType":"3306","endLine":61,"endColumn":9,"suggestions":"3685"},{"ruleId":"3282","severity":1,"message":"3374","line":24,"column":11,"nodeType":"3284","messageId":"3285","endLine":24,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3374","line":24,"column":11,"nodeType":"3284","messageId":"3285","endLine":24,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3614","line":10,"column":9,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3614","line":14,"column":7,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3378","line":1,"column":27,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":35},{"ruleId":"3282","severity":1,"message":"3675","line":21,"column":12,"nodeType":"3284","messageId":"3285","endLine":21,"endColumn":25},{"ruleId":"3282","severity":1,"message":"3686","line":5,"column":9,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":30},{"ruleId":"3282","severity":1,"message":"3614","line":12,"column":7,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3687","line":14,"column":7,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3549","line":5,"column":8,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3550","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3551","line":7,"column":8,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":23},{"ruleId":"3282","severity":1,"message":"3309","line":9,"column":8,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3552","line":11,"column":8,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3553","line":12,"column":8,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3554","line":19,"column":8,"nodeType":"3284","messageId":"3285","endLine":19,"endColumn":23},{"ruleId":"3282","severity":1,"message":"3555","line":20,"column":8,"nodeType":"3284","messageId":"3285","endLine":20,"endColumn":18},{"ruleId":"3282","severity":1,"message":"3614","line":14,"column":7,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3488","line":4,"column":9,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3614","line":11,"column":7,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3326","line":13,"column":20,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":24},{"ruleId":"3282","severity":1,"message":"3688","line":11,"column":12,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":15},{"ruleId":"3290","severity":1,"message":"3291","line":16,"column":30,"nodeType":"3292","messageId":"3293","endLine":16,"endColumn":32},{"ruleId":"3290","severity":1,"message":"3291","line":24,"column":47,"nodeType":"3292","messageId":"3293","endLine":24,"endColumn":49},{"ruleId":"3290","severity":1,"message":"3291","line":27,"column":37,"nodeType":"3292","messageId":"3293","endLine":27,"endColumn":39},{"ruleId":"3296","severity":1,"message":"3320","line":28,"column":36,"nodeType":"3298","messageId":"3299","endLine":28,"endColumn":38},{"ruleId":"3290","severity":1,"message":"3291","line":38,"column":28,"nodeType":"3292","messageId":"3293","endLine":38,"endColumn":30},{"ruleId":"3304","severity":1,"message":"3689","line":42,"column":52,"nodeType":"3306","endLine":42,"endColumn":56,"suggestions":"3690"},{"ruleId":"3282","severity":1,"message":"3465","line":25,"column":11,"nodeType":"3284","messageId":"3285","endLine":25,"endColumn":16},{"ruleId":"3282","severity":1,"message":"3585","line":14,"column":10,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3586","line":14,"column":17,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":27},{"ruleId":"3282","severity":1,"message":"3587","line":14,"column":29,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":38},{"ruleId":"3282","severity":1,"message":"3588","line":14,"column":40,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":54},{"ruleId":"3282","severity":1,"message":"3589","line":14,"column":56,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":71},{"ruleId":"3282","severity":1,"message":"3578","line":14,"column":72,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":91},{"ruleId":"3282","severity":1,"message":"3580","line":14,"column":92,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":98},{"ruleId":"3282","severity":1,"message":"3581","line":14,"column":100,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":107},{"ruleId":"3282","severity":1,"message":"3590","line":14,"column":109,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":120},{"ruleId":"3282","severity":1,"message":"3591","line":14,"column":123,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":129},{"ruleId":"3282","severity":1,"message":"3592","line":14,"column":130,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":139},{"ruleId":"3282","severity":1,"message":"3582","line":15,"column":9,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3614","line":20,"column":7,"nodeType":"3284","messageId":"3285","endLine":20,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3687","line":27,"column":7,"nodeType":"3284","messageId":"3285","endLine":27,"endColumn":13},{"ruleId":"3420","severity":1,"message":"3481","line":94,"column":13,"nodeType":"3336","endLine":94,"endColumn":80},{"ruleId":"3282","severity":1,"message":"3578","line":17,"column":10,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3533","line":17,"column":30,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":38},{"ruleId":"3282","severity":1,"message":"3579","line":17,"column":40,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":43},{"ruleId":"3282","severity":1,"message":"3580","line":17,"column":44,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":50},{"ruleId":"3282","severity":1,"message":"3581","line":17,"column":52,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":59},{"ruleId":"3282","severity":1,"message":"3326","line":17,"column":60,"nodeType":"3284","messageId":"3285","endLine":17,"endColumn":64},{"ruleId":"3282","severity":1,"message":"3582","line":18,"column":9,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3614","line":23,"column":7,"nodeType":"3284","messageId":"3285","endLine":23,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3687","line":30,"column":7,"nodeType":"3284","messageId":"3285","endLine":30,"endColumn":13},{"ruleId":"3420","severity":1,"message":"3481","line":86,"column":13,"nodeType":"3336","endLine":86,"endColumn":81},{"ruleId":"3420","severity":1,"message":"3481","line":87,"column":13,"nodeType":"3336","endLine":87,"endColumn":88},{"ruleId":"3282","severity":1,"message":"3614","line":12,"column":7,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3614","line":12,"column":7,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3644","line":15,"column":12,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":27},{"ruleId":"3282","severity":1,"message":"3577","line":5,"column":5,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3556","line":10,"column":8,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3461","line":12,"column":9,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3407","line":12,"column":15,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3409","line":12,"column":19,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3578","line":18,"column":10,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3533","line":18,"column":30,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":38},{"ruleId":"3282","severity":1,"message":"3579","line":18,"column":40,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":43},{"ruleId":"3282","severity":1,"message":"3580","line":18,"column":44,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":50},{"ruleId":"3282","severity":1,"message":"3581","line":18,"column":52,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":59},{"ruleId":"3282","severity":1,"message":"3326","line":18,"column":60,"nodeType":"3284","messageId":"3285","endLine":18,"endColumn":64},{"ruleId":"3282","severity":1,"message":"3582","line":19,"column":9,"nodeType":"3284","messageId":"3285","endLine":19,"endColumn":19},{"ruleId":"3420","severity":1,"message":"3481","line":74,"column":17,"nodeType":"3336","endLine":74,"endColumn":83},{"ruleId":"3420","severity":1,"message":"3481","line":75,"column":17,"nodeType":"3336","endLine":75,"endColumn":89},{"ruleId":"3290","severity":1,"message":"3291","line":93,"column":36,"nodeType":"3292","messageId":"3293","endLine":93,"endColumn":38},{"ruleId":"3304","severity":1,"message":"3546","line":97,"column":37,"nodeType":"3306","endLine":97,"endColumn":39,"suggestions":"3691"},{"ruleId":"3282","severity":1,"message":"3614","line":15,"column":7,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3600","line":7,"column":27,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":32},{"ruleId":"3290","severity":1,"message":"3291","line":14,"column":29,"nodeType":"3292","messageId":"3293","endLine":14,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3593","line":31,"column":7,"nodeType":"3306","endLine":31,"endColumn":13,"suggestions":"3692"},{"ruleId":"3282","severity":1,"message":"3642","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":37},{"ruleId":"3282","severity":1,"message":"3625","line":13,"column":26,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":30},{"ruleId":"3282","severity":1,"message":"3626","line":13,"column":32,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":40},{"ruleId":"3282","severity":1,"message":"3643","line":13,"column":42,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3326","line":13,"column":47,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":51},{"ruleId":"3290","severity":1,"message":"3291","line":26,"column":39,"nodeType":"3292","messageId":"3293","endLine":26,"endColumn":41},{"ruleId":"3290","severity":1,"message":"3291","line":27,"column":43,"nodeType":"3292","messageId":"3293","endLine":27,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3614","line":14,"column":7,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":13},{"ruleId":"3290","severity":1,"message":"3291","line":11,"column":29,"nodeType":"3292","messageId":"3293","endLine":11,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3593","line":21,"column":40,"nodeType":"3306","endLine":21,"endColumn":46,"suggestions":"3693"},{"ruleId":"3282","severity":1,"message":"3377","line":1,"column":17,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3378","line":1,"column":28,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":36},{"ruleId":"3282","severity":1,"message":"3694","line":9,"column":11,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":18},{"ruleId":"3282","severity":1,"message":"3496","line":1,"column":28,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":34},{"ruleId":"3282","severity":1,"message":"3695","line":8,"column":8,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":23},{"ruleId":"3296","severity":1,"message":"3297","line":53,"column":46,"nodeType":"3298","messageId":"3299","endLine":53,"endColumn":48},{"ruleId":"3290","severity":1,"message":"3291","line":73,"column":55,"nodeType":"3292","messageId":"3293","endLine":73,"endColumn":57},{"ruleId":"3290","severity":1,"message":"3291","line":84,"column":62,"nodeType":"3292","messageId":"3293","endLine":84,"endColumn":64},{"ruleId":"3290","severity":1,"message":"3291","line":94,"column":42,"nodeType":"3292","messageId":"3293","endLine":94,"endColumn":44},{"ruleId":"3282","severity":1,"message":"3425","line":3,"column":34,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":50},{"ruleId":"3282","severity":1,"message":"3488","line":4,"column":42,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":62},{"ruleId":"3282","severity":1,"message":"3632","line":5,"column":10,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":19},{"ruleId":"3290","severity":1,"message":"3291","line":20,"column":29,"nodeType":"3292","messageId":"3293","endLine":20,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3593","line":49,"column":40,"nodeType":"3306","endLine":49,"endColumn":46,"suggestions":"3696"},{"ruleId":"3282","severity":1,"message":"3562","line":2,"column":9,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":31},{"ruleId":"3282","severity":1,"message":"3606","line":2,"column":33,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":53},{"ruleId":"3282","severity":1,"message":"3463","line":3,"column":33,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":40},{"ruleId":"3282","severity":1,"message":"3534","line":3,"column":41,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":45},{"ruleId":"3282","severity":1,"message":"3522","line":3,"column":47,"nodeType":"3284","messageId":"3285","endLine":3,"endColumn":53},{"ruleId":"3282","severity":1,"message":"3426","line":4,"column":9,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":23},{"ruleId":"3296","severity":1,"message":"3320","line":16,"column":16,"nodeType":"3298","messageId":"3299","endLine":16,"endColumn":18},{"ruleId":"3290","severity":1,"message":"3291","line":29,"column":28,"nodeType":"3292","messageId":"3293","endLine":29,"endColumn":30},{"ruleId":"3296","severity":1,"message":"3320","line":61,"column":19,"nodeType":"3298","messageId":"3299","endLine":61,"endColumn":21},{"ruleId":"3296","severity":1,"message":"3320","line":62,"column":23,"nodeType":"3298","messageId":"3299","endLine":62,"endColumn":25},{"ruleId":"3282","severity":1,"message":"3465","line":96,"column":11,"nodeType":"3284","messageId":"3285","endLine":96,"endColumn":16},{"ruleId":"3290","severity":1,"message":"3291","line":101,"column":41,"nodeType":"3292","messageId":"3293","endLine":101,"endColumn":43},{"ruleId":"3290","severity":1,"message":"3291","line":104,"column":56,"nodeType":"3292","messageId":"3293","endLine":104,"endColumn":58},{"ruleId":"3290","severity":1,"message":"3291","line":114,"column":64,"nodeType":"3292","messageId":"3293","endLine":114,"endColumn":66},{"ruleId":"3290","severity":1,"message":"3341","line":115,"column":58,"nodeType":"3292","messageId":"3303","endLine":115,"endColumn":60},{"ruleId":"3290","severity":1,"message":"3291","line":197,"column":41,"nodeType":"3292","messageId":"3293","endLine":197,"endColumn":43},{"ruleId":"3290","severity":1,"message":"3341","line":199,"column":52,"nodeType":"3292","messageId":"3303","endLine":199,"endColumn":54},{"ruleId":"3290","severity":1,"message":"3321","line":212,"column":55,"nodeType":"3302","messageId":"3293","endLine":212,"endColumn":63},{"ruleId":"3290","severity":1,"message":"3341","line":215,"column":57,"nodeType":"3292","messageId":"3303","endLine":215,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3291","line":288,"column":31,"nodeType":"3292","messageId":"3293","endLine":288,"endColumn":33},{"ruleId":"3290","severity":1,"message":"3321","line":290,"column":51,"nodeType":"3302","messageId":"3293","endLine":290,"endColumn":59},{"ruleId":"3290","severity":1,"message":"3291","line":291,"column":53,"nodeType":"3292","messageId":"3293","endLine":291,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3291","line":297,"column":35,"nodeType":"3292","messageId":"3293","endLine":297,"endColumn":37},{"ruleId":"3296","severity":1,"message":"3320","line":298,"column":31,"nodeType":"3298","messageId":"3299","endLine":298,"endColumn":33},{"ruleId":"3290","severity":1,"message":"3291","line":20,"column":29,"nodeType":"3292","messageId":"3293","endLine":20,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3617","line":38,"column":8,"nodeType":"3306","endLine":38,"endColumn":21,"suggestions":"3697"},{"ruleId":"3282","severity":1,"message":"3619","line":40,"column":12,"nodeType":"3284","messageId":"3285","endLine":40,"endColumn":15},{"ruleId":"3290","severity":1,"message":"3291","line":94,"column":45,"nodeType":"3292","messageId":"3293","endLine":94,"endColumn":47},{"ruleId":"3290","severity":1,"message":"3291","line":95,"column":31,"nodeType":"3292","messageId":"3293","endLine":95,"endColumn":33},{"ruleId":"3282","severity":1,"message":"3600","line":7,"column":27,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":32},{"ruleId":"3282","severity":1,"message":"3602","line":9,"column":12,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":27},{"ruleId":"3290","severity":1,"message":"3291","line":14,"column":29,"nodeType":"3292","messageId":"3293","endLine":14,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3593","line":33,"column":7,"nodeType":"3306","endLine":33,"endColumn":13,"suggestions":"3698"},{"ruleId":"3282","severity":1,"message":"3377","line":2,"column":17,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3398","line":12,"column":3,"nodeType":"3284","messageId":"3285","endLine":12,"endColumn":21},{"ruleId":"3282","severity":1,"message":"3399","line":41,"column":7,"nodeType":"3284","messageId":"3285","endLine":41,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3371","line":75,"column":11,"nodeType":"3284","messageId":"3285","endLine":75,"endColumn":18},{"ruleId":"3282","severity":1,"message":"3645","line":2,"column":10,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":23},{"ruleId":"3282","severity":1,"message":"3582","line":5,"column":9,"nodeType":"3284","messageId":"3285","endLine":5,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3646","line":9,"column":17,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3647","line":9,"column":20,"nodeType":"3284","messageId":"3285","endLine":9,"endColumn":25},{"ruleId":"3282","severity":1,"message":"3648","line":10,"column":12,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3649","line":10,"column":22,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":33},{"ruleId":"3282","severity":1,"message":"3582","line":4,"column":9,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":19},{"ruleId":"3290","severity":1,"message":"3291","line":15,"column":29,"nodeType":"3292","messageId":"3293","endLine":15,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3593","line":29,"column":28,"nodeType":"3306","endLine":29,"endColumn":34,"suggestions":"3699"},{"ruleId":"3282","severity":1,"message":"3613","line":6,"column":8,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":19},{"ruleId":"3282","severity":1,"message":"3614","line":13,"column":7,"nodeType":"3284","messageId":"3285","endLine":13,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3614","line":10,"column":7,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3614","line":10,"column":7,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3377","line":1,"column":17,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3534","line":10,"column":9,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3503","line":8,"column":7,"nodeType":"3284","messageId":"3285","endLine":8,"endColumn":14},{"ruleId":"3290","severity":1,"message":"3341","line":56,"column":71,"nodeType":"3292","messageId":"3303","endLine":56,"endColumn":73},{"ruleId":"3296","severity":1,"message":"3320","line":66,"column":33,"nodeType":"3298","messageId":"3299","endLine":66,"endColumn":35},{"ruleId":"3290","severity":1,"message":"3291","line":67,"column":17,"nodeType":"3499","messageId":"3500","endLine":67,"endColumn":23},{"ruleId":"3296","severity":1,"message":"3320","line":71,"column":41,"nodeType":"3298","messageId":"3299","endLine":71,"endColumn":43},{"ruleId":"3290","severity":1,"message":"3291","line":72,"column":17,"nodeType":"3499","messageId":"3500","endLine":72,"endColumn":23},{"ruleId":"3290","severity":1,"message":"3291","line":77,"column":18,"nodeType":"3499","messageId":"3500","endLine":77,"endColumn":24},{"ruleId":"3290","severity":1,"message":"3291","line":95,"column":50,"nodeType":"3292","messageId":"3293","endLine":95,"endColumn":52},{"ruleId":"3304","severity":1,"message":"3504","line":114,"column":41,"nodeType":"3306","endLine":114,"endColumn":61,"suggestions":"3700"},{"ruleId":"3304","severity":1,"message":"3504","line":116,"column":41,"nodeType":"3306","endLine":116,"endColumn":45,"suggestions":"3701"},{"ruleId":"3282","severity":1,"message":"3382","line":11,"column":9,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3383","line":14,"column":7,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3354","line":23,"column":11,"nodeType":"3284","messageId":"3285","endLine":23,"endColumn":17},{"ruleId":"3282","severity":1,"message":"3373","line":24,"column":11,"nodeType":"3284","messageId":"3285","endLine":24,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3384","line":34,"column":13,"nodeType":"3284","messageId":"3285","endLine":34,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3385","line":39,"column":13,"nodeType":"3284","messageId":"3285","endLine":39,"endColumn":23},{"ruleId":"3290","severity":1,"message":"3291","line":43,"column":28,"nodeType":"3292","messageId":"3293","endLine":43,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3291","line":60,"column":37,"nodeType":"3292","messageId":"3293","endLine":60,"endColumn":39},{"ruleId":"3304","severity":1,"message":"3386","line":90,"column":80,"nodeType":"3306","endLine":90,"endColumn":100,"suggestions":"3702"},{"ruleId":"3282","severity":1,"message":"3383","line":15,"column":7,"nodeType":"3284","messageId":"3285","endLine":15,"endColumn":15},{"ruleId":"3282","severity":1,"message":"3497","line":57,"column":12,"nodeType":"3284","messageId":"3285","endLine":57,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3498","line":57,"column":27,"nodeType":"3284","messageId":"3285","endLine":57,"endColumn":44},{"ruleId":"3282","severity":1,"message":"3384","line":79,"column":13,"nodeType":"3284","messageId":"3285","endLine":79,"endColumn":20},{"ruleId":"3282","severity":1,"message":"3385","line":84,"column":13,"nodeType":"3284","messageId":"3285","endLine":84,"endColumn":23},{"ruleId":"3290","severity":1,"message":"3291","line":88,"column":28,"nodeType":"3292","messageId":"3293","endLine":88,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3341","line":123,"column":36,"nodeType":"3292","messageId":"3303","endLine":123,"endColumn":38},{"ruleId":"3296","severity":1,"message":"3320","line":132,"column":33,"nodeType":"3298","messageId":"3299","endLine":132,"endColumn":35},{"ruleId":"3290","severity":1,"message":"3291","line":133,"column":17,"nodeType":"3499","messageId":"3500","endLine":133,"endColumn":23},{"ruleId":"3296","severity":1,"message":"3320","line":136,"column":41,"nodeType":"3298","messageId":"3299","endLine":136,"endColumn":43},{"ruleId":"3290","severity":1,"message":"3291","line":137,"column":15,"nodeType":"3499","messageId":"3500","endLine":137,"endColumn":21},{"ruleId":"3290","severity":1,"message":"3291","line":142,"column":15,"nodeType":"3499","messageId":"3500","endLine":142,"endColumn":21},{"ruleId":"3290","severity":1,"message":"3291","line":178,"column":51,"nodeType":"3292","messageId":"3293","endLine":178,"endColumn":53},{"ruleId":"3296","severity":1,"message":"3320","line":222,"column":70,"nodeType":"3298","messageId":"3299","endLine":222,"endColumn":72},{"ruleId":"3304","severity":1,"message":"3386","line":224,"column":9,"nodeType":"3306","endLine":224,"endColumn":29,"suggestions":"3703"},{"ruleId":"3282","severity":1,"message":"3614","line":10,"column":7,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":13},{"ruleId":"3282","severity":1,"message":"3406","line":6,"column":13,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":15},{"ruleId":"3290","severity":1,"message":"3291","line":21,"column":53,"nodeType":"3292","messageId":"3293","endLine":21,"endColumn":55},{"ruleId":"3290","severity":1,"message":"3291","line":22,"column":30,"nodeType":"3292","messageId":"3293","endLine":22,"endColumn":32},{"ruleId":"3304","severity":1,"message":"3615","line":29,"column":36,"nodeType":"3306","endLine":29,"endColumn":40,"suggestions":"3704"},{"ruleId":"3290","severity":1,"message":"3291","line":90,"column":45,"nodeType":"3292","messageId":"3293","endLine":90,"endColumn":47},{"ruleId":"3290","severity":1,"message":"3291","line":91,"column":31,"nodeType":"3292","messageId":"3293","endLine":91,"endColumn":33},{"ruleId":"3282","severity":1,"message":"3544","line":4,"column":10,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3545","line":4,"column":30,"nodeType":"3284","messageId":"3285","endLine":4,"endColumn":47},{"ruleId":"3282","severity":1,"message":"3374","line":24,"column":11,"nodeType":"3284","messageId":"3285","endLine":24,"endColumn":15},{"ruleId":"3296","severity":1,"message":"3320","line":31,"column":75,"nodeType":"3298","messageId":"3299","endLine":31,"endColumn":77},{"ruleId":"3296","severity":1,"message":"3320","line":43,"column":73,"nodeType":"3298","messageId":"3299","endLine":43,"endColumn":75},{"ruleId":"3304","severity":1,"message":"3524","line":53,"column":7,"nodeType":"3306","endLine":53,"endColumn":36,"suggestions":"3705"},{"ruleId":"3304","severity":1,"message":"3526","line":65,"column":7,"nodeType":"3306","endLine":65,"endColumn":15,"suggestions":"3706"},{"ruleId":"3420","severity":1,"message":"3528","line":73,"column":17,"nodeType":"3336","endLine":73,"endColumn":62},{"ruleId":"3282","severity":1,"message":"3403","line":2,"column":9,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":29},{"ruleId":"3282","severity":1,"message":"3461","line":7,"column":9,"nodeType":"3284","messageId":"3285","endLine":7,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3511","line":11,"column":12,"nodeType":"3284","messageId":"3285","endLine":11,"endColumn":19},{"ruleId":"3304","severity":1,"message":"3388","line":27,"column":7,"nodeType":"3306","endLine":27,"endColumn":13,"suggestions":"3707"},{"ruleId":"3420","severity":1,"message":"3482","line":20,"column":17,"nodeType":"3336","endLine":20,"endColumn":42},{"ruleId":"3420","severity":1,"message":"3483","line":21,"column":16,"nodeType":"3336","endLine":21,"endColumn":44},{"ruleId":"3420","severity":1,"message":"3481","line":24,"column":13,"nodeType":"3336","endLine":24,"endColumn":91},{"ruleId":"3420","severity":1,"message":"3481","line":25,"column":13,"nodeType":"3336","endLine":25,"endColumn":89},{"ruleId":"3420","severity":1,"message":"3565","line":26,"column":17,"nodeType":"3336","endLine":26,"endColumn":49},{"ruleId":"3420","severity":1,"message":"3566","line":27,"column":17,"nodeType":"3336","endLine":27,"endColumn":45},{"ruleId":"3420","severity":1,"message":"3481","line":30,"column":13,"nodeType":"3336","endLine":30,"endColumn":108},{"ruleId":"3420","severity":1,"message":"3576","line":11,"column":17,"nodeType":"3336","endLine":11,"endColumn":43},{"ruleId":"3282","severity":1,"message":"3513","line":2,"column":8,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":21},{"ruleId":"3290","severity":1,"message":"3291","line":15,"column":24,"nodeType":"3292","messageId":"3293","endLine":15,"endColumn":26},{"ruleId":"3514","severity":1,"message":"3515","line":56,"column":13,"nodeType":"3336","endLine":56,"endColumn":17},{"ruleId":"3290","severity":1,"message":"3291","line":88,"column":32,"nodeType":"3292","messageId":"3293","endLine":88,"endColumn":34},{"ruleId":"3304","severity":1,"message":"3516","line":90,"column":7,"nodeType":"3306","endLine":90,"endColumn":9,"suggestions":"3708"},{"ruleId":"3282","severity":1,"message":"3518","line":2,"column":21,"nodeType":"3284","messageId":"3285","endLine":2,"endColumn":27},{"ruleId":"3282","severity":1,"message":"3503","line":14,"column":9,"nodeType":"3284","messageId":"3285","endLine":14,"endColumn":16},{"ruleId":"3290","severity":1,"message":"3291","line":31,"column":37,"nodeType":"3292","messageId":"3293","endLine":31,"endColumn":39},{"ruleId":"3290","severity":1,"message":"3291","line":79,"column":43,"nodeType":"3292","messageId":"3293","endLine":79,"endColumn":45},{"ruleId":"3304","severity":1,"message":"3519","line":92,"column":9,"nodeType":"3306","endLine":92,"endColumn":11,"suggestions":"3709"},{"ruleId":"3282","severity":1,"message":"3405","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3407","line":6,"column":20,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3409","line":6,"column":24,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":25},{"ruleId":"3282","severity":1,"message":"3489","line":6,"column":27,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3710","line":10,"column":7,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3405","line":6,"column":9,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3407","line":6,"column":20,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":22},{"ruleId":"3282","severity":1,"message":"3409","line":6,"column":24,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":25},{"ruleId":"3282","severity":1,"message":"3489","line":6,"column":27,"nodeType":"3284","messageId":"3285","endLine":6,"endColumn":28},{"ruleId":"3282","severity":1,"message":"3710","line":10,"column":7,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":11},{"ruleId":"3282","severity":1,"message":"3377","line":1,"column":17,"nodeType":"3284","messageId":"3285","endLine":1,"endColumn":26},{"ruleId":"3282","severity":1,"message":"3534","line":10,"column":9,"nodeType":"3284","messageId":"3285","endLine":10,"endColumn":13},{"ruleId":"3290","severity":1,"message":"3291","line":30,"column":28,"nodeType":"3292","messageId":"3293","endLine":30,"endColumn":30},{"ruleId":"3290","severity":1,"message":"3341","line":37,"column":71,"nodeType":"3292","messageId":"3303","endLine":37,"endColumn":73},{"ruleId":"3296","severity":1,"message":"3320","line":44,"column":41,"nodeType":"3298","messageId":"3299","endLine":44,"endColumn":43},{"ruleId":"3290","severity":1,"message":"3291","line":45,"column":25,"nodeType":"3499","messageId":"3500","endLine":45,"endColumn":31},{"ruleId":"3296","severity":1,"message":"3320","line":49,"column":49,"nodeType":"3298","messageId":"3299","endLine":49,"endColumn":51},{"ruleId":"3290","severity":1,"message":"3291","line":50,"column":25,"nodeType":"3499","messageId":"3500","endLine":50,"endColumn":31},{"ruleId":"3290","severity":1,"message":"3291","line":55,"column":25,"nodeType":"3499","messageId":"3500","endLine":55,"endColumn":31},{"ruleId":"3304","severity":1,"message":"3711","line":65,"column":7,"nodeType":"3306","endLine":65,"endColumn":11,"suggestions":"3712"},"no-unused-vars","'JWTCHECK' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["3713"],"no-negated-in-lhs",["3714"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Link' is defined but never used.","'ListItemText' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'WorkOrderCount' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'UX'. Either exclude it or remove the dependency array.","ArrayExpression",["3715"],"'LiveHelpIcon' is defined but never used.","'ErrorOutlineIcon' is defined but never used.","'TouchAppIcon' is defined but never used.","'MapParameters' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '!==' and instead saw '!='.","Array.prototype.map() expects a return value from function.","React Hook useMemo has an unnecessary dependency: 'SCAN'. Either exclude it or remove the dependency array.",["3716"],["3713"],["3714"],"'Cell' is defined but never used.",["3713"],["3714"],"'Inside' is assigned a value but never used.","'ChartGroupArrayData' is assigned a value but never used.","'Removeinteriors' is assigned a value but never used.","'JobTypes' is assigned a value but never used.","'checkResourceCount' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","Array.prototype.map() expects a value to be returned at the end of arrow function.","'GraphQLFetch' is assigned a value but never used.","'GetSites' is assigned a value but never used.","'GetTradeAllocations' is assigned a value but never used.","'LogoMain' is defined but never used.","'AlogoWhite' is defined but never used.","React Hook useEffect has a missing dependency: 'Pushhistory'. Either include it or remove the dependency array.",["3717"],["3718"],"React Hook useEffect has a missing dependency: 'checkDataStatus'. Either include it or remove the dependency array.",["3719"],"React Hook useEffect has a missing dependency: 'Fetch'. Either include it or remove the dependency array.",["3720"],"'STRAPI' is assigned a value but never used.","'DataStatus' is assigned a value but never used.","'setDataStatus' is assigned a value but never used.",["3721"],"'ComponentAbout' is defined but never used.","'ComponentLanding' is defined but never used.","'ComponentContact' is defined but never used.","'ComponentUnAuth' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'AUTH'. Either exclude it or remove the dependency array.",["3722"],"'AlogoBlue' is defined but never used.","'Divider' is defined but never used.","'Drawer' is defined but never used.","'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'PublicNavigation' is defined but never used.","'classes' is assigned a value but never used.","'Auth' is defined but never used.","'UX' is assigned a value but never used.","'SCAN' is assigned a value but never used.","'withRouter' is defined but never used.",["3723"],"'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'Scan'. Either include it or remove the dependency array.",["3724"],"'RenderScamSites' is assigned a value but never used.","'uniqBy' is defined but never used.","'divStyle' is assigned a value but never used.","'ColorMe' is assigned a value but never used.","'FindMinMax' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateMarkers'. Either include it or remove the dependency array.",["3725"],"React Hook useEffect has a missing dependency: 'extractResults'. Either include it or remove the dependency array.",["3726"],["3727"],"React Hook useEffect has a missing dependency: 'CreateCenterpoints'. Either include it or remove the dependency array.",["3728"],"'setMultiplier' is assigned a value but never used.","'ClusterTotal' is assigned a value but never used.","'FindClusterTotal' is assigned a value but never used.","'scanID' is assigned a value but never used.","'HandleCompare' is assigned a value but never used.","'KeyboardTimePicker' is defined but never used.","'Processing' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AUTH.ScanHistory'. Either include it or remove the dependency array.",["3729"],"'useContext_STRAPI_FULL' is defined but never used.","'useContext_SCAN_FULL' is defined but never used.","'FetchPreviousScans' is defined but never used.","'H1' is defined but never used.","'H3' is defined but never used.","'H4' is defined but never used.","'results' is assigned a value but never used.","'P' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'COMPARE'. Either exclude it or remove the dependency array.",["3730"],"'BorderColorIcon' is defined but never used.","'setLimit' is assigned a value but never used.","'setModelsSelected' is assigned a value but never used.","'setWarning' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreateSelects'. Either include it or remove the dependency array.",["3731"],"'Clusters_Main' is defined but never used.","'NivoNetwork' is defined but never used.","react/jsx-pascal-case","Imported JSX component Locations_Main must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Resources_Main must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component WorkOrders_Main must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Clients_Main must be in PascalCase or SCREAMING_SNAKE_CASE","'numberWithCommas' is defined but never used.","'findClientName' is defined but never used.","'HeaderTitles' is defined but never used.","'match' is assigned a value but never used.",["3732"],"Imported JSX component SubSection_Locations must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_Trade must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_Client must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_Workorders must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_FullMap must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_Clusters must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component SubSection_CostAnalysis must be in PascalCase or SCREAMING_SNAKE_CASE","'makeStyles' is defined but never used.","'ULList' is assigned a value but never used.","Imported JSX component Locations_Basic_Stats must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Locations_Basic_Charts must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Location_ResourceSpread must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Location_WorkorderSpread must be in PascalCase or SCREAMING_SNAKE_CASE","'HandleTZDate' is defined but never used.","'GlobalFilter' is defined but never used.","'startDate' is assigned a value but never used.","'endDate' is assigned a value but never used.","'WorkingDays' is assigned a value but never used.","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'MoreIcon' is defined but never used.","'FilterChips' is defined but never used.","Imported JSX component Resources_Pie_ResourceAllocation must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Resources_Pie_ClientsBreakdown must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_line_ResourcesOvertime must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_Pie_WorkOrders must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_line_WorkordersOvertime must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component WorkOrder_Heatmap must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Cost_Resource_PieCharts must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Cost_Resource_OverTime must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Map_Full_Main must be in PascalCase or SCREAMING_SNAKE_CASE","'H2' is defined but never used.","'sumBy' is defined but never used.","'groupBy' is defined but never used.","'chain' is defined but never used.","'MODEL' is assigned a value but never used.","Imported JSX component Clusters_ResultsList must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Clusters_List must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component WorkOrders_Basics must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component WorkOrder_Radial_Charts must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component WorkOrder_Basic_Charts must be in PascalCase or SCREAMING_SNAKE_CASE","'Trade_Ratios' is defined but never used.","Imported JSX component Trade_ResourceAllocation must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Trade_Radial_Charts must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Trade_Radial_Clients must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component TradeSpecific_Overview must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component TradeSpecific_ClientBreakdown must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Trade_ResourceAllocationOverTime must be in PascalCase or SCREAMING_SNAKE_CASE","'OBJ_SITE_GLOBAL' is defined but never used.","Imported JSX component Locaction_Radial_Clusters must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Chart_Pie_OutofScope must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Stats_Bar must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Workorder_pie_Clients must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Workorder_Radial_Cluster must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'ByClient'. Either include it or remove the dependency array.",["3733"],["3713"],["3714"],"'OBJ_RESOURCES_GLOBAL' is defined but never used.","'S' is defined but never used.","React Hook useEffect has missing dependencies: 'SCAN.SelectedModelMeta.DateEnd' and 'SCAN.SelectedModelMeta.DateStart'. Either include them or remove the dependency array.",["3734"],"'setTradeAllocation' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Model.STOREMARKERCENTERPOINTS'. Either include it or remove the dependency array.",["3735"],"Imported JSX component Map_SingleModelReview_FULLModel must be in PascalCase or SCREAMING_SNAKE_CASE","'useRef' is defined but never used.","'DisplayMarkers' is assigned a value but never used.","'setDisplayMarkers' is assigned a value but never used.","ReturnStatement","expectedReturnValue",["3736"],["3737"],"'options' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CreatePolygons'. Either include it or remove the dependency array.",["3738"],["3739"],["3740"],["3713"],["3714"],["3741"],"'Results' is assigned a value but never used.",["3742"],"'NumberReducer' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'Trades'. Either include it or remove the dependency array.",["3743"],"'Circle' is defined but never used.","React Hook useEffect has missing dependencies: 'CreateMarkers' and 'CreatePolygon'. Either include them or remove the dependency array.",["3744"],"'orderBy' is defined but never used.","'remove' is defined but never used.","'ReviewSelectionBtn' is defined but never used.","React Hook useEffect has missing dependencies: 'STRAPI.UserData.Customers' and 'USERSCAN.UserScanSingleDataSets'. Either include them or remove the dependency array.",["3745"],"React Hook useEffect has a missing dependency: 'STRAPI.UserData.Customers'. Either include it or remove the dependency array.",["3746"],"Imported JSX component Select_FilterClients must be in PascalCase or SCREAMING_SNAKE_CASE","'Fetching' is assigned a value but never used.","'setFetching' is assigned a value but never used.",["3713"],["3714"],"'PieChart' is defined but never used.","'find' is defined but never used.","'ClientPush' is assigned a value but never used.","'inScope' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'MODEL'. Either include it or remove the dependency array.",["3747"],["3748"],["3713"],["3714"],"'term' is assigned a value but never used.","Imported JSX component ClusterBar_ResourceAllocation must be in PascalCase or SCREAMING_SNAKE_CASE","'setMainMapLocation' is defined but never used.","'SetMapClusterType' is defined but never used.","React Hook useEffect has a missing dependency: 'CreateOptions'. Either include it or remove the dependency array.",["3749"],"Imported JSX component ClusterBar_WorkOrders must be in PascalCase or SCREAMING_SNAKE_CASE","'PieChartIcon' is defined but never used.","'AssessmentIcon' is defined but never used.","'BubbleChartIcon' is defined but never used.","'MapIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'AccountTreeIcon' is defined but never used.","'LayersIcon' is defined but never used.","'Section' is defined but never used.","Imported JSX component Filter_ByCapitalCities must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Resources_Radial_Resources must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Resources_Bar_ResourceAllocation must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useMemo has an unnecessary dependency: 'SINGLE'. Either exclude it or remove the dependency array.",["3750"],"'GroupArrayByOccurances' is defined but never used.","'TradecolorArray' is defined but never used.","'FetchedModels' is assigned a value but never used.","Imported JSX component Workorders_Radial_Workorders must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Workorder_pie_outofscope must be in PascalCase or SCREAMING_SNAKE_CASE","'Min2Pie' is assigned a value but never used.","'Gtr2Radial' is assigned a value but never used.","Imported JSX component Resources_Line_Allocation_OverTime must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Resources_Pie_ClientBreakdown must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Resource_Cluster_Funnel must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_Sunburst must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_Pie_Resources must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_Pie_Sites must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_Line_Workorders must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Workorder_Bar_Overtime must be in PascalCase or SCREAMING_SNAKE_CASE","'OBJ_CLIENT_GLOBAL_Filter' is defined but never used.","'ResponsiveContainer' is defined but never used.","'Pie' is defined but never used.","'Legend' is defined but never used.","'Tooltip' is defined but never used.","'colorArray' is defined but never used.","Imported JSX component Client_WorkOrderDistribution must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Client_Selected_ClusterSpread must be in PascalCase or SCREAMING_SNAKE_CASE","'Radar' is defined but never used.","'RadarChart' is defined but never used.","'PolarGrid' is defined but never used.","'PolarAngleAxis' is defined but never used.","'PolarRadiusAxis' is defined but never used.","'FunnelChart' is defined but never used.","'Funnel' is defined but never used.","'LabelList' is defined but never used.","React Hook useEffect has a missing dependency: 'CreateNivoData'. Either include it or remove the dependency array.",["3751"],"'NivoRadialKeys' is assigned a value but never used.",["3752"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Label' is assigned a value but never used.",["3753"],"'NivoWaffleTotal' is assigned a value but never used.",["3754"],["3755"],["3756"],"'HandleResourceFilter' is defined but never used.","React Hook useEffect has a missing dependency: 'OOSTotals'. Either include it or remove the dependency array.",["3757"],"Imported JSX component Clusters_Pie_ClusterNumbers must be in PascalCase or SCREAMING_SNAKE_CASE","'ClusterComparisonPie' is defined but never used.","'ClusterComparisonRadial' is defined but never used.","'ClusterResourcesComparisonBar' is defined but never used.","'ChartHeader' is defined but never used.","'Chart1' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'SetNumbers'. Either include it or remove the dependency array.",["3758"],"React Hook useEffect has a missing dependency: 'Calculate'. Either include it or remove the dependency array.",["3759"],"'RAW' is assigned a value but never used.","'ModelSelect' is defined but never used.","'useStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'MODEL.CompareData.UserSelected' and 'SCAN.SelectedModel'. Either include them or remove the dependency array.",["3760"],["3761"],"'Area' is defined but never used.","'BarChart' is defined but never used.","'Ignore' is assigned a value but never used.","React Hook useMemo has an unnecessary dependency: 'COMMS'. Either exclude it or remove the dependency array.",["3762"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'findIndex' is defined but never used.","Imported JSX component Cost_Resources must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Cost_Trade_Heatmap must be in PascalCase or SCREAMING_SNAKE_CASE","'workingDaysBetweenDates' is defined but never used.","'WorkorderTotals' is defined but never used.","'RecourseCost' is assigned a value but never used.","'Resources_Radial_Resources' is defined but never used.","Imported JSX component Cost_Pie_ResourceAllocationCost must be in PascalCase or SCREAMING_SNAKE_CASE","'Stats_Bar' is defined but never used.","Imported JSX component Cost_Resources_OverTime must be in PascalCase or SCREAMING_SNAKE_CASE","'CreateOBJ_Client_WO_Overtime' is defined but never used.","'Bar' is defined but never used.","'ClientBreakDown' is assigned a value but never used.","'ResponsivePie' is defined but never used.","'id' is assigned a value but never used.","'value' is assigned a value but never used.","'NivoData' is assigned a value but never used.","'setNivoData' is assigned a value but never used.",["3713"],["3714"],["3763"],["3764"],["3765"],["3766"],["3767"],["3768"],["3769"],["3770"],["3771"],["3772"],["3773"],["3774"],["3775"],["3776"],["3777"],["3778"],["3779"],["3780"],["3781"],["3782"],["3783"],"'CHARTSETUP' is assigned a value but never used.","'CHARTMETA' is assigned a value but never used.","'SiteBreakdown' is assigned a value but never used.","'SiteNum' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'MODEL.SITESINPARCITALSCOPE', 'MODEL.SITESINSCOPE', and 'MODEL.SITESOUTOFSCOPE'. Either include them or remove the dependency array.",["3784"],["3785"],["3786"],["3787"],"'ViewSites' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'SITES'. Either include it or remove the dependency array.",["3788"],["3789"],"'useContext_COMMS_FULL' is defined but never used.","'Chart2' is assigned a value but never used.","'OOS' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'LocationTotals' and 'OOSTotals'. Either include them or remove the dependency array.",["3790"],["3791"],["3792"],["3793"],"'Opacity' is assigned a value but never used.","'ResidualMarkers' is defined but never used.",["3794"],["3795"],["3796"],["3797"],["3798"],["3799"],["3800"],["3801"],["3802"],["3803"],["3804"],["3805"],["3806"],["3807"],"'Pipe' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'SCAN.SelectedModel.STOREMARKERCENTERPOINTS'. Either include it or remove the dependency array.",["3808"],"no-global-assign","no-unsafe-negation",{"desc":"3809","fix":"3810"},{"desc":"3809","fix":"3811"},{"desc":"3812","fix":"3813"},{"desc":"3812","fix":"3814"},{"desc":"3815","fix":"3816"},{"desc":"3817","fix":"3818"},{"desc":"3812","fix":"3819"},{"desc":"3809","fix":"3820"},{"desc":"3821","fix":"3822"},{"desc":"3823","fix":"3824"},{"desc":"3825","fix":"3826"},{"desc":"3827","fix":"3828"},{"desc":"3829","fix":"3830"},{"desc":"3831","fix":"3832"},{"desc":"3833","fix":"3834"},{"desc":"3809","fix":"3835"},{"desc":"3836","fix":"3837"},{"desc":"3838","fix":"3839"},{"desc":"3840","fix":"3841"},{"desc":"3842","fix":"3843"},{"desc":"3844","fix":"3845"},{"desc":"3846","fix":"3847"},{"desc":"3846","fix":"3848"},{"desc":"3849","fix":"3850"},{"desc":"3851","fix":"3852"},{"desc":"3853","fix":"3854"},{"desc":"3827","fix":"3855"},{"desc":"3827","fix":"3856"},{"desc":"3857","fix":"3858"},{"desc":"3859","fix":"3860"},{"desc":"3861","fix":"3862"},{"desc":"3863","fix":"3864"},{"desc":"3865","fix":"3866"},{"desc":"3827","fix":"3867"},{"desc":"3868","fix":"3869"},{"desc":"3809","fix":"3870"},{"desc":"3871","fix":"3872"},{"desc":"3871","fix":"3873"},{"desc":"3871","fix":"3874"},{"desc":"3871","fix":"3875"},{"desc":"3871","fix":"3876"},{"desc":"3871","fix":"3877"},{"desc":"3878","fix":"3879"},{"desc":"3880","fix":"3881"},{"desc":"3882","fix":"3883"},{"desc":"3884","fix":"3885"},{"desc":"3868","fix":"3886"},{"desc":"3809","fix":"3887"},{"desc":"3809","fix":"3888"},{"desc":"3821","fix":"3889"},{"desc":"3812","fix":"3890"},{"desc":"3815","fix":"3891"},{"desc":"3817","fix":"3892"},{"desc":"3812","fix":"3893"},{"desc":"3809","fix":"3894"},{"desc":"3809","fix":"3895"},{"desc":"3809","fix":"3896"},{"desc":"3809","fix":"3897"},{"desc":"3809","fix":"3898"},{"desc":"3823","fix":"3899"},{"desc":"3812","fix":"3900"},{"desc":"3838","fix":"3901"},{"desc":"3836","fix":"3902"},{"desc":"3829","fix":"3903"},{"desc":"3831","fix":"3904"},{"desc":"3827","fix":"3905"},{"desc":"3825","fix":"3906"},{"desc":"3871","fix":"3907"},{"desc":"3833","fix":"3908"},{"desc":"3909","fix":"3910"},{"desc":"3842","fix":"3911"},{"desc":"3844","fix":"3912"},{"desc":"3884","fix":"3913"},{"desc":"3914","fix":"3915"},{"desc":"3868","fix":"3916"},{"desc":"3917","fix":"3918"},{"desc":"3868","fix":"3919"},{"desc":"3871","fix":"3920"},{"desc":"3871","fix":"3921"},{"desc":"3871","fix":"3922"},{"desc":"3882","fix":"3923"},{"desc":"3871","fix":"3924"},{"desc":"3871","fix":"3925"},{"desc":"3849","fix":"3926"},{"desc":"3851","fix":"3927"},{"desc":"3846","fix":"3928"},{"desc":"3846","fix":"3929"},{"desc":"3880","fix":"3930"},{"desc":"3861","fix":"3931"},{"desc":"3863","fix":"3932"},{"desc":"3827","fix":"3933"},{"desc":"3857","fix":"3934"},{"desc":"3859","fix":"3935"},{"desc":"3936","fix":"3937"},"Update the dependencies array to be: []",{"range":"3938","text":"3939"},{"range":"3940","text":"3939"},"Update the dependencies array to be: [AUTH, Pushhistory]",{"range":"3941","text":"3942"},{"range":"3943","text":"3942"},"Update the dependencies array to be: [STRAPI.UserData, checkDataStatus]",{"range":"3944","text":"3945"},"Update the dependencies array to be: [Fetch]",{"range":"3946","text":"3947"},{"range":"3948","text":"3942"},{"range":"3949","text":"3939"},"Update the dependencies array to be: [Pushhistory, UX]",{"range":"3950","text":"3951"},"Update the dependencies array to be: [SCAN.active, Scan]",{"range":"3952","text":"3953"},"Update the dependencies array to be: [CreateMarkers, SCAN.MarkerScanResidual]",{"range":"3954","text":"3955"},"Update the dependencies array to be: [SCAN, extractResults]",{"range":"3956","text":"3957"},"Update the dependencies array to be: [CreateMarkers, SCAN.MarkerScanCenterPoints]",{"range":"3958","text":"3959"},"Update the dependencies array to be: [CreateCenterpoints, SCAN.MarkerScanCenterPoints]",{"range":"3960","text":"3961"},"Update the dependencies array to be: [AUTH.ScanHistory, COMPARE]",{"range":"3962","text":"3963"},{"range":"3964","text":"3939"},"Update the dependencies array to be: [CreateSelects, ModelsSelected]",{"range":"3965","text":"3966"},"Update the dependencies array to be: [MODEL, Pushhistory]",{"range":"3967","text":"3968"},"Update the dependencies array to be: [ByClient, SCAN]",{"range":"3969","text":"3970"},"Update the dependencies array to be: [SCAN.SelectedModelMeta.DateEnd, SCAN.SelectedModelMeta.DateStart, UX]",{"range":"3971","text":"3972"},"Update the dependencies array to be: [Model.STOREMARKERCENTERPOINTS]",{"range":"3973","text":"3974"},"Update the dependencies array to be: [CreateMarkers, SCAN.SelectedModel]",{"range":"3975","text":"3976"},{"range":"3977","text":"3976"},"Update the dependencies array to be: [CreatePolygons, SCAN.SelectedModel]",{"range":"3978","text":"3979"},"Update the dependencies array to be: [CreatePolygons, UX]",{"range":"3980","text":"3981"},"Update the dependencies array to be: [CreateCenterpoints, SCAN.SelectedModel]",{"range":"3982","text":"3983"},{"range":"3984","text":"3957"},{"range":"3985","text":"3957"},"Update the dependencies array to be: [Trades]",{"range":"3986","text":"3987"},"Update the dependencies array to be: [CreateMarkers, CreatePolygon]",{"range":"3988","text":"3989"},"Update the dependencies array to be: [STRAPI.UserData.Customers, USERSCAN.ScanOptionSelected, USERSCAN.UserScanSingleDataSets]",{"range":"3990","text":"3991"},"Update the dependencies array to be: [STRAPI.UserData.Customers, filter]",{"range":"3992","text":"3993"},"Update the dependencies array to be: [MODEL]",{"range":"3994","text":"3995"},{"range":"3996","text":"3957"},"Update the dependencies array to be: [CreateOptions]",{"range":"3997","text":"3998"},{"range":"3999","text":"3939"},"Update the dependencies array to be: [CreateNivoData, data]",{"range":"4000","text":"4001"},{"range":"4002","text":"4001"},{"range":"4003","text":"4001"},{"range":"4004","text":"4001"},{"range":"4005","text":"4001"},{"range":"4006","text":"4001"},"Update the dependencies array to be: [OOSTotals, UX]",{"range":"4007","text":"4008"},"Update the dependencies array to be: [SetNumbers, UX]",{"range":"4009","text":"4010"},"Update the dependencies array to be: [COMPARE, Calculate, UX]",{"range":"4011","text":"4012"},"Update the dependencies array to be: [MODEL.CompareData.UserSelected, SCAN.SelectedModel]",{"range":"4013","text":"4014"},{"range":"4015","text":"3998"},{"range":"4016","text":"3939"},{"range":"4017","text":"3939"},{"range":"4018","text":"3951"},{"range":"4019","text":"3942"},{"range":"4020","text":"3945"},{"range":"4021","text":"3947"},{"range":"4022","text":"3942"},{"range":"4023","text":"3939"},{"range":"4024","text":"3939"},{"range":"4025","text":"3939"},{"range":"4026","text":"3939"},{"range":"4027","text":"3939"},{"range":"4028","text":"3953"},{"range":"4029","text":"3942"},{"range":"4030","text":"3968"},{"range":"4031","text":"3966"},{"range":"4032","text":"3959"},{"range":"4033","text":"3961"},{"range":"4034","text":"3957"},{"range":"4035","text":"3955"},{"range":"4036","text":"4001"},{"range":"4037","text":"3963"},"Update the dependencies array to be: [MODEL.SITESINPARCITALSCOPE, MODEL.SITESINSCOPE, MODEL.SITESOUTOFSCOPE, UX]",{"range":"4038","text":"4039"},{"range":"4040","text":"3972"},{"range":"4041","text":"3974"},{"range":"4042","text":"4014"},"Update the dependencies array to be: [SITES]",{"range":"4043","text":"4044"},{"range":"4045","text":"3998"},"Update the dependencies array to be: [LocationTotals, OOSTotals, UX]",{"range":"4046","text":"4047"},{"range":"4048","text":"3998"},{"range":"4049","text":"4001"},{"range":"4050","text":"4001"},{"range":"4051","text":"4001"},{"range":"4052","text":"4012"},{"range":"4053","text":"4001"},{"range":"4054","text":"4001"},{"range":"4055","text":"3979"},{"range":"4056","text":"3981"},{"range":"4057","text":"3976"},{"range":"4058","text":"3976"},{"range":"4059","text":"4010"},{"range":"4060","text":"3991"},{"range":"4061","text":"3993"},{"range":"4062","text":"3957"},{"range":"4063","text":"3987"},{"range":"4064","text":"3989"},"Update the dependencies array to be: [SCAN.SelectedModel.STOREMARKERCENTERPOINTS, UX]",{"range":"4065","text":"4066"},[493,497],"[]",[485,491],[1134,1140],"[AUTH, Pushhistory]",[2402,2408],[2733,2750],"[STRAPI.UserData, checkDataStatus]",[3172,3174],"[Fetch]",[4718,4724],[478,484],[414,418],"[Pushhistory, UX]",[1108,1121],"[SCAN.active, Scan]",[3034,3059],"[CreateMarkers, SCAN.MarkerScanResidual]",[1037,1043],"[SCAN, extractResults]",[3343,3372],"[CreateMarkers, SCAN.MarkerScanCenterPoints]",[2070,2099],"[CreateCenterpoints, SCAN.MarkerScanCenterPoints]",[1366,1375],"[AUTH.ScanHistory, COMPARE]",[496,505],[1450,1466],"[CreateSelects, ModelsSelected]",[1477,1484],"[MODEL, Pushhistory]",[886,892],"[ByClient, SCAN]",[933,937],"[SCAN.SelectedModelMeta.DateEnd, SCAN.SelectedModelMeta.DateStart, UX]",[855,857],"[Model.STOREMARKERCENTERPOINTS]",[6613,6633],"[CreateMarkers, SCAN.SelectedModel]",[3087,3107],[3014,3034],"[CreatePolygons, SCAN.SelectedModel]",[3119,3123],"[CreatePolygons, UX]",[2062,2082],"[CreateCenterpoints, SCAN.SelectedModel]",[1552,1558],[952,958],[2834,2836],"[Trades]",[2777,2779],"[CreateMarkers, CreatePolygon]",[2025,2054],"[STRAPI.UserData.Customers, USERSCAN.ScanOptionSelected, USERSCAN.UserScanSingleDataSets]",[2417,2425],"[STRAPI.UserData.Customers, filter]",[3456,3458],"[MODEL]",[3499,3505],[2702,2704],"[CreateOptions]",[488,496],[631,637],"[CreateNivoData, data]",[1026,1032],[1067,1073],[1154,1160],[826,832],[1873,1879],[1181,1185],"[OOSTotals, UX]",[1089,1093],"[SetNumbers, UX]",[1567,1580],"[COMPARE, Calculate, UX]",[1233,1235],"[MODEL.CompareData.UserSelected, SCAN.SelectedModel]",[1898,1900],[482,489],[493,497],[414,418],[2657,2663],[2988,3005],[3427,3429],[4973,4979],[485,491],[482,489],[488,496],[496,505],[478,484],[1086,1099],[1134,1140],[1584,1591],[1507,1523],[3343,3372],[2046,2075],[1037,1043],[3034,3059],[1026,1032],[1366,1375],[1271,1275],"[MODEL.SITESINPARCITALSCOPE, MODEL.SITESINSCOPE, MODEL.SITESOUTOFSCOPE, UX]",[933,937],[855,857],[1293,1295],[2799,2801],"[SITES]",[1898,1900],[1721,1725],"[LocationTotals, OOSTotals, UX]",[2702,2704],[1067,1073],[631,637],[1873,1879],[1569,1582],[1154,1160],[826,832],[3773,3793],[3878,3882],[3086,3106],[7333,7353],[1089,1093],[2025,2054],[2417,2425],[952,958],[2836,2838],[2777,2779],[2577,2581],"[SCAN.SelectedModel.STOREMARKERCENTERPOINTS, UX]"]